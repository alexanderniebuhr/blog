globalThis.process = {
	argv: [],
	env: {},
};
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var __privateMethod = (obj, member, method) => {
  __accessCheck(obj, member, "access private method");
  return method;
};

// dist/$server_build/chunks/astro.d1132a9b.mjs
function normalizeLF(code) {
  return code.replace(/\r\n|\r(?!\n)|\n/g, "\n");
}
function getErrorDataByTitle(title) {
  const entry = Object.entries(AstroErrorData).find((data) => data[1].title === title);
  if (entry) {
    return {
      name: entry[0],
      data: entry[1]
    };
  }
}
function codeFrame(src, loc) {
  if (!loc || loc.line === void 0 || loc.column === void 0) {
    return "";
  }
  const lines = normalizeLF(src).split("\n").map((ln) => ln.replace(/\t/g, "  "));
  const visibleLines = [];
  for (let n = -2; n <= 2; n++) {
    if (lines[loc.line + n])
      visibleLines.push(loc.line + n);
  }
  let gutterWidth = 0;
  for (const lineNo of visibleLines) {
    let w = `> ${lineNo}`;
    if (w.length > gutterWidth)
      gutterWidth = w.length;
  }
  let output = "";
  for (const lineNo of visibleLines) {
    const isFocusedLine = lineNo === loc.line - 1;
    output += isFocusedLine ? "> " : "  ";
    output += `${lineNo + 1} | ${lines[lineNo]}
`;
    if (isFocusedLine)
      output += `${Array.from({ length: gutterWidth }).join(" ")}  | ${Array.from({
        length: loc.column
      }).join(" ")}^
`;
  }
  return output;
}
function validateArgs(args) {
  if (args.length !== 3)
    return false;
  if (!args[0] || typeof args[0] !== "object")
    return false;
  return true;
}
function baseCreateComponent(cb, moduleId) {
  var _a2;
  const name = ((_a2 = moduleId == null ? void 0 : moduleId.split("/").pop()) == null ? void 0 : _a2.replace(".astro", "")) ?? "";
  const fn = (...args) => {
    if (!validateArgs(args)) {
      throw new AstroError({
        ...AstroErrorData.InvalidComponentArgs,
        message: AstroErrorData.InvalidComponentArgs.message(name)
      });
    }
    return cb(...args);
  };
  Object.defineProperty(fn, "name", { value: name, writable: false });
  fn.isAstroComponentFactory = true;
  fn.moduleId = moduleId;
  return fn;
}
function createComponentWithOptions(opts) {
  const cb = baseCreateComponent(opts.factory, opts.moduleId);
  cb.propagation = opts.propagation;
  return cb;
}
function createComponent(arg1, moduleId) {
  if (typeof arg1 === "function") {
    return baseCreateComponent(arg1, moduleId);
  } else {
    return createComponentWithOptions(arg1);
  }
}
function createAstroGlobFn() {
  const globHandler = (importMetaGlobResult, globValue) => {
    if (typeof importMetaGlobResult === "string") {
      throw new AstroError({
        ...AstroErrorData.AstroGlobUsedOutside,
        message: AstroErrorData.AstroGlobUsedOutside.message(JSON.stringify(importMetaGlobResult))
      });
    }
    let allEntries = [...Object.values(importMetaGlobResult)];
    if (allEntries.length === 0) {
      throw new AstroError({
        ...AstroErrorData.AstroGlobNoMatch,
        message: AstroErrorData.AstroGlobNoMatch.message(JSON.stringify(importMetaGlobResult))
      });
    }
    return Promise.all(allEntries.map((fn) => fn()));
  };
  return globHandler;
}
function createAstro(site) {
  return {
    site: site ? new URL(site) : void 0,
    generator: `Astro v${ASTRO_VERSION}`,
    glob: createAstroGlobFn()
  };
}
function getHandlerFromModule(mod, method) {
  if (mod[method]) {
    return mod[method];
  }
  if (method === "delete" && mod["del"]) {
    return mod["del"];
  }
  if (mod["all"]) {
    return mod["all"];
  }
  return void 0;
}
async function renderEndpoint(mod, context, ssr) {
  var _a2;
  const { request, params, locals } = context;
  const chosenMethod = (_a2 = request.method) == null ? void 0 : _a2.toLowerCase();
  const handler = getHandlerFromModule(mod, chosenMethod);
  if (!ssr && ssr === false && chosenMethod && chosenMethod !== "get") {
    console.warn(`
${chosenMethod} requests are not available when building a static site. Update your config to \`output: 'server'\` or \`output: 'hybrid'\` with an \`export const prerender = false\` to handle ${chosenMethod} requests.`);
  }
  if (!handler || typeof handler !== "function") {
    let response = new Response(null, {
      status: 404,
      headers: {
        "X-Astro-Response": "Not-Found"
      }
    });
    return response;
  }
  if (handler.length > 1) {
    console.warn(`
API routes with 2 arguments have been deprecated. Instead they take a single argument in the form of:

export function get({ params, request }) {
	//...
}

Update your code to remove this warning.`);
  }
  const proxy = new Proxy(context, {
    get(target, prop) {
      if (prop in target) {
        return Reflect.get(target, prop);
      } else if (prop in params) {
        console.warn(`
API routes no longer pass params as the first argument. Instead an object containing a params property is provided in the form of:

export function get({ params }) {
	// ...
}

Update your code to remove this warning.`);
        return Reflect.get(params, prop);
      } else {
        return void 0;
      }
    }
  });
  return handler.call(mod, proxy, request);
}
function serializeListValue(value) {
  const hash = {};
  push(value);
  return Object.keys(hash).join(" ");
  function push(item) {
    if (item && typeof item.forEach === "function")
      item.forEach(push);
    else if (item === Object(item))
      Object.keys(item).forEach((name) => {
        if (item[name])
          push(name);
      });
    else {
      item = item === false || item == null ? "" : String(item).trim();
      if (item) {
        item.split(/\s+/).forEach((name) => {
          hash[name] = true;
        });
      }
    }
  }
}
function isPromise(value) {
  return !!value && typeof value === "object" && typeof value.then === "function";
}
async function* streamAsyncIterator(stream) {
  const reader = stream.getReader();
  try {
    while (true) {
      const { done, value } = await reader.read();
      if (done)
        return;
      yield value;
    }
  } finally {
    reader.releaseLock();
  }
}
function isHTMLString(value) {
  return Object.prototype.toString.call(value) === "[object HTMLString]";
}
function markHTMLBytes(bytes) {
  return new HTMLBytes(bytes);
}
function hasGetReader(obj) {
  return typeof obj.getReader === "function";
}
async function* unescapeChunksAsync(iterable) {
  if (hasGetReader(iterable)) {
    for await (const chunk of streamAsyncIterator(iterable)) {
      yield unescapeHTML(chunk);
    }
  } else {
    for await (const chunk of iterable) {
      yield unescapeHTML(chunk);
    }
  }
}
function* unescapeChunks(iterable) {
  for (const chunk of iterable) {
    yield unescapeHTML(chunk);
  }
}
function unescapeHTML(str) {
  if (!!str && typeof str === "object") {
    if (str instanceof Uint8Array) {
      return markHTMLBytes(str);
    } else if (str instanceof Response && str.body) {
      const body = str.body;
      return unescapeChunksAsync(body);
    } else if (typeof str.then === "function") {
      return Promise.resolve(str).then((value) => {
        return unescapeHTML(value);
      });
    } else if (Symbol.iterator in str) {
      return unescapeChunks(str);
    } else if (Symbol.asyncIterator in str || hasGetReader(str)) {
      return unescapeChunksAsync(str);
    }
  }
  return markHTMLString(str);
}
function determineIfNeedsHydrationScript(result) {
  if (result._metadata.hasHydrationScript) {
    return false;
  }
  return result._metadata.hasHydrationScript = true;
}
function determinesIfNeedsDirectiveScript(result, directive) {
  if (result._metadata.hasDirectives.has(directive)) {
    return false;
  }
  result._metadata.hasDirectives.add(directive);
  return true;
}
function getDirectiveScriptText(result, directive) {
  const clientDirectives = result._metadata.clientDirectives;
  const clientDirective = clientDirectives.get(directive);
  if (!clientDirective) {
    throw new Error(`Unknown directive: ${directive}`);
  }
  return clientDirective;
}
function getPrescripts(result, type, directive) {
  switch (type) {
    case "both":
      return `${ISLAND_STYLES}<script>${getDirectiveScriptText(
        result,
        directive
      )};${astro_island_prebuilt_default}<\/script>`;
    case "directive":
      return `<script>${getDirectiveScriptText(result, directive)}<\/script>`;
  }
  return "";
}
function defineScriptVars(vars) {
  var _a2;
  let output = "";
  for (const [key, value] of Object.entries(vars)) {
    output += `const ${toIdent(key)} = ${(_a2 = JSON.stringify(value)) == null ? void 0 : _a2.replace(
      /<\/script>/g,
      "\\x3C/script>"
    )};
`;
  }
  return markHTMLString(output);
}
function formatList(values) {
  if (values.length === 1) {
    return values[0];
  }
  return `${values.slice(0, -1).join(", ")} or ${values[values.length - 1]}`;
}
function addAttribute(value, key, shouldEscape = true) {
  if (value == null) {
    return "";
  }
  if (value === false) {
    if (htmlEnumAttributes.test(key) || svgEnumAttributes.test(key)) {
      return markHTMLString(` ${key}="false"`);
    }
    return "";
  }
  if (STATIC_DIRECTIVES.has(key)) {
    console.warn(`[astro] The "${key}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${key}={value}\`) instead of the dynamic spread syntax (\`{...{ "${key}": value }}\`).`);
    return "";
  }
  if (key === "class:list") {
    const listValue = toAttributeString(serializeListValue(value), shouldEscape);
    if (listValue === "") {
      return "";
    }
    return markHTMLString(` ${key.slice(0, -5)}="${listValue}"`);
  }
  if (key === "style" && !(value instanceof HTMLString)) {
    if (Array.isArray(value) && value.length === 2) {
      return markHTMLString(
        ` ${key}="${toAttributeString(`${toStyleString(value[0])};${value[1]}`, shouldEscape)}"`
      );
    }
    if (typeof value === "object") {
      return markHTMLString(` ${key}="${toAttributeString(toStyleString(value), shouldEscape)}"`);
    }
  }
  if (key === "className") {
    return markHTMLString(` class="${toAttributeString(value, shouldEscape)}"`);
  }
  if (value === true && (key.startsWith("data-") || htmlBooleanAttributes.test(key))) {
    return markHTMLString(` ${key}`);
  } else {
    return markHTMLString(` ${key}="${toAttributeString(value, shouldEscape)}"`);
  }
}
function internalSpreadAttributes(values, shouldEscape = true) {
  let output = "";
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, shouldEscape);
  }
  return markHTMLString(output);
}
function renderElement$1(name, { props: _props, children = "" }, shouldEscape = true) {
  const { lang: _, "data-astro-id": astroId, "define:vars": defineVars, ...props } = _props;
  if (defineVars) {
    if (name === "style") {
      delete props["is:global"];
      delete props["is:scoped"];
    }
    if (name === "script") {
      delete props.hoist;
      children = defineScriptVars(defineVars) + "\n" + children;
    }
  }
  if ((children == null || children == "") && voidElementNames.test(name)) {
    return `<${name}${internalSpreadAttributes(props, shouldEscape)} />`;
  }
  return `<${name}${internalSpreadAttributes(props, shouldEscape)}>${children}</${name}>`;
}
function bufferIterators(iterators) {
  const eagerIterators = iterators.map((it) => new EagerAsyncIterableIterator(it));
  queueMicrotask(() => {
    eagerIterators.forEach((it) => !it.isStarted() && it.buffer());
  });
  return eagerIterators;
}
function renderAllHeadContent(result) {
  result._metadata.hasRenderedHead = true;
  const styles = Array.from(result.styles).filter(uniqueElements).map(
    (style) => style.props.rel === "stylesheet" ? renderElement$1("link", style) : renderElement$1("style", style)
  );
  result.styles.clear();
  const scripts = Array.from(result.scripts).filter(uniqueElements).map((script, i) => {
    return renderElement$1("script", script, false);
  });
  const links = Array.from(result.links).filter(uniqueElements).map((link) => renderElement$1("link", link, false));
  let content = links.join("\n") + styles.join("\n") + scripts.join("\n");
  if (result.extraHead.length > 0) {
    for (const part of result.extraHead) {
      content += part;
    }
  }
  return markHTMLString(content);
}
function* renderHead(result) {
  yield { type: "head", result };
}
function* maybeRenderHead(result) {
  if (result._metadata.hasRenderedHead) {
    return;
  }
  yield { type: "maybe-head", result, scope: result.scope };
}
function isHeadAndContent(obj) {
  return typeof obj === "object" && !!obj[headAndContentSym];
}
function isRenderTemplateResult(obj) {
  return typeof obj === "object" && !!obj[renderTemplateResultSym];
}
async function* renderAstroTemplateResult(component) {
  for await (const value of component) {
    if (value || value === 0) {
      for await (const chunk of renderChild(value)) {
        switch (chunk.type) {
          case "directive": {
            yield chunk;
            break;
          }
          default: {
            yield markHTMLString(chunk);
            break;
          }
        }
      }
    }
  }
}
function renderTemplate(htmlParts, ...expressions) {
  return new RenderTemplateResult(htmlParts, expressions);
}
function isAstroComponentFactory(obj) {
  return obj == null ? false : obj.isAstroComponentFactory === true;
}
async function renderToString(result, componentFactory, props, children) {
  const factoryResult = await componentFactory(result, props, children);
  if (factoryResult instanceof Response) {
    const response = factoryResult;
    throw response;
  }
  let parts = new HTMLParts();
  const templateResult = isHeadAndContent(factoryResult) ? factoryResult.content : factoryResult;
  for await (const chunk of renderAstroTemplateResult(templateResult)) {
    parts.append(chunk, result);
  }
  return parts.toString();
}
function isAPropagatingComponent(result, factory) {
  let hint = factory.propagation || "none";
  if (factory.moduleId && result.componentMetadata.has(factory.moduleId) && hint === "none") {
    hint = result.componentMetadata.get(factory.moduleId).propagation;
  }
  return hint === "in-tree" || hint === "self";
}
function validateComponentProps(props, displayName) {
  if (props != null) {
    for (const prop of Object.keys(props)) {
      if (prop.startsWith("client:")) {
        console.warn(
          `You are attempting to render <${displayName} ${prop} />, but ${displayName} is an Astro component. Astro components do not render in the client and should not have a hydration directive. Please use a framework component for client rendering.`
        );
      }
    }
  }
}
function createAstroComponentInstance(result, displayName, factory, props, slots = {}) {
  validateComponentProps(props, displayName);
  const instance = new AstroComponentInstance(result, props, slots, factory);
  if (isAPropagatingComponent(result, factory) && !result.propagators.has(factory)) {
    result.propagators.set(factory, instance);
  }
  return instance;
}
function isAstroComponentInstance(obj) {
  return typeof obj === "object" && !!obj[astroComponentInstanceSym];
}
async function* renderChild(child) {
  child = await child;
  if (child instanceof SlotString) {
    if (child.instructions) {
      yield* child.instructions;
    }
    yield child;
  } else if (isHTMLString(child)) {
    yield child;
  } else if (Array.isArray(child)) {
    const bufferedIterators = bufferIterators(child.map((c) => renderChild(c)));
    for (const value of bufferedIterators) {
      yield markHTMLString(await value);
    }
  } else if (typeof child === "function") {
    yield* renderChild(child());
  } else if (typeof child === "string") {
    yield markHTMLString(escapeHTML(child));
  } else if (!child && child !== 0)
    ;
  else if (isRenderTemplateResult(child)) {
    yield* renderAstroTemplateResult(child);
  } else if (isAstroComponentInstance(child)) {
    yield* child.render();
  } else if (ArrayBuffer.isView(child)) {
    yield child;
  } else if (typeof child === "object" && (Symbol.asyncIterator in child || Symbol.iterator in child)) {
    yield* child;
  } else {
    yield child;
  }
}
function isSlotString(str) {
  return !!str[slotString];
}
async function* renderSlot(result, slotted, fallback) {
  if (slotted) {
    let iterator = renderChild(typeof slotted === "function" ? slotted(result) : slotted);
    yield* iterator;
  }
  if (fallback && !slotted) {
    yield* renderSlot(result, fallback);
  }
}
async function renderSlotToString(result, slotted, fallback) {
  let content = "";
  let instructions = null;
  let iterator = renderSlot(result, slotted, fallback);
  for await (const chunk of iterator) {
    if (typeof chunk.type === "string") {
      if (instructions === null) {
        instructions = [];
      }
      instructions.push(chunk);
    } else {
      content += chunk;
    }
  }
  return markHTMLString(new SlotString(content, instructions));
}
async function renderSlots(result, slots = {}) {
  let slotInstructions = null;
  let children = {};
  if (slots) {
    await Promise.all(
      Object.entries(slots).map(
        ([key, value]) => renderSlotToString(result, value).then((output) => {
          if (output.instructions) {
            if (slotInstructions === null) {
              slotInstructions = [];
            }
            slotInstructions.push(...output.instructions);
          }
          children[key] = output;
        })
      )
    );
  }
  return { slotInstructions, children };
}
function stringifyChunk(result, chunk) {
  if (typeof chunk.type === "string") {
    const instruction = chunk;
    switch (instruction.type) {
      case "directive": {
        const { hydration } = instruction;
        let needsHydrationScript = hydration && determineIfNeedsHydrationScript(result);
        let needsDirectiveScript = hydration && determinesIfNeedsDirectiveScript(result, hydration.directive);
        let prescriptType = needsHydrationScript ? "both" : needsDirectiveScript ? "directive" : null;
        if (prescriptType) {
          let prescripts = getPrescripts(result, prescriptType, hydration.directive);
          return markHTMLString(prescripts);
        } else {
          return "";
        }
      }
      case "head": {
        if (result._metadata.hasRenderedHead) {
          return "";
        }
        return renderAllHeadContent(result);
      }
      case "maybe-head": {
        if (result._metadata.hasRenderedHead || result._metadata.headInTree) {
          return "";
        }
        return renderAllHeadContent(result);
      }
      default: {
        if (chunk instanceof Response) {
          return "";
        }
        throw new Error(`Unknown chunk type: ${chunk.type}`);
      }
    }
  } else {
    if (isSlotString(chunk)) {
      let out = "";
      const c = chunk;
      if (c.instructions) {
        for (const instr of c.instructions) {
          out += stringifyChunk(result, instr);
        }
      }
      out += chunk.toString();
      return out;
    }
    return chunk.toString();
  }
}
function chunkToByteArray(result, chunk) {
  if (chunk instanceof Uint8Array) {
    return chunk;
  }
  let stringified = stringifyChunk(result, chunk);
  return encoder.encode(stringified.toString());
}
async function renderJSX(result, vnode) {
  switch (true) {
    case vnode instanceof HTMLString:
      if (vnode.toString().trim() === "") {
        return "";
      }
      return vnode;
    case typeof vnode === "string":
      return markHTMLString(escapeHTML(vnode));
    case typeof vnode === "function":
      return vnode;
    case (!vnode && vnode !== 0):
      return "";
    case Array.isArray(vnode):
      return markHTMLString(
        (await Promise.all(vnode.map((v) => renderJSX(result, v)))).join("")
      );
  }
  let skip;
  if (vnode.props) {
    if (vnode.props[Skip.symbol]) {
      skip = vnode.props[Skip.symbol];
    } else {
      skip = new Skip(vnode);
    }
  } else {
    skip = new Skip(vnode);
  }
  return renderJSXVNode(result, vnode, skip);
}
async function renderJSXVNode(result, vnode, skip) {
  if (isVNode(vnode)) {
    switch (true) {
      case !vnode.type: {
        throw new Error(`Unable to render ${result._metadata.pathname} because it contains an undefined Component!
Did you forget to import the component or is it possible there is a typo?`);
      }
      case vnode.type === Symbol.for("astro:fragment"):
        return renderJSX(result, vnode.props.children);
      case vnode.type.isAstroComponentFactory: {
        let props = {};
        let slots = {};
        for (const [key, value] of Object.entries(vnode.props ?? {})) {
          if (key === "children" || value && typeof value === "object" && value["$$slot"]) {
            slots[key === "children" ? "default" : key] = () => renderJSX(result, value);
          } else {
            props[key] = value;
          }
        }
        const html = markHTMLString(await renderToString(result, vnode.type, props, slots));
        return html;
      }
      case (!vnode.type && vnode.type !== 0):
        return "";
      case (typeof vnode.type === "string" && vnode.type !== ClientOnlyPlaceholder):
        return markHTMLString(await renderElement(result, vnode.type, vnode.props ?? {}));
    }
    if (vnode.type) {
      let extractSlots2 = function(child) {
        if (Array.isArray(child)) {
          return child.map((c) => extractSlots2(c));
        }
        if (!isVNode(child)) {
          _slots2.default.push(child);
          return;
        }
        if ("slot" in child.props) {
          _slots2[child.props.slot] = [..._slots2[child.props.slot] ?? [], child];
          delete child.props.slot;
          return;
        }
        _slots2.default.push(child);
      };
      if (typeof vnode.type === "function" && vnode.type["astro:renderer"]) {
        skip.increment();
      }
      if (typeof vnode.type === "function" && vnode.props["server:root"]) {
        const output2 = await vnode.type(vnode.props ?? {});
        return await renderJSX(result, output2);
      }
      if (typeof vnode.type === "function") {
        if (skip.haveNoTried() || skip.isCompleted()) {
          useConsoleFilter();
          try {
            const output2 = await vnode.type(vnode.props ?? {});
            let renderResult;
            if (output2 && output2[AstroJSX]) {
              renderResult = await renderJSXVNode(result, output2, skip);
              return renderResult;
            } else if (!output2) {
              renderResult = await renderJSXVNode(result, output2, skip);
              return renderResult;
            }
          } catch (e) {
            if (skip.isCompleted()) {
              throw e;
            }
            skip.increment();
          } finally {
            finishUsingConsoleFilter();
          }
        } else {
          skip.increment();
        }
      }
      const { children = null, ...props } = vnode.props ?? {};
      const _slots2 = {
        default: []
      };
      extractSlots2(children);
      for (const [key, value] of Object.entries(props)) {
        if (value["$$slot"]) {
          _slots2[key] = value;
          delete props[key];
        }
      }
      const slotPromises = [];
      const slots = {};
      for (const [key, value] of Object.entries(_slots2)) {
        slotPromises.push(
          renderJSX(result, value).then((output2) => {
            if (output2.toString().trim().length === 0)
              return;
            slots[key] = () => output2;
          })
        );
      }
      await Promise.all(slotPromises);
      props[Skip.symbol] = skip;
      let output;
      if (vnode.type === ClientOnlyPlaceholder && vnode.props["client:only"]) {
        output = await renderComponentToIterable(
          result,
          vnode.props["client:display-name"] ?? "",
          null,
          props,
          slots
        );
      } else {
        output = await renderComponentToIterable(
          result,
          typeof vnode.type === "function" ? vnode.type.name : vnode.type,
          vnode.type,
          props,
          slots
        );
      }
      if (typeof output !== "string" && Symbol.asyncIterator in output) {
        let parts = new HTMLParts();
        for await (const chunk of output) {
          parts.append(chunk, result);
        }
        return markHTMLString(parts.toString());
      } else {
        return markHTMLString(output);
      }
    }
  }
  return markHTMLString(`${vnode}`);
}
async function renderElement(result, tag, { children, ...props }) {
  return markHTMLString(
    `<${tag}${spreadAttributes(props)}${markHTMLString(
      (children == null || children == "") && voidElementNames.test(tag) ? `/>` : `>${children == null ? "" : await renderJSX(result, prerenderElementChildren(tag, children))}</${tag}>`
    )}`
  );
}
function prerenderElementChildren(tag, children) {
  if (typeof children === "string" && (tag === "style" || tag === "script")) {
    return markHTMLString(children);
  } else {
    return children;
  }
}
function useConsoleFilter() {
  consoleFilterRefs++;
  if (!originalConsoleError) {
    originalConsoleError = console.error;
    try {
      console.error = filteredConsoleError;
    } catch (error2) {
    }
  }
}
function finishUsingConsoleFilter() {
  consoleFilterRefs--;
}
function filteredConsoleError(msg, ...rest) {
  if (consoleFilterRefs > 0 && typeof msg === "string") {
    const isKnownReactHookError = msg.includes("Warning: Invalid hook call.") && msg.includes("https://reactjs.org/link/invalid-hook-call");
    if (isKnownReactHookError)
      return;
  }
  originalConsoleError(msg, ...rest);
}
function serializeArray(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = value.map((v) => {
    return convertToSerializedForm(v, metadata, parents);
  });
  parents.delete(value);
  return serialized;
}
function serializeObject(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = Object.fromEntries(
    Object.entries(value).map(([k, v]) => {
      return [k, convertToSerializedForm(v, metadata, parents)];
    })
  );
  parents.delete(value);
  return serialized;
}
function convertToSerializedForm(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  const tag = Object.prototype.toString.call(value);
  switch (tag) {
    case "[object Date]": {
      return [PROP_TYPE.Date, value.toISOString()];
    }
    case "[object RegExp]": {
      return [PROP_TYPE.RegExp, value.source];
    }
    case "[object Map]": {
      return [
        PROP_TYPE.Map,
        JSON.stringify(serializeArray(Array.from(value), metadata, parents))
      ];
    }
    case "[object Set]": {
      return [
        PROP_TYPE.Set,
        JSON.stringify(serializeArray(Array.from(value), metadata, parents))
      ];
    }
    case "[object BigInt]": {
      return [PROP_TYPE.BigInt, value.toString()];
    }
    case "[object URL]": {
      return [PROP_TYPE.URL, value.toString()];
    }
    case "[object Array]": {
      return [PROP_TYPE.JSON, JSON.stringify(serializeArray(value, metadata, parents))];
    }
    case "[object Uint8Array]": {
      return [PROP_TYPE.Uint8Array, JSON.stringify(Array.from(value))];
    }
    case "[object Uint16Array]": {
      return [PROP_TYPE.Uint16Array, JSON.stringify(Array.from(value))];
    }
    case "[object Uint32Array]": {
      return [PROP_TYPE.Uint32Array, JSON.stringify(Array.from(value))];
    }
    default: {
      if (value !== null && typeof value === "object") {
        return [PROP_TYPE.Value, serializeObject(value, metadata, parents)];
      } else if (value === void 0) {
        return [PROP_TYPE.Value];
      } else {
        return [PROP_TYPE.Value, value];
      }
    }
  }
}
function serializeProps(props, metadata) {
  const serialized = JSON.stringify(serializeObject(props, metadata));
  return serialized;
}
function extractDirectives(inputProps, clientDirectives) {
  let extracted = {
    isPage: false,
    hydration: null,
    props: {}
  };
  for (const [key, value] of Object.entries(inputProps)) {
    if (key.startsWith("server:")) {
      if (key === "server:root") {
        extracted.isPage = true;
      }
    }
    if (key.startsWith("client:")) {
      if (!extracted.hydration) {
        extracted.hydration = {
          directive: "",
          value: "",
          componentUrl: "",
          componentExport: { value: "" }
        };
      }
      switch (key) {
        case "client:component-path": {
          extracted.hydration.componentUrl = value;
          break;
        }
        case "client:component-export": {
          extracted.hydration.componentExport.value = value;
          break;
        }
        case "client:component-hydration": {
          break;
        }
        case "client:display-name": {
          break;
        }
        default: {
          extracted.hydration.directive = key.split(":")[1];
          extracted.hydration.value = value;
          if (!clientDirectives.has(extracted.hydration.directive)) {
            const hydrationMethods = Array.from(clientDirectives.keys()).map((d) => `client:${d}`).join(", ");
            throw new Error(
              `Error: invalid hydration directive "${key}". Supported hydration methods: ${hydrationMethods}`
            );
          }
          if (extracted.hydration.directive === "media" && typeof extracted.hydration.value !== "string") {
            throw new AstroError(AstroErrorData.MissingMediaQueryDirective);
          }
          break;
        }
      }
    } else if (key === "class:list") {
      if (value) {
        extracted.props[key.slice(0, -5)] = serializeListValue(value);
      }
    } else {
      extracted.props[key] = value;
    }
  }
  for (const sym of Object.getOwnPropertySymbols(inputProps)) {
    extracted.props[sym] = inputProps[sym];
  }
  return extracted;
}
async function generateHydrateScript(scriptOptions, metadata) {
  const { renderer, result, astroId, props, attrs } = scriptOptions;
  const { hydrate, componentUrl, componentExport } = metadata;
  if (!componentExport.value) {
    throw new Error(
      `Unable to resolve a valid export for "${metadata.displayName}"! Please open an issue at https://astro.build/issues!`
    );
  }
  const island = {
    children: "",
    props: {
      // This is for HMR, probably can avoid it in prod
      uid: astroId
    }
  };
  if (attrs) {
    for (const [key, value] of Object.entries(attrs)) {
      island.props[key] = escapeHTML(value);
    }
  }
  island.props["component-url"] = await result.resolve(decodeURI(componentUrl));
  if (renderer.clientEntrypoint) {
    island.props["component-export"] = componentExport.value;
    island.props["renderer-url"] = await result.resolve(decodeURI(renderer.clientEntrypoint));
    island.props["props"] = escapeHTML(serializeProps(props, metadata));
  }
  island.props["ssr"] = "";
  island.props["client"] = hydrate;
  let beforeHydrationUrl = await result.resolve("astro:scripts/before-hydration.js");
  if (beforeHydrationUrl.length) {
    island.props["before-hydration-url"] = beforeHydrationUrl;
  }
  island.props["opts"] = escapeHTML(
    JSON.stringify({
      name: metadata.displayName,
      value: metadata.hydrateArgs || ""
    })
  );
  return island;
}
function bitwise(str) {
  let hash = 0;
  if (str.length === 0)
    return hash;
  for (let i = 0; i < str.length; i++) {
    const ch = str.charCodeAt(i);
    hash = (hash << 5) - hash + ch;
    hash = hash & hash;
  }
  return hash;
}
function shorthash(text) {
  let num;
  let result = "";
  let integer = bitwise(text);
  const sign = integer < 0 ? "Z" : "";
  integer = Math.abs(integer);
  while (integer >= binary) {
    num = integer % binary;
    integer = Math.floor(integer / binary);
    result = dictionary[num] + result;
  }
  if (integer > 0) {
    result = dictionary[integer] + result;
  }
  return sign + result;
}
function componentIsHTMLElement(Component) {
  return typeof HTMLElement !== "undefined" && HTMLElement.isPrototypeOf(Component);
}
async function renderHTMLElement(result, constructor, props, slots) {
  const name = getHTMLElementName(constructor);
  let attrHTML = "";
  for (const attr in props) {
    attrHTML += ` ${attr}="${toAttributeString(await props[attr])}"`;
  }
  return markHTMLString(
    `<${name}${attrHTML}>${await renderSlotToString(result, slots == null ? void 0 : slots.default)}</${name}>`
  );
}
function getHTMLElementName(constructor) {
  const definedName = customElements.getName(constructor);
  if (definedName)
    return definedName;
  const assignedName = constructor.name.replace(/^HTML|Element$/g, "").replace(/[A-Z]/g, "-$&").toLowerCase().replace(/^-/, "html-");
  return assignedName;
}
function guessRenderers(componentUrl) {
  const extname = componentUrl == null ? void 0 : componentUrl.split(".").pop();
  switch (extname) {
    case "svelte":
      return ["@astrojs/svelte"];
    case "vue":
      return ["@astrojs/vue"];
    case "jsx":
    case "tsx":
      return ["@astrojs/react", "@astrojs/preact", "@astrojs/solid-js", "@astrojs/vue (jsx)"];
    default:
      return [
        "@astrojs/react",
        "@astrojs/preact",
        "@astrojs/solid-js",
        "@astrojs/vue",
        "@astrojs/svelte",
        "@astrojs/lit"
      ];
  }
}
function isFragmentComponent(Component) {
  return Component === Fragment;
}
function isHTMLComponent(Component) {
  return Component && Component["astro:html"] === true;
}
function removeStaticAstroSlot(html, supportsAstroStaticSlot) {
  const exp = supportsAstroStaticSlot ? ASTRO_STATIC_SLOT_EXP : ASTRO_SLOT_EXP;
  return html.replace(exp, "");
}
async function renderFrameworkComponent(result, displayName, Component, _props, slots = {}) {
  var _a2, _b, _c;
  if (!Component && !_props["client:only"]) {
    throw new Error(
      `Unable to render ${displayName} because it is ${Component}!
Did you forget to import the component or is it possible there is a typo?`
    );
  }
  const { renderers: renderers2, clientDirectives } = result._metadata;
  const metadata = {
    astroStaticSlot: true,
    displayName
  };
  const { hydration, isPage, props } = extractDirectives(_props, clientDirectives);
  let html = "";
  let attrs = void 0;
  if (hydration) {
    metadata.hydrate = hydration.directive;
    metadata.hydrateArgs = hydration.value;
    metadata.componentExport = hydration.componentExport;
    metadata.componentUrl = hydration.componentUrl;
  }
  const probableRendererNames = guessRenderers(metadata.componentUrl);
  const validRenderers = renderers2.filter((r) => r.name !== "astro:jsx");
  const { children, slotInstructions } = await renderSlots(result, slots);
  let renderer;
  if (metadata.hydrate !== "only") {
    let isTagged = false;
    try {
      isTagged = Component && Component[Renderer];
    } catch {
    }
    if (isTagged) {
      const rendererName = Component[Renderer];
      renderer = renderers2.find(({ name }) => name === rendererName);
    }
    if (!renderer) {
      let error2;
      for (const r of renderers2) {
        try {
          if (await r.ssr.check.call({ result }, Component, props, children)) {
            renderer = r;
            break;
          }
        } catch (e) {
          error2 ?? (error2 = e);
        }
      }
      if (!renderer && error2) {
        throw error2;
      }
    }
    if (!renderer && typeof HTMLElement === "function" && componentIsHTMLElement(Component)) {
      const output = renderHTMLElement(result, Component, _props, slots);
      return output;
    }
  } else {
    if (metadata.hydrateArgs) {
      const passedName = metadata.hydrateArgs;
      const rendererName = rendererAliases.has(passedName) ? rendererAliases.get(passedName) : passedName;
      renderer = renderers2.find(
        ({ name }) => name === `@astrojs/${rendererName}` || name === rendererName
      );
    }
    if (!renderer && validRenderers.length === 1) {
      renderer = validRenderers[0];
    }
    if (!renderer) {
      const extname = (_a2 = metadata.componentUrl) == null ? void 0 : _a2.split(".").pop();
      renderer = renderers2.filter(
        ({ name }) => name === `@astrojs/${extname}` || name === extname
      )[0];
    }
  }
  if (!renderer) {
    if (metadata.hydrate === "only") {
      throw new AstroError({
        ...AstroErrorData.NoClientOnlyHint,
        message: AstroErrorData.NoClientOnlyHint.message(metadata.displayName),
        hint: AstroErrorData.NoClientOnlyHint.hint(
          probableRendererNames.map((r) => r.replace("@astrojs/", "")).join("|")
        )
      });
    } else if (typeof Component !== "string") {
      const matchingRenderers = validRenderers.filter(
        (r) => probableRendererNames.includes(r.name)
      );
      const plural = validRenderers.length > 1;
      if (matchingRenderers.length === 0) {
        throw new AstroError({
          ...AstroErrorData.NoMatchingRenderer,
          message: AstroErrorData.NoMatchingRenderer.message(
            metadata.displayName,
            (_b = metadata == null ? void 0 : metadata.componentUrl) == null ? void 0 : _b.split(".").pop(),
            plural,
            validRenderers.length
          ),
          hint: AstroErrorData.NoMatchingRenderer.hint(
            formatList(probableRendererNames.map((r) => "`" + r + "`"))
          )
        });
      } else if (matchingRenderers.length === 1) {
        renderer = matchingRenderers[0];
        ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
          { result },
          Component,
          props,
          children,
          metadata
        ));
      } else {
        throw new Error(`Unable to render ${metadata.displayName}!

This component likely uses ${formatList(probableRendererNames)},
but Astro encountered an error during server-side rendering.

Please ensure that ${metadata.displayName}:
1. Does not unconditionally access browser-specific globals like \`window\` or \`document\`.
   If this is unavoidable, use the \`client:only\` hydration directive.
2. Does not conditionally return \`null\` or \`undefined\` when rendered on the server.

If you're still stuck, please open an issue on GitHub or join us at https://astro.build/chat.`);
      }
    }
  } else {
    if (metadata.hydrate === "only") {
      html = await renderSlotToString(result, slots == null ? void 0 : slots.fallback);
    } else {
      ({ html, attrs } = await renderer.ssr.renderToStaticMarkup.call(
        { result },
        Component,
        props,
        children,
        metadata
      ));
    }
  }
  if (renderer && !renderer.clientEntrypoint && renderer.name !== "@astrojs/lit" && metadata.hydrate) {
    throw new AstroError({
      ...AstroErrorData.NoClientEntrypoint,
      message: AstroErrorData.NoClientEntrypoint.message(
        displayName,
        metadata.hydrate,
        renderer.name
      )
    });
  }
  if (!html && typeof Component === "string") {
    const Tag = sanitizeElementName(Component);
    const childSlots = Object.values(children).join("");
    const iterable = renderAstroTemplateResult(
      await renderTemplate`<${Tag}${internalSpreadAttributes(props)}${markHTMLString(
        childSlots === "" && voidElementNames.test(Tag) ? `/>` : `>${childSlots}</${Tag}>`
      )}`
    );
    html = "";
    for await (const chunk of iterable) {
      html += chunk;
    }
  }
  if (!hydration) {
    return async function* () {
      var _a22;
      if (slotInstructions) {
        yield* slotInstructions;
      }
      if (isPage || (renderer == null ? void 0 : renderer.name) === "astro:jsx") {
        yield html;
      } else if (html && html.length > 0) {
        yield markHTMLString(
          removeStaticAstroSlot(html, ((_a22 = renderer == null ? void 0 : renderer.ssr) == null ? void 0 : _a22.supportsAstroStaticSlot) ?? false)
        );
      } else {
        yield "";
      }
    }();
  }
  const astroId = shorthash(
    `<!--${metadata.componentExport.value}:${metadata.componentUrl}-->
${html}
${serializeProps(
      props,
      metadata
    )}`
  );
  const island = await generateHydrateScript(
    { renderer, result, astroId, props, attrs },
    metadata
  );
  let unrenderedSlots = [];
  if (html) {
    if (Object.keys(children).length > 0) {
      for (const key of Object.keys(children)) {
        let tagName = ((_c = renderer == null ? void 0 : renderer.ssr) == null ? void 0 : _c.supportsAstroStaticSlot) ? !!metadata.hydrate ? "astro-slot" : "astro-static-slot" : "astro-slot";
        let expectedHTML = key === "default" ? `<${tagName}>` : `<${tagName} name="${key}">`;
        if (!html.includes(expectedHTML)) {
          unrenderedSlots.push(key);
        }
      }
    }
  } else {
    unrenderedSlots = Object.keys(children);
  }
  const template = unrenderedSlots.length > 0 ? unrenderedSlots.map(
    (key) => `<template data-astro-template${key !== "default" ? `="${key}"` : ""}>${children[key]}</template>`
  ).join("") : "";
  island.children = `${html ?? ""}${template}`;
  if (island.children) {
    island.props["await-children"] = "";
  }
  async function* renderAll() {
    if (slotInstructions) {
      yield* slotInstructions;
    }
    yield { type: "directive", hydration, result };
    yield markHTMLString(renderElement$1("astro-island", island, false));
  }
  return renderAll();
}
function sanitizeElementName(tag) {
  const unsafe = /[&<>'"\s]+/g;
  if (!unsafe.test(tag))
    return tag;
  return tag.trim().split(unsafe)[0].trim();
}
async function renderFragmentComponent(result, slots = {}) {
  const children = await renderSlotToString(result, slots == null ? void 0 : slots.default);
  if (children == null) {
    return children;
  }
  return markHTMLString(children);
}
async function renderHTMLComponent(result, Component, _props, slots = {}) {
  const { slotInstructions, children } = await renderSlots(result, slots);
  const html = Component({ slots: children });
  const hydrationHtml = slotInstructions ? slotInstructions.map((instr) => stringifyChunk(result, instr)).join("") : "";
  return markHTMLString(hydrationHtml + html);
}
function renderComponent(result, displayName, Component, props, slots = {}) {
  if (isPromise(Component)) {
    return Promise.resolve(Component).then((Unwrapped) => {
      return renderComponent(result, displayName, Unwrapped, props, slots);
    });
  }
  if (isFragmentComponent(Component)) {
    return renderFragmentComponent(result, slots);
  }
  if (isHTMLComponent(Component)) {
    return renderHTMLComponent(result, Component, props, slots);
  }
  if (isAstroComponentFactory(Component)) {
    return createAstroComponentInstance(result, displayName, Component, props, slots);
  }
  return renderFrameworkComponent(result, displayName, Component, props, slots);
}
function renderComponentToIterable(result, displayName, Component, props, slots = {}) {
  const renderResult = renderComponent(result, displayName, Component, props, slots);
  if (isAstroComponentInstance(renderResult)) {
    return renderResult.render();
  }
  return renderResult;
}
function createResponseClass() {
  var _isStream, _body, _a2;
  StreamingCompatibleResponse = (_a2 = class extends Response {
    constructor(body, init2) {
      let isStream = body instanceof ReadableStream;
      super(isStream ? null : body, init2);
      __privateAdd(this, _isStream, void 0);
      __privateAdd(this, _body, void 0);
      __privateSet(this, _isStream, isStream);
      __privateSet(this, _body, body);
    }
    get body() {
      return __privateGet(this, _body);
    }
    async text() {
      if (__privateGet(this, _isStream) && isNodeJS) {
        let decoder2 = new TextDecoder();
        let body = __privateGet(this, _body);
        let out = "";
        for await (let chunk of streamAsyncIterator(body)) {
          out += decoder2.decode(chunk);
        }
        return out;
      }
      return super.text();
    }
    async arrayBuffer() {
      if (__privateGet(this, _isStream) && isNodeJS) {
        let body = __privateGet(this, _body);
        let chunks = [];
        let len = 0;
        for await (let chunk of streamAsyncIterator(body)) {
          chunks.push(chunk);
          len += chunk.length;
        }
        let ab = new Uint8Array(len);
        let offset = 0;
        for (const chunk of chunks) {
          ab.set(chunk, offset);
          offset += chunk.length;
        }
        return ab;
      }
      return super.arrayBuffer();
    }
  }, _isStream = new WeakMap(), _body = new WeakMap(), _a2);
  return StreamingCompatibleResponse;
}
function nonAstroPageNeedsHeadInjection(pageComponent) {
  return needsHeadRenderingSymbol in pageComponent && !!pageComponent[needsHeadRenderingSymbol];
}
async function iterableToHTMLBytes(result, iterable, isCompressHTML, onDocTypeInjection) {
  const parts = new HTMLParts();
  let i = 0;
  for await (const chunk of iterable) {
    if (isHTMLString(chunk)) {
      if (i === 0) {
        i++;
        if (!/<!doctype html/i.test(String(chunk))) {
          parts.append(`${isCompressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n"}`, result);
          if (onDocTypeInjection) {
            await onDocTypeInjection(parts);
          }
        }
      }
    }
    parts.append(chunk, result);
  }
  return parts.toArrayBuffer();
}
async function bufferHeadContent(result) {
  const iterator = result.propagators.values();
  while (true) {
    const { value, done } = iterator.next();
    if (done) {
      break;
    }
    const returnValue = await value.init(result);
    if (isHeadAndContent(returnValue)) {
      result.extraHead.push(returnValue.head);
    }
  }
}
async function renderPage$1(result, componentFactory, props, children, streaming, isCompressHTML, route) {
  var _a2, _b;
  if (!isAstroComponentFactory(componentFactory)) {
    result._metadata.headInTree = ((_a2 = result.componentMetadata.get(componentFactory.moduleId)) == null ? void 0 : _a2.containsHead) ?? false;
    const pageProps = { ...props ?? {}, "server:root": true };
    let output;
    let head = "";
    try {
      if (nonAstroPageNeedsHeadInjection(componentFactory)) {
        const parts = new HTMLParts();
        for await (const chunk of maybeRenderHead(result)) {
          parts.append(chunk, result);
        }
        head = parts.toString();
      }
      const renderResult = await renderComponent(
        result,
        componentFactory.name,
        componentFactory,
        pageProps,
        null
      );
      if (isAstroComponentInstance(renderResult)) {
        output = renderResult.render();
      } else {
        output = renderResult;
      }
    } catch (e) {
      if (AstroError.is(e) && !e.loc) {
        e.setLocation({
          file: route == null ? void 0 : route.component
        });
      }
      throw e;
    }
    const bytes = await iterableToHTMLBytes(result, output, isCompressHTML, async (parts) => {
      parts.append(head, result);
    });
    return new Response(bytes, {
      headers: new Headers([
        ["Content-Type", "text/html; charset=utf-8"],
        ["Content-Length", bytes.byteLength.toString()]
      ])
    });
  }
  result._metadata.headInTree = ((_b = result.componentMetadata.get(componentFactory.moduleId)) == null ? void 0 : _b.containsHead) ?? false;
  const factoryReturnValue = await componentFactory(result, props, children);
  const factoryIsHeadAndContent = isHeadAndContent(factoryReturnValue);
  if (isRenderTemplateResult(factoryReturnValue) || factoryIsHeadAndContent) {
    await bufferHeadContent(result);
    const templateResult = factoryIsHeadAndContent ? factoryReturnValue.content : factoryReturnValue;
    let iterable = renderAstroTemplateResult(templateResult);
    let init2 = result.response;
    let headers = new Headers(init2.headers);
    let body;
    if (streaming) {
      body = new ReadableStream({
        start(controller) {
          async function read() {
            let i = 0;
            try {
              for await (const chunk of iterable) {
                if (isHTMLString(chunk)) {
                  if (i === 0) {
                    if (!/<!doctype html/i.test(String(chunk))) {
                      controller.enqueue(
                        encoder.encode(
                          `${isCompressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n"}`
                        )
                      );
                    }
                  }
                }
                if (chunk instanceof Response) {
                  throw new AstroError({
                    ...AstroErrorData.ResponseSentError
                  });
                }
                const bytes = chunkToByteArray(result, chunk);
                controller.enqueue(bytes);
                i++;
              }
              controller.close();
            } catch (e) {
              if (AstroError.is(e) && !e.loc) {
                e.setLocation({
                  file: route == null ? void 0 : route.component
                });
              }
              controller.error(e);
            }
          }
          read();
        }
      });
    } else {
      body = await iterableToHTMLBytes(result, iterable, isCompressHTML);
      headers.set("Content-Length", body.byteLength.toString());
    }
    let response = createResponse(body, { ...init2, headers });
    return response;
  }
  if (!(factoryReturnValue instanceof Response)) {
    throw new AstroError({
      ...AstroErrorData.OnlyResponseCanBeReturned,
      message: AstroErrorData.OnlyResponseCanBeReturned.message(
        route == null ? void 0 : route.route,
        typeof factoryReturnValue
      ),
      location: {
        file: route == null ? void 0 : route.component
      }
    });
  }
  return factoryReturnValue;
}
function spreadAttributes(values = {}, _name, { class: scopedClassName } = {}) {
  let output = "";
  if (scopedClassName) {
    if (typeof values.class !== "undefined") {
      values.class += ` ${scopedClassName}`;
    } else if (typeof values["class:list"] !== "undefined") {
      values["class:list"] = [values["class:list"], scopedClassName];
    } else {
      values.class = scopedClassName;
    }
  }
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, true);
  }
  return markHTMLString(output);
}
function isVNode(vnode) {
  return vnode && typeof vnode === "object" && vnode[AstroJSX];
}
function transformSlots(vnode) {
  if (typeof vnode.type === "string")
    return vnode;
  const slots = {};
  if (isVNode(vnode.props.children)) {
    const child = vnode.props.children;
    if (!isVNode(child))
      return;
    if (!("slot" in child.props))
      return;
    const name = toSlotName(child.props.slot);
    slots[name] = [child];
    slots[name]["$$slot"] = true;
    delete child.props.slot;
    delete vnode.props.children;
  }
  if (Array.isArray(vnode.props.children)) {
    vnode.props.children = vnode.props.children.map((child) => {
      if (!isVNode(child))
        return child;
      if (!("slot" in child.props))
        return child;
      const name = toSlotName(child.props.slot);
      if (Array.isArray(slots[name])) {
        slots[name].push(child);
      } else {
        slots[name] = [child];
        slots[name]["$$slot"] = true;
      }
      delete child.props.slot;
      return Empty;
    }).filter((v) => v !== Empty);
  }
  Object.assign(vnode.props, slots);
}
function markRawChildren(child) {
  if (typeof child === "string")
    return markHTMLString(child);
  if (Array.isArray(child))
    return child.map((c) => markRawChildren(c));
  return child;
}
function transformSetDirectives(vnode) {
  if (!("set:html" in vnode.props || "set:text" in vnode.props))
    return;
  if ("set:html" in vnode.props) {
    const children = markRawChildren(vnode.props["set:html"]);
    delete vnode.props["set:html"];
    Object.assign(vnode.props, { children });
    return;
  }
  if ("set:text" in vnode.props) {
    const children = vnode.props["set:text"];
    delete vnode.props["set:text"];
    Object.assign(vnode.props, { children });
    return;
  }
}
function createVNode(type, props) {
  const vnode = {
    [Renderer]: "astro:jsx",
    [AstroJSX]: true,
    type,
    props: props ?? {}
  };
  transformSetDirectives(vnode);
  transformSlots(vnode);
  return vnode;
}
async function check(Component, props, { default: children = null, ...slotted } = {}) {
  if (typeof Component !== "function")
    return false;
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  try {
    const result = await Component({ ...props, ...slots, children });
    return result[AstroJSX];
  } catch (e) {
    const error2 = e;
    if (Component[Symbol.for("mdx-component")]) {
      throw createFormattedError({
        message: error2.message,
        title: error2.name,
        hint: `This issue often occurs when your MDX component encounters runtime errors.`,
        name: error2.name,
        stack: error2.stack
      });
    }
  }
  return false;
}
async function renderToStaticMarkup(Component, props = {}, { default: children = null, ...slotted } = {}) {
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = value;
  }
  const { result } = this;
  const html = await renderJSX(result, createVNode(Component, { ...props, ...slots, children }));
  return { html };
}
function createFormattedError({ message, name, stack, hint }) {
  const error2 = new Error(message);
  error2.name = name;
  error2.stack = stack;
  error2.hint = hint;
  return error2;
}
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
function Mime$1() {
  this._types = /* @__PURE__ */ Object.create(null);
  this._extensions = /* @__PURE__ */ Object.create(null);
  for (let i = 0; i < arguments.length; i++) {
    this.define(arguments[i]);
  }
  this.define = this.define.bind(this);
  this.getType = this.getType.bind(this);
  this.getExtension = this.getExtension.bind(this);
}
function parse$1(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  var obj = {};
  var opt = options || {};
  var dec = opt.decode || decode;
  var index = 0;
  while (index < str.length) {
    var eqIdx = str.indexOf("=", index);
    if (eqIdx === -1) {
      break;
    }
    var endIdx = str.indexOf(";", index);
    if (endIdx === -1) {
      endIdx = str.length;
    } else if (endIdx < eqIdx) {
      index = str.lastIndexOf(";", eqIdx - 1) + 1;
      continue;
    }
    var key = str.slice(index, eqIdx).trim();
    if (void 0 === obj[key]) {
      var val = str.slice(eqIdx + 1, endIdx).trim();
      if (val.charCodeAt(0) === 34) {
        val = val.slice(1, -1);
      }
      obj[key] = tryDecode(val, dec);
    }
    index = endIdx + 1;
  }
  return obj;
}
function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;
  if (typeof enc !== "function") {
    throw new TypeError("option encode is invalid");
  }
  if (!fieldContentRegExp.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  var value = enc(val);
  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError("argument val is invalid");
  }
  var str = name + "=" + value;
  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError("option maxAge is invalid");
    }
    str += "; Max-Age=" + Math.floor(maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=" + opt.domain;
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=" + opt.path;
  }
  if (opt.expires) {
    var expires = opt.expires;
    if (!isDate(expires) || isNaN(expires.valueOf())) {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=" + expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += "; HttpOnly";
  }
  if (opt.secure) {
    str += "; Secure";
  }
  if (opt.priority) {
    var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
    switch (priority) {
      case "low":
        str += "; Priority=Low";
        break;
      case "medium":
        str += "; Priority=Medium";
        break;
      case "high":
        str += "; Priority=High";
        break;
      default:
        throw new TypeError("option priority is invalid");
    }
  }
  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true:
        str += "; SameSite=Strict";
        break;
      case "lax":
        str += "; SameSite=Lax";
        break;
      case "strict":
        str += "; SameSite=Strict";
        break;
      case "none":
        str += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  }
  return str;
}
function decode(str) {
  return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
}
function encode(val) {
  return encodeURIComponent(val);
}
function isDate(val) {
  return __toString.call(val) === "[object Date]" || val instanceof Date;
}
function tryDecode(str, decode2) {
  try {
    return decode2(str);
  } catch (e) {
    return str;
  }
}
function attachToResponse(response, cookies) {
  Reflect.set(response, astroCookiesSymbol, cookies);
}
function getFromResponse(response) {
  let cookies = Reflect.get(response, astroCookiesSymbol);
  if (cookies != null) {
    return cookies;
  } else {
    return void 0;
  }
}
function* getSetCookiesFromResponse(response) {
  const cookies = getFromResponse(response);
  if (!cookies) {
    return [];
  }
  for (const headerValue of cookies.headers()) {
    yield headerValue;
  }
  return [];
}
function init(x, y) {
  let rgx = new RegExp(`\\x1b\\[${y}m`, "g");
  let open = `\x1B[${x}m`, close = `\x1B[${y}m`;
  return function(txt) {
    if (!$.enabled || txt == null)
      return txt;
    return open + (!!~("" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;
  };
}
function log(opts, level, type, message) {
  const logLevel = opts.level;
  const dest = opts.dest;
  const event = {
    type,
    level,
    message
  };
  if (levels[logLevel] > levels[level]) {
    return;
  }
  dest.write(event);
}
function warn(opts, type, message) {
  return log(opts, "warn", type, message);
}
function error(opts, type, message) {
  return log(opts, "error", type, message);
}
function debug(...args) {
  if ("_astroGlobalDebug" in globalThis) {
    globalThis._astroGlobalDebug(...args);
  }
}
async function callMiddleware(logging, onRequest3, apiContext, responseFunction) {
  new Promise((resolve) => {
  });
  let nextCalled = false;
  let responseFunctionPromise = void 0;
  const next = async () => {
    nextCalled = true;
    responseFunctionPromise = responseFunction();
    return responseFunctionPromise;
  };
  let middlewarePromise = onRequest3(apiContext, next);
  return await Promise.resolve(middlewarePromise).then(async (value) => {
    if (isEndpointOutput(value)) {
      warn(
        logging,
        "middleware",
        `Using simple endpoints can cause unexpected issues in the chain of middleware functions.
It's strongly suggested to use full ${bold("Response")} objects.`
      );
    }
    if (nextCalled) {
      if (typeof value !== "undefined") {
        if (value instanceof Response === false) {
          throw new AstroError(AstroErrorData.MiddlewareNotAResponse);
        }
        return value;
      } else {
        if (responseFunctionPromise) {
          return responseFunctionPromise;
        } else {
          throw new AstroError(AstroErrorData.MiddlewareNotAResponse);
        }
      }
    } else if (typeof value === "undefined") {
      throw new AstroError(AstroErrorData.MiddlewareNoDataOrNextCalled);
    } else if (value instanceof Response === false) {
      throw new AstroError(AstroErrorData.MiddlewareNotAResponse);
    } else {
      return value;
    }
  });
}
function isEndpointOutput(endpointResult) {
  return !(endpointResult instanceof Response) && typeof endpointResult === "object" && typeof endpointResult.body === "string";
}
function createAPIContext({
  request,
  params,
  site,
  props,
  adapterName
}) {
  const context = {
    cookies: new AstroCookies(request),
    request,
    params,
    site: site ? new URL(site) : void 0,
    generator: `Astro v${ASTRO_VERSION}`,
    props,
    redirect(path, status) {
      return new Response(null, {
        status: status || 302,
        headers: {
          Location: path
        }
      });
    },
    url: new URL(request.url),
    get clientAddress() {
      if (!(clientAddressSymbol$1 in request)) {
        if (adapterName) {
          throw new AstroError({
            ...AstroErrorData.ClientAddressNotAvailable,
            message: AstroErrorData.ClientAddressNotAvailable.message(adapterName)
          });
        } else {
          throw new AstroError(AstroErrorData.StaticClientAddressNotAvailable);
        }
      }
      return Reflect.get(request, clientAddressSymbol$1);
    }
  };
  Object.defineProperty(context, "locals", {
    enumerable: true,
    get() {
      return Reflect.get(request, clientLocalsSymbol$2);
    },
    set(val) {
      if (typeof val !== "object") {
        throw new AstroError(AstroErrorData.LocalsNotAnObject);
      } else {
        Reflect.set(request, clientLocalsSymbol$2, val);
      }
    }
  });
  return context;
}
async function callEndpoint(mod, env, ctx, logging, onRequest3) {
  var _a2;
  const context = createAPIContext({
    request: ctx.request,
    params: ctx.params,
    props: ctx.props,
    site: env.site,
    adapterName: env.adapterName
  });
  let response;
  if (onRequest3) {
    response = await callMiddleware(
      env.logging,
      onRequest3,
      context,
      async () => {
        return await renderEndpoint(mod, context, env.ssr);
      }
    );
  } else {
    response = await renderEndpoint(mod, context, env.ssr);
  }
  if (response instanceof Response) {
    attachToResponse(response, context.cookies);
    return {
      type: "response",
      response
    };
  }
  if (env.ssr && !((_a2 = ctx.route) == null ? void 0 : _a2.prerender)) {
    if (response.hasOwnProperty("headers")) {
      warn(
        logging,
        "ssr",
        "Setting headers is not supported when returning an object. Please return an instance of Response. See https://docs.astro.build/en/core-concepts/endpoints/#server-endpoints-api-routes for more information."
      );
    }
    if (response.encoding) {
      warn(
        logging,
        "ssr",
        "`encoding` is ignored in SSR. To return a charset other than UTF-8, please return an instance of Response. See https://docs.astro.build/en/core-concepts/endpoints/#server-endpoints-api-routes for more information."
      );
    }
  }
  return {
    type: "simple",
    body: response.body,
    encoding: response.encoding,
    cookies: context.cookies
  };
}
function prependForwardSlash(path) {
  return path[0] === "/" ? path : "/" + path;
}
function removeTrailingForwardSlash(path) {
  return path.endsWith("/") ? path.slice(0, path.length - 1) : path;
}
function removeLeadingForwardSlash(path) {
  return path.startsWith("/") ? path.substring(1) : path;
}
function trimSlashes(path) {
  return path.replace(/^\/|\/$/g, "");
}
function isString(path) {
  return typeof path === "string" || path instanceof String;
}
function joinPaths(...paths) {
  return paths.filter(isString).map((path, i) => {
    if (i === 0) {
      return removeTrailingForwardSlash(path);
    } else if (i === paths.length - 1) {
      return removeLeadingForwardSlash(path);
    } else {
      return trimSlashes(path);
    }
  }).join("/");
}
function slash(path) {
  return path.replace(/\\/g, "/");
}
function routeIsRedirect(route) {
  return (route == null ? void 0 : route.type) === "redirect";
}
function redirectRouteGenerate(redirectRoute, data) {
  const routeData = redirectRoute.redirectRoute;
  const route = redirectRoute.redirect;
  if (typeof routeData !== "undefined") {
    return (routeData == null ? void 0 : routeData.generate(data)) || (routeData == null ? void 0 : routeData.pathname) || "/";
  } else if (typeof route === "string") {
    return route;
  } else if (typeof route === "undefined") {
    return "/";
  }
  return route.destination;
}
function redirectRouteStatus(redirectRoute, method = "GET") {
  const routeData = redirectRoute.redirectRoute;
  if (typeof (routeData == null ? void 0 : routeData.redirect) === "object") {
    return routeData.redirect.status;
  } else if (method !== "GET") {
    return 308;
  }
  return 301;
}
function validateGetStaticPathsParameter([key, value], route) {
  if (!VALID_PARAM_TYPES.includes(typeof value)) {
    throw new AstroError({
      ...AstroErrorData.GetStaticPathsInvalidRouteParam,
      message: AstroErrorData.GetStaticPathsInvalidRouteParam.message(key, value, typeof value),
      location: {
        file: route
      }
    });
  }
}
function validateDynamicRouteModule(mod, {
  ssr,
  logging,
  route
}) {
  if (ssr && mod.getStaticPaths && !route.prerender) {
    warn(
      logging,
      "getStaticPaths",
      `getStaticPaths() in ${bold(route.component)} is ignored when "output: server" is set.`
    );
  }
  if ((!ssr || route.prerender) && !mod.getStaticPaths) {
    throw new AstroError({
      ...AstroErrorData.GetStaticPathsRequired,
      location: { file: route.component }
    });
  }
}
function validateGetStaticPathsResult(result, logging, route) {
  if (!Array.isArray(result)) {
    throw new AstroError({
      ...AstroErrorData.InvalidGetStaticPathsReturn,
      message: AstroErrorData.InvalidGetStaticPathsReturn.message(typeof result),
      location: {
        file: route.component
      }
    });
  }
  result.forEach((pathObject) => {
    if (pathObject.params === void 0 || pathObject.params === null || pathObject.params && Object.keys(pathObject.params).length === 0) {
      throw new AstroError({
        ...AstroErrorData.GetStaticPathsExpectedParams,
        location: {
          file: route.component
        }
      });
    }
    if (typeof pathObject.params !== "object") {
      throw new AstroError({
        ...AstroErrorData.InvalidGetStaticPathParam,
        message: AstroErrorData.InvalidGetStaticPathParam.message(typeof pathObject.params),
        location: {
          file: route.component
        }
      });
    }
    for (const [key, val] of Object.entries(pathObject.params)) {
      if (!(typeof val === "undefined" || typeof val === "string" || typeof val === "number")) {
        warn(
          logging,
          "getStaticPaths",
          `invalid path param: ${key}. A string, number or undefined value was expected, but got \`${JSON.stringify(
            val
          )}\`.`
        );
      }
      if (typeof val === "string" && val === "") {
        warn(
          logging,
          "getStaticPaths",
          `invalid path param: ${key}. \`undefined\` expected for an optional param, but got empty string.`
        );
      }
    }
  });
}
function getParams(array) {
  const fn = (match) => {
    const params = {};
    array.forEach((key, i) => {
      if (key.startsWith("...")) {
        params[key.slice(3)] = match[i + 1] ? decodeURIComponent(match[i + 1]) : void 0;
      } else {
        params[key] = decodeURIComponent(match[i + 1]);
      }
    });
    return params;
  };
  return fn;
}
function stringifyParams(params, routeComponent) {
  const validatedParams = Object.entries(params).reduce((acc, next) => {
    validateGetStaticPathsParameter(next, routeComponent);
    const [key, value] = next;
    acc[key] = value == null ? void 0 : value.toString();
    return acc;
  }, {});
  return JSON.stringify(validatedParams, Object.keys(params).sort());
}
function getFunctionExpression(slot) {
  var _a2;
  if (!slot)
    return;
  if (((_a2 = slot.expressions) == null ? void 0 : _a2.length) !== 1)
    return;
  return slot.expressions[0];
}
function createResult(args) {
  const { markdown, params, pathname, renderers: renderers2, clientDirectives, request, resolve, locals } = args;
  const url = new URL(request.url);
  const headers = new Headers();
  headers.set("Content-Type", "text/html");
  const response = {
    status: args.status,
    statusText: "OK",
    headers
  };
  Object.defineProperty(response, "headers", {
    value: response.headers,
    enumerable: true,
    writable: false
  });
  let cookies = args.cookies;
  let componentMetadata = args.componentMetadata ?? /* @__PURE__ */ new Map();
  const result = {
    styles: args.styles ?? /* @__PURE__ */ new Set(),
    scripts: args.scripts ?? /* @__PURE__ */ new Set(),
    links: args.links ?? /* @__PURE__ */ new Set(),
    componentMetadata,
    propagators: /* @__PURE__ */ new Map(),
    extraHead: [],
    scope: 0,
    cookies,
    /** This function returns the `Astro` faux-global */
    createAstro(astroGlobal, props, slots) {
      const astroSlots = new Slots(result, slots, args.logging);
      const Astro = {
        // @ts-expect-error
        __proto__: astroGlobal,
        get clientAddress() {
          if (!(clientAddressSymbol in request)) {
            if (args.adapterName) {
              throw new AstroError({
                ...AstroErrorData.ClientAddressNotAvailable,
                message: AstroErrorData.ClientAddressNotAvailable.message(args.adapterName)
              });
            } else {
              throw new AstroError(AstroErrorData.StaticClientAddressNotAvailable);
            }
          }
          return Reflect.get(request, clientAddressSymbol);
        },
        get cookies() {
          if (cookies) {
            return cookies;
          }
          cookies = new AstroCookies(request);
          result.cookies = cookies;
          return cookies;
        },
        params,
        props,
        locals,
        request,
        url,
        redirect(path, status) {
          if (request[responseSentSymbol$1]) {
            throw new AstroError({
              ...AstroErrorData.ResponseSentError
            });
          }
          return new Response(null, {
            status: status || 302,
            headers: {
              Location: path
            }
          });
        },
        response,
        slots: astroSlots
      };
      Object.defineProperty(Astro, "__renderMarkdown", {
        // Ensure this API is not exposed to users
        enumerable: false,
        writable: false,
        // TODO: Remove this hole "Deno" logic once our plugin gets Deno support
        value: async function(content, opts) {
          if (typeof Deno !== "undefined") {
            throw new Error("Markdown is not supported in Deno SSR");
          }
          if (!renderMarkdown) {
            let astroRemark = "@astrojs/";
            astroRemark += "markdown-remark";
            renderMarkdown = (await import(astroRemark)).renderMarkdown;
          }
          const { code } = await renderMarkdown(content, { ...markdown, ...opts ?? {} });
          return code;
        }
      });
      return Astro;
    },
    resolve,
    _metadata: {
      renderers: renderers2,
      pathname,
      hasHydrationScript: false,
      hasRenderedHead: false,
      hasDirectives: /* @__PURE__ */ new Set(),
      headInTree: false,
      clientDirectives
    },
    response
  };
  return result;
}
function generatePaginateFunction(routeMatch) {
  return function paginateUtility(data, args = {}) {
    let { pageSize: _pageSize, params: _params, props: _props } = args;
    const pageSize = _pageSize || 10;
    const paramName = "page";
    const additionalParams = _params || {};
    const additionalProps = _props || {};
    let includesFirstPageNumber;
    if (routeMatch.params.includes(`...${paramName}`)) {
      includesFirstPageNumber = false;
    } else if (routeMatch.params.includes(`${paramName}`)) {
      includesFirstPageNumber = true;
    } else {
      throw new AstroError({
        ...AstroErrorData.PageNumberParamNotFound,
        message: AstroErrorData.PageNumberParamNotFound.message(paramName)
      });
    }
    const lastPage = Math.max(1, Math.ceil(data.length / pageSize));
    const result = [...Array(lastPage).keys()].map((num) => {
      const pageNum = num + 1;
      const start = pageSize === Infinity ? 0 : (pageNum - 1) * pageSize;
      const end = Math.min(start + pageSize, data.length);
      const params = {
        ...additionalParams,
        [paramName]: includesFirstPageNumber || pageNum > 1 ? String(pageNum) : void 0
      };
      const current = correctIndexRoute(routeMatch.generate({ ...params }));
      const next = pageNum === lastPage ? void 0 : correctIndexRoute(routeMatch.generate({ ...params, page: String(pageNum + 1) }));
      const prev = pageNum === 1 ? void 0 : correctIndexRoute(
        routeMatch.generate({
          ...params,
          page: !includesFirstPageNumber && pageNum - 1 === 1 ? void 0 : String(pageNum - 1)
        })
      );
      return {
        params,
        props: {
          ...additionalProps,
          page: {
            data: data.slice(start, end),
            start,
            end: end - 1,
            size: pageSize,
            total: data.length,
            currentPage: pageNum,
            lastPage,
            url: { current, next, prev }
          }
        }
      };
    });
    return result;
  };
}
function correctIndexRoute(route) {
  if (route === "") {
    return "/";
  }
  return route;
}
async function callGetStaticPaths({
  isValidate,
  logging,
  mod,
  route,
  ssr
}) {
  validateDynamicRouteModule(mod, { ssr, logging, route });
  if (ssr && !route.prerender) {
    return { staticPaths: Object.assign([], { keyed: /* @__PURE__ */ new Map() }) };
  }
  if (!mod.getStaticPaths) {
    throw new Error("Unexpected Error.");
  }
  let staticPaths = [];
  staticPaths = await mod.getStaticPaths({
    paginate: generatePaginateFunction(route),
    rss() {
      throw new AstroError(AstroErrorData.GetStaticPathsRemovedRSSHelper);
    }
  });
  if (Array.isArray(staticPaths)) {
    staticPaths = staticPaths.flat();
  }
  if (isValidate) {
    validateGetStaticPathsResult(staticPaths, logging, route);
  }
  const keyedStaticPaths = staticPaths;
  keyedStaticPaths.keyed = /* @__PURE__ */ new Map();
  for (const sp of keyedStaticPaths) {
    const paramsKey = stringifyParams(sp.params, route.component);
    keyedStaticPaths.keyed.set(paramsKey, sp);
  }
  return {
    staticPaths: keyedStaticPaths
  };
}
function findPathItemByKey(staticPaths, params, route) {
  const paramsKey = stringifyParams(params, route.component);
  const matchedStaticPath = staticPaths.keyed.get(paramsKey);
  if (matchedStaticPath) {
    return matchedStaticPath;
  }
  debug("findPathItemByKey", `Unexpected cache miss looking for ${paramsKey}`);
}
async function getParamsAndPropsOrThrow(options) {
  var _a2, _b;
  let paramsAndPropsResp = await getParamsAndProps(options);
  if (paramsAndPropsResp === 0) {
    throw new AstroError({
      ...AstroErrorData.NoMatchingStaticPathFound,
      message: AstroErrorData.NoMatchingStaticPathFound.message(options.pathname),
      hint: ((_a2 = options.route) == null ? void 0 : _a2.component) ? AstroErrorData.NoMatchingStaticPathFound.hint([(_b = options.route) == null ? void 0 : _b.component]) : ""
    });
  }
  return paramsAndPropsResp;
}
async function getParamsAndProps(opts) {
  const { logging, mod, route, routeCache, pathname, ssr } = opts;
  let params = {};
  let pageProps;
  if (route && !route.pathname) {
    if (route.params.length) {
      const paramsMatch = route.pattern.exec(decodeURIComponent(pathname));
      if (paramsMatch) {
        params = getParams(route.params)(paramsMatch);
        if (route.type === "endpoint" && mod.getStaticPaths) {
          const lastSegment = route.segments[route.segments.length - 1];
          const paramValues = Object.values(params);
          const lastParam = paramValues[paramValues.length - 1];
          if (lastSegment.length === 1 && lastSegment[0].dynamic && lastParam === void 0) {
            throw new AstroError({
              ...AstroErrorData.PrerenderDynamicEndpointPathCollide,
              message: AstroErrorData.PrerenderDynamicEndpointPathCollide.message(route.route),
              hint: AstroErrorData.PrerenderDynamicEndpointPathCollide.hint(route.component),
              location: {
                file: route.component
              }
            });
          }
        }
      }
    }
    let routeCacheEntry = routeCache.get(route);
    if (!routeCacheEntry) {
      routeCacheEntry = await callGetStaticPaths({ mod, route, isValidate: true, logging, ssr });
      routeCache.set(route, routeCacheEntry);
    }
    const matchedStaticPath = findPathItemByKey(routeCacheEntry.staticPaths, params, route);
    if (!matchedStaticPath && (ssr ? route.prerender : true)) {
      return 0;
    }
    pageProps = (matchedStaticPath == null ? void 0 : matchedStaticPath.props) ? { ...matchedStaticPath.props } : {};
  } else {
    pageProps = {};
  }
  return [params, pageProps];
}
async function renderPage({
  mod,
  renderContext,
  env,
  cookies,
  isCompressHTML = false
}) {
  if (routeIsRedirect(renderContext.route)) {
    return new Response(null, {
      status: redirectRouteStatus(renderContext.route, renderContext.request.method),
      headers: {
        location: redirectRouteGenerate(renderContext.route, renderContext.params)
      }
    });
  }
  const Component = mod.default;
  if (!Component)
    throw new Error(`Expected an exported Astro component but received typeof ${typeof Component}`);
  const result = createResult({
    adapterName: env.adapterName,
    links: renderContext.links,
    styles: renderContext.styles,
    logging: env.logging,
    markdown: env.markdown,
    mode: env.mode,
    origin: renderContext.origin,
    params: renderContext.params,
    props: renderContext.props,
    pathname: renderContext.pathname,
    componentMetadata: renderContext.componentMetadata,
    resolve: env.resolve,
    renderers: env.renderers,
    clientDirectives: env.clientDirectives,
    request: renderContext.request,
    site: env.site,
    scripts: renderContext.scripts,
    ssr: env.ssr,
    status: renderContext.status ?? 200,
    cookies,
    locals: renderContext.locals ?? {}
  });
  if (typeof mod.components === "object") {
    Object.assign(renderContext.props, { components: mod.components });
  }
  let response = await renderPage$1(
    result,
    Component,
    renderContext.props,
    null,
    env.streaming,
    isCompressHTML,
    renderContext.route
  );
  if (result.cookies) {
    attachToResponse(response, result.cookies);
  }
  return response;
}
async function createRenderContext(options) {
  const request = options.request;
  const url = new URL(request.url);
  const origin = options.origin ?? url.origin;
  const pathname = options.pathname ?? url.pathname;
  const [params, props] = await getParamsAndPropsOrThrow({
    mod: options.mod,
    route: options.route,
    routeCache: options.env.routeCache,
    pathname,
    logging: options.env.logging,
    ssr: options.env.ssr
  });
  let context = {
    ...options,
    origin,
    pathname,
    url,
    params,
    props
  };
  Object.defineProperty(context, "locals", {
    enumerable: true,
    get() {
      return Reflect.get(request, clientLocalsSymbol$1);
    },
    set(val) {
      if (typeof val !== "object") {
        throw new AstroError(AstroErrorData.LocalsNotAnObject);
      } else {
        Reflect.set(request, clientLocalsSymbol$1, val);
      }
    }
  });
  return context;
}
function createEnvironment(options) {
  return options;
}
function createAssetLink(href, base, assetsPrefix) {
  if (assetsPrefix) {
    return joinPaths(assetsPrefix, slash(href));
  } else if (base) {
    return prependForwardSlash(joinPaths(base, slash(href)));
  } else {
    return href;
  }
}
function createStylesheetElement(stylesheet, base, assetsPrefix) {
  if (stylesheet.type === "inline") {
    return {
      props: {
        type: "text/css"
      },
      children: stylesheet.content
    };
  } else {
    return {
      props: {
        rel: "stylesheet",
        href: createAssetLink(stylesheet.src, base, assetsPrefix)
      },
      children: ""
    };
  }
}
function createStylesheetElementSet(stylesheets, base, assetsPrefix) {
  return new Set(stylesheets.map((s) => createStylesheetElement(s, base, assetsPrefix)));
}
function createModuleScriptElement(script, base, assetsPrefix) {
  if (script.type === "external") {
    return createModuleScriptElementWithSrc(script.value, base, assetsPrefix);
  } else {
    return {
      props: {
        type: "module"
      },
      children: script.value
    };
  }
}
function createModuleScriptElementWithSrc(src, base, assetsPrefix) {
  return {
    props: {
      type: "module",
      src: createAssetLink(src, base, assetsPrefix)
    },
    children: ""
  };
}
function matchRoute(pathname, manifest2) {
  return manifest2.routes.find((route) => route.pattern.test(decodeURI(pathname)));
}
function lexer(str) {
  var tokens = [];
  var i = 0;
  while (i < str.length) {
    var char = str[i];
    if (char === "*" || char === "+" || char === "?") {
      tokens.push({ type: "MODIFIER", index: i, value: str[i++] });
      continue;
    }
    if (char === "\\") {
      tokens.push({ type: "ESCAPED_CHAR", index: i++, value: str[i++] });
      continue;
    }
    if (char === "{") {
      tokens.push({ type: "OPEN", index: i, value: str[i++] });
      continue;
    }
    if (char === "}") {
      tokens.push({ type: "CLOSE", index: i, value: str[i++] });
      continue;
    }
    if (char === ":") {
      var name = "";
      var j = i + 1;
      while (j < str.length) {
        var code = str.charCodeAt(j);
        if (
          // `0-9`
          code >= 48 && code <= 57 || // `A-Z`
          code >= 65 && code <= 90 || // `a-z`
          code >= 97 && code <= 122 || // `_`
          code === 95
        ) {
          name += str[j++];
          continue;
        }
        break;
      }
      if (!name)
        throw new TypeError("Missing parameter name at ".concat(i));
      tokens.push({ type: "NAME", index: i, value: name });
      i = j;
      continue;
    }
    if (char === "(") {
      var count = 1;
      var pattern = "";
      var j = i + 1;
      if (str[j] === "?") {
        throw new TypeError('Pattern cannot start with "?" at '.concat(j));
      }
      while (j < str.length) {
        if (str[j] === "\\") {
          pattern += str[j++] + str[j++];
          continue;
        }
        if (str[j] === ")") {
          count--;
          if (count === 0) {
            j++;
            break;
          }
        } else if (str[j] === "(") {
          count++;
          if (str[j + 1] !== "?") {
            throw new TypeError("Capturing groups are not allowed at ".concat(j));
          }
        }
        pattern += str[j++];
      }
      if (count)
        throw new TypeError("Unbalanced pattern at ".concat(i));
      if (!pattern)
        throw new TypeError("Missing pattern at ".concat(i));
      tokens.push({ type: "PATTERN", index: i, value: pattern });
      i = j;
      continue;
    }
    tokens.push({ type: "CHAR", index: i, value: str[i++] });
  }
  tokens.push({ type: "END", index: i, value: "" });
  return tokens;
}
function parse(str, options) {
  if (options === void 0) {
    options = {};
  }
  var tokens = lexer(str);
  var _a2 = options.prefixes, prefixes = _a2 === void 0 ? "./" : _a2;
  var defaultPattern = "[^".concat(escapeString(options.delimiter || "/#?"), "]+?");
  var result = [];
  var key = 0;
  var i = 0;
  var path = "";
  var tryConsume = function(type) {
    if (i < tokens.length && tokens[i].type === type)
      return tokens[i++].value;
  };
  var mustConsume = function(type) {
    var value2 = tryConsume(type);
    if (value2 !== void 0)
      return value2;
    var _a3 = tokens[i], nextType = _a3.type, index = _a3.index;
    throw new TypeError("Unexpected ".concat(nextType, " at ").concat(index, ", expected ").concat(type));
  };
  var consumeText = function() {
    var result2 = "";
    var value2;
    while (value2 = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")) {
      result2 += value2;
    }
    return result2;
  };
  while (i < tokens.length) {
    var char = tryConsume("CHAR");
    var name = tryConsume("NAME");
    var pattern = tryConsume("PATTERN");
    if (name || pattern) {
      var prefix = char || "";
      if (prefixes.indexOf(prefix) === -1) {
        path += prefix;
        prefix = "";
      }
      if (path) {
        result.push(path);
        path = "";
      }
      result.push({
        name: name || key++,
        prefix,
        suffix: "",
        pattern: pattern || defaultPattern,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    var value = char || tryConsume("ESCAPED_CHAR");
    if (value) {
      path += value;
      continue;
    }
    if (path) {
      result.push(path);
      path = "";
    }
    var open = tryConsume("OPEN");
    if (open) {
      var prefix = consumeText();
      var name_1 = tryConsume("NAME") || "";
      var pattern_1 = tryConsume("PATTERN") || "";
      var suffix = consumeText();
      mustConsume("CLOSE");
      result.push({
        name: name_1 || (pattern_1 ? key++ : ""),
        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
        prefix,
        suffix,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    mustConsume("END");
  }
  return result;
}
function compile(str, options) {
  return tokensToFunction(parse(str, options), options);
}
function tokensToFunction(tokens, options) {
  if (options === void 0) {
    options = {};
  }
  var reFlags = flags(options);
  var _a2 = options.encode, encode2 = _a2 === void 0 ? function(x) {
    return x;
  } : _a2, _b = options.validate, validate = _b === void 0 ? true : _b;
  var matches = tokens.map(function(token) {
    if (typeof token === "object") {
      return new RegExp("^(?:".concat(token.pattern, ")$"), reFlags);
    }
  });
  return function(data) {
    var path = "";
    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i];
      if (typeof token === "string") {
        path += token;
        continue;
      }
      var value = data ? data[token.name] : void 0;
      var optional = token.modifier === "?" || token.modifier === "*";
      var repeat = token.modifier === "*" || token.modifier === "+";
      if (Array.isArray(value)) {
        if (!repeat) {
          throw new TypeError('Expected "'.concat(token.name, '" to not repeat, but got an array'));
        }
        if (value.length === 0) {
          if (optional)
            continue;
          throw new TypeError('Expected "'.concat(token.name, '" to not be empty'));
        }
        for (var j = 0; j < value.length; j++) {
          var segment = encode2(value[j], token);
          if (validate && !matches[i].test(segment)) {
            throw new TypeError('Expected all "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
          }
          path += token.prefix + segment + token.suffix;
        }
        continue;
      }
      if (typeof value === "string" || typeof value === "number") {
        var segment = encode2(String(value), token);
        if (validate && !matches[i].test(segment)) {
          throw new TypeError('Expected "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
        }
        path += token.prefix + segment + token.suffix;
        continue;
      }
      if (optional)
        continue;
      var typeOfMessage = repeat ? "an array" : "a string";
      throw new TypeError('Expected "'.concat(token.name, '" to be ').concat(typeOfMessage));
    }
    return path;
  };
}
function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
function flags(options) {
  return options && options.sensitive ? "" : "i";
}
function getRouteGenerator(segments, addTrailingSlash) {
  const template = segments.map((segment) => {
    return "/" + segment.map((part) => {
      if (part.spread) {
        return `:${part.content.slice(3)}(.*)?`;
      } else if (part.dynamic) {
        return `:${part.content}`;
      } else {
        return part.content.normalize().replace(/\?/g, "%3F").replace(/#/g, "%23").replace(/%5B/g, "[").replace(/%5D/g, "]").replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      }
    }).join("");
  }).join("");
  let trailing = "";
  if (addTrailingSlash === "always" && segments.length) {
    trailing = "/";
  }
  const toPath = compile(template + trailing);
  return toPath;
}
function deserializeRouteData(rawRouteData) {
  return {
    route: rawRouteData.route,
    type: rawRouteData.type,
    pattern: new RegExp(rawRouteData.pattern),
    params: rawRouteData.params,
    component: rawRouteData.component,
    generate: getRouteGenerator(rawRouteData.segments, rawRouteData._meta.trailingSlash),
    pathname: rawRouteData.pathname || void 0,
    segments: rawRouteData.segments,
    prerender: rawRouteData.prerender
  };
}
function deserializeManifest(serializedManifest) {
  const routes = [];
  for (const serializedRoute of serializedManifest.routes) {
    routes.push({
      ...serializedRoute,
      routeData: deserializeRouteData(serializedRoute.routeData)
    });
    const route = serializedRoute;
    route.routeData = deserializeRouteData(serializedRoute.routeData);
  }
  const assets = new Set(serializedManifest.assets);
  const componentMetadata = new Map(serializedManifest.componentMetadata);
  const clientDirectives = new Map(serializedManifest.clientDirectives);
  return {
    ...serializedManifest,
    assets,
    componentMetadata,
    clientDirectives,
    routes
  };
}
var AstroErrorData, AstroError, ASTRO_VERSION, replace, ca, esca, pe, escape, escapeHTML, HTMLBytes, HTMLString, markHTMLString, astro_island_prebuilt_default, ISLAND_STYLES, voidElementNames, htmlBooleanAttributes, htmlEnumAttributes, svgEnumAttributes, STATIC_DIRECTIVES, toIdent, toAttributeString, kebab, toStyleString, _iterable, _queue, _error, _next, _isBuffering, _gen, _isStarted, EagerAsyncIterableIterator, Queue, uniqueElements, headAndContentSym, _a$1, renderTemplateResultSym, RenderTemplateResult, _a, astroComponentInstanceSym, AstroComponentInstance, slotString, SlotString, Fragment, Renderer, encoder, decoder, HTMLParts, ClientOnlyPlaceholder, Skip, originalConsoleError, consoleFilterRefs, PROP_TYPE, dictionary, binary, rendererAliases, ASTRO_SLOT_EXP, ASTRO_STATIC_SLOT_EXP, isNodeJS, StreamingCompatibleResponse, createResponse, needsHeadRenderingSymbol, AstroJSX, Empty, toSlotName, slotName, server_default, Mime_1, standard, other, Mime, mime, mime$1, parse_1, serialize_1, __toString, fieldContentRegExp, DELETED_EXPIRATION, DELETED_VALUE, responseSentSymbol$2, AstroCookie, _request, _requestValues, _outgoing, _ensureParsed, ensureParsed_fn, _ensureOutgoingMap, ensureOutgoingMap_fn, _parse, parse_fn, AstroCookies, astroCookiesSymbol, FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY, $, reset, bold, dim, red, yellow, cyan, eastasianwidth, dateTimeFormat, levels, clientAddressSymbol$1, clientLocalsSymbol$2, lastMessage, lastMessageCount, consoleLogDestination, RedirectComponentInstance, RedirectSinglePageBuiltModule, VALID_PARAM_TYPES, clientAddressSymbol, responseSentSymbol$1, _result, _slots, _loggingOpts, Slots, renderMarkdown, RouteCache, clientLocalsSymbol$1, clientLocalsSymbol, responseSentSymbol, _env, _manifest, _manifestData, _routeDataToRouteInfo, _encoder, _logging, _base, _baseWithoutTrailingSlash, _getModuleForRoute, getModuleForRoute_fn, _renderPage, renderPage_fn, _callEndpoint, callEndpoint_fn, App;
var init_astro_d1132a9b = __esm({
  "dist/$server_build/chunks/astro.d1132a9b.mjs"() {
    "use strict";
    AstroErrorData = {
      /**
       * @docs
       * @kind heading
       * @name Astro Errors
       */
      /**
       * @docs
       * @message
       * Unknown compiler error.
       * @see
       * - [withastro/compiler issues list](https://astro.build/issues/compiler)
       * @description
       * Astro encountered an unknown error while compiling your files. In most cases, this is not your fault, but an issue in our compiler.
       *
       * If there isn't one already, please [create an issue](https://astro.build/issues/compiler).
       */
      UnknownCompilerError: {
        title: "Unknown compiler error.",
        hint: "This is almost always a problem with the Astro compiler, not your code. Please open an issue at https://astro.build/issues/compiler."
      },
      // 1xxx and 2xxx codes are reserved for compiler errors and warnings respectively
      /**
       * @docs
       * @see
       * - [Enabling SSR in Your Project](https://docs.astro.build/en/guides/server-side-rendering/#enabling-ssr-in-your-project)
       * - [Astro.redirect](https://docs.astro.build/en/reference/api-reference/#astroredirect)
       * @description
       * The `Astro.redirect` function is only available when [Server-side rendering](/en/guides/server-side-rendering/) is enabled.
       *
       * To redirect on a static website, the [meta refresh attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta) can be used. Certain hosts also provide config-based redirects (ex: [Netlify redirects](https://docs.netlify.com/routing/redirects/)).
       * @deprecated since version 2.6
       */
      StaticRedirectNotAvailable: {
        title: "`Astro.redirect` is not available in static mode.",
        message: "Redirects are only available when using `output: 'server'` or `output: 'hybrid'`. Update your Astro config if you need SSR features.",
        hint: "See https://docs.astro.build/en/guides/server-side-rendering/#enabling-ssr-in-your-project for more information on how to enable SSR."
      },
      /**
       * @docs
       * @see
       * - [Official integrations](https://docs.astro.build/en/guides/integrations-guide/#official-integrations)
       * - [Astro.clientAddress](https://docs.astro.build/en/reference/api-reference/#astroclientaddress)
       * @description
       * The adapter you're using unfortunately does not support `Astro.clientAddress`.
       */
      ClientAddressNotAvailable: {
        title: "`Astro.clientAddress` is not available in current adapter.",
        message: (adapterName) => `\`Astro.clientAddress\` is not available in the \`${adapterName}\` adapter. File an issue with the adapter to add support.`
      },
      /**
       * @docs
       * @see
       * - [Enabling SSR in Your Project](https://docs.astro.build/en/guides/server-side-rendering/#enabling-ssr-in-your-project)
       * - [Astro.clientAddress](https://docs.astro.build/en/reference/api-reference/#astroclientaddress)
       * @description
       * The `Astro.clientAddress` property is only available when [Server-side rendering](https://docs.astro.build/en/guides/server-side-rendering/) is enabled.
       *
       * To get the user's IP address in static mode, different APIs such as [Ipify](https://www.ipify.org/) can be used in a [Client-side script](https://docs.astro.build/en/guides/client-side-scripts/) or it may be possible to get the user's IP using a serverless function hosted on your hosting provider.
       */
      StaticClientAddressNotAvailable: {
        title: "`Astro.clientAddress` is not available in static mode.",
        message: "`Astro.clientAddress` is only available when using `output: 'server'` or `output: 'hybrid'`. Update your Astro config if you need SSR features.",
        hint: "See https://docs.astro.build/en/guides/server-side-rendering/#enabling-ssr-in-your-project for more information on how to enable SSR."
      },
      /**
       * @docs
       * @see
       * - [getStaticPaths()](https://docs.astro.build/en/reference/api-reference/#getstaticpaths)
       * @description
       * A [dynamic route](https://docs.astro.build/en/core-concepts/routing/#dynamic-routes) was matched, but no corresponding path was found for the requested parameters. This is often caused by a typo in either the generated or the requested path.
       */
      NoMatchingStaticPathFound: {
        title: "No static path found for requested path.",
        message: (pathName) => `A \`getStaticPaths()\` route pattern was matched, but no matching static path was found for requested path \`${pathName}\`.`,
        hint: (possibleRoutes) => `Possible dynamic routes being matched: ${possibleRoutes.join(", ")}.`
      },
      /**
       * @docs
       * @message Route returned a `RETURNED_VALUE`. Only a Response can be returned from Astro files.
       * @see
       * - [Response](https://docs.astro.build/en/guides/server-side-rendering/#response)
       * @description
       * Only instances of [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) can be returned inside Astro files.
       * ```astro title="pages/login.astro"
       * ---
       * return new Response(null, {
       *  status: 404,
       *  statusText: 'Not found'
       * });
       *
       * // Alternatively, for redirects, Astro.redirect also returns an instance of Response
       * return Astro.redirect('/login');
       * ---
       * ```
       *
       */
      OnlyResponseCanBeReturned: {
        title: "Invalid type returned by Astro page.",
        message: (route, returnedValue) => `Route \`${route ? route : ""}\` returned a \`${returnedValue}\`. Only a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) can be returned from Astro files.`,
        hint: "See https://docs.astro.build/en/guides/server-side-rendering/#response for more information."
      },
      /**
       * @docs
       * @see
       * - [`client:media`](https://docs.astro.build/en/reference/directives-reference/#clientmedia)
       * @description
       * A [media query](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries) parameter is required when using the `client:media` directive.
       *
       * ```astro
       * <Counter client:media="(max-width: 640px)" />
       * ```
       */
      MissingMediaQueryDirective: {
        title: "Missing value for `client:media` directive.",
        message: 'Media query not provided for `client:media` directive. A media query similar to `client:media="(max-width: 600px)"` must be provided'
      },
      /**
       * @docs
       * @message Unable to render `COMPONENT_NAME`. There are `RENDERER_COUNT` renderer(s) configured in your `astro.config.mjs` file, but none were able to server-side render `COMPONENT_NAME`.
       * @see
       * - [Frameworks components](https://docs.astro.build/en/core-concepts/framework-components/)
       * - [UI Frameworks](https://docs.astro.build/en/guides/integrations-guide/#official-integrations)
       * @description
       * None of the installed integrations were able to render the component you imported. Make sure to install the appropriate integration for the type of component you are trying to include in your page.
       *
       * For JSX / TSX files, [@astrojs/react](https://docs.astro.build/en/guides/integrations-guide/react/), [@astrojs/preact](https://docs.astro.build/en/guides/integrations-guide/preact/) or [@astrojs/solid-js](https://docs.astro.build/en/guides/integrations-guide/solid-js/) can be used. For Vue and Svelte files, the [@astrojs/vue](https://docs.astro.build/en/guides/integrations-guide/vue/) and [@astrojs/svelte](https://docs.astro.build/en/guides/integrations-guide/svelte/) integrations can be used respectively
       */
      NoMatchingRenderer: {
        title: "No matching renderer found.",
        message: (componentName, componentExtension, plural, validRenderersCount) => `Unable to render \`${componentName}\`.

${validRenderersCount > 0 ? `There ${plural ? "are" : "is"} ${validRenderersCount} renderer${plural ? "s" : ""} configured in your \`astro.config.mjs\` file,
but ${plural ? "none were" : "it was not"} able to server-side render \`${componentName}\`.` : `No valid renderer was found ${componentExtension ? `for the \`.${componentExtension}\` file extension.` : `for this file extension.`}`}`,
        hint: (probableRenderers) => `Did you mean to enable the ${probableRenderers} integration?

See https://docs.astro.build/en/core-concepts/framework-components/ for more information on how to install and configure integrations.`
      },
      /**
       * @docs
       * @see
       * - [addRenderer option](https://docs.astro.build/en/reference/integrations-reference/#addrenderer-option)
       * - [Hydrating framework components](https://docs.astro.build/en/core-concepts/framework-components/#hydrating-interactive-components)
       * @description
       * Astro tried to hydrate a component on the client, but the renderer used does not provide a client entrypoint to use to hydrate.
       *
       */
      NoClientEntrypoint: {
        title: "No client entrypoint specified in renderer.",
        message: (componentName, clientDirective, rendererName) => `\`${componentName}\` component has a \`client:${clientDirective}\` directive, but no client entrypoint was provided by \`${rendererName}\`.`,
        hint: "See https://docs.astro.build/en/reference/integrations-reference/#addrenderer-option for more information on how to configure your renderer."
      },
      /**
       * @docs
       * @see
       * - [`client:only`](https://docs.astro.build/en/reference/directives-reference/#clientonly)
       * @description
       *
       * `client:only` components are not run on the server, as such Astro does not know (and cannot guess) which renderer to use and require a hint. Like such:
       *
       * ```astro
       *	<SomeReactComponent client:only="react" />
       * ```
       */
      NoClientOnlyHint: {
        title: "Missing hint on client:only directive.",
        message: (componentName) => `Unable to render \`${componentName}\`. When using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.`,
        hint: (probableRenderers) => `Did you mean to pass \`client:only="${probableRenderers}"\`? See https://docs.astro.build/en/reference/directives-reference/#clientonly for more information on client:only`
      },
      /**
       * @docs
       * @see
       * - [`getStaticPaths()`](https://docs.astro.build/en/reference/api-reference/#getstaticpaths)
       * - [`params`](https://docs.astro.build/en/reference/api-reference/#params)
       * @description
       * The `params` property in `getStaticPaths`'s return value (an array of objects) should also be an object.
       *
       * ```astro title="pages/blog/[id].astro"
       * ---
       * export async function getStaticPaths() {
       *	return [
       *		{ params: { slug: "blog" } },
       * 		{ params: { slug: "about" } }
       * 	];
       *}
       *---
       * ```
       */
      InvalidGetStaticPathParam: {
        title: "Invalid value returned by a `getStaticPaths` path.",
        message: (paramType) => `Invalid params given to \`getStaticPaths\` path. Expected an \`object\`, got \`${paramType}\``,
        hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
      },
      /**
       * @docs
       * @see
       * - [`getStaticPaths()`](https://docs.astro.build/en/reference/api-reference/#getstaticpaths)
       * - [`params`](https://docs.astro.build/en/reference/api-reference/#params)
       * @description
       * `getStaticPaths`'s return value must be an array of objects.
       *
       * ```ts title="pages/blog/[id].astro"
       * export async function getStaticPaths() {
       *	return [ // <-- Array
       *		{ params: { slug: "blog" } },
       * 		{ params: { slug: "about" } }
       * 	];
       *}
       * ```
       */
      InvalidGetStaticPathsReturn: {
        title: "Invalid value returned by getStaticPaths.",
        message: (returnType) => `Invalid type returned by \`getStaticPaths\`. Expected an \`array\`, got \`${returnType}\``,
        hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
      },
      /**
       * @docs
       * @see
       * - [RSS Guide](https://docs.astro.build/en/guides/rss/)
       * @description
       * `getStaticPaths` no longer expose an helper for generating a RSS feed. We recommend migrating to the [@astrojs/rss](https://docs.astro.build/en/guides/rss/#setting-up-astrojsrss)integration instead.
       */
      GetStaticPathsRemovedRSSHelper: {
        title: "getStaticPaths RSS helper is not available anymore.",
        message: "The RSS helper has been removed from `getStaticPaths`. Try the new @astrojs/rss package instead.",
        hint: "See https://docs.astro.build/en/guides/rss/ for more information."
      },
      /**
       * @docs
       * @see
       * - [`getStaticPaths()`](https://docs.astro.build/en/reference/api-reference/#getstaticpaths)
       * - [`params`](https://docs.astro.build/en/reference/api-reference/#params)
       * @description
       * Every route specified by `getStaticPaths` require a `params` property specifying the path parameters needed to match the route.
       *
       * For instance, the following code:
       * ```astro title="pages/blog/[id].astro"
       * ---
       * export async function getStaticPaths() {
       * 	return [
       * 		{ params: { id: '1' } }
       * 	];
       * }
       * ---
       * ```
       * Will create the following route: `site.com/blog/1`.
       */
      GetStaticPathsExpectedParams: {
        title: "Missing params property on `getStaticPaths` route.",
        message: "Missing or empty required `params` property on `getStaticPaths` route.",
        hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
      },
      /**
       * @docs
       * @see
       * - [`getStaticPaths()`](https://docs.astro.build/en/reference/api-reference/#getstaticpaths)
       * - [`params`](https://docs.astro.build/en/reference/api-reference/#params)
       * @description
       * Since `params` are encoded into the URL, only certain types are supported as values.
       *
       * ```astro title="/route/[id].astro"
       * ---
       * export async function getStaticPaths() {
       * 	return [
       * 		{ params: { id: '1' } } // Works
       * 		{ params: { id: 2 } } // Works
       * 		{ params: { id: false } } // Does not work
       * 	];
       * }
       * ---
       * ```
       *
       * In routes using [rest parameters](https://docs.astro.build/en/core-concepts/routing/#rest-parameters), `undefined` can be used to represent a path with no parameters passed in the URL:
       *
       * ```astro title="/route/[...id].astro"
       * ---
       * export async function getStaticPaths() {
       * 	return [
       * 		{ params: { id: 1 } } // /route/1
       * 		{ params: { id: 2 } } // /route/2
       * 		{ params: { id: undefined } } // /route/
       * 	];
       * }
       * ---
       * ```
       */
      GetStaticPathsInvalidRouteParam: {
        title: "Invalid value for `getStaticPaths` route parameter.",
        message: (key, value, valueType) => `Invalid getStaticPaths route parameter for \`${key}\`. Expected undefined, a string or a number, received \`${valueType}\` (\`${value}\`)`,
        hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
      },
      /**
       * @docs
       * @see
       * - [Dynamic Routes](https://docs.astro.build/en/core-concepts/routing/#dynamic-routes)
       * - [`getStaticPaths()`](https://docs.astro.build/en/reference/api-reference/#getstaticpaths)
       * - [Server-side Rendering](https://docs.astro.build/en/guides/server-side-rendering/)
       * @description
       * In [Static Mode](https://docs.astro.build/en/core-concepts/routing/#static-ssg-mode), all routes must be determined at build time. As such, dynamic routes must `export` a `getStaticPaths` function returning the different paths to generate.
       */
      GetStaticPathsRequired: {
        title: "`getStaticPaths()` function required for dynamic routes.",
        message: "`getStaticPaths()` function is required for dynamic routes. Make sure that you `export` a `getStaticPaths` function from your dynamic route.",
        hint: `See https://docs.astro.build/en/core-concepts/routing/#dynamic-routes for more information on dynamic routes.

Alternatively, set \`output: "server"\` in your Astro config file to switch to a non-static server build. This error can also occur if using \`export const prerender = true;\`.
See https://docs.astro.build/en/guides/server-side-rendering/ for more information on non-static rendering.`
      },
      /**
       * @docs
       * @see
       * - [Named slots](https://docs.astro.build/en/core-concepts/astro-components/#named-slots)
       * @description
       * Certain words cannot be used for slot names due to being already used internally.
       */
      ReservedSlotName: {
        title: "Invalid slot name.",
        message: (slotName3) => `Unable to create a slot named \`${slotName3}\`. \`${slotName3}\` is a reserved slot name. Please update the name of this slot.`
      },
      /**
       * @docs
       * @see
       * - [Server-side Rendering](https://docs.astro.build/en/guides/server-side-rendering/)
       * - [Adding an Adapter](https://docs.astro.build/en/guides/server-side-rendering/#adding-an-adapter)
       * @description
       * To use server-side rendering, an adapter needs to be installed so Astro knows how to generate the proper output for your targeted deployment platform.
       */
      NoAdapterInstalled: {
        title: "Cannot use Server-side Rendering without an adapter.",
        message: `Cannot use \`output: 'server'\` or \`output: 'hybrid'\` without an adapter. Please install and configure the appropriate server adapter for your final deployment.`,
        hint: "See https://docs.astro.build/en/guides/server-side-rendering/ for more information."
      },
      /**
       * @docs
       * @description
       * No import statement was found for one of the components. If there is an import statement, make sure you are using the same identifier in both the imports and the component usage.
       */
      NoMatchingImport: {
        title: "No import found for component.",
        message: (componentName) => `Could not render \`${componentName}\`. No matching import has been found for \`${componentName}\`.`,
        hint: "Please make sure the component is properly imported."
      },
      /**
       * @docs
       * @message
       * **Example error messages:**<br/>
       * InvalidPrerenderExport: A `prerender` export has been detected, but its value cannot be statically analyzed.
       * @description
       * The `prerender` feature only supports a subset of valid JavaScript — be sure to use exactly `export const prerender = true` so that our compiler can detect this directive at build time. Variables, `let`, and `var` declarations are not supported.
       */
      InvalidPrerenderExport: {
        title: "Invalid prerender export.",
        message: (prefix, suffix, isHydridOuput) => {
          const defaultExpectedValue = isHydridOuput ? "false" : "true";
          let msg = `A \`prerender\` export has been detected, but its value cannot be statically analyzed.`;
          if (prefix !== "const")
            msg += `
Expected \`const\` declaration but got \`${prefix}\`.`;
          if (suffix !== "true")
            msg += `
Expected \`${defaultExpectedValue}\` value but got \`${suffix}\`.`;
          return msg;
        },
        hint: "Mutable values declared at runtime are not supported. Please make sure to use exactly `export const prerender = true`."
      },
      /**
       * @docs
       * @message
       * **Example error messages:**<br/>
       * InvalidComponentArgs: Invalid arguments passed to `<MyAstroComponent>` component.
       * @description
       * Astro components cannot be rendered manually via a function call, such as `Component()` or `{items.map(Component)}`. Prefer the component syntax `<Component />` or `{items.map(item => <Component {...item} />)}`.
       */
      InvalidComponentArgs: {
        title: "Invalid component arguments.",
        message: (name) => `Invalid arguments passed to${name ? ` <${name}>` : ""} component.`,
        hint: "Astro components cannot be rendered directly via function call, such as `Component()` or `{items.map(Component)}`."
      },
      /**
       * @docs
       * @see
       * - [Pagination](https://docs.astro.build/en/core-concepts/routing/#pagination)
       * @description
       * The page number parameter was not found in your filepath.
       */
      PageNumberParamNotFound: {
        title: "Page number param not found.",
        message: (paramName) => `[paginate()] page number param \`${paramName}\` not found in your filepath.`,
        hint: "Rename your file to `[page].astro` or `[...page].astro`."
      },
      /**
       * @docs
       * @see
       * - [Assets (Experimental)](https://docs.astro.build/en/guides/assets/)
       * - [Image component](https://docs.astro.build/en/guides/assets/#image--astroassets)
       * - [Image component#alt](https://docs.astro.build/en/guides/assets/#alt-required)
       * @description
       * The `alt` property allows you to provide descriptive alt text to users of screen readers and other assistive technologies. In order to ensure your images are accessible, the `Image` component requires that an `alt` be specified.
       *
       * If the image is merely decorative (i.e. doesn’t contribute to the understanding of the page), set `alt=""` so that screen readers know to ignore the image.
       */
      ImageMissingAlt: {
        title: "Missing alt property.",
        message: "The alt property is required.",
        hint: "The `alt` property is important for the purpose of accessibility, without it users using screen readers or other assistive technologies won't be able to understand what your image is supposed to represent. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-alt for more information."
      },
      /**
       * @docs
       * @see
       * - [Image Service API](https://docs.astro.build/en/reference/image-service-reference/)
       * @description
       * There was an error while loading the configured image service. This can be caused by various factors, such as your image service not properly exporting a compatible object in its default export, or an incorrect path.
       *
       * If you believe that your service is properly configured and this error is wrong, please [open an issue](https://astro.build/issues/).
       */
      InvalidImageService: {
        title: "Error while loading image service.",
        message: "There was an error loading the configured image service. Please see the stack trace for more information."
      },
      /**
       * @docs
       * @message
       * Missing width and height attributes for `IMAGE_URL`. When using remote images, both dimensions are always required in order to avoid cumulative layout shift (CLS).
       * @see
       * - [Assets (Experimental)](https://docs.astro.build/en/guides/assets/)
       * - [Image component#width-and-height](https://docs.astro.build/en/guides/assets/#width-and-height)
       * @description
       * For remote images, `width` and `height` cannot be inferred from the original file. As such, in order to avoid CLS, those two properties are always required.
       *
       * If your image is inside your `src` folder, you probably meant to import it instead. See [the Imports guide for more information](https://docs.astro.build/en/guides/imports/#other-assets).
       */
      MissingImageDimension: {
        title: "Missing image dimensions",
        message: (missingDimension, imageURL) => `Missing ${missingDimension === "both" ? "width and height attributes" : `${missingDimension} attribute`} for ${imageURL}. When using remote images, both dimensions are always required in order to avoid CLS.`,
        hint: "If your image is inside your `src` folder, you probably meant to import it instead. See [the Imports guide for more information](https://docs.astro.build/en/guides/imports/#other-assets)."
      },
      /**
       * @docs
       * @description
       * The built-in image services do not currently support optimizing all image formats.
       *
       * For unsupported formats such as SVGs and GIFs, you may be able to use an `img` tag directly:
       * ```astro
       * ---
       * import rocket from '../assets/images/rocket.svg';
       * ---
       *
       * <img src={rocket.src} width={rocket.width} height={rocket.height} alt="A rocketship in space." />
       * ```
       */
      UnsupportedImageFormat: {
        title: "Unsupported image format",
        message: (format, imagePath, supportedFormats) => `Received unsupported format \`${format}\` from \`${imagePath}\`. Currently only ${supportedFormats.join(
          ", "
        )} are supported for optimization.`,
        hint: "If you do not need optimization, using an `img` tag directly instead of the `Image` component might be what you're looking for."
      },
      /**
       * @docs
       * @see
       * - [`getStaticPaths()`](https://docs.astro.build/en/reference/api-reference/#getstaticpaths)
       * - [`params`](https://docs.astro.build/en/reference/api-reference/#params)
       * @description
       * The endpoint is prerendered with an `undefined` param so the generated path will collide with another route.
       *
       * If you cannot prevent passing `undefined`, then an additional extension can be added to the endpoint file name to generate the file with a different name. For example, renaming `pages/api/[slug].ts` to `pages/api/[slug].json.ts`.
       */
      PrerenderDynamicEndpointPathCollide: {
        title: "Prerendered dynamic endpoint has path collision.",
        message: (pathname) => `Could not render \`${pathname}\` with an \`undefined\` param as the generated path will collide during prerendering. Prevent passing \`undefined\` as \`params\` for the endpoint's \`getStaticPaths()\` function, or add an additional extension to the endpoint's filename.`,
        hint: (filename) => `Rename \`${filename}\` to \`${filename.replace(/\.(js|ts)/, (m) => `.json` + m)}\``
      },
      /**
       * @docs
       * @see
       * - [Assets (Experimental)](https://docs.astro.build/en/guides/assets/)
       * @description
       * An image's `src` property is not valid. The Image component requires the `src` attribute to be either an image that has been ESM imported or a string. This is also true for the first parameter of `getImage()`.
       *
       * ```astro
       * ---
       * import { Image } from "astro:assets";
       * import myImage from "../assets/my_image.png";
       * ---
       *
       * <Image src={myImage} alt="..." />
       * <Image src="https://example.com/logo.png" width={300} height={300} alt="..." />
       * ```
       *
       * In most cases, this error happens when the value passed to `src` is undefined.
       */
      ExpectedImage: {
        title: "Expected src to be an image.",
        message: (options) => `Expected \`src\` property to be either an ESM imported image or a string with the path of a remote image. Received \`${options}\`.`,
        hint: "This error can often happen because of a wrong path. Make sure the path to your image is correct."
      },
      /**
       * @docs
       * @see
       * - [Assets (Experimental)](https://docs.astro.build/en/guides/assets/)
       * @description
       * `getImage()`'s first parameter should be an object with the different properties to apply to your image.
       *
       * ```ts
       * import { getImage } from "astro:assets";
       * import myImage from "../assets/my_image.png";
       *
       * const optimizedImage = await getImage({src: myImage, width: 300, height: 300});
       * ```
       *
       * In most cases, this error happens because parameters were passed directly instead of inside an object.
       */
      ExpectedImageOptions: {
        title: "Expected image options.",
        message: (options) => `Expected getImage() parameter to be an object. Received \`${options}\`.`
      },
      /**
       * @docs
       * @message
       * Could not find requested image `IMAGE_PATH` at `FULL_IMAGE_PATH`.
       * @see
       * - [Assets (Experimental)](https://docs.astro.build/en/guides/assets/)
       * @description
       * Astro could not find an image you included in your Markdown content. Usually, this is simply caused by a typo in the path.
       *
       * Images in Markdown are relative to the current file. To refer to an image that is located in the same folder as the `.md` file, the path should start with `./`
       */
      MarkdownImageNotFound: {
        title: "Image not found.",
        message: (imagePath, fullImagePath) => `Could not find requested image \`${imagePath}\`${fullImagePath ? ` at \`${fullImagePath}\`.` : "."}`,
        hint: "This is often caused by a typo in the image path. Please make sure the file exists, and is spelled correctly."
      },
      /**
       * @docs
       * @description
       * Making changes to the response, such as setting headers, cookies, and the status code cannot be done outside of page components.
       */
      ResponseSentError: {
        title: "Unable to set response.",
        message: "The response has already been sent to the browser and cannot be altered."
      },
      /**
       * @docs
       * @description
       * Thrown when the middleware does not return any data or call the `next` function.
       *
       * For example:
       * ```ts
       * import {defineMiddleware} from "astro/middleware";
       * export const onRequest = defineMiddleware((context, _) => {
       * 	// doesn't return anything or call `next`
       * 	context.locals.someData = false;
       * });
       * ```
       */
      MiddlewareNoDataOrNextCalled: {
        title: "The middleware didn't return a response or call `next`.",
        message: "The middleware needs to either return a `Response` object or call the `next` function."
      },
      /**
       * @docs
       * @description
       * Thrown in development mode when middleware returns something that is not a `Response` object.
       *
       * For example:
       * ```ts
       * import {defineMiddleware} from "astro/middleware";
       * export const onRequest = defineMiddleware(() => {
       *   return "string"
       * });
       * ```
       */
      MiddlewareNotAResponse: {
        title: "The middleware returned something that is not a `Response` object.",
        message: "Any data returned from middleware must be a valid `Response` object."
      },
      /**
       * @docs
       * @description
       *
       * Thrown in development mode when `locals` is overwritten with something that is not an object
       *
       * For example:
       * ```ts
       * import {defineMiddleware} from "astro/middleware";
       * export const onRequest = defineMiddleware((context, next) => {
       *   context.locals = 1541;
       *   return next();
       * });
       * ```
       */
      LocalsNotAnObject: {
        title: "Value assigned to `locals` is not accepted.",
        message: "`locals` can only be assigned to an object. Other values like numbers, strings, etc. are not accepted.",
        hint: "If you tried to remove some information from the `locals` object, try to use `delete` or set the property to `undefined`."
      },
      /**
       * @docs
       * @see
       * - [Assets (Experimental)](https://docs.astro.build/en/guides/assets/)
       * @description
       * When using the default image services, `Image`'s and `getImage`'s `src` parameter must be either an imported image or an URL, it cannot be a filepath.
       *
       * ```astro
       * ---
       * import { Image } from "astro:assets";
       * import myImage from "../my_image.png";
       * ---
       *
       * <!-- GOOD: `src` is the full imported image. -->
       * <Image src={myImage} alt="Cool image" />
       *
       * <!-- BAD: `src` is an image's `src` path instead of the full image. -->
       * <Image src={myImage.src} alt="Cool image" />
       * ```
       */
      LocalImageUsedWrongly: {
        title: "ESM imported images must be passed as-is.",
        message: (imageFilePath) => `\`Image\`'s and \`getImage\`'s \`src\` parameter must be an imported image or an URL, it cannot be a filepath. Received \`${imageFilePath}\`.`
      },
      /**
       * @docs
       * @see
       * - [Astro.glob](https://docs.astro.build/en/reference/api-reference/#astroglob)
       * @description
       * `Astro.glob()` can only be used in `.astro` files. You can use [`import.meta.glob()`](https://vitejs.dev/guide/features.html#glob-import) instead to acheive the same result.
       */
      AstroGlobUsedOutside: {
        title: "Astro.glob() used outside of an Astro file.",
        message: (globStr) => `\`Astro.glob(${globStr})\` can only be used in \`.astro\` files. \`import.meta.glob(${globStr})\` can be used instead to achieve a similar result.`,
        hint: "See Vite's documentation on `import.meta.glob` for more information: https://vitejs.dev/guide/features.html#glob-import"
      },
      /**
       * @docs
       * @see
       * - [Astro.glob](https://docs.astro.build/en/reference/api-reference/#astroglob)
       * @description
       * `Astro.glob()` did not return any matching files. There might be a typo in the glob pattern.
       */
      AstroGlobNoMatch: {
        title: "Astro.glob() did not match any files.",
        message: (globStr) => `\`Astro.glob(${globStr})\` did not return any matching files. Check the pattern for typos.`
      },
      /**
       * @docs
       * @see
       * - [Astro.redirect](https://docs.astro.build/en/reference/api-reference/#astroredirect)
       * @description
       * A redirect must be given a location with the `Location` header.
       */
      RedirectWithNoLocation: {
        title: "A redirect must be given a location with the `Location` header."
      },
      /**
       * @docs
       * @see
       * - [Dynamic routes](https://docs.astro.build/en/core-concepts/routing/#dynamic-routes)
       * @description
       * A dynamic route param is invalid. This is often caused by an `undefined` parameter or a missing [rest parameter](https://docs.astro.build/en/core-concepts/routing/#rest-parameters).
       */
      InvalidDynamicRoute: {
        title: "Invalid dynamic route.",
        message: (route, invalidParam, received) => `The ${invalidParam} param for route ${route} is invalid. Received **${received}**.`
      },
      // No headings here, that way Vite errors are merged with Astro ones in the docs, which makes more sense to users.
      // Vite Errors - 4xxx
      /**
       * @docs
       * @see
       * - [Vite troubleshooting guide](https://vitejs.dev/guide/troubleshooting.html)
       * @description
       * Vite encountered an unknown error while rendering your project. We unfortunately do not know what happened (or we would tell you!)
       *
       * If you can reliably cause this error to happen, we'd appreciate if you could [open an issue](https://astro.build/issues/)
       */
      UnknownViteError: {
        title: "Unknown Vite Error."
      },
      /**
       * @docs
       * @see
       * - [Type Imports](https://docs.astro.build/en/guides/typescript/#type-imports)
       * @description
       * Astro could not import the requested file. Oftentimes, this is caused by the import path being wrong (either because the file does not exist, or there is a typo in the path)
       *
       * This message can also appear when a type is imported without specifying that it is a [type import](https://docs.astro.build/en/guides/typescript/#type-imports).
       */
      FailedToLoadModuleSSR: {
        title: "Could not import file.",
        message: (importName) => `Could not import \`${importName}\`.`,
        hint: "This is often caused by a typo in the import path. Please make sure the file exists."
      },
      /**
       * @docs
       * @see
       * - [Glob Patterns](https://docs.astro.build/en/guides/imports/#glob-patterns)
       * @description
       * Astro encountered an invalid glob pattern. This is often caused by the glob pattern not being a valid file path.
       */
      InvalidGlob: {
        title: "Invalid glob pattern.",
        message: (globPattern) => `Invalid glob pattern: \`${globPattern}\`. Glob patterns must start with './', '../' or '/'.`,
        hint: "See https://docs.astro.build/en/guides/imports/#glob-patterns for more information on supported glob patterns."
      },
      /**
       * @docs
       * @description
       * Astro couldn't find the correct page to render, probably because it wasn't correctly mapped for SSR usage. This is an internal error.
       */
      FailedToFindPageMapSSR: {
        title: "Astro couldn't find the correct page to render",
        message: "Astro couldn't find the correct page to render, probably because it wasn't correctly mapped for SSR usage. This is an internal error. Please file an issue."
      },
      /**
       * @docs
       * @kind heading
       * @name CSS Errors
       */
      // CSS Errors - 5xxx
      /**
       * @docs
       * @see
       * 	- [Styles and CSS](https://docs.astro.build/en/guides/styling/)
       * @description
       * Astro encountered an unknown error while parsing your CSS. Oftentimes, this is caused by a syntax error and the error message should contain more information.
       */
      UnknownCSSError: {
        title: "Unknown CSS Error."
      },
      /**
       * @docs
       * @message
       * **Example error messages:**<br/>
       * CSSSyntaxError: Missed semicolon<br/>
       * CSSSyntaxError: Unclosed string<br/>
       * @description
       * Astro encountered an error while parsing your CSS, due to a syntax error. This is often caused by a missing semicolon.
       */
      CSSSyntaxError: {
        title: "CSS Syntax Error."
      },
      /**
       * @docs
       * @kind heading
       * @name Markdown Errors
       */
      // Markdown Errors - 6xxx
      /**
       * @docs
       * @description
       * Astro encountered an unknown error while parsing your Markdown. Oftentimes, this is caused by a syntax error and the error message should contain more information.
       */
      UnknownMarkdownError: {
        title: "Unknown Markdown Error."
      },
      /**
       * @docs
       * @message
       * **Example error messages:**<br/>
       * can not read an implicit mapping pair; a colon is missed<br/>
       * unexpected end of the stream within a double quoted scalar<br/>
       * can not read a block mapping entry; a multiline key may not be an implicit key
       * @description
       * Astro encountered an error while parsing the frontmatter of your Markdown file.
       * This is often caused by a mistake in the syntax, such as a missing colon or a missing end quote.
       */
      MarkdownFrontmatterParseError: {
        title: "Failed to parse Markdown frontmatter."
      },
      /**
       * @docs
       * @see
       * - [Modifying frontmatter programmatically](https://docs.astro.build/en/guides/markdown-content/#modifying-frontmatter-programmatically)
       * @description
       * A remark or rehype plugin attempted to inject invalid frontmatter. This occurs when "astro.frontmatter" is set to `null`, `undefined`, or an invalid JSON object.
       */
      InvalidFrontmatterInjectionError: {
        title: "Invalid frontmatter injection.",
        message: 'A remark or rehype plugin attempted to inject invalid frontmatter. Ensure "astro.frontmatter" is set to a valid JSON object that is not `null` or `undefined`.',
        hint: "See the frontmatter injection docs https://docs.astro.build/en/guides/markdown-content/#modifying-frontmatter-programmatically for more information."
      },
      /**
       * @docs
       * @see
       * - [MDX installation and usage](https://docs.astro.build/en/guides/integrations-guide/mdx/)
       * @description
       * Unable to find the official `@astrojs/mdx` integration. This error is raised when using MDX files without an MDX integration installed.
       */
      MdxIntegrationMissingError: {
        title: "MDX integration missing.",
        message: (file) => `Unable to render ${file}. Ensure that the \`@astrojs/mdx\` integration is installed.`,
        hint: "See the MDX integration docs for installation and usage instructions: https://docs.astro.build/en/guides/integrations-guide/mdx/"
      },
      // Config Errors - 7xxx
      /**
       * @docs
       * @see
       * - [Configuration Reference](https://docs.astro.build/en/reference/configuration-reference/)
       * @description
       * Astro encountered an unknown error loading your Astro configuration file.
       * This is often caused by a syntax error in your config and the message should offer more information.
       *
       * If you can reliably cause this error to happen, we'd appreciate if you could [open an issue](https://astro.build/issues/)
       */
      UnknownConfigError: {
        title: "Unknown configuration error."
      },
      /**
       * @docs
       * @see
       * - [--config](https://docs.astro.build/en/reference/cli-reference/#--config-path)
       * @description
       * The specified configuration file using `--config` could not be found. Make sure that it exists or that the path is correct
       */
      ConfigNotFound: {
        title: "Specified configuration file not found.",
        message: (configFile) => `Unable to resolve \`--config "${configFile}"\`. Does the file exist?`
      },
      /**
       * @docs
       * @see
       * - [Configuration reference](https://docs.astro.build/en/reference/configuration-reference/)
       * @description
       * Astro detected a legacy configuration option in your configuration file.
       */
      ConfigLegacyKey: {
        title: "Legacy configuration detected.",
        message: (legacyConfigKey) => `Legacy configuration detected: \`${legacyConfigKey}\`.`,
        hint: "Please update your configuration to the new format.\nSee https://astro.build/config for more information."
      },
      /**
       * @docs
       * @kind heading
       * @name CLI Errors
       */
      // CLI Errors - 8xxx
      /**
       * @docs
       * @description
       * Astro encountered an unknown error while starting one of its CLI commands. The error message should contain more information.
       *
       * If you can reliably cause this error to happen, we'd appreciate if you could [open an issue](https://astro.build/issues/)
       */
      UnknownCLIError: {
        title: "Unknown CLI Error."
      },
      /**
       * @docs
       * @description
       * `astro sync` command failed to generate content collection types.
       * @see
       * - [Content collections documentation](https://docs.astro.build/en/guides/content-collections/)
       */
      GenerateContentTypesError: {
        title: "Failed to generate content types.",
        message: (errorMessage) => `\`astro sync\` command failed to generate content collection types: ${errorMessage}`,
        hint: "Check your `src/content/config.*` file for typos."
      },
      /**
       * @docs
       * @kind heading
       * @name Content Collection Errors
       */
      // Content Collection Errors - 9xxx
      /**
       * @docs
       * @description
       * Astro encountered an unknown error loading your content collections.
       * This can be caused by certain errors inside your `src/content/config.ts` file or some internal errors.
       *
       * If you can reliably cause this error to happen, we'd appreciate if you could [open an issue](https://astro.build/issues/)
       */
      UnknownContentCollectionError: {
        title: "Unknown Content Collection Error."
      },
      /**
       * @docs
       * @message
       * **Example error message:**<br/>
       * **blog** → **post.md** frontmatter does not match collection schema.<br/>
       * "title" is required.<br/>
       * "date" must be a valid date.
       * @description
       * A Markdown or MDX entry in `src/content/` does not match its collection schema.
       * Make sure that all required fields are present, and that all fields are of the correct type.
       * You can check against the collection schema in your `src/content/config.*` file.
       * See the [Content collections documentation](https://docs.astro.build/en/guides/content-collections/) for more information.
       */
      InvalidContentEntryFrontmatterError: {
        title: "Content entry frontmatter does not match schema.",
        message: (collection, entryId, error2) => {
          return [
            `**${String(collection)} \u2192 ${String(
              entryId
            )}** frontmatter does not match collection schema.`,
            ...error2.errors.map((zodError) => zodError.message)
          ].join("\n");
        },
        hint: "See https://docs.astro.build/en/guides/content-collections/ for more information on content schemas."
      },
      /**
       * @docs
       * @message `COLLECTION_NAME` → `ENTRY_ID` has an invalid slug. `slug` must be a string.
       * @see
       * - [The reserved entry `slug` field](https://docs.astro.build/en/guides/content-collections/)
       * @description
       * An entry in `src/content/` has an invalid `slug`. This field is reserved for generating entry slugs, and must be a string when present.
       */
      InvalidContentEntrySlugError: {
        title: "Invalid content entry slug.",
        message: (collection, entryId) => {
          return `${String(collection)} \u2192 ${String(
            entryId
          )} has an invalid slug. \`slug\` must be a string.`;
        },
        hint: "See https://docs.astro.build/en/guides/content-collections/ for more on the `slug` field."
      },
      /**
       * @docs
       * @see
       * - [The reserved entry `slug` field](https://docs.astro.build/en/guides/content-collections/#defining-custom-slugs)
       * @description
       * A content collection schema should not contain the `slug` field. This is reserved by Astro for generating entry slugs. Remove `slug` from your schema. You can still use custom slugs in your frontmatter.
       */
      ContentSchemaContainsSlugError: {
        title: "Content Schema should not contain `slug`.",
        message: (collectionName) => `A content collection schema should not contain \`slug\` since it is reserved for slug generation. Remove this from your ${collectionName} collection schema.`,
        hint: "See https://docs.astro.build/en/guides/content-collections/ for more on the `slug` field."
      },
      /**
       * @docs
       * @message A collection queried via `getCollection()` does not exist.
       * @description
       * When querying a collection, ensure a collection directory with the requested name exists under `src/content/`.
       */
      CollectionDoesNotExistError: {
        title: "Collection does not exist",
        message: (collectionName) => `The collection **${collectionName}** does not exist. Ensure a collection directory with this name exists.`,
        hint: "See https://docs.astro.build/en/guides/content-collections/ for more on creating collections."
      },
      /**
       * @docs
       * @message `COLLECTION_NAME` contains a mix of content and data entries. All entries must be of the same type.
       * @see
       * - [Defining content collections](https://docs.astro.build/en/guides/content-collections/#defining-collections)
       * @description
       * A content collection cannot contain a mix of content and data entries. You must store entries in separate collections by type.
       */
      MixedContentDataCollectionError: {
        title: "Content and data cannot be in same collection.",
        message: (collection) => {
          return `**${collection}** contains a mix of content and data entries. All entries must be of the same type.`;
        },
        hint: "Store data entries in a new collection separate from your content collection."
      },
      /**
       * @docs
       * @message `COLLECTION_NAME` contains entries of type `ACTUAL_TYPE`, but is configured as a `EXPECTED_TYPE` collection.
       * @see
       * - [Defining content collections](https://docs.astro.build/en/guides/content-collections/#defining-collections)
       * @description
       * Content collections must contain entries of the type configured. Collections are `type: 'content'` by default. Try adding `type: 'data'` to your collection config for data collections.
       */
      ContentCollectionTypeMismatchError: {
        title: "Collection contains entries of a different type.",
        message: (collection, expectedType, actualType) => {
          return `${collection} contains ${expectedType} entries, but is configured as a ${actualType} collection.`;
        }
      },
      /**
       * @docs
       * @message `COLLECTION_ENTRY_NAME` failed to parse.
       * @description
       * Collection entries of `type: 'data'` must return an object with valid JSON (for `.json` entries) or YAML (for `.yaml` entries).
       */
      DataCollectionEntryParseError: {
        title: "Data collection entry failed to parse.",
        message: (entryId, errorMessage) => {
          return `**${entryId}** failed to parse: ${errorMessage}`;
        },
        hint: "Ensure your data entry is an object with valid JSON (for `.json` entries) or YAML (for `.yaml` entries)."
      },
      /**
       * @docs
       * @message `COLLECTION_NAME` contains multiple entries with the same slug: `SLUG`. Slugs must be unique.
       * @description
       * Content collection entries must have unique slugs. Duplicates are often caused by the `slug` frontmatter property.
       */
      DuplicateContentEntrySlugError: {
        title: "Duplicate content entry slug.",
        message: (collection, slug) => {
          return `**${collection}** contains multiple entries with the same slug: \`${slug}\`. Slugs must be unique.`;
        }
      },
      /**
       * @docs
       * @see
       * - [devalue library](https://github.com/rich-harris/devalue)
       * @description
       * `transform()` functions in your content config must return valid JSON, or data types compatible with the devalue library (including Dates, Maps, and Sets).
       */
      UnsupportedConfigTransformError: {
        title: "Unsupported transform in content config.",
        message: (parseError) => `\`transform()\` functions in your content config must return valid JSON, or data types compatible with the devalue library (including Dates, Maps, and Sets).
Full error: ${parseError}`,
        hint: "See the devalue library for all supported types: https://github.com/rich-harris/devalue"
      },
      // Generic catch-all - Only use this in extreme cases, like if there was a cosmic ray bit flip
      UnknownError: {
        title: "Unknown Error."
      }
    };
    AstroError = class extends Error {
      constructor(props, ...params) {
        var _a2;
        super(...params);
        this.type = "AstroError";
        const { name, title, message, stack, location, hint, frame } = props;
        this.title = title;
        if (name && name !== "Error") {
          this.name = name;
        } else if (this.title) {
          const errorData = (_a2 = getErrorDataByTitle(this.title)) == null ? void 0 : _a2.name;
          if (errorData) {
            this.name = errorData;
          }
        }
        if (message)
          this.message = message;
        this.stack = stack ? stack : this.stack;
        this.loc = location;
        this.hint = hint;
        this.frame = frame;
      }
      setLocation(location) {
        this.loc = location;
      }
      setName(name) {
        this.name = name;
      }
      setMessage(message) {
        this.message = message;
      }
      setHint(hint) {
        this.hint = hint;
      }
      setFrame(source, location) {
        this.frame = codeFrame(source, location);
      }
      static is(err) {
        return err.type === "AstroError";
      }
    };
    ASTRO_VERSION = "2.7.3";
    ({ replace } = "");
    ca = /[&<>'"]/g;
    esca = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "'": "&#39;",
      '"': "&quot;"
    };
    pe = (m) => esca[m];
    escape = (es) => replace.call(es, ca, pe);
    escapeHTML = escape;
    HTMLBytes = class extends Uint8Array {
    };
    Object.defineProperty(HTMLBytes.prototype, Symbol.toStringTag, {
      get() {
        return "HTMLBytes";
      }
    });
    HTMLString = class extends String {
      get [Symbol.toStringTag]() {
        return "HTMLString";
      }
    };
    markHTMLString = (value) => {
      if (value instanceof HTMLString) {
        return value;
      }
      if (typeof value === "string") {
        return new HTMLString(value);
      }
      return value;
    };
    astro_island_prebuilt_default = `(()=>{var d;{let h={0:t=>t,1:t=>JSON.parse(t,a),2:t=>new RegExp(t),3:t=>new Date(t),4:t=>new Map(JSON.parse(t,a)),5:t=>new Set(JSON.parse(t,a)),6:t=>BigInt(t),7:t=>new URL(t),8:t=>new Uint8Array(JSON.parse(t)),9:t=>new Uint16Array(JSON.parse(t)),10:t=>new Uint32Array(JSON.parse(t))},a=(t,e)=>{if(t===""||!Array.isArray(e))return e;let[s,n]=e;return s in h?h[s](n):void 0};customElements.get("astro-island")||customElements.define("astro-island",(d=class extends HTMLElement{constructor(){super(...arguments);this.hydrate=async()=>{var i;if(!this.hydrator||!this.isConnected)return;let e=(i=this.parentElement)==null?void 0:i.closest("astro-island[ssr]");if(e){e.addEventListener("astro:hydrate",this.hydrate,{once:!0});return}let s=this.querySelectorAll("astro-slot"),n={},c=this.querySelectorAll("template[data-astro-template]");for(let r of c){let o=r.closest(this.tagName);!o||!o.isSameNode(this)||(n[r.getAttribute("data-astro-template")||"default"]=r.innerHTML,r.remove())}for(let r of s){let o=r.closest(this.tagName);!o||!o.isSameNode(this)||(n[r.getAttribute("name")||"default"]=r.innerHTML)}let l=this.hasAttribute("props")?JSON.parse(this.getAttribute("props"),a):{};await this.hydrator(this)(this.Component,l,n,{client:this.getAttribute("client")}),this.removeAttribute("ssr"),this.dispatchEvent(new CustomEvent("astro:hydrate"))}}connectedCallback(){!this.hasAttribute("await-children")||this.firstChild?this.childrenConnectedCallback():new MutationObserver((e,s)=>{s.disconnect(),setTimeout(()=>this.childrenConnectedCallback(),0)}).observe(this,{childList:!0})}async childrenConnectedCallback(){let e=this.getAttribute("before-hydration-url");e&&await import(e),this.start()}start(){let e=JSON.parse(this.getAttribute("opts")),s=this.getAttribute("client");if(Astro[s]===void 0){window.addEventListener(\`astro:\${s}\`,()=>this.start(),{once:!0});return}Astro[s](async()=>{let n=this.getAttribute("renderer-url"),[c,{default:l}]=await Promise.all([import(this.getAttribute("component-url")),n?import(n):()=>()=>{}]),i=this.getAttribute("component-export")||"default";if(!i.includes("."))this.Component=c[i];else{this.Component=c;for(let r of i.split("."))this.Component=this.Component[r]}return this.hydrator=l,this.hydrate},e,this)}attributeChangedCallback(){this.hydrate()}},d.observedAttributes=["props"],d))}})();`;
    ISLAND_STYLES = `<style>astro-island,astro-slot,astro-static-slot{display:contents}</style>`;
    voidElementNames = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
    htmlBooleanAttributes = /^(allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;
    htmlEnumAttributes = /^(contenteditable|draggable|spellcheck|value)$/i;
    svgEnumAttributes = /^(autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;
    STATIC_DIRECTIVES = /* @__PURE__ */ new Set(["set:html", "set:text"]);
    toIdent = (k) => k.trim().replace(/(?:(?!^)\b\w|\s+|[^\w]+)/g, (match, index) => {
      if (/[^\w]|\s/.test(match))
        return "";
      return index === 0 ? match : match.toUpperCase();
    });
    toAttributeString = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, "&#38;").replace(/"/g, "&#34;") : value;
    kebab = (k) => k.toLowerCase() === k ? k : k.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);
    toStyleString = (obj) => Object.entries(obj).map(([k, v]) => {
      if (k[0] !== "-" && k[1] !== "-")
        return `${kebab(k)}:${v}`;
      if (kebab(k) !== k)
        return `${kebab(k)}:var(${k});${k}:${v}`;
      return `${k}:${v}`;
    }).join(";");
    EagerAsyncIterableIterator = class {
      constructor(iterable) {
        __privateAdd(this, _iterable, void 0);
        __privateAdd(this, _queue, new Queue());
        __privateAdd(this, _error, void 0);
        __privateAdd(this, _next, void 0);
        /**
         * Whether the proxy is running in buffering or pass-through mode
         */
        __privateAdd(this, _isBuffering, false);
        __privateAdd(this, _gen, void 0);
        __privateAdd(this, _isStarted, false);
        __privateSet(this, _iterable, iterable);
      }
      /**
       * Starts to eagerly fetch the inner iterator and cache the results.
       * Note: This might not be called after next() has been called once, e.g. the iterator is started
       */
      async buffer() {
        if (__privateGet(this, _gen)) {
          throw new Error("Cannot not switch from non-buffer to buffer mode");
        }
        __privateSet(this, _isBuffering, true);
        __privateSet(this, _isStarted, true);
        __privateSet(this, _gen, __privateGet(this, _iterable)[Symbol.asyncIterator]());
        let value = void 0;
        do {
          __privateSet(this, _next, __privateGet(this, _gen).next());
          try {
            value = await __privateGet(this, _next);
            __privateGet(this, _queue).push(value);
          } catch (e) {
            __privateSet(this, _error, e);
          }
        } while (value && !value.done);
      }
      async next() {
        if (__privateGet(this, _error)) {
          throw __privateGet(this, _error);
        }
        if (!__privateGet(this, _isBuffering)) {
          if (!__privateGet(this, _gen)) {
            __privateSet(this, _isStarted, true);
            __privateSet(this, _gen, __privateGet(this, _iterable)[Symbol.asyncIterator]());
          }
          return await __privateGet(this, _gen).next();
        }
        if (!__privateGet(this, _queue).isEmpty()) {
          return __privateGet(this, _queue).shift();
        }
        await __privateGet(this, _next);
        return __privateGet(this, _queue).shift();
      }
      isStarted() {
        return __privateGet(this, _isStarted);
      }
      [Symbol.asyncIterator]() {
        return this;
      }
    };
    _iterable = new WeakMap();
    _queue = new WeakMap();
    _error = new WeakMap();
    _next = new WeakMap();
    _isBuffering = new WeakMap();
    _gen = new WeakMap();
    _isStarted = new WeakMap();
    Queue = class {
      constructor() {
        this.head = void 0;
        this.tail = void 0;
      }
      push(item) {
        if (this.head === void 0) {
          this.head = { item };
          this.tail = this.head;
        } else {
          this.tail.next = { item };
          this.tail = this.tail.next;
        }
      }
      isEmpty() {
        return this.head === void 0;
      }
      shift() {
        var _a2, _b;
        const val = (_a2 = this.head) == null ? void 0 : _a2.item;
        this.head = (_b = this.head) == null ? void 0 : _b.next;
        return val;
      }
    };
    uniqueElements = (item, index, all) => {
      const props = JSON.stringify(item.props);
      const children = item.children;
      return index === all.findIndex((i) => JSON.stringify(i.props) === props && i.children == children);
    };
    headAndContentSym = Symbol.for("astro.headAndContent");
    renderTemplateResultSym = Symbol.for("astro.renderTemplateResult");
    RenderTemplateResult = class {
      constructor(htmlParts, expressions) {
        this[_a$1] = true;
        this.htmlParts = htmlParts;
        this.error = void 0;
        this.expressions = expressions.map((expression) => {
          if (isPromise(expression)) {
            return Promise.resolve(expression).catch((err) => {
              if (!this.error) {
                this.error = err;
                throw err;
              }
            });
          }
          return expression;
        });
      }
      async *[(_a$1 = renderTemplateResultSym, Symbol.asyncIterator)]() {
        const { htmlParts, expressions } = this;
        let iterables = bufferIterators(expressions.map((e) => renderChild(e)));
        for (let i = 0; i < htmlParts.length; i++) {
          const html = htmlParts[i];
          const iterable = iterables[i];
          yield markHTMLString(html);
          if (iterable) {
            yield* iterable;
          }
        }
      }
    };
    astroComponentInstanceSym = Symbol.for("astro.componentInstance");
    AstroComponentInstance = class {
      constructor(result, props, slots, factory) {
        this[_a] = true;
        this.result = result;
        this.props = props;
        this.factory = factory;
        this.slotValues = {};
        for (const name in slots) {
          const value = slots[name](result);
          this.slotValues[name] = () => value;
        }
      }
      async init(result) {
        this.returnValue = this.factory(result, this.props, this.slotValues);
        return this.returnValue;
      }
      async *render() {
        if (this.returnValue === void 0) {
          await this.init(this.result);
        }
        let value = this.returnValue;
        if (isPromise(value)) {
          value = await value;
        }
        if (isHeadAndContent(value)) {
          yield* value.content;
        } else {
          yield* renderChild(value);
        }
      }
    };
    _a = astroComponentInstanceSym;
    slotString = Symbol.for("astro:slot-string");
    SlotString = class extends HTMLString {
      constructor(content, instructions) {
        super(content);
        this.instructions = instructions;
        this[slotString] = true;
      }
    };
    Fragment = Symbol.for("astro:fragment");
    Renderer = Symbol.for("astro:renderer");
    encoder = new TextEncoder();
    decoder = new TextDecoder();
    HTMLParts = class {
      constructor() {
        this.parts = "";
      }
      append(part, result) {
        if (ArrayBuffer.isView(part)) {
          this.parts += decoder.decode(part);
        } else {
          this.parts += stringifyChunk(result, part);
        }
      }
      toString() {
        return this.parts;
      }
      toArrayBuffer() {
        return encoder.encode(this.parts);
      }
    };
    ClientOnlyPlaceholder = "astro-client-only";
    Skip = class {
      constructor(vnode) {
        this.vnode = vnode;
        this.count = 0;
      }
      increment() {
        this.count++;
      }
      haveNoTried() {
        return this.count === 0;
      }
      isCompleted() {
        return this.count > 2;
      }
    };
    Skip.symbol = Symbol("astro:jsx:skip");
    consoleFilterRefs = 0;
    PROP_TYPE = {
      Value: 0,
      JSON: 1,
      RegExp: 2,
      Date: 3,
      Map: 4,
      Set: 5,
      BigInt: 6,
      URL: 7,
      Uint8Array: 8,
      Uint16Array: 9,
      Uint32Array: 10
    };
    dictionary = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY";
    binary = dictionary.length;
    rendererAliases = /* @__PURE__ */ new Map([["solid", "solid-js"]]);
    ASTRO_SLOT_EXP = /\<\/?astro-slot\b[^>]*>/g;
    ASTRO_STATIC_SLOT_EXP = /\<\/?astro-static-slot\b[^>]*>/g;
    isNodeJS = typeof process === "object" && Object.prototype.toString.call(process) === "[object process]";
    createResponse = isNodeJS ? (body, init2) => {
      if (typeof body === "string" || ArrayBuffer.isView(body)) {
        return new Response(body, init2);
      }
      if (typeof StreamingCompatibleResponse === "undefined") {
        return new (createResponseClass())(body, init2);
      }
      return new StreamingCompatibleResponse(body, init2);
    } : (body, init2) => new Response(body, init2);
    needsHeadRenderingSymbol = Symbol.for("astro.needsHeadRendering");
    AstroJSX = "astro:jsx";
    Empty = Symbol("empty");
    toSlotName = (slotAttr) => slotAttr;
    slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());
    server_default = {
      check,
      renderToStaticMarkup
    };
    Mime$1.prototype.define = function(typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function(t) {
          return t.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i = 0; i < extensions.length; i++) {
          const ext = extensions[i];
          if (ext[0] === "*") {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error(
              'Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".'
            );
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
        }
      }
    };
    Mime$1.prototype.getType = function(path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, "").toLowerCase();
      let ext = last.replace(/^.*\./, "").toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return (hasDot || !hasPath) && this._types[ext] || null;
    };
    Mime$1.prototype.getExtension = function(type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return type && this._extensions[type.toLowerCase()] || null;
    };
    Mime_1 = Mime$1;
    standard = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
    other = { "application/prs.cww": ["cww"], "application/vnd.1000minds.decision-model+xml": ["1km"], "application/vnd.3gpp.pic-bw-large": ["plb"], "application/vnd.3gpp.pic-bw-small": ["psb"], "application/vnd.3gpp.pic-bw-var": ["pvb"], "application/vnd.3gpp2.tcap": ["tcap"], "application/vnd.3m.post-it-notes": ["pwn"], "application/vnd.accpac.simply.aso": ["aso"], "application/vnd.accpac.simply.imp": ["imp"], "application/vnd.acucobol": ["acu"], "application/vnd.acucorp": ["atc", "acutc"], "application/vnd.adobe.air-application-installer-package+zip": ["air"], "application/vnd.adobe.formscentral.fcdt": ["fcdt"], "application/vnd.adobe.fxp": ["fxp", "fxpl"], "application/vnd.adobe.xdp+xml": ["xdp"], "application/vnd.adobe.xfdf": ["xfdf"], "application/vnd.ahead.space": ["ahead"], "application/vnd.airzip.filesecure.azf": ["azf"], "application/vnd.airzip.filesecure.azs": ["azs"], "application/vnd.amazon.ebook": ["azw"], "application/vnd.americandynamics.acc": ["acc"], "application/vnd.amiga.ami": ["ami"], "application/vnd.android.package-archive": ["apk"], "application/vnd.anser-web-certificate-issue-initiation": ["cii"], "application/vnd.anser-web-funds-transfer-initiation": ["fti"], "application/vnd.antix.game-component": ["atx"], "application/vnd.apple.installer+xml": ["mpkg"], "application/vnd.apple.keynote": ["key"], "application/vnd.apple.mpegurl": ["m3u8"], "application/vnd.apple.numbers": ["numbers"], "application/vnd.apple.pages": ["pages"], "application/vnd.apple.pkpass": ["pkpass"], "application/vnd.aristanetworks.swi": ["swi"], "application/vnd.astraea-software.iota": ["iota"], "application/vnd.audiograph": ["aep"], "application/vnd.balsamiq.bmml+xml": ["bmml"], "application/vnd.blueice.multipass": ["mpm"], "application/vnd.bmi": ["bmi"], "application/vnd.businessobjects": ["rep"], "application/vnd.chemdraw+xml": ["cdxml"], "application/vnd.chipnuts.karaoke-mmd": ["mmd"], "application/vnd.cinderella": ["cdy"], "application/vnd.citationstyles.style+xml": ["csl"], "application/vnd.claymore": ["cla"], "application/vnd.cloanto.rp9": ["rp9"], "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"], "application/vnd.cluetrust.cartomobile-config": ["c11amc"], "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"], "application/vnd.commonspace": ["csp"], "application/vnd.contact.cmsg": ["cdbcmsg"], "application/vnd.cosmocaller": ["cmc"], "application/vnd.crick.clicker": ["clkx"], "application/vnd.crick.clicker.keyboard": ["clkk"], "application/vnd.crick.clicker.palette": ["clkp"], "application/vnd.crick.clicker.template": ["clkt"], "application/vnd.crick.clicker.wordbank": ["clkw"], "application/vnd.criticaltools.wbs+xml": ["wbs"], "application/vnd.ctc-posml": ["pml"], "application/vnd.cups-ppd": ["ppd"], "application/vnd.curl.car": ["car"], "application/vnd.curl.pcurl": ["pcurl"], "application/vnd.dart": ["dart"], "application/vnd.data-vision.rdz": ["rdz"], "application/vnd.dbf": ["dbf"], "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"], "application/vnd.dece.ttml+xml": ["uvt", "uvvt"], "application/vnd.dece.unspecified": ["uvx", "uvvx"], "application/vnd.dece.zip": ["uvz", "uvvz"], "application/vnd.denovo.fcselayout-link": ["fe_launch"], "application/vnd.dna": ["dna"], "application/vnd.dolby.mlp": ["mlp"], "application/vnd.dpgraph": ["dpg"], "application/vnd.dreamfactory": ["dfac"], "application/vnd.ds-keypoint": ["kpxx"], "application/vnd.dvb.ait": ["ait"], "application/vnd.dvb.service": ["svc"], "application/vnd.dynageo": ["geo"], "application/vnd.ecowin.chart": ["mag"], "application/vnd.enliven": ["nml"], "application/vnd.epson.esf": ["esf"], "application/vnd.epson.msf": ["msf"], "application/vnd.epson.quickanime": ["qam"], "application/vnd.epson.salt": ["slt"], "application/vnd.epson.ssf": ["ssf"], "application/vnd.eszigno3+xml": ["es3", "et3"], "application/vnd.ezpix-album": ["ez2"], "application/vnd.ezpix-package": ["ez3"], "application/vnd.fdf": ["fdf"], "application/vnd.fdsn.mseed": ["mseed"], "application/vnd.fdsn.seed": ["seed", "dataless"], "application/vnd.flographit": ["gph"], "application/vnd.fluxtime.clip": ["ftc"], "application/vnd.framemaker": ["fm", "frame", "maker", "book"], "application/vnd.frogans.fnc": ["fnc"], "application/vnd.frogans.ltf": ["ltf"], "application/vnd.fsc.weblaunch": ["fsc"], "application/vnd.fujitsu.oasys": ["oas"], "application/vnd.fujitsu.oasys2": ["oa2"], "application/vnd.fujitsu.oasys3": ["oa3"], "application/vnd.fujitsu.oasysgp": ["fg5"], "application/vnd.fujitsu.oasysprs": ["bh2"], "application/vnd.fujixerox.ddd": ["ddd"], "application/vnd.fujixerox.docuworks": ["xdw"], "application/vnd.fujixerox.docuworks.binder": ["xbd"], "application/vnd.fuzzysheet": ["fzs"], "application/vnd.genomatix.tuxedo": ["txd"], "application/vnd.geogebra.file": ["ggb"], "application/vnd.geogebra.tool": ["ggt"], "application/vnd.geometry-explorer": ["gex", "gre"], "application/vnd.geonext": ["gxt"], "application/vnd.geoplan": ["g2w"], "application/vnd.geospace": ["g3w"], "application/vnd.gmx": ["gmx"], "application/vnd.google-apps.document": ["gdoc"], "application/vnd.google-apps.presentation": ["gslides"], "application/vnd.google-apps.spreadsheet": ["gsheet"], "application/vnd.google-earth.kml+xml": ["kml"], "application/vnd.google-earth.kmz": ["kmz"], "application/vnd.grafeq": ["gqf", "gqs"], "application/vnd.groove-account": ["gac"], "application/vnd.groove-help": ["ghf"], "application/vnd.groove-identity-message": ["gim"], "application/vnd.groove-injector": ["grv"], "application/vnd.groove-tool-message": ["gtm"], "application/vnd.groove-tool-template": ["tpl"], "application/vnd.groove-vcard": ["vcg"], "application/vnd.hal+xml": ["hal"], "application/vnd.handheld-entertainment+xml": ["zmm"], "application/vnd.hbci": ["hbci"], "application/vnd.hhe.lesson-player": ["les"], "application/vnd.hp-hpgl": ["hpgl"], "application/vnd.hp-hpid": ["hpid"], "application/vnd.hp-hps": ["hps"], "application/vnd.hp-jlyt": ["jlt"], "application/vnd.hp-pcl": ["pcl"], "application/vnd.hp-pclxl": ["pclxl"], "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"], "application/vnd.ibm.minipay": ["mpy"], "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"], "application/vnd.ibm.rights-management": ["irm"], "application/vnd.ibm.secure-container": ["sc"], "application/vnd.iccprofile": ["icc", "icm"], "application/vnd.igloader": ["igl"], "application/vnd.immervision-ivp": ["ivp"], "application/vnd.immervision-ivu": ["ivu"], "application/vnd.insors.igm": ["igm"], "application/vnd.intercon.formnet": ["xpw", "xpx"], "application/vnd.intergeo": ["i2g"], "application/vnd.intu.qbo": ["qbo"], "application/vnd.intu.qfx": ["qfx"], "application/vnd.ipunplugged.rcprofile": ["rcprofile"], "application/vnd.irepository.package+xml": ["irp"], "application/vnd.is-xpr": ["xpr"], "application/vnd.isac.fcs": ["fcs"], "application/vnd.jam": ["jam"], "application/vnd.jcp.javame.midlet-rms": ["rms"], "application/vnd.jisp": ["jisp"], "application/vnd.joost.joda-archive": ["joda"], "application/vnd.kahootz": ["ktz", "ktr"], "application/vnd.kde.karbon": ["karbon"], "application/vnd.kde.kchart": ["chrt"], "application/vnd.kde.kformula": ["kfo"], "application/vnd.kde.kivio": ["flw"], "application/vnd.kde.kontour": ["kon"], "application/vnd.kde.kpresenter": ["kpr", "kpt"], "application/vnd.kde.kspread": ["ksp"], "application/vnd.kde.kword": ["kwd", "kwt"], "application/vnd.kenameaapp": ["htke"], "application/vnd.kidspiration": ["kia"], "application/vnd.kinar": ["kne", "knp"], "application/vnd.koan": ["skp", "skd", "skt", "skm"], "application/vnd.kodak-descriptor": ["sse"], "application/vnd.las.las+xml": ["lasxml"], "application/vnd.llamagraphics.life-balance.desktop": ["lbd"], "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"], "application/vnd.lotus-1-2-3": ["123"], "application/vnd.lotus-approach": ["apr"], "application/vnd.lotus-freelance": ["pre"], "application/vnd.lotus-notes": ["nsf"], "application/vnd.lotus-organizer": ["org"], "application/vnd.lotus-screencam": ["scm"], "application/vnd.lotus-wordpro": ["lwp"], "application/vnd.macports.portpkg": ["portpkg"], "application/vnd.mapbox-vector-tile": ["mvt"], "application/vnd.mcd": ["mcd"], "application/vnd.medcalcdata": ["mc1"], "application/vnd.mediastation.cdkey": ["cdkey"], "application/vnd.mfer": ["mwf"], "application/vnd.mfmp": ["mfm"], "application/vnd.micrografx.flo": ["flo"], "application/vnd.micrografx.igx": ["igx"], "application/vnd.mif": ["mif"], "application/vnd.mobius.daf": ["daf"], "application/vnd.mobius.dis": ["dis"], "application/vnd.mobius.mbk": ["mbk"], "application/vnd.mobius.mqy": ["mqy"], "application/vnd.mobius.msl": ["msl"], "application/vnd.mobius.plc": ["plc"], "application/vnd.mobius.txf": ["txf"], "application/vnd.mophun.application": ["mpn"], "application/vnd.mophun.certificate": ["mpc"], "application/vnd.mozilla.xul+xml": ["xul"], "application/vnd.ms-artgalry": ["cil"], "application/vnd.ms-cab-compressed": ["cab"], "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"], "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"], "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"], "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"], "application/vnd.ms-excel.template.macroenabled.12": ["xltm"], "application/vnd.ms-fontobject": ["eot"], "application/vnd.ms-htmlhelp": ["chm"], "application/vnd.ms-ims": ["ims"], "application/vnd.ms-lrm": ["lrm"], "application/vnd.ms-officetheme": ["thmx"], "application/vnd.ms-outlook": ["msg"], "application/vnd.ms-pki.seccat": ["cat"], "application/vnd.ms-pki.stl": ["*stl"], "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"], "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"], "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"], "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"], "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"], "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"], "application/vnd.ms-project": ["mpp", "mpt"], "application/vnd.ms-word.document.macroenabled.12": ["docm"], "application/vnd.ms-word.template.macroenabled.12": ["dotm"], "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"], "application/vnd.ms-wpl": ["wpl"], "application/vnd.ms-xpsdocument": ["xps"], "application/vnd.mseq": ["mseq"], "application/vnd.musician": ["mus"], "application/vnd.muvee.style": ["msty"], "application/vnd.mynfc": ["taglet"], "application/vnd.neurolanguage.nlu": ["nlu"], "application/vnd.nitf": ["ntf", "nitf"], "application/vnd.noblenet-directory": ["nnd"], "application/vnd.noblenet-sealer": ["nns"], "application/vnd.noblenet-web": ["nnw"], "application/vnd.nokia.n-gage.ac+xml": ["*ac"], "application/vnd.nokia.n-gage.data": ["ngdat"], "application/vnd.nokia.n-gage.symbian.install": ["n-gage"], "application/vnd.nokia.radio-preset": ["rpst"], "application/vnd.nokia.radio-presets": ["rpss"], "application/vnd.novadigm.edm": ["edm"], "application/vnd.novadigm.edx": ["edx"], "application/vnd.novadigm.ext": ["ext"], "application/vnd.oasis.opendocument.chart": ["odc"], "application/vnd.oasis.opendocument.chart-template": ["otc"], "application/vnd.oasis.opendocument.database": ["odb"], "application/vnd.oasis.opendocument.formula": ["odf"], "application/vnd.oasis.opendocument.formula-template": ["odft"], "application/vnd.oasis.opendocument.graphics": ["odg"], "application/vnd.oasis.opendocument.graphics-template": ["otg"], "application/vnd.oasis.opendocument.image": ["odi"], "application/vnd.oasis.opendocument.image-template": ["oti"], "application/vnd.oasis.opendocument.presentation": ["odp"], "application/vnd.oasis.opendocument.presentation-template": ["otp"], "application/vnd.oasis.opendocument.spreadsheet": ["ods"], "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"], "application/vnd.oasis.opendocument.text": ["odt"], "application/vnd.oasis.opendocument.text-master": ["odm"], "application/vnd.oasis.opendocument.text-template": ["ott"], "application/vnd.oasis.opendocument.text-web": ["oth"], "application/vnd.olpc-sugar": ["xo"], "application/vnd.oma.dd2+xml": ["dd2"], "application/vnd.openblox.game+xml": ["obgx"], "application/vnd.openofficeorg.extension": ["oxt"], "application/vnd.openstreetmap.data+xml": ["osm"], "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"], "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"], "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"], "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"], "application/vnd.osgeo.mapguide.package": ["mgp"], "application/vnd.osgi.dp": ["dp"], "application/vnd.osgi.subsystem": ["esa"], "application/vnd.palm": ["pdb", "pqa", "oprc"], "application/vnd.pawaafile": ["paw"], "application/vnd.pg.format": ["str"], "application/vnd.pg.osasli": ["ei6"], "application/vnd.picsel": ["efif"], "application/vnd.pmi.widget": ["wg"], "application/vnd.pocketlearn": ["plf"], "application/vnd.powerbuilder6": ["pbd"], "application/vnd.previewsystems.box": ["box"], "application/vnd.proteus.magazine": ["mgz"], "application/vnd.publishare-delta-tree": ["qps"], "application/vnd.pvi.ptid1": ["ptid"], "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"], "application/vnd.rar": ["rar"], "application/vnd.realvnc.bed": ["bed"], "application/vnd.recordare.musicxml": ["mxl"], "application/vnd.recordare.musicxml+xml": ["musicxml"], "application/vnd.rig.cryptonote": ["cryptonote"], "application/vnd.rim.cod": ["cod"], "application/vnd.rn-realmedia": ["rm"], "application/vnd.rn-realmedia-vbr": ["rmvb"], "application/vnd.route66.link66+xml": ["link66"], "application/vnd.sailingtracker.track": ["st"], "application/vnd.seemail": ["see"], "application/vnd.sema": ["sema"], "application/vnd.semd": ["semd"], "application/vnd.semf": ["semf"], "application/vnd.shana.informed.formdata": ["ifm"], "application/vnd.shana.informed.formtemplate": ["itp"], "application/vnd.shana.informed.interchange": ["iif"], "application/vnd.shana.informed.package": ["ipk"], "application/vnd.simtech-mindmapper": ["twd", "twds"], "application/vnd.smaf": ["mmf"], "application/vnd.smart.teacher": ["teacher"], "application/vnd.software602.filler.form+xml": ["fo"], "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"], "application/vnd.spotfire.dxp": ["dxp"], "application/vnd.spotfire.sfs": ["sfs"], "application/vnd.stardivision.calc": ["sdc"], "application/vnd.stardivision.draw": ["sda"], "application/vnd.stardivision.impress": ["sdd"], "application/vnd.stardivision.math": ["smf"], "application/vnd.stardivision.writer": ["sdw", "vor"], "application/vnd.stardivision.writer-global": ["sgl"], "application/vnd.stepmania.package": ["smzip"], "application/vnd.stepmania.stepchart": ["sm"], "application/vnd.sun.wadl+xml": ["wadl"], "application/vnd.sun.xml.calc": ["sxc"], "application/vnd.sun.xml.calc.template": ["stc"], "application/vnd.sun.xml.draw": ["sxd"], "application/vnd.sun.xml.draw.template": ["std"], "application/vnd.sun.xml.impress": ["sxi"], "application/vnd.sun.xml.impress.template": ["sti"], "application/vnd.sun.xml.math": ["sxm"], "application/vnd.sun.xml.writer": ["sxw"], "application/vnd.sun.xml.writer.global": ["sxg"], "application/vnd.sun.xml.writer.template": ["stw"], "application/vnd.sus-calendar": ["sus", "susp"], "application/vnd.svd": ["svd"], "application/vnd.symbian.install": ["sis", "sisx"], "application/vnd.syncml+xml": ["xsm"], "application/vnd.syncml.dm+wbxml": ["bdm"], "application/vnd.syncml.dm+xml": ["xdm"], "application/vnd.syncml.dmddf+xml": ["ddf"], "application/vnd.tao.intent-module-archive": ["tao"], "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"], "application/vnd.tmobile-livetv": ["tmo"], "application/vnd.trid.tpt": ["tpt"], "application/vnd.triscape.mxs": ["mxs"], "application/vnd.trueapp": ["tra"], "application/vnd.ufdl": ["ufd", "ufdl"], "application/vnd.uiq.theme": ["utz"], "application/vnd.umajin": ["umj"], "application/vnd.unity": ["unityweb"], "application/vnd.uoml+xml": ["uoml"], "application/vnd.vcx": ["vcx"], "application/vnd.visio": ["vsd", "vst", "vss", "vsw"], "application/vnd.visionary": ["vis"], "application/vnd.vsf": ["vsf"], "application/vnd.wap.wbxml": ["wbxml"], "application/vnd.wap.wmlc": ["wmlc"], "application/vnd.wap.wmlscriptc": ["wmlsc"], "application/vnd.webturbo": ["wtb"], "application/vnd.wolfram.player": ["nbp"], "application/vnd.wordperfect": ["wpd"], "application/vnd.wqd": ["wqd"], "application/vnd.wt.stf": ["stf"], "application/vnd.xara": ["xar"], "application/vnd.xfdl": ["xfdl"], "application/vnd.yamaha.hv-dic": ["hvd"], "application/vnd.yamaha.hv-script": ["hvs"], "application/vnd.yamaha.hv-voice": ["hvp"], "application/vnd.yamaha.openscoreformat": ["osf"], "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"], "application/vnd.yamaha.smaf-audio": ["saf"], "application/vnd.yamaha.smaf-phrase": ["spf"], "application/vnd.yellowriver-custom-menu": ["cmp"], "application/vnd.zul": ["zir", "zirz"], "application/vnd.zzazz.deck+xml": ["zaz"], "application/x-7z-compressed": ["7z"], "application/x-abiword": ["abw"], "application/x-ace-compressed": ["ace"], "application/x-apple-diskimage": ["*dmg"], "application/x-arj": ["arj"], "application/x-authorware-bin": ["aab", "x32", "u32", "vox"], "application/x-authorware-map": ["aam"], "application/x-authorware-seg": ["aas"], "application/x-bcpio": ["bcpio"], "application/x-bdoc": ["*bdoc"], "application/x-bittorrent": ["torrent"], "application/x-blorb": ["blb", "blorb"], "application/x-bzip": ["bz"], "application/x-bzip2": ["bz2", "boz"], "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"], "application/x-cdlink": ["vcd"], "application/x-cfs-compressed": ["cfs"], "application/x-chat": ["chat"], "application/x-chess-pgn": ["pgn"], "application/x-chrome-extension": ["crx"], "application/x-cocoa": ["cco"], "application/x-conference": ["nsc"], "application/x-cpio": ["cpio"], "application/x-csh": ["csh"], "application/x-debian-package": ["*deb", "udeb"], "application/x-dgc-compressed": ["dgc"], "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"], "application/x-doom": ["wad"], "application/x-dtbncx+xml": ["ncx"], "application/x-dtbook+xml": ["dtb"], "application/x-dtbresource+xml": ["res"], "application/x-dvi": ["dvi"], "application/x-envoy": ["evy"], "application/x-eva": ["eva"], "application/x-font-bdf": ["bdf"], "application/x-font-ghostscript": ["gsf"], "application/x-font-linux-psf": ["psf"], "application/x-font-pcf": ["pcf"], "application/x-font-snf": ["snf"], "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"], "application/x-freearc": ["arc"], "application/x-futuresplash": ["spl"], "application/x-gca-compressed": ["gca"], "application/x-glulx": ["ulx"], "application/x-gnumeric": ["gnumeric"], "application/x-gramps-xml": ["gramps"], "application/x-gtar": ["gtar"], "application/x-hdf": ["hdf"], "application/x-httpd-php": ["php"], "application/x-install-instructions": ["install"], "application/x-iso9660-image": ["*iso"], "application/x-iwork-keynote-sffkey": ["*key"], "application/x-iwork-numbers-sffnumbers": ["*numbers"], "application/x-iwork-pages-sffpages": ["*pages"], "application/x-java-archive-diff": ["jardiff"], "application/x-java-jnlp-file": ["jnlp"], "application/x-keepass2": ["kdbx"], "application/x-latex": ["latex"], "application/x-lua-bytecode": ["luac"], "application/x-lzh-compressed": ["lzh", "lha"], "application/x-makeself": ["run"], "application/x-mie": ["mie"], "application/x-mobipocket-ebook": ["prc", "mobi"], "application/x-ms-application": ["application"], "application/x-ms-shortcut": ["lnk"], "application/x-ms-wmd": ["wmd"], "application/x-ms-wmz": ["wmz"], "application/x-ms-xbap": ["xbap"], "application/x-msaccess": ["mdb"], "application/x-msbinder": ["obd"], "application/x-mscardfile": ["crd"], "application/x-msclip": ["clp"], "application/x-msdos-program": ["*exe"], "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"], "application/x-msmediaview": ["mvb", "m13", "m14"], "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"], "application/x-msmoney": ["mny"], "application/x-mspublisher": ["pub"], "application/x-msschedule": ["scd"], "application/x-msterminal": ["trm"], "application/x-mswrite": ["wri"], "application/x-netcdf": ["nc", "cdf"], "application/x-ns-proxy-autoconfig": ["pac"], "application/x-nzb": ["nzb"], "application/x-perl": ["pl", "pm"], "application/x-pilot": ["*prc", "*pdb"], "application/x-pkcs12": ["p12", "pfx"], "application/x-pkcs7-certificates": ["p7b", "spc"], "application/x-pkcs7-certreqresp": ["p7r"], "application/x-rar-compressed": ["*rar"], "application/x-redhat-package-manager": ["rpm"], "application/x-research-info-systems": ["ris"], "application/x-sea": ["sea"], "application/x-sh": ["sh"], "application/x-shar": ["shar"], "application/x-shockwave-flash": ["swf"], "application/x-silverlight-app": ["xap"], "application/x-sql": ["sql"], "application/x-stuffit": ["sit"], "application/x-stuffitx": ["sitx"], "application/x-subrip": ["srt"], "application/x-sv4cpio": ["sv4cpio"], "application/x-sv4crc": ["sv4crc"], "application/x-t3vm-image": ["t3"], "application/x-tads": ["gam"], "application/x-tar": ["tar"], "application/x-tcl": ["tcl", "tk"], "application/x-tex": ["tex"], "application/x-tex-tfm": ["tfm"], "application/x-texinfo": ["texinfo", "texi"], "application/x-tgif": ["*obj"], "application/x-ustar": ["ustar"], "application/x-virtualbox-hdd": ["hdd"], "application/x-virtualbox-ova": ["ova"], "application/x-virtualbox-ovf": ["ovf"], "application/x-virtualbox-vbox": ["vbox"], "application/x-virtualbox-vbox-extpack": ["vbox-extpack"], "application/x-virtualbox-vdi": ["vdi"], "application/x-virtualbox-vhd": ["vhd"], "application/x-virtualbox-vmdk": ["vmdk"], "application/x-wais-source": ["src"], "application/x-web-app-manifest+json": ["webapp"], "application/x-x509-ca-cert": ["der", "crt", "pem"], "application/x-xfig": ["fig"], "application/x-xliff+xml": ["*xlf"], "application/x-xpinstall": ["xpi"], "application/x-xz": ["xz"], "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"], "audio/vnd.dece.audio": ["uva", "uvva"], "audio/vnd.digital-winds": ["eol"], "audio/vnd.dra": ["dra"], "audio/vnd.dts": ["dts"], "audio/vnd.dts.hd": ["dtshd"], "audio/vnd.lucent.voice": ["lvp"], "audio/vnd.ms-playready.media.pya": ["pya"], "audio/vnd.nuera.ecelp4800": ["ecelp4800"], "audio/vnd.nuera.ecelp7470": ["ecelp7470"], "audio/vnd.nuera.ecelp9600": ["ecelp9600"], "audio/vnd.rip": ["rip"], "audio/x-aac": ["aac"], "audio/x-aiff": ["aif", "aiff", "aifc"], "audio/x-caf": ["caf"], "audio/x-flac": ["flac"], "audio/x-m4a": ["*m4a"], "audio/x-matroska": ["mka"], "audio/x-mpegurl": ["m3u"], "audio/x-ms-wax": ["wax"], "audio/x-ms-wma": ["wma"], "audio/x-pn-realaudio": ["ram", "ra"], "audio/x-pn-realaudio-plugin": ["rmp"], "audio/x-realaudio": ["*ra"], "audio/x-wav": ["*wav"], "chemical/x-cdx": ["cdx"], "chemical/x-cif": ["cif"], "chemical/x-cmdf": ["cmdf"], "chemical/x-cml": ["cml"], "chemical/x-csml": ["csml"], "chemical/x-xyz": ["xyz"], "image/prs.btif": ["btif"], "image/prs.pti": ["pti"], "image/vnd.adobe.photoshop": ["psd"], "image/vnd.airzip.accelerator.azv": ["azv"], "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"], "image/vnd.djvu": ["djvu", "djv"], "image/vnd.dvb.subtitle": ["*sub"], "image/vnd.dwg": ["dwg"], "image/vnd.dxf": ["dxf"], "image/vnd.fastbidsheet": ["fbs"], "image/vnd.fpx": ["fpx"], "image/vnd.fst": ["fst"], "image/vnd.fujixerox.edmics-mmr": ["mmr"], "image/vnd.fujixerox.edmics-rlc": ["rlc"], "image/vnd.microsoft.icon": ["ico"], "image/vnd.ms-dds": ["dds"], "image/vnd.ms-modi": ["mdi"], "image/vnd.ms-photo": ["wdp"], "image/vnd.net-fpx": ["npx"], "image/vnd.pco.b16": ["b16"], "image/vnd.tencent.tap": ["tap"], "image/vnd.valve.source.texture": ["vtf"], "image/vnd.wap.wbmp": ["wbmp"], "image/vnd.xiff": ["xif"], "image/vnd.zbrush.pcx": ["pcx"], "image/x-3ds": ["3ds"], "image/x-cmu-raster": ["ras"], "image/x-cmx": ["cmx"], "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"], "image/x-icon": ["*ico"], "image/x-jng": ["jng"], "image/x-mrsid-image": ["sid"], "image/x-ms-bmp": ["*bmp"], "image/x-pcx": ["*pcx"], "image/x-pict": ["pic", "pct"], "image/x-portable-anymap": ["pnm"], "image/x-portable-bitmap": ["pbm"], "image/x-portable-graymap": ["pgm"], "image/x-portable-pixmap": ["ppm"], "image/x-rgb": ["rgb"], "image/x-tga": ["tga"], "image/x-xbitmap": ["xbm"], "image/x-xpixmap": ["xpm"], "image/x-xwindowdump": ["xwd"], "message/vnd.wfa.wsc": ["wsc"], "model/vnd.collada+xml": ["dae"], "model/vnd.dwf": ["dwf"], "model/vnd.gdl": ["gdl"], "model/vnd.gtw": ["gtw"], "model/vnd.mts": ["mts"], "model/vnd.opengex": ["ogex"], "model/vnd.parasolid.transmit.binary": ["x_b"], "model/vnd.parasolid.transmit.text": ["x_t"], "model/vnd.sap.vds": ["vds"], "model/vnd.usdz+zip": ["usdz"], "model/vnd.valve.source.compiled-map": ["bsp"], "model/vnd.vtu": ["vtu"], "text/prs.lines.tag": ["dsc"], "text/vnd.curl": ["curl"], "text/vnd.curl.dcurl": ["dcurl"], "text/vnd.curl.mcurl": ["mcurl"], "text/vnd.curl.scurl": ["scurl"], "text/vnd.dvb.subtitle": ["sub"], "text/vnd.fly": ["fly"], "text/vnd.fmi.flexstor": ["flx"], "text/vnd.graphviz": ["gv"], "text/vnd.in3d.3dml": ["3dml"], "text/vnd.in3d.spot": ["spot"], "text/vnd.sun.j2me.app-descriptor": ["jad"], "text/vnd.wap.wml": ["wml"], "text/vnd.wap.wmlscript": ["wmls"], "text/x-asm": ["s", "asm"], "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"], "text/x-component": ["htc"], "text/x-fortran": ["f", "for", "f77", "f90"], "text/x-handlebars-template": ["hbs"], "text/x-java-source": ["java"], "text/x-lua": ["lua"], "text/x-markdown": ["mkd"], "text/x-nfo": ["nfo"], "text/x-opml": ["opml"], "text/x-org": ["*org"], "text/x-pascal": ["p", "pas"], "text/x-processing": ["pde"], "text/x-sass": ["sass"], "text/x-scss": ["scss"], "text/x-setext": ["etx"], "text/x-sfv": ["sfv"], "text/x-suse-ymp": ["ymp"], "text/x-uuencode": ["uu"], "text/x-vcalendar": ["vcs"], "text/x-vcard": ["vcf"], "video/vnd.dece.hd": ["uvh", "uvvh"], "video/vnd.dece.mobile": ["uvm", "uvvm"], "video/vnd.dece.pd": ["uvp", "uvvp"], "video/vnd.dece.sd": ["uvs", "uvvs"], "video/vnd.dece.video": ["uvv", "uvvv"], "video/vnd.dvb.file": ["dvb"], "video/vnd.fvt": ["fvt"], "video/vnd.mpegurl": ["mxu", "m4u"], "video/vnd.ms-playready.media.pyv": ["pyv"], "video/vnd.uvvu.mp4": ["uvu", "uvvu"], "video/vnd.vivo": ["viv"], "video/x-f4v": ["f4v"], "video/x-fli": ["fli"], "video/x-flv": ["flv"], "video/x-m4v": ["m4v"], "video/x-matroska": ["mkv", "mk3d", "mks"], "video/x-mng": ["mng"], "video/x-ms-asf": ["asf", "asx"], "video/x-ms-vob": ["vob"], "video/x-ms-wm": ["wm"], "video/x-ms-wmv": ["wmv"], "video/x-ms-wmx": ["wmx"], "video/x-ms-wvx": ["wvx"], "video/x-msvideo": ["avi"], "video/x-sgi-movie": ["movie"], "video/x-smv": ["smv"], "x-conference/x-cooltalk": ["ice"] };
    Mime = Mime_1;
    mime = new Mime(standard, other);
    mime$1 = /* @__PURE__ */ getDefaultExportFromCjs(mime);
    parse_1 = parse$1;
    serialize_1 = serialize;
    __toString = Object.prototype.toString;
    fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    DELETED_EXPIRATION = /* @__PURE__ */ new Date(0);
    DELETED_VALUE = "deleted";
    responseSentSymbol$2 = Symbol.for("astro.responseSent");
    AstroCookie = class {
      constructor(value) {
        this.value = value;
      }
      json() {
        if (this.value === void 0) {
          throw new Error(`Cannot convert undefined to an object.`);
        }
        return JSON.parse(this.value);
      }
      number() {
        return Number(this.value);
      }
      boolean() {
        if (this.value === "false")
          return false;
        if (this.value === "0")
          return false;
        return Boolean(this.value);
      }
    };
    AstroCookies = class {
      constructor(request) {
        __privateAdd(this, _ensureParsed);
        __privateAdd(this, _ensureOutgoingMap);
        __privateAdd(this, _parse);
        __privateAdd(this, _request, void 0);
        __privateAdd(this, _requestValues, void 0);
        __privateAdd(this, _outgoing, void 0);
        __privateSet(this, _request, request);
        __privateSet(this, _requestValues, null);
        __privateSet(this, _outgoing, null);
      }
      /**
       * Astro.cookies.delete(key) is used to delete a cookie. Using this method will result
       * in a Set-Cookie header added to the response.
       * @param key The cookie to delete
       * @param options Options related to this deletion, such as the path of the cookie.
       */
      delete(key, options) {
        const serializeOptions = {
          expires: DELETED_EXPIRATION
        };
        if (options == null ? void 0 : options.domain) {
          serializeOptions.domain = options.domain;
        }
        if (options == null ? void 0 : options.path) {
          serializeOptions.path = options.path;
        }
        __privateMethod(this, _ensureOutgoingMap, ensureOutgoingMap_fn).call(this).set(key, [
          DELETED_VALUE,
          serialize_1(key, DELETED_VALUE, serializeOptions),
          false
        ]);
      }
      /**
       * Astro.cookies.get(key) is used to get a cookie value. The cookie value is read from the
       * request. If you have set a cookie via Astro.cookies.set(key, value), the value will be taken
       * from that set call, overriding any values already part of the request.
       * @param key The cookie to get.
       * @returns An object containing the cookie value as well as convenience methods for converting its value.
       */
      get(key) {
        if (__privateGet(this, _outgoing) !== null && __privateGet(this, _outgoing).has(key)) {
          let [serializedValue, , isSetValue] = __privateGet(this, _outgoing).get(key);
          if (isSetValue) {
            return new AstroCookie(serializedValue);
          } else {
            return new AstroCookie(void 0);
          }
        }
        const values = __privateMethod(this, _ensureParsed, ensureParsed_fn).call(this);
        const value = values[key];
        return new AstroCookie(value);
      }
      /**
       * Astro.cookies.has(key) returns a boolean indicating whether this cookie is either
       * part of the initial request or set via Astro.cookies.set(key)
       * @param key The cookie to check for.
       * @returns
       */
      has(key) {
        if (__privateGet(this, _outgoing) !== null && __privateGet(this, _outgoing).has(key)) {
          let [, , isSetValue] = __privateGet(this, _outgoing).get(key);
          return isSetValue;
        }
        const values = __privateMethod(this, _ensureParsed, ensureParsed_fn).call(this);
        return !!values[key];
      }
      /**
       * Astro.cookies.set(key, value) is used to set a cookie's value. If provided
       * an object it will be stringified via JSON.stringify(value). Additionally you
       * can provide options customizing how this cookie will be set, such as setting httpOnly
       * in order to prevent the cookie from being read in client-side JavaScript.
       * @param key The name of the cookie to set.
       * @param value A value, either a string or other primitive or an object.
       * @param options Options for the cookie, such as the path and security settings.
       */
      set(key, value, options) {
        let serializedValue;
        if (typeof value === "string") {
          serializedValue = value;
        } else {
          let toStringValue = value.toString();
          if (toStringValue === Object.prototype.toString.call(value)) {
            serializedValue = JSON.stringify(value);
          } else {
            serializedValue = toStringValue;
          }
        }
        const serializeOptions = {};
        if (options) {
          Object.assign(serializeOptions, options);
        }
        __privateMethod(this, _ensureOutgoingMap, ensureOutgoingMap_fn).call(this).set(key, [
          serializedValue,
          serialize_1(key, serializedValue, serializeOptions),
          true
        ]);
        if (__privateGet(this, _request)[responseSentSymbol$2]) {
          throw new AstroError({
            ...AstroErrorData.ResponseSentError
          });
        }
      }
      /**
       * Astro.cookies.header() returns an iterator for the cookies that have previously
       * been set by either Astro.cookies.set() or Astro.cookies.delete().
       * This method is primarily used by adapters to set the header on outgoing responses.
       * @returns
       */
      *headers() {
        if (__privateGet(this, _outgoing) == null)
          return;
        for (const [, value] of __privateGet(this, _outgoing)) {
          yield value[1];
        }
      }
    };
    _request = new WeakMap();
    _requestValues = new WeakMap();
    _outgoing = new WeakMap();
    _ensureParsed = new WeakSet();
    ensureParsed_fn = function() {
      if (!__privateGet(this, _requestValues)) {
        __privateMethod(this, _parse, parse_fn).call(this);
      }
      if (!__privateGet(this, _requestValues)) {
        __privateSet(this, _requestValues, {});
      }
      return __privateGet(this, _requestValues);
    };
    _ensureOutgoingMap = new WeakSet();
    ensureOutgoingMap_fn = function() {
      if (!__privateGet(this, _outgoing)) {
        __privateSet(this, _outgoing, /* @__PURE__ */ new Map());
      }
      return __privateGet(this, _outgoing);
    };
    _parse = new WeakSet();
    parse_fn = function() {
      const raw = __privateGet(this, _request).headers.get("cookie");
      if (!raw) {
        return;
      }
      __privateSet(this, _requestValues, parse_1(raw));
    };
    astroCookiesSymbol = Symbol.for("astro.cookies");
    isTTY = true;
    if (typeof process !== "undefined") {
      ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});
      isTTY = process.stdout && process.stdout.isTTY;
    }
    $ = {
      enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== "dumb" && (FORCE_COLOR != null && FORCE_COLOR !== "0" || isTTY)
    };
    reset = init(0, 0);
    bold = init(1, 22);
    dim = init(2, 22);
    red = init(31, 39);
    yellow = init(33, 39);
    cyan = init(36, 39);
    eastasianwidth = { exports: {} };
    (function(module) {
      var eaw = {};
      {
        module.exports = eaw;
      }
      eaw.eastAsianWidth = function(character) {
        var x = character.charCodeAt(0);
        var y = character.length == 2 ? character.charCodeAt(1) : 0;
        var codePoint = x;
        if (55296 <= x && x <= 56319 && (56320 <= y && y <= 57343)) {
          x &= 1023;
          y &= 1023;
          codePoint = x << 10 | y;
          codePoint += 65536;
        }
        if (12288 == codePoint || 65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510) {
          return "F";
        }
        if (8361 == codePoint || 65377 <= codePoint && codePoint <= 65470 || 65474 <= codePoint && codePoint <= 65479 || 65482 <= codePoint && codePoint <= 65487 || 65490 <= codePoint && codePoint <= 65495 || 65498 <= codePoint && codePoint <= 65500 || 65512 <= codePoint && codePoint <= 65518) {
          return "H";
        }
        if (4352 <= codePoint && codePoint <= 4447 || 4515 <= codePoint && codePoint <= 4519 || 4602 <= codePoint && codePoint <= 4607 || 9001 <= codePoint && codePoint <= 9002 || 11904 <= codePoint && codePoint <= 11929 || 11931 <= codePoint && codePoint <= 12019 || 12032 <= codePoint && codePoint <= 12245 || 12272 <= codePoint && codePoint <= 12283 || 12289 <= codePoint && codePoint <= 12350 || 12353 <= codePoint && codePoint <= 12438 || 12441 <= codePoint && codePoint <= 12543 || 12549 <= codePoint && codePoint <= 12589 || 12593 <= codePoint && codePoint <= 12686 || 12688 <= codePoint && codePoint <= 12730 || 12736 <= codePoint && codePoint <= 12771 || 12784 <= codePoint && codePoint <= 12830 || 12832 <= codePoint && codePoint <= 12871 || 12880 <= codePoint && codePoint <= 13054 || 13056 <= codePoint && codePoint <= 19903 || 19968 <= codePoint && codePoint <= 42124 || 42128 <= codePoint && codePoint <= 42182 || 43360 <= codePoint && codePoint <= 43388 || 44032 <= codePoint && codePoint <= 55203 || 55216 <= codePoint && codePoint <= 55238 || 55243 <= codePoint && codePoint <= 55291 || 63744 <= codePoint && codePoint <= 64255 || 65040 <= codePoint && codePoint <= 65049 || 65072 <= codePoint && codePoint <= 65106 || 65108 <= codePoint && codePoint <= 65126 || 65128 <= codePoint && codePoint <= 65131 || 110592 <= codePoint && codePoint <= 110593 || 127488 <= codePoint && codePoint <= 127490 || 127504 <= codePoint && codePoint <= 127546 || 127552 <= codePoint && codePoint <= 127560 || 127568 <= codePoint && codePoint <= 127569 || 131072 <= codePoint && codePoint <= 194367 || 177984 <= codePoint && codePoint <= 196605 || 196608 <= codePoint && codePoint <= 262141) {
          return "W";
        }
        if (32 <= codePoint && codePoint <= 126 || 162 <= codePoint && codePoint <= 163 || 165 <= codePoint && codePoint <= 166 || 172 == codePoint || 175 == codePoint || 10214 <= codePoint && codePoint <= 10221 || 10629 <= codePoint && codePoint <= 10630) {
          return "Na";
        }
        if (161 == codePoint || 164 == codePoint || 167 <= codePoint && codePoint <= 168 || 170 == codePoint || 173 <= codePoint && codePoint <= 174 || 176 <= codePoint && codePoint <= 180 || 182 <= codePoint && codePoint <= 186 || 188 <= codePoint && codePoint <= 191 || 198 == codePoint || 208 == codePoint || 215 <= codePoint && codePoint <= 216 || 222 <= codePoint && codePoint <= 225 || 230 == codePoint || 232 <= codePoint && codePoint <= 234 || 236 <= codePoint && codePoint <= 237 || 240 == codePoint || 242 <= codePoint && codePoint <= 243 || 247 <= codePoint && codePoint <= 250 || 252 == codePoint || 254 == codePoint || 257 == codePoint || 273 == codePoint || 275 == codePoint || 283 == codePoint || 294 <= codePoint && codePoint <= 295 || 299 == codePoint || 305 <= codePoint && codePoint <= 307 || 312 == codePoint || 319 <= codePoint && codePoint <= 322 || 324 == codePoint || 328 <= codePoint && codePoint <= 331 || 333 == codePoint || 338 <= codePoint && codePoint <= 339 || 358 <= codePoint && codePoint <= 359 || 363 == codePoint || 462 == codePoint || 464 == codePoint || 466 == codePoint || 468 == codePoint || 470 == codePoint || 472 == codePoint || 474 == codePoint || 476 == codePoint || 593 == codePoint || 609 == codePoint || 708 == codePoint || 711 == codePoint || 713 <= codePoint && codePoint <= 715 || 717 == codePoint || 720 == codePoint || 728 <= codePoint && codePoint <= 731 || 733 == codePoint || 735 == codePoint || 768 <= codePoint && codePoint <= 879 || 913 <= codePoint && codePoint <= 929 || 931 <= codePoint && codePoint <= 937 || 945 <= codePoint && codePoint <= 961 || 963 <= codePoint && codePoint <= 969 || 1025 == codePoint || 1040 <= codePoint && codePoint <= 1103 || 1105 == codePoint || 8208 == codePoint || 8211 <= codePoint && codePoint <= 8214 || 8216 <= codePoint && codePoint <= 8217 || 8220 <= codePoint && codePoint <= 8221 || 8224 <= codePoint && codePoint <= 8226 || 8228 <= codePoint && codePoint <= 8231 || 8240 == codePoint || 8242 <= codePoint && codePoint <= 8243 || 8245 == codePoint || 8251 == codePoint || 8254 == codePoint || 8308 == codePoint || 8319 == codePoint || 8321 <= codePoint && codePoint <= 8324 || 8364 == codePoint || 8451 == codePoint || 8453 == codePoint || 8457 == codePoint || 8467 == codePoint || 8470 == codePoint || 8481 <= codePoint && codePoint <= 8482 || 8486 == codePoint || 8491 == codePoint || 8531 <= codePoint && codePoint <= 8532 || 8539 <= codePoint && codePoint <= 8542 || 8544 <= codePoint && codePoint <= 8555 || 8560 <= codePoint && codePoint <= 8569 || 8585 == codePoint || 8592 <= codePoint && codePoint <= 8601 || 8632 <= codePoint && codePoint <= 8633 || 8658 == codePoint || 8660 == codePoint || 8679 == codePoint || 8704 == codePoint || 8706 <= codePoint && codePoint <= 8707 || 8711 <= codePoint && codePoint <= 8712 || 8715 == codePoint || 8719 == codePoint || 8721 == codePoint || 8725 == codePoint || 8730 == codePoint || 8733 <= codePoint && codePoint <= 8736 || 8739 == codePoint || 8741 == codePoint || 8743 <= codePoint && codePoint <= 8748 || 8750 == codePoint || 8756 <= codePoint && codePoint <= 8759 || 8764 <= codePoint && codePoint <= 8765 || 8776 == codePoint || 8780 == codePoint || 8786 == codePoint || 8800 <= codePoint && codePoint <= 8801 || 8804 <= codePoint && codePoint <= 8807 || 8810 <= codePoint && codePoint <= 8811 || 8814 <= codePoint && codePoint <= 8815 || 8834 <= codePoint && codePoint <= 8835 || 8838 <= codePoint && codePoint <= 8839 || 8853 == codePoint || 8857 == codePoint || 8869 == codePoint || 8895 == codePoint || 8978 == codePoint || 9312 <= codePoint && codePoint <= 9449 || 9451 <= codePoint && codePoint <= 9547 || 9552 <= codePoint && codePoint <= 9587 || 9600 <= codePoint && codePoint <= 9615 || 9618 <= codePoint && codePoint <= 9621 || 9632 <= codePoint && codePoint <= 9633 || 9635 <= codePoint && codePoint <= 9641 || 9650 <= codePoint && codePoint <= 9651 || 9654 <= codePoint && codePoint <= 9655 || 9660 <= codePoint && codePoint <= 9661 || 9664 <= codePoint && codePoint <= 9665 || 9670 <= codePoint && codePoint <= 9672 || 9675 == codePoint || 9678 <= codePoint && codePoint <= 9681 || 9698 <= codePoint && codePoint <= 9701 || 9711 == codePoint || 9733 <= codePoint && codePoint <= 9734 || 9737 == codePoint || 9742 <= codePoint && codePoint <= 9743 || 9748 <= codePoint && codePoint <= 9749 || 9756 == codePoint || 9758 == codePoint || 9792 == codePoint || 9794 == codePoint || 9824 <= codePoint && codePoint <= 9825 || 9827 <= codePoint && codePoint <= 9829 || 9831 <= codePoint && codePoint <= 9834 || 9836 <= codePoint && codePoint <= 9837 || 9839 == codePoint || 9886 <= codePoint && codePoint <= 9887 || 9918 <= codePoint && codePoint <= 9919 || 9924 <= codePoint && codePoint <= 9933 || 9935 <= codePoint && codePoint <= 9953 || 9955 == codePoint || 9960 <= codePoint && codePoint <= 9983 || 10045 == codePoint || 10071 == codePoint || 10102 <= codePoint && codePoint <= 10111 || 11093 <= codePoint && codePoint <= 11097 || 12872 <= codePoint && codePoint <= 12879 || 57344 <= codePoint && codePoint <= 63743 || 65024 <= codePoint && codePoint <= 65039 || 65533 == codePoint || 127232 <= codePoint && codePoint <= 127242 || 127248 <= codePoint && codePoint <= 127277 || 127280 <= codePoint && codePoint <= 127337 || 127344 <= codePoint && codePoint <= 127386 || 917760 <= codePoint && codePoint <= 917999 || 983040 <= codePoint && codePoint <= 1048573 || 1048576 <= codePoint && codePoint <= 1114109) {
          return "A";
        }
        return "N";
      };
      eaw.characterLength = function(character) {
        var code = this.eastAsianWidth(character);
        if (code == "F" || code == "W" || code == "A") {
          return 2;
        } else {
          return 1;
        }
      };
      function stringToArray(string) {
        return string.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g) || [];
      }
      eaw.length = function(string) {
        var characters = stringToArray(string);
        var len = 0;
        for (var i = 0; i < characters.length; i++) {
          len = len + this.characterLength(characters[i]);
        }
        return len;
      };
      eaw.slice = function(text, start, end) {
        textLen = eaw.length(text);
        start = start ? start : 0;
        end = end ? end : 1;
        if (start < 0) {
          start = textLen + start;
        }
        if (end < 0) {
          end = textLen + end;
        }
        var result = "";
        var eawLen = 0;
        var chars = stringToArray(text);
        for (var i = 0; i < chars.length; i++) {
          var char = chars[i];
          var charLen = eaw.length(char);
          if (eawLen >= start - (charLen == 2 ? 1 : 0)) {
            if (eawLen + charLen <= end) {
              result += char;
            } else {
              break;
            }
          }
          eawLen += charLen;
        }
        return result;
      };
    })(eastasianwidth);
    dateTimeFormat = new Intl.DateTimeFormat([], {
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
    levels = {
      debug: 20,
      info: 30,
      warn: 40,
      error: 50,
      silent: 90
    };
    if (typeof process !== "undefined") {
      let proc = process;
      if ("argv" in proc && Array.isArray(proc.argv)) {
        if (proc.argv.includes("--verbose"))
          ;
        else if (proc.argv.includes("--silent"))
          ;
        else
          ;
      }
    }
    clientAddressSymbol$1 = Symbol.for("astro.clientAddress");
    clientLocalsSymbol$2 = Symbol.for("astro.locals");
    lastMessageCount = 1;
    consoleLogDestination = {
      write(event) {
        let dest = console.error;
        if (levels[event.level] < levels["error"]) {
          dest = console.log;
        }
        function getPrefix() {
          let prefix = "";
          let type = event.type;
          if (type) {
            prefix += dim(dateTimeFormat.format(/* @__PURE__ */ new Date()) + " ");
            if (event.level === "info") {
              type = bold(cyan(`[${type}]`));
            } else if (event.level === "warn") {
              type = bold(yellow(`[${type}]`));
            } else if (event.level === "error") {
              type = bold(red(`[${type}]`));
            }
            prefix += `${type} `;
          }
          return reset(prefix);
        }
        let message = event.message;
        if (message === lastMessage) {
          lastMessageCount++;
          message = `${message} ${yellow(`(x${lastMessageCount})`)}`;
        } else {
          lastMessage = message;
          lastMessageCount = 1;
        }
        const outMessage = getPrefix() + message;
        dest(outMessage);
        return true;
      }
    };
    RedirectComponentInstance = {
      default() {
        return new Response(null, {
          status: 301
        });
      }
    };
    RedirectSinglePageBuiltModule = {
      page: () => Promise.resolve(RedirectComponentInstance),
      onRequest: (ctx, next) => next(),
      renderers: []
    };
    VALID_PARAM_TYPES = ["string", "number", "undefined"];
    clientAddressSymbol = Symbol.for("astro.clientAddress");
    responseSentSymbol$1 = Symbol.for("astro.responseSent");
    Slots = class {
      constructor(result, slots, logging) {
        __privateAdd(this, _result, void 0);
        __privateAdd(this, _slots, void 0);
        __privateAdd(this, _loggingOpts, void 0);
        __privateSet(this, _result, result);
        __privateSet(this, _slots, slots);
        __privateSet(this, _loggingOpts, logging);
        if (slots) {
          for (const key of Object.keys(slots)) {
            if (this[key] !== void 0) {
              throw new AstroError({
                ...AstroErrorData.ReservedSlotName,
                message: AstroErrorData.ReservedSlotName.message(key)
              });
            }
            Object.defineProperty(this, key, {
              get() {
                return true;
              },
              enumerable: true
            });
          }
        }
      }
      has(name) {
        if (!__privateGet(this, _slots))
          return false;
        return Boolean(__privateGet(this, _slots)[name]);
      }
      async render(name, args = []) {
        if (!__privateGet(this, _slots) || !this.has(name))
          return;
        const result = __privateGet(this, _result);
        if (!Array.isArray(args)) {
          warn(
            __privateGet(this, _loggingOpts),
            "Astro.slots.render",
            `Expected second parameter to be an array, received a ${typeof args}. If you're trying to pass an array as a single argument and getting unexpected results, make sure you're passing your array as a item of an array. Ex: Astro.slots.render('default', [["Hello", "World"]])`
          );
        } else if (args.length > 0) {
          const slotValue = __privateGet(this, _slots)[name];
          const component = typeof slotValue === "function" ? await slotValue(result) : await slotValue;
          const expression = getFunctionExpression(component);
          if (expression) {
            const slot = async () => isHTMLString(await expression) ? expression : expression(...args);
            return await renderSlotToString(result, slot).then((res) => {
              return res != null ? String(res) : res;
            });
          }
          if (typeof component === "function") {
            return await renderJSX(result, component(...args)).then(
              (res) => res != null ? String(res) : res
            );
          }
        }
        const content = await renderSlotToString(result, __privateGet(this, _slots)[name]);
        const outHTML = stringifyChunk(result, content);
        return outHTML;
      }
    };
    _result = new WeakMap();
    _slots = new WeakMap();
    _loggingOpts = new WeakMap();
    renderMarkdown = null;
    RouteCache = class {
      constructor(logging, mode = "production") {
        this.cache = {};
        this.logging = logging;
        this.mode = mode;
      }
      /** Clear the cache. */
      clearAll() {
        this.cache = {};
      }
      set(route, entry) {
        if (this.mode === "production" && this.cache[route.component]) {
          warn(
            this.logging,
            "routeCache",
            `Internal Warning: route cache overwritten. (${route.component})`
          );
        }
        this.cache[route.component] = entry;
      }
      get(route) {
        return this.cache[route.component];
      }
    };
    clientLocalsSymbol$1 = Symbol.for("astro.locals");
    clientLocalsSymbol = Symbol.for("astro.locals");
    responseSentSymbol = Symbol.for("astro.responseSent");
    App = class {
      constructor(manifest2, streaming = true) {
        __privateAdd(this, _getModuleForRoute);
        __privateAdd(this, _renderPage);
        __privateAdd(this, _callEndpoint);
        __privateAdd(this, _env, void 0);
        __privateAdd(this, _manifest, void 0);
        __privateAdd(this, _manifestData, void 0);
        __privateAdd(this, _routeDataToRouteInfo, void 0);
        __privateAdd(this, _encoder, new TextEncoder());
        __privateAdd(this, _logging, {
          dest: consoleLogDestination,
          level: "info"
        });
        __privateAdd(this, _base, void 0);
        __privateAdd(this, _baseWithoutTrailingSlash, void 0);
        __privateSet(this, _manifest, manifest2);
        __privateSet(this, _manifestData, {
          routes: manifest2.routes.map((route) => route.routeData)
        });
        __privateSet(this, _routeDataToRouteInfo, new Map(manifest2.routes.map((route) => [route.routeData, route])));
        __privateSet(this, _env, createEnvironment({
          adapterName: manifest2.adapterName,
          logging: __privateGet(this, _logging),
          markdown: manifest2.markdown,
          mode: "production",
          renderers: manifest2.renderers,
          clientDirectives: manifest2.clientDirectives,
          async resolve(specifier) {
            if (!(specifier in manifest2.entryModules)) {
              throw new Error(`Unable to resolve [${specifier}]`);
            }
            const bundlePath = manifest2.entryModules[specifier];
            switch (true) {
              case bundlePath.startsWith("data:"):
              case bundlePath.length === 0: {
                return bundlePath;
              }
              default: {
                return createAssetLink(bundlePath, manifest2.base, manifest2.assetsPrefix);
              }
            }
          },
          routeCache: new RouteCache(__privateGet(this, _logging)),
          site: __privateGet(this, _manifest).site,
          ssr: true,
          streaming
        }));
        __privateSet(this, _base, __privateGet(this, _manifest).base || "/");
        __privateSet(this, _baseWithoutTrailingSlash, removeTrailingForwardSlash(__privateGet(this, _base)));
      }
      removeBase(pathname) {
        if (pathname.startsWith(__privateGet(this, _base))) {
          return pathname.slice(__privateGet(this, _baseWithoutTrailingSlash).length + 1);
        }
        return pathname;
      }
      match(request, { matchNotFound = false } = {}) {
        const url = new URL(request.url);
        if (__privateGet(this, _manifest).assets.has(url.pathname)) {
          return void 0;
        }
        let pathname = prependForwardSlash(this.removeBase(url.pathname));
        let routeData = matchRoute(pathname, __privateGet(this, _manifestData));
        if (routeData) {
          if (routeData.prerender)
            return void 0;
          return routeData;
        } else if (matchNotFound) {
          const notFoundRouteData = matchRoute("/404", __privateGet(this, _manifestData));
          if (notFoundRouteData == null ? void 0 : notFoundRouteData.prerender)
            return void 0;
          return notFoundRouteData;
        } else {
          return void 0;
        }
      }
      async render(request, routeData, locals) {
        let defaultStatus = 200;
        if (!routeData) {
          routeData = this.match(request);
          if (!routeData) {
            defaultStatus = 404;
            routeData = this.match(request, { matchNotFound: true });
          }
          if (!routeData) {
            return new Response(null, {
              status: 404,
              statusText: "Not found"
            });
          }
        }
        Reflect.set(request, clientLocalsSymbol, locals ?? {});
        if (routeData.route === "/404") {
          defaultStatus = 404;
        }
        let mod = await __privateMethod(this, _getModuleForRoute, getModuleForRoute_fn).call(this, routeData);
        if (routeData.type === "page" || routeData.type === "redirect") {
          let response = await __privateMethod(this, _renderPage, renderPage_fn).call(this, request, routeData, mod, defaultStatus);
          if (response.status === 500 || response.status === 404) {
            const errorRouteData = matchRoute("/" + response.status, __privateGet(this, _manifestData));
            if (errorRouteData && errorRouteData.route !== routeData.route) {
              mod = await __privateMethod(this, _getModuleForRoute, getModuleForRoute_fn).call(this, errorRouteData);
              try {
                let errorResponse = await __privateMethod(this, _renderPage, renderPage_fn).call(this, request, errorRouteData, mod, response.status);
                return errorResponse;
              } catch {
              }
            }
          }
          return response;
        } else if (routeData.type === "endpoint") {
          return __privateMethod(this, _callEndpoint, callEndpoint_fn).call(this, request, routeData, mod, defaultStatus);
        } else {
          throw new Error(`Unsupported route type [${routeData.type}].`);
        }
      }
      setCookieHeaders(response) {
        return getSetCookiesFromResponse(response);
      }
    };
    _env = new WeakMap();
    _manifest = new WeakMap();
    _manifestData = new WeakMap();
    _routeDataToRouteInfo = new WeakMap();
    _encoder = new WeakMap();
    _logging = new WeakMap();
    _base = new WeakMap();
    _baseWithoutTrailingSlash = new WeakMap();
    _getModuleForRoute = new WeakSet();
    getModuleForRoute_fn = async function(route) {
      if (route.type === "redirect") {
        return RedirectSinglePageBuiltModule;
      } else {
        if (__privateGet(this, _manifest).pageMap) {
          const importComponentInstance = __privateGet(this, _manifest).pageMap.get(route.component);
          if (!importComponentInstance) {
            throw new Error(
              `Unexpectedly unable to find a component instance for route ${route.route}`
            );
          }
          const pageModule2 = await importComponentInstance();
          return pageModule2;
        } else if (__privateGet(this, _manifest).pageModule) {
          const importComponentInstance = __privateGet(this, _manifest).pageModule;
          return importComponentInstance;
        } else {
          throw new Error(
            "Astro couldn't find the correct page to render, probably because it wasn't correctly mapped for SSR usage. This is an internal error, please file an issue."
          );
        }
      }
    };
    _renderPage = new WeakSet();
    renderPage_fn = async function(request, routeData, page2, status = 200) {
      const url = new URL(request.url);
      const pathname = prependForwardSlash(this.removeBase(url.pathname));
      const info = __privateGet(this, _routeDataToRouteInfo).get(routeData);
      const isCompressHTML = __privateGet(this, _manifest).compressHTML ?? false;
      const links = /* @__PURE__ */ new Set();
      const styles = createStylesheetElementSet(info.styles);
      let scripts = /* @__PURE__ */ new Set();
      for (const script of info.scripts) {
        if ("stage" in script) {
          if (script.stage === "head-inline") {
            scripts.add({
              props: {},
              children: script.children
            });
          }
        } else {
          scripts.add(createModuleScriptElement(script));
        }
      }
      try {
        const mod = await page2.page();
        const renderContext = await createRenderContext({
          request,
          origin: url.origin,
          pathname,
          componentMetadata: __privateGet(this, _manifest).componentMetadata,
          scripts,
          styles,
          links,
          route: routeData,
          status,
          mod,
          env: __privateGet(this, _env)
        });
        const apiContext = createAPIContext({
          request: renderContext.request,
          params: renderContext.params,
          props: renderContext.props,
          site: __privateGet(this, _env).site,
          adapterName: __privateGet(this, _env).adapterName
        });
        let response;
        if (page2.onRequest) {
          response = await callMiddleware(
            __privateGet(this, _env).logging,
            page2.onRequest,
            apiContext,
            () => {
              return renderPage({
                mod,
                renderContext,
                env: __privateGet(this, _env),
                cookies: apiContext.cookies,
                isCompressHTML
              });
            }
          );
        } else {
          response = await renderPage({
            mod,
            renderContext,
            env: __privateGet(this, _env),
            cookies: apiContext.cookies,
            isCompressHTML
          });
        }
        Reflect.set(request, responseSentSymbol, true);
        return response;
      } catch (err) {
        error(__privateGet(this, _logging), "ssr", err.stack || err.message || String(err));
        return new Response(null, {
          status: 500,
          statusText: "Internal server error"
        });
      }
    };
    _callEndpoint = new WeakSet();
    callEndpoint_fn = async function(request, routeData, page2, status = 200) {
      const url = new URL(request.url);
      const pathname = "/" + this.removeBase(url.pathname);
      const mod = await page2.page();
      const handler = mod;
      const ctx = await createRenderContext({
        request,
        origin: url.origin,
        pathname,
        route: routeData,
        status,
        env: __privateGet(this, _env),
        mod: handler
      });
      const result = await callEndpoint(handler, __privateGet(this, _env), ctx, __privateGet(this, _logging), page2.onRequest);
      if (result.type === "response") {
        if (result.response.headers.get("X-Astro-Response") === "Not-Found") {
          const fourOhFourRequest = new Request(new URL("/404", request.url));
          const fourOhFourRouteData = this.match(fourOhFourRequest);
          if (fourOhFourRouteData) {
            return this.render(fourOhFourRequest, fourOhFourRouteData);
          }
        }
        return result.response;
      } else {
        const body = result.body;
        const headers = new Headers();
        const mimeType = mime$1.getType(url.pathname);
        if (mimeType) {
          headers.set("Content-Type", `${mimeType};charset=utf-8`);
        } else {
          headers.set("Content-Type", "text/plain;charset=utf-8");
        }
        const bytes = __privateGet(this, _encoder).encode(body);
        headers.set("Content-Length", bytes.byteLength.toString());
        const response = new Response(bytes, {
          status: 200,
          headers
        });
        attachToResponse(response, result.cookies);
        return response;
      }
    };
  }
});

// ../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react.development.js"(exports, module) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var ReactVersion = "18.2.0";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: null
        };
        var ReactCurrentActQueue = {
          current: null,
          // Used to reproduce behavior of `batchedUpdates` in legacy mode.
          isBatchingLegacy: false,
          didScheduleLegacyUpdate: false
        };
        var ReactCurrentOwner = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack = "";
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || "";
            }
            return stack;
          };
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
        }
        function warn2(format) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error2(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error2("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function(publicInstance) {
            return false;
          },
          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} Name of the calling function in the public API.
           * @internal
           */
          enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var assign = Object.assign;
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function(partialState, callback) {
          if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
            throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
          }
          this.updater.enqueueSetState(this, partialState, callback, "setState");
        };
        Component.prototype.forceUpdate = function(callback) {
          this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function() {
                warn2("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init2(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error2("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error2("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error2('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type, key, ref, self, source, owner, props) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement2(type, config, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config);
              }
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            self = config.__self === void 0 ? null : config.__self;
            source = config.__source === void 0 ? null : config.__source;
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config, children) {
          if (element === null || element === void 0) {
            throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
          }
          var propName;
          var props = assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = ".";
        var SUBSEPARATOR = ":";
        function escape2(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element, index) {
          if (typeof element === "object" && element !== null && element.key != null) {
            {
              checkKeyStringCoercion(element.key);
            }
            return escape2("" + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
          var type = typeof children;
          if (type === "undefined" || type === "boolean") {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child);
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                return c;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                {
                  if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                    checkKeyStringCoercion(mappedChild.key);
                  }
                }
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  // Keep both the (mapped) and old keys if they differ, just as
                  // traverseAllChildren used to do for objects as children
                  escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                  (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? (
                    // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                    // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey("" + mappedChild.key) + "/"
                  ) : "") + childKey
                );
              }
              array.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getElementKey(child, i);
              subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii++);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
              }
            } else if (type === "object") {
              var childrenString = String(children);
              throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          var count = 0;
          mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
          });
          return result;
        }
        function countChildren(children) {
          var n = 0;
          mapChildren(children, function() {
            n++;
          });
          return n;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(children, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray(children) {
          return mapChildren(children, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            throw new Error("React.Children.only expected to receive a single React element child.");
          }
          return children;
        }
        function createContext(defaultValue) {
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error2("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context.Provider;
                },
                set: function(_Provider) {
                  context.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function() {
                  return context._currentValue;
                },
                set: function(_currentValue) {
                  context._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function() {
                  return context._currentValue2;
                },
                set: function(_currentValue2) {
                  context._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function() {
                  return context._threadCount;
                },
                set: function(_threadCount) {
                  context._threadCount = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error2("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn2("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context.Consumer = Consumer;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            thenable.then(function(moduleObject2) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var resolved = payload;
                resolved._status = Resolved;
                resolved._result = moduleObject2;
              }
            }, function(error3) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var rejected = payload;
                rejected._status = Rejected;
                rejected._result = error3;
              }
            });
            if (payload._status === Uninitialized) {
              var pending = payload;
              pending._status = Pending;
              pending._result = thenable;
            }
          }
          if (payload._status === Resolved) {
            var moduleObject = payload._result;
            {
              if (moduleObject === void 0) {
                error2("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
              }
            }
            {
              if (!("default" in moduleObject)) {
                error2("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            return moduleObject.default;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps;
                },
                set: function(newDefaultProps) {
                  error2("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes;
                },
                set: function(newPropTypes) {
                  error2("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef(render) {
          {
            if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
              error2("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render !== "function") {
              error2("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
            } else {
              if (render.length !== 0 && render.length !== 2) {
                error2("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render != null) {
              if (render.defaultProps != null || render.propTypes != null) {
                error2("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!render.name && !render.displayName) {
                  render.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              error2("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare === void 0 ? null : compare
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!type.name && !type.displayName) {
                  type.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          {
            if (dispatcher === null) {
              error2("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext(Context) {
          var dispatcher = resolveDispatcher();
          {
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error2("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error2("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context);
        }
        function useState(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init2) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init2);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useInsertionEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useInsertionEffect(create, deps);
        }
        function useLayoutEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        function useTransition() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useTransition();
        }
        function useDeferredValue(value) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDeferredValue(value);
        }
        function useId() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useId();
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init2(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element);
            error2('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== "object") {
            return;
          }
          if (isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error2("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i = 0; i < keys.length; i++) {
              var key = keys[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error2("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error2("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (isArray(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            {
              error2("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
          }
          var element = createElement2.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn2("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn2("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type
                });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        function startTransition(scope, options) {
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = {};
          var currentTransition = ReactCurrentBatchConfig.transition;
          {
            ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
          }
          try {
            scope();
          } finally {
            ReactCurrentBatchConfig.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn2("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        var didWarnAboutMessageChannel = false;
        var enqueueTaskImpl = null;
        function enqueueTask(task) {
          if (enqueueTaskImpl === null) {
            try {
              var requireString = ("require" + Math.random()).slice(0, 7);
              var nodeRequire = module && module[requireString];
              enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
            } catch (_err) {
              enqueueTaskImpl = function(callback) {
                {
                  if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") {
                      error2("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                    }
                  }
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
              };
            }
          }
          return enqueueTaskImpl(task);
        }
        var actScopeDepth = 0;
        var didWarnNoAwaitAct = false;
        function act(callback) {
          {
            var prevActScopeDepth = actScopeDepth;
            actScopeDepth++;
            if (ReactCurrentActQueue.current === null) {
              ReactCurrentActQueue.current = [];
            }
            var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
            var result;
            try {
              ReactCurrentActQueue.isBatchingLegacy = true;
              result = callback();
              if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                  ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                  flushActQueue(queue);
                }
              }
            } catch (error3) {
              popActScope(prevActScopeDepth);
              throw error3;
            } finally {
              ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
            }
            if (result !== null && typeof result === "object" && typeof result.then === "function") {
              var thenableResult = result;
              var wasAwaited = false;
              var thenable = {
                then: function(resolve, reject) {
                  wasAwaited = true;
                  thenableResult.then(function(returnValue2) {
                    popActScope(prevActScopeDepth);
                    if (actScopeDepth === 0) {
                      recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                    } else {
                      resolve(returnValue2);
                    }
                  }, function(error3) {
                    popActScope(prevActScopeDepth);
                    reject(error3);
                  });
                }
              };
              {
                if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                  Promise.resolve().then(function() {
                  }).then(function() {
                    if (!wasAwaited) {
                      didWarnNoAwaitAct = true;
                      error2("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                    }
                  });
                }
              }
              return thenable;
            } else {
              var returnValue = result;
              popActScope(prevActScopeDepth);
              if (actScopeDepth === 0) {
                var _queue2 = ReactCurrentActQueue.current;
                if (_queue2 !== null) {
                  flushActQueue(_queue2);
                  ReactCurrentActQueue.current = null;
                }
                var _thenable = {
                  then: function(resolve, reject) {
                    if (ReactCurrentActQueue.current === null) {
                      ReactCurrentActQueue.current = [];
                      recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                    } else {
                      resolve(returnValue);
                    }
                  }
                };
                return _thenable;
              } else {
                var _thenable2 = {
                  then: function(resolve, reject) {
                    resolve(returnValue);
                  }
                };
                return _thenable2;
              }
            }
          }
        }
        function popActScope(prevActScopeDepth) {
          {
            if (prevActScopeDepth !== actScopeDepth - 1) {
              error2("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
            }
            actScopeDepth = prevActScopeDepth;
          }
        }
        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
          {
            var queue = ReactCurrentActQueue.current;
            if (queue !== null) {
              try {
                flushActQueue(queue);
                enqueueTask(function() {
                  if (queue.length === 0) {
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                  } else {
                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                  }
                });
              } catch (error3) {
                reject(error3);
              }
            } else {
              resolve(returnValue);
            }
          }
        }
        var isFlushing = false;
        function flushActQueue(queue) {
          {
            if (!isFlushing) {
              isFlushing = true;
              var i = 0;
              try {
                for (; i < queue.length; i++) {
                  var callback = queue[i];
                  do {
                    callback = callback(true);
                  } while (callback !== null);
                }
                queue.length = 0;
              } catch (error3) {
                queue = queue.slice(i + 1);
                throw error3;
              } finally {
                isFlushing = false;
              }
            }
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray,
          only: onlyChild
        };
        exports.Children = Children;
        exports.Component = Component;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.Profiler = REACT_PROFILER_TYPE;
        exports.PureComponent = PureComponent;
        exports.StrictMode = REACT_STRICT_MODE_TYPE;
        exports.Suspense = REACT_SUSPENSE_TYPE;
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
        exports.cloneElement = cloneElement$1;
        exports.createContext = createContext;
        exports.createElement = createElement$1;
        exports.createFactory = createFactory;
        exports.createRef = createRef;
        exports.forwardRef = forwardRef;
        exports.isValidElement = isValidElement;
        exports.lazy = lazy;
        exports.memo = memo;
        exports.startTransition = startTransition;
        exports.unstable_act = act;
        exports.useCallback = useCallback;
        exports.useContext = useContext;
        exports.useDebugValue = useDebugValue;
        exports.useDeferredValue = useDeferredValue;
        exports.useEffect = useEffect;
        exports.useId = useId;
        exports.useImperativeHandle = useImperativeHandle;
        exports.useInsertionEffect = useInsertionEffect;
        exports.useLayoutEffect = useLayoutEffect;
        exports.useMemo = useMemo;
        exports.useReducer = useReducer;
        exports.useRef = useRef;
        exports.useState = useState;
        exports.useSyncExternalStore = useSyncExternalStore;
        exports.useTransition = useTransition;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// ../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js
var require_react = __commonJS({
  "../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_development();
    }
  }
});

// ../../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
var require_react_dom_server_legacy_browser_development = __commonJS({
  "../../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React2 = require_react();
        var ReactVersion = "18.2.0";
        var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn2(format) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error2(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function scheduleWork(callback) {
          callback();
        }
        function beginWriting(destination) {
        }
        function writeChunk(destination, chunk) {
          writeChunkAndReturn(destination, chunk);
        }
        function writeChunkAndReturn(destination, chunk) {
          return destination.push(chunk);
        }
        function completeWriting(destination) {
        }
        function close(destination) {
          destination.push(null);
        }
        function stringToChunk(content) {
          return content;
        }
        function stringToPrecomputedChunk(content) {
          return content;
        }
        function closeWithError(destination, error3) {
          destination.destroy(error3);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error2("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "allowFullScreen",
          "async",
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          // Microdata
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "checked",
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          "multiple",
          "muted",
          "selected"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "capture",
          "download"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "cols",
          "rows",
          "size",
          "span"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/1999/xlink",
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/XML/1998/namespace",
            false,
            // sanitizeURL
            false
          );
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord(
          "xlinkHref",
          STRING,
          false,
          // mustUseProperty
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          true,
          // sanitizeURL
          false
        );
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error2("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error2("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          "aria-current": 0,
          // state
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          // state
          "aria-hidden": 0,
          // state
          "aria-invalid": 0,
          // state
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          // Widget Attributes
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          // Live Region Attributes
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          // Drag-and-Drop Attributes
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          // Relationship Attributes
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error2("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error2("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error2("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error2("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error2("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error2("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error2("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          // SVG
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error2("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                error2("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error2("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error2("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error2("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error2("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error2("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error2("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error2("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error2("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error2("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error2("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error2("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2(
              "Unsupported style property %s. Did you mean %s?",
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize(name.replace(msPattern, "ms-"))
            );
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error2(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error2("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error2("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = "" + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape2;
          var html = "";
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape2 = "&quot;";
                break;
              case 38:
                escape2 = "&amp;";
                break;
              case 39:
                escape2 = "&#x27;";
                break;
              case 60:
                escape2 = "&lt;";
                break;
              case 62:
                escape2 = "&gt;";
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html += escape2;
          }
          return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
        }
        function escapeTextForBrowser(text) {
          if (typeof text === "boolean" || typeof text === "number") {
            return "" + text;
          }
          return escapeHtml(text);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
        }
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error2("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        var startInlineScript = stringToPrecomputedChunk("<script>");
        var endInlineScript = stringToPrecomputedChunk("<\/script>");
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
        var endAsyncScript = stringToPrecomputedChunk('" async=""><\/script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ("" + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function(match, prefix2, s, suffix) {
          return "" + prefix2 + (s === "s" ? "\\u0073" : "\\u0053") + suffix;
        };
        function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
          var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix;
          var inlineScriptWithNonce = nonce === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce) + '">');
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);
          }
          if (bootstrapScripts !== void 0) {
            for (var i = 0; i < bootstrapScripts.length; i++) {
              bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i])), endAsyncScript);
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i = 0; _i < bootstrapModules.length; _i++) {
              bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
            boundaryPrefix: idPrefix + "B:",
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue
          };
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case "select":
              return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
            case "svg":
              return createFormatContext(SVG_MODE, null);
            case "math":
              return createFormatContext(MATHML_MODE, null);
            case "foreignObject":
              return createFormatContext(HTML_MODE, null);
            case "table":
              return createFormatContext(HTML_TABLE_MODE, null);
            case "thead":
            case "tbody":
            case "tfoot":
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case "colgroup":
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case "tr":
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ":" + idPrefix + "R" + treeId;
          if (localId > 0) {
            id += "H" + localId.toString(32);
          }
          return id + ":";
        }
        function encodeHTMLTextNode(text) {
          return escapeTextForBrowser(text);
        }
        var textSeparator = stringToPrecomputedChunk("<!-- -->");
        function pushTextInstance(target, text, responseState, textEmbedded) {
          if (text === "") {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text)));
          return true;
        }
        function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk = styleNameCache.get(styleName);
          if (chunk !== void 0) {
            return chunk;
          }
          var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(":");
        var styleSeparator = stringToPrecomputedChunk(";");
        function pushStyle(target, responseState, style) {
          if (typeof style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (styleValue == null || typeof styleValue === "boolean" || styleValue === "") {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === "number") {
                if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {
                  valueChunk = stringToChunk(styleValue + "px");
                } else {
                  valueChunk = stringToChunk("" + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(" ");
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case "style": {
              pushStyle(target, responseState, value);
              return;
            }
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                } else if (value === false)
                  ;
                else {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = "" + value;
                  sanitizeURL(value);
                }
                target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-") {
                  return;
                }
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
        var endOfStartTag = stringToPrecomputedChunk(">");
        var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              {
                checkHtmlStringCoercion(html);
              }
              target.push(stringToChunk("" + html));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error2("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName);
              } else if (!props.multiple && array) {
                error2("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps("select", props);
            checkSelectProp(props, "value");
            checkSelectProp(props, "defaultValue");
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue) {
              error2("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag("select"));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "defaultValue":
                case "value":
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = "";
          React2.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (!didWarnInvalidOptionChildren && typeof child !== "string" && typeof child !== "number") {
                didWarnInvalidOptionChildren = true;
                error2("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag("option"));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "selected":
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error2("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "value":
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, "value");
              }
              stringValue = "" + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error2("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i = 0; i < selectedValue.length; i++) {
                {
                  checkAttributeStringCoercion(selectedValue[i], "value");
                }
                var v = "" + selectedValue[i];
                if (v === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, "select.value");
              }
              if ("" + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked) {
              error2("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue) {
              error2("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag("input"));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  defaultChecked = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "checked":
                  checked = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, "checked", checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, "checked", defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, "value", value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, "value", defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue) {
              error2("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag("textarea"));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error2("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
            }
            if (value != null) {
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error("<textarea> can only have at most one child.");
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = "" + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = "" + children;
          }
          if (typeof value === "string" && value[0] === "\n") {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, "value");
            }
            target.push(stringToChunk(encodeHTMLTextNode("" + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag("menuitem"));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag("title"));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
            if (Array.isArray(children) && children.length > 1) {
              error2("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && child.$$typeof != null) {
              error2("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && typeof child !== "string" && typeof child !== "number") {
              error2("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === "string") {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "style":
                  pushStyle(target, responseState, propValue);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  if (isAttributeNameSafe(propKey) && typeof propValue !== "function" && typeof propValue !== "symbol") {
                    target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk("\n");
        function pushStartPreformattedElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              if (typeof html === "string" && html.length > 0 && html[0] === "\n") {
                target.push(leadingNewline, stringToChunk(html));
              } else {
                {
                  checkHtmlStringCoercion(html);
                }
                target.push(stringToChunk("" + html));
              }
            }
          }
          if (typeof children === "string" && children[0] === "\n") {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error("Invalid tag: " + tag);
            }
            tagStartChunk = stringToPrecomputedChunk("<" + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
        function pushStartInstance(target, type, props, responseState, formatContext) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error2("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
            if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {
              if (type.indexOf("-") === -1 && typeof props.is !== "string" && type.toLowerCase() !== type) {
                error2("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
          }
          switch (type) {
            case "select":
              return pushStartSelect(target, props, responseState);
            case "option":
              return pushStartOption(target, props, responseState, formatContext);
            case "textarea":
              return pushStartTextArea(target, props, responseState);
            case "input":
              return pushInput(target, props, responseState);
            case "menuitem":
              return pushStartMenuItem(target, props, responseState);
            case "title":
              return pushStartTitle(target, props, responseState);
            case "listing":
            case "pre": {
              return pushStartPreformattedElement(target, props, type, responseState);
            }
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              return pushSelfClosing(target, props, type, responseState);
            }
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph": {
              return pushStartGenericElement(target, props, type, responseState);
            }
            case "html": {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(target, props, type, responseState);
            }
            default: {
              if (type.indexOf("-") === -1 && typeof props.is !== "string") {
                return pushStartGenericElement(target, props, type, responseState);
              } else {
                return pushStartCustomElement(target, props, type, responseState);
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk("</");
        var endTag2 = stringToPrecomputedChunk(">");
        function pushEndInstance(target, type, props) {
          switch (type) {
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i = 0;
          for (; i < bootstrapChunks.length - 1; i++) {
            writeChunk(destination, bootstrapChunks[i]);
          }
          if (i < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="');
        var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
        var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
        var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
        function writeStartCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
        }
        function writeStartPendingSuspenseBoundary(destination, responseState, id) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
        }
        function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
          var result;
          result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));
            writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
          }
          result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk("</div>");
        var startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="');
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk("</svg>");
        var startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="');
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk("</math>");
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk("</table>");
        var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
        var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
        var startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="');
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
        function writeStartSegment(destination, responseState, formatContext, id) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}";
        var completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("');
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("');
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("');
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(")<\/script>");
        var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
        function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")));
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")));
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function(match) {
            switch (match) {
              case "<":
                return "\\u003c";
              case "\u2028":
                return "\\u2028";
              case "\u2029":
                return "\\u2029";
              default: {
                throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
              }
            }
          });
        }
        function createResponseState$1(generateStaticMarkup, identifierPrefix) {
          var responseState = createResponseState(identifierPrefix, void 0);
          return {
            // Keep this in sync with ReactDOMServerFormatConfig
            bootstrapChunks: responseState.bootstrapChunks,
            startInlineScript: responseState.startInlineScript,
            placeholderPrefix: responseState.placeholderPrefix,
            segmentPrefix: responseState.segmentPrefix,
            boundaryPrefix: responseState.boundaryPrefix,
            idPrefix: responseState.idPrefix,
            nextSuspenseID: responseState.nextSuspenseID,
            sentCompleteSegmentFunction: responseState.sentCompleteSegmentFunction,
            sentCompleteBoundaryFunction: responseState.sentCompleteBoundaryFunction,
            sentClientRenderFunction: responseState.sentClientRenderFunction,
            // This is an extra field for the legacy renderer
            generateStaticMarkup
          };
        }
        function createRootFormatContext() {
          return {
            insertionMode: HTML_MODE,
            // We skip the root mode because we don't want to emit the DOCTYPE in legacy mode.
            selectedValue: null
          };
        }
        function pushTextInstance$1(target, text, responseState, textEmbedded) {
          if (responseState.generateStaticMarkup) {
            target.push(stringToChunk(escapeTextForBrowser(text)));
            return false;
          } else {
            return pushTextInstance(target, text, responseState, textEmbedded);
          }
        }
        function pushSegmentFinale$1(target, responseState, lastPushedText, textEmbedded) {
          if (responseState.generateStaticMarkup) {
            return;
          } else {
            return pushSegmentFinale(target, responseState, lastPushedText, textEmbedded);
          }
        }
        function writeStartCompletedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartCompletedSuspenseBoundary(destination);
        }
        function writeStartClientRenderedSuspenseBoundary$1(destination, responseState, errorDigest, errorMessage, errorComponentStack) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMessage, errorComponentStack);
        }
        function writeEndCompletedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndCompletedSuspenseBoundary(destination);
        }
        function writeEndClientRenderedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndClientRenderedSuspenseBoundary(destination);
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init2(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init2(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            return context;
          }
        }
        function processChildContext(instance, type, parentContext, childContextTypes) {
          {
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error2("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue2 = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue2 = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next)
            ;
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
            } else {
              if (parentNext === null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue2;
            context._currentValue2 = nextValue;
            {
              if (context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
          }
          {
            if (prevSnapshot.context !== context) {
              error2("The parent context is not the expected context. This is probably a bug in React.");
            }
          }
          {
            var _value = prevSnapshot.parentValue;
            if (_value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue2 = _value;
            }
            {
              if (context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          return currentActiveSnapshot = prevSnapshot.parent;
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue2;
          return value;
        }
        function get(key) {
          return key._reactInternals;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error2("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error2("%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.", callerName, callerName, componentName);
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function(inst) {
            return false;
          },
          enqueueSetState: function(inst, payload, callback) {
            var internals = get(inst);
            if (internals.queue === null) {
              warnNoop(inst, "setState");
            } else {
              internals.queue.push(payload);
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var internals = get(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback !== void 0 && callback !== null) {
                warnOnInvalidCallback(callback, "setState");
              }
            }
          },
          enqueueForceUpdate: function(inst, callback) {
            var internals = get(inst);
            if (internals.queue === null) {
              warnNoop(inst, "forceUpdate");
            } else {
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          }
        };
        function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = (
                // Allow null for conditional declaration
                contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
              );
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error2("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && (instance.state === null || instance.state === void 0)) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error2("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error2("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error2("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error2("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error2("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error2("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error2("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error2("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error2("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error2("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error2("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error2("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error2("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error2("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error2("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error2("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error2("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error2("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error2("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error2("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error2("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray(_state))) {
              error2("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error2("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            {
              if (instance.componentWillMount.__suppressDeprecationWarning !== true) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn2(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    "componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s",
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error2("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
          if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
                var partial = oldQueue[i];
                var partialState = typeof partial === "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false
          };
          set(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error2("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: ""
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: 1 << restOfLength | id,
              overflow
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: 1 << length | _id,
              overflow: _overflow
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log2 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x) {
          var asUint = x >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log2(asUint) / LN2 | 0) | 0;
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
          }
          {
            if (isInHookUserCodeInDev) {
              error2("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error2("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error2("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error("Rendered more hooks than during the previous render");
          }
          return {
            memoizedState: null,
            queue: null,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = "useContext";
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function useState(initialState) {
          {
            currentHookNameInDev = "useState";
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init2) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = "useReducer";
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState = typeof initialArg === "function" ? initialArg() : initialArg;
            } else {
              initialState = init2 !== void 0 ? init2(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue2 = workInProgressHook.queue = {
              last: null,
              dispatch: null
            };
            var _dispatch = _queue2.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue2);
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = "useLayoutEffect";
            error2("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback, deps) {
          return useMemo(function() {
            return callback;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          if (getServerSnapshot === void 0) {
            throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error("startTransition cannot be called during server rendering.");
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop() {
        }
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState,
          useInsertionEffect: noop,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop,
          // Effects are not run in the server environment.
          useEffect: noop,
          // Debugging effect
          useDebugValue: noop,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info = "";
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info;
          } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error3) {
          console["error"](error3);
          return null;
        }
        function noop$1() {
        }
        function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request = {
            destination: null,
            responseState,
            progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError2 === void 0 ? defaultErrorHandler : onError2,
            onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
            onShellError: onShellError === void 0 ? noop$1 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
          };
          var rootSegment = createPendingSegment(
            request,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
          pingedTasks.push(rootTask);
          return request;
        }
        function pingTask(request, task) {
          var pingedTasks = request.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function() {
              return performWork(request);
            });
          }
        }
        function createSuspenseBoundary(request, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null
          };
        }
        function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
          request.allPendingTasks++;
          if (blockedBoundary === null) {
            request.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function() {
              return pingTask(request, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {
              return "";
            }
            return getStackByComponentStackNode(currentTaskInDEV.componentStack);
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error2("Unexpectedly popped too many stack frames. This is a bug in React.");
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error3) {
          {
            var errorMessage;
            if (typeof error3 === "string") {
              errorMessage = error3;
            } else if (error3 && typeof error3.message === "string") {
              errorMessage = error3.message;
            } else {
              errorMessage = String(error3);
            }
            var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request, error3) {
          var errorDigest = request.onError(error3);
          if (errorDigest != null && typeof errorDigest !== "string") {
            throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
          }
          return errorDigest;
        }
        function fatalError(request, error3) {
          var onShellError = request.onShellError;
          onShellError(error3);
          var onFatalError = request.onFatalError;
          onFatalError(error3);
          if (request.destination !== null) {
            request.status = CLOSED;
            closeWithError(request.destination, error3);
          } else {
            request.status = CLOSING;
            request.fatalError = error3;
          }
        }
        function renderSuspenseBoundary(request, task, props) {
          pushBuiltInComponentStackInDEV(task, "Suspense");
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode(request, task, content);
            pushSegmentFinale$1(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error3) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request, error3);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error3);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(prevContext, type, props);
          renderNode(request, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(request, task, instance, Component, props) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error2("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);
              task.legacyContext = mergedContext;
              renderNodeDestructive(request, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request, task, nextChildren);
        }
        function renderClassComponent(request, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(Component, props, maskedContext);
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(request, task, Component, props) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error2("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(request, task, Component, props, legacyContext);
          var hasId = checkDidRenderIdHook();
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0
          ) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
              try {
                renderNodeDestructive(request, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error2("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error2("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error2("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(request, task, type.render, props, ref);
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
            try {
              renderNodeDestructive(request, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement2(request, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error2("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var render = props.children;
          {
            if (typeof render !== "function") {
              error2("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          var newValue = readContext(context);
          var newChildren = render(newValue);
          renderNodeDestructive(request, task, newChildren);
        }
        function renderContextProvider(request, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error2("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
            }
          }
        }
        function renderLazyComponent(request, task, lazyComponent, props, ref) {
          pushBuiltInComponentStackInDEV(task, "Lazy");
          var payload = lazyComponent._payload;
          var init2 = lazyComponent._init;
          var Component = init2(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement2(request, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement2(request, task, type, props, ref) {
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request, task, type, props);
              return;
            }
          }
          if (typeof type === "string") {
            renderHostElement(request, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, "SuspenseList");
              renderNodeDestructive(request, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error("ReactDOMServer does not yet support scope components.");
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request, task, props);
              }
              return;
            }
          }
          if (typeof type === "object" && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request, task, type, props);
                return;
              }
            }
          }
          var info = "";
          {
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            iterable[Symbol.toStringTag] === "Generator") {
              if (!didWarnAboutGenerators) {
                error2("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request, task, node);
            } catch (x) {
              if (typeof x === "object" && x !== null && typeof x.then === "function")
                ;
              else {
                lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();
              }
              throw x;
            }
          }
        }
        function renderNodeDestructiveImpl(request, task, node) {
          task.node = node;
          if (typeof node === "object" && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement2(request, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init2 = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init2(payload);
                  } catch (x) {
                    if (typeof x === "object" && x !== null && typeof x.then === "function") {
                      pushBuiltInComponentStackInDEV(task, "Lazy");
                    }
                    throw x;
                  }
                }
                renderNodeDestructive(request, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
          }
          if (typeof node === "string") {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
            return;
          }
          if (typeof node === "number") {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
            return;
          }
          {
            if (typeof node === "function") {
              error2("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
        }
        function renderChildrenArray(request, task, children) {
          var totalChildren = children.length;
          for (var i = 0; i < totalChildren; i++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i);
            try {
              renderNode(request, task, children[i]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request, task, x) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x.then(ping, ping);
        }
        function renderNode(request, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request, task, node);
          } catch (x) {
            resetHooksState();
            if (typeof x === "object" && x !== null && typeof x.then === "function") {
              spawnNewSuspendedTask(request, task, x);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x;
            }
          }
        }
        function erroredTask(request, boundary, segment, error3) {
          var errorDigest = logRecoverableError(request, error3);
          if (boundary === null) {
            fatalError(request, error3);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error3);
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request, boundary, segment);
        }
        function abortTask(task, request, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request.allPendingTasks--;
            if (request.status !== CLOSED) {
              request.status = CLOSED;
              if (request.destination !== null) {
                close(request.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error2 = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
              boundary.errorDigest = request.onError(_error2);
              {
                var errorPrefix = "The server did not finish this Suspense boundary: ";
                if (_error2 && typeof _error2.message === "string") {
                  _error2 = errorPrefix + _error2.message;
                } else {
                  _error2 = errorPrefix + String(_error2);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error2);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
              return abortTask(fallbackTask, request, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request.allPendingTasks--;
            if (request.allPendingTasks === 0) {
              var onAllReady = request.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request.completedRootSegment !== null) {
                throw new Error("There can only be one root segment. This is a bug in React.");
              }
              request.completedRootSegment = segment;
            }
            request.pendingRootTasks--;
            if (request.pendingRootTasks === 0) {
              request.onShellError = noop$1;
              var onShellReady = request.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender)
              ;
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request, task, task.node);
            pushSegmentFinale$1(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request, task.blockedBoundary, segment);
          } catch (x) {
            resetHooksState();
            if (typeof x === "object" && x !== null && typeof x.then === "function") {
              var ping = task.ping;
              x.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request, task.blockedBoundary, segment, x);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request) {
          if (request.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks;
            var i;
            for (i = 0; i < pingedTasks.length; i++) {
              var task = pingedTasks[i];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i);
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = segment.id = request.nextSegmentId++;
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(destination, request.responseState, segmentID);
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r = flushSegment(request, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r;
            }
            default: {
              throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
            }
          }
        }
        function flushSegment(request, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary$1(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
            flushSubtree(request, destination, segment);
            return writeEndClientRenderedSuspenseBoundary$1(destination, request.responseState);
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request.partialBoundaries.push(boundary);
            }
            var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
            writeStartPendingSuspenseBoundary(destination, request.responseState, id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else if (boundary.byteSize > request.progressiveChunkSize) {
            boundary.rootSegmentID = request.nextSegmentId++;
            request.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else {
            writeStartCompletedSuspenseBoundary$1(destination, request.responseState);
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
            }
            var contentSegment = completedSegments[0];
            flushSegment(request, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary$1(destination, request.responseState);
          }
        }
        function flushClientRenderedBoundary(request, destination, boundary) {
          return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
        }
        function flushSegmentContainer(request, destination, segment) {
          writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);
          flushSegment(request, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            flushPartiallyCompletedSegment(request, destination, boundary, segment);
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
        }
        function flushPartialBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {
              i++;
              completedSegments.splice(0, i);
              return false;
            }
          }
          completedSegments.splice(0, i);
          return true;
        }
        function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = segment.id = boundary.rootSegmentID;
            if (rootSegmentID === -1) {
              throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
            }
            return flushSegmentContainer(request, destination, segment);
          } else {
            flushSegmentContainer(request, destination, segment);
            return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
          }
        }
        function flushCompletedQueues(request, destination) {
          try {
            var completedRootSegment = request.completedRootSegment;
            if (completedRootSegment !== null && request.pendingRootTasks === 0) {
              flushSegment(request, destination, completedRootSegment);
              request.completedRootSegment = null;
              writeCompletedRoot(destination, request.responseState);
            }
            var clientRenderedBoundaries = request.clientRenderedBoundaries;
            var i;
            for (i = 0; i < clientRenderedBoundaries.length; i++) {
              var boundary = clientRenderedBoundaries[i];
              if (!flushClientRenderedBoundary(request, destination, boundary)) {
                request.destination = null;
                i++;
                clientRenderedBoundaries.splice(0, i);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i);
            var completedBoundaries = request.completedBoundaries;
            for (i = 0; i < completedBoundaries.length; i++) {
              var _boundary = completedBoundaries[i];
              if (!flushCompletedBoundary(request, destination, _boundary)) {
                request.destination = null;
                i++;
                completedBoundaries.splice(0, i);
                return;
              }
            }
            completedBoundaries.splice(0, i);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request.partialBoundaries;
            for (i = 0; i < partialBoundaries.length; i++) {
              var _boundary2 = partialBoundaries[i];
              if (!flushPartialBoundary(request, destination, _boundary2)) {
                request.destination = null;
                i++;
                partialBoundaries.splice(0, i);
                return;
              }
            }
            partialBoundaries.splice(0, i);
            var largeBoundaries = request.completedBoundaries;
            for (i = 0; i < largeBoundaries.length; i++) {
              var _boundary3 = largeBoundaries[i];
              if (!flushCompletedBoundary(request, destination, _boundary3)) {
                request.destination = null;
                i++;
                largeBoundaries.splice(0, i);
                return;
              }
            }
            largeBoundaries.splice(0, i);
          } finally {
            if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0) {
              {
                if (request.abortableTasks.size !== 0) {
                  error2("There was still abortable task at the root when we closed. This is a bug in React.");
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request) {
          scheduleWork(function() {
            return performWork(request);
          });
        }
        function startFlowing(request, destination) {
          if (request.status === CLOSING) {
            request.status = CLOSED;
            closeWithError(destination, request.fatalError);
            return;
          }
          if (request.status === CLOSED) {
            return;
          }
          if (request.destination !== null) {
            return;
          }
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function abort(request, reason) {
          try {
            var abortableTasks = request.abortableTasks;
            abortableTasks.forEach(function(task) {
              return abortTask(task, request, reason);
            });
            abortableTasks.clear();
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function onError() {
        }
        function renderToStringImpl(children, options, generateStaticMarkup, abortReason) {
          var didFatal = false;
          var fatalError2 = null;
          var result = "";
          var destination = {
            push: function(chunk) {
              if (chunk !== null) {
                result += chunk;
              }
              return true;
            },
            destroy: function(error3) {
              didFatal = true;
              fatalError2 = error3;
            }
          };
          var readyToStream = false;
          function onShellReady() {
            readyToStream = true;
          }
          var request = createRequest(children, createResponseState$1(generateStaticMarkup, options ? options.identifierPrefix : void 0), createRootFormatContext(), Infinity, onError, void 0, onShellReady, void 0, void 0);
          startWork(request);
          abort(request, abortReason);
          startFlowing(request, destination);
          if (didFatal) {
            throw fatalError2;
          }
          if (!readyToStream) {
            throw new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          }
          return result;
        }
        function renderToString2(children, options) {
          return renderToStringImpl(children, options, false, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
        }
        function renderToStaticMarkup3(children, options) {
          return renderToStringImpl(children, options, true, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
        }
        function renderToNodeStream() {
          throw new Error("ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.");
        }
        function renderToStaticNodeStream() {
          throw new Error("ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.");
        }
        exports.renderToNodeStream = renderToNodeStream;
        exports.renderToStaticMarkup = renderToStaticMarkup3;
        exports.renderToStaticNodeStream = renderToStaticNodeStream;
        exports.renderToString = renderToString2;
        exports.version = ReactVersion;
      })();
    }
  }
});

// ../../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom-server.browser.development.js
var require_react_dom_server_browser_development = __commonJS({
  "../../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom-server.browser.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React2 = require_react();
        var ReactVersion = "18.2.0";
        var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn2(format) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format, args);
            }
          }
        }
        function error2(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function scheduleWork(callback) {
          callback();
        }
        var VIEW_SIZE = 512;
        var currentView = null;
        var writtenBytes = 0;
        function beginWriting(destination) {
          currentView = new Uint8Array(VIEW_SIZE);
          writtenBytes = 0;
        }
        function writeChunk(destination, chunk) {
          if (chunk.length === 0) {
            return;
          }
          if (chunk.length > VIEW_SIZE) {
            if (writtenBytes > 0) {
              destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));
              currentView = new Uint8Array(VIEW_SIZE);
              writtenBytes = 0;
            }
            destination.enqueue(chunk);
            return;
          }
          var bytesToWrite = chunk;
          var allowableBytes = currentView.length - writtenBytes;
          if (allowableBytes < bytesToWrite.length) {
            if (allowableBytes === 0) {
              destination.enqueue(currentView);
            } else {
              currentView.set(bytesToWrite.subarray(0, allowableBytes), writtenBytes);
              destination.enqueue(currentView);
              bytesToWrite = bytesToWrite.subarray(allowableBytes);
            }
            currentView = new Uint8Array(VIEW_SIZE);
            writtenBytes = 0;
          }
          currentView.set(bytesToWrite, writtenBytes);
          writtenBytes += bytesToWrite.length;
        }
        function writeChunkAndReturn(destination, chunk) {
          writeChunk(destination, chunk);
          return true;
        }
        function completeWriting(destination) {
          if (currentView && writtenBytes > 0) {
            destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));
            currentView = null;
            writtenBytes = 0;
          }
        }
        function close(destination) {
          destination.close();
        }
        var textEncoder = new TextEncoder();
        function stringToChunk(content) {
          return textEncoder.encode(content);
        }
        function stringToPrecomputedChunk(content) {
          return textEncoder.encode(content);
        }
        function closeWithError(destination, error3) {
          if (typeof destination.error === "function") {
            destination.error(error3);
          } else {
            destination.close();
          }
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error2("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "allowFullScreen",
          "async",
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          // Microdata
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "checked",
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          "multiple",
          "muted",
          "selected"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "capture",
          "download"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "cols",
          "rows",
          "size",
          "span"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/1999/xlink",
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/XML/1998/namespace",
            false,
            // sanitizeURL
            false
          );
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord(
          "xlinkHref",
          STRING,
          false,
          // mustUseProperty
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          true,
          // sanitizeURL
          false
        );
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error2("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error2("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          "aria-current": 0,
          // state
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          // state
          "aria-hidden": 0,
          // state
          "aria-invalid": 0,
          // state
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          // Widget Attributes
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          // Live Region Attributes
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          // Drag-and-Drop Attributes
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          // Relationship Attributes
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error2("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error2("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error2("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error2("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error2("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error2("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error2("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          // SVG
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error2("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                error2("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error2("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error2("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error2("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error2("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error2("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error2("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error2("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error2("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error2("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error2("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error2("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string) {
            return string.replace(hyphenPattern, function(_, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2(
              "Unsupported style property %s. Did you mean %s?",
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize(name.replace(msPattern, "ms-"))
            );
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error2(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error2("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error2("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = "" + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape2;
          var html = "";
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape2 = "&quot;";
                break;
              case 38:
                escape2 = "&amp;";
                break;
              case 39:
                escape2 = "&#x27;";
                break;
              case 60:
                escape2 = "&lt;";
                break;
              case 62:
                escape2 = "&gt;";
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html += escape2;
          }
          return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
        }
        function escapeTextForBrowser(text) {
          if (typeof text === "boolean" || typeof text === "number") {
            return "" + text;
          }
          return escapeHtml(text);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
        }
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error2("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a) {
          return isArrayImpl(a);
        }
        var startInlineScript = stringToPrecomputedChunk("<script>");
        var endInlineScript = stringToPrecomputedChunk("<\/script>");
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
        var endAsyncScript = stringToPrecomputedChunk('" async=""><\/script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ("" + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function(match, prefix2, s, suffix) {
          return "" + prefix2 + (s === "s" ? "\\u0073" : "\\u0053") + suffix;
        };
        function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
          var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix;
          var inlineScriptWithNonce = nonce === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce) + '">');
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);
          }
          if (bootstrapScripts !== void 0) {
            for (var i = 0; i < bootstrapScripts.length; i++) {
              bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i])), endAsyncScript);
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i = 0; _i < bootstrapModules.length; _i++) {
              bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
            boundaryPrefix: idPrefix + "B:",
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue
          };
        }
        function createRootFormatContext(namespaceURI) {
          var insertionMode = namespaceURI === "http://www.w3.org/2000/svg" ? SVG_MODE : namespaceURI === "http://www.w3.org/1998/Math/MathML" ? MATHML_MODE : ROOT_HTML_MODE;
          return createFormatContext(insertionMode, null);
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case "select":
              return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
            case "svg":
              return createFormatContext(SVG_MODE, null);
            case "math":
              return createFormatContext(MATHML_MODE, null);
            case "foreignObject":
              return createFormatContext(HTML_MODE, null);
            case "table":
              return createFormatContext(HTML_TABLE_MODE, null);
            case "thead":
            case "tbody":
            case "tfoot":
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case "colgroup":
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case "tr":
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ":" + idPrefix + "R" + treeId;
          if (localId > 0) {
            id += "H" + localId.toString(32);
          }
          return id + ":";
        }
        function encodeHTMLTextNode(text) {
          return escapeTextForBrowser(text);
        }
        var textSeparator = stringToPrecomputedChunk("<!-- -->");
        function pushTextInstance(target, text, responseState, textEmbedded) {
          if (text === "") {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text)));
          return true;
        }
        function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk = styleNameCache.get(styleName);
          if (chunk !== void 0) {
            return chunk;
          }
          var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(":");
        var styleSeparator = stringToPrecomputedChunk(";");
        function pushStyle(target, responseState, style) {
          if (typeof style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (styleValue == null || typeof styleValue === "boolean" || styleValue === "") {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === "number") {
                if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {
                  valueChunk = stringToChunk(styleValue + "px");
                } else {
                  valueChunk = stringToChunk("" + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(" ");
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case "style": {
              pushStyle(target, responseState, value);
              return;
            }
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                } else if (value === false)
                  ;
                else {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = "" + value;
                  sanitizeURL(value);
                }
                target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-") {
                  return;
                }
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
        var endOfStartTag = stringToPrecomputedChunk(">");
        var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              {
                checkHtmlStringCoercion(html);
              }
              target.push(stringToChunk("" + html));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error2("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName);
              } else if (!props.multiple && array) {
                error2("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps("select", props);
            checkSelectProp(props, "value");
            checkSelectProp(props, "defaultValue");
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue) {
              error2("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag("select"));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "defaultValue":
                case "value":
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = "";
          React2.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (!didWarnInvalidOptionChildren && typeof child !== "string" && typeof child !== "number") {
                didWarnInvalidOptionChildren = true;
                error2("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag("option"));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "selected":
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error2("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "value":
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, "value");
              }
              stringValue = "" + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error2("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i = 0; i < selectedValue.length; i++) {
                {
                  checkAttributeStringCoercion(selectedValue[i], "value");
                }
                var v = "" + selectedValue[i];
                if (v === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, "select.value");
              }
              if ("" + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked) {
              error2("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue) {
              error2("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag("input"));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  defaultChecked = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "checked":
                  checked = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, "checked", checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, "checked", defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, "value", value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, "value", defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue) {
              error2("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag("textarea"));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error2("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
            }
            if (value != null) {
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error("<textarea> can only have at most one child.");
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = "" + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = "" + children;
          }
          if (typeof value === "string" && value[0] === "\n") {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, "value");
            }
            target.push(stringToChunk(encodeHTMLTextNode("" + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag("menuitem"));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag("title"));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
            if (Array.isArray(children) && children.length > 1) {
              error2("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && child.$$typeof != null) {
              error2("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && typeof child !== "string" && typeof child !== "number") {
              error2("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === "string") {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "style":
                  pushStyle(target, responseState, propValue);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  if (isAttributeNameSafe(propKey) && typeof propValue !== "function" && typeof propValue !== "symbol") {
                    target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk("\n");
        function pushStartPreformattedElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html = innerHTML.__html;
            if (html !== null && html !== void 0) {
              if (typeof html === "string" && html.length > 0 && html[0] === "\n") {
                target.push(leadingNewline, stringToChunk(html));
              } else {
                {
                  checkHtmlStringCoercion(html);
                }
                target.push(stringToChunk("" + html));
              }
            }
          }
          if (typeof children === "string" && children[0] === "\n") {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error("Invalid tag: " + tag);
            }
            tagStartChunk = stringToPrecomputedChunk("<" + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
        function pushStartInstance(target, type, props, responseState, formatContext) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error2("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
            if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {
              if (type.indexOf("-") === -1 && typeof props.is !== "string" && type.toLowerCase() !== type) {
                error2("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
          }
          switch (type) {
            case "select":
              return pushStartSelect(target, props, responseState);
            case "option":
              return pushStartOption(target, props, responseState, formatContext);
            case "textarea":
              return pushStartTextArea(target, props, responseState);
            case "input":
              return pushInput(target, props, responseState);
            case "menuitem":
              return pushStartMenuItem(target, props, responseState);
            case "title":
              return pushStartTitle(target, props, responseState);
            case "listing":
            case "pre": {
              return pushStartPreformattedElement(target, props, type, responseState);
            }
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              return pushSelfClosing(target, props, type, responseState);
            }
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph": {
              return pushStartGenericElement(target, props, type, responseState);
            }
            case "html": {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(target, props, type, responseState);
            }
            default: {
              if (type.indexOf("-") === -1 && typeof props.is !== "string") {
                return pushStartGenericElement(target, props, type, responseState);
              } else {
                return pushStartCustomElement(target, props, type, responseState);
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk("</");
        var endTag2 = stringToPrecomputedChunk(">");
        function pushEndInstance(target, type, props) {
          switch (type) {
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i = 0;
          for (; i < bootstrapChunks.length - 1; i++) {
            writeChunk(destination, bootstrapChunks[i]);
          }
          if (i < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="');
        var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
        var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
        var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
        function writeStartCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
        }
        function writeStartPendingSuspenseBoundary(destination, responseState, id) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
        }
        function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
          var result;
          result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));
            writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
          }
          result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk("</div>");
        var startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="');
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk("</svg>");
        var startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="');
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk("</math>");
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk("</table>");
        var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
        var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
        var startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="');
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
        function writeStartSegment(destination, responseState, formatContext, id) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}";
        var completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("');
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("');
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("');
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(")<\/script>");
        var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
        function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")));
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")));
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function(match) {
            switch (match) {
              case "<":
                return "\\u003c";
              case "\u2028":
                return "\\u2028";
              case "\u2029":
                return "\\u2029";
              default: {
                throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
              }
            }
          });
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init2(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init2 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init2(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            return context;
          }
        }
        function processChildContext(instance, type, parentContext, childContextTypes) {
          {
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error2("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next)
            ;
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
            } else {
              if (parentNext === null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue;
            context._currentValue = nextValue;
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
          }
          {
            if (prevSnapshot.context !== context) {
              error2("The parent context is not the expected context. This is probably a bug in React.");
            }
          }
          {
            var value = prevSnapshot.parentValue;
            if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue = value;
            }
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
          return currentActiveSnapshot = prevSnapshot.parent;
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue;
          return value;
        }
        function get(key) {
          return key._reactInternals;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error2("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error2("%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.", callerName, callerName, componentName);
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function(inst) {
            return false;
          },
          enqueueSetState: function(inst, payload, callback) {
            var internals = get(inst);
            if (internals.queue === null) {
              warnNoop(inst, "setState");
            } else {
              internals.queue.push(payload);
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var internals = get(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback !== void 0 && callback !== null) {
                warnOnInvalidCallback(callback, "setState");
              }
            }
          },
          enqueueForceUpdate: function(inst, callback) {
            var internals = get(inst);
            if (internals.queue === null) {
              warnNoop(inst, "forceUpdate");
            } else {
              {
                if (callback !== void 0 && callback !== null) {
                  warnOnInvalidCallback(callback, "setState");
                }
              }
            }
          }
        };
        function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = (
                // Allow null for conditional declaration
                contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
              );
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error2("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && (instance.state === null || instance.state === void 0)) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error2("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error2("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error2("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error2("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error2("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error2("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error2("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error2("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error2("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error2("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error2("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error2("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error2("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error2("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error2("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error2("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error2("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error2("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error2("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error2("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error2("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray(_state))) {
              error2("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error2("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            {
              if (instance.componentWillMount.__suppressDeprecationWarning !== true) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn2(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    "componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s",
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error2("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
          if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
                var partial = oldQueue[i];
                var partialState = typeof partial === "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false
          };
          set(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error2("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: ""
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: 1 << restOfLength | id,
              overflow
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: 1 << length | _id,
              overflow: _overflow
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log2 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x) {
          var asUint = x >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log2(asUint) / LN2 | 0) | 0;
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
          }
          {
            if (isInHookUserCodeInDev) {
              error2("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error2("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error2("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error("Rendered more hooks than during the previous render");
          }
          return {
            memoizedState: null,
            queue: null,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = "useContext";
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function useState(initialState) {
          {
            currentHookNameInDev = "useState";
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init2) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = "useReducer";
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState = typeof initialArg === "function" ? initialArg() : initialArg;
            } else {
              initialState = init2 !== void 0 ? init2(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue2 = workInProgressHook.queue = {
              last: null,
              dispatch: null
            };
            var _dispatch = _queue2.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue2);
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = "useLayoutEffect";
            error2("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback, deps) {
          return useMemo(function() {
            return callback;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          if (getServerSnapshot === void 0) {
            throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error("startTransition cannot be called during server rendering.");
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop() {
        }
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState,
          useInsertionEffect: noop,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop,
          // Effects are not run in the server environment.
          useEffect: noop,
          // Debugging effect
          useDebugValue: noop,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info = "";
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info;
          } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error3) {
          console["error"](error3);
          return null;
        }
        function noop$1() {
        }
        function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request = {
            destination: null,
            responseState,
            progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError === void 0 ? defaultErrorHandler : onError,
            onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
            onShellError: onShellError === void 0 ? noop$1 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
          };
          var rootSegment = createPendingSegment(
            request,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
          pingedTasks.push(rootTask);
          return request;
        }
        function pingTask(request, task) {
          var pingedTasks = request.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function() {
              return performWork(request);
            });
          }
        }
        function createSuspenseBoundary(request, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null
          };
        }
        function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
          request.allPendingTasks++;
          if (blockedBoundary === null) {
            request.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function() {
              return pingTask(request, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {
              return "";
            }
            return getStackByComponentStackNode(currentTaskInDEV.componentStack);
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error2("Unexpectedly popped too many stack frames. This is a bug in React.");
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error3) {
          {
            var errorMessage;
            if (typeof error3 === "string") {
              errorMessage = error3;
            } else if (error3 && typeof error3.message === "string") {
              errorMessage = error3.message;
            } else {
              errorMessage = String(error3);
            }
            var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request, error3) {
          var errorDigest = request.onError(error3);
          if (errorDigest != null && typeof errorDigest !== "string") {
            throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
          }
          return errorDigest;
        }
        function fatalError(request, error3) {
          var onShellError = request.onShellError;
          onShellError(error3);
          var onFatalError = request.onFatalError;
          onFatalError(error3);
          if (request.destination !== null) {
            request.status = CLOSED;
            closeWithError(request.destination, error3);
          } else {
            request.status = CLOSING;
            request.fatalError = error3;
          }
        }
        function renderSuspenseBoundary(request, task, props) {
          pushBuiltInComponentStackInDEV(task, "Suspense");
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode(request, task, content);
            pushSegmentFinale(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error3) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request, error3);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error3);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(prevContext, type, props);
          renderNode(request, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(request, task, instance, Component, props) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error2("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);
              task.legacyContext = mergedContext;
              renderNodeDestructive(request, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request, task, nextChildren);
        }
        function renderClassComponent(request, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(Component, props, maskedContext);
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(request, task, Component, props) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error2("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(request, task, Component, props, legacyContext);
          var hasId = checkDidRenderIdHook();
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0
          ) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
              try {
                renderNodeDestructive(request, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error2("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error2("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error2("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(request, task, type.render, props, ref);
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
            try {
              renderNodeDestructive(request, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement2(request, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error2("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var render = props.children;
          {
            if (typeof render !== "function") {
              error2("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          var newValue = readContext(context);
          var newChildren = render(newValue);
          renderNodeDestructive(request, task, newChildren);
        }
        function renderContextProvider(request, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error2("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
            }
          }
        }
        function renderLazyComponent(request, task, lazyComponent, props, ref) {
          pushBuiltInComponentStackInDEV(task, "Lazy");
          var payload = lazyComponent._payload;
          var init2 = lazyComponent._init;
          var Component = init2(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement2(request, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement2(request, task, type, props, ref) {
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request, task, type, props);
              return;
            }
          }
          if (typeof type === "string") {
            renderHostElement(request, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, "SuspenseList");
              renderNodeDestructive(request, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error("ReactDOMServer does not yet support scope components.");
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request, task, props);
              }
              return;
            }
          }
          if (typeof type === "object" && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request, task, type, props);
                return;
              }
            }
          }
          var info = "";
          {
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            iterable[Symbol.toStringTag] === "Generator") {
              if (!didWarnAboutGenerators) {
                error2("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request, task, node);
            } catch (x) {
              if (typeof x === "object" && x !== null && typeof x.then === "function")
                ;
              else {
                lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();
              }
              throw x;
            }
          }
        }
        function renderNodeDestructiveImpl(request, task, node) {
          task.node = node;
          if (typeof node === "object" && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement2(request, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init2 = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init2(payload);
                  } catch (x) {
                    if (typeof x === "object" && x !== null && typeof x.then === "function") {
                      pushBuiltInComponentStackInDEV(task, "Lazy");
                    }
                    throw x;
                  }
                }
                renderNodeDestructive(request, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
          }
          if (typeof node === "string") {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
            return;
          }
          if (typeof node === "number") {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
            return;
          }
          {
            if (typeof node === "function") {
              error2("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
        }
        function renderChildrenArray(request, task, children) {
          var totalChildren = children.length;
          for (var i = 0; i < totalChildren; i++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i);
            try {
              renderNode(request, task, children[i]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request, task, x) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x.then(ping, ping);
        }
        function renderNode(request, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request, task, node);
          } catch (x) {
            resetHooksState();
            if (typeof x === "object" && x !== null && typeof x.then === "function") {
              spawnNewSuspendedTask(request, task, x);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x;
            }
          }
        }
        function erroredTask(request, boundary, segment, error3) {
          var errorDigest = logRecoverableError(request, error3);
          if (boundary === null) {
            fatalError(request, error3);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error3);
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request, boundary, segment);
        }
        function abortTask(task, request, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request.allPendingTasks--;
            if (request.status !== CLOSED) {
              request.status = CLOSED;
              if (request.destination !== null) {
                close(request.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error2 = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
              boundary.errorDigest = request.onError(_error2);
              {
                var errorPrefix = "The server did not finish this Suspense boundary: ";
                if (_error2 && typeof _error2.message === "string") {
                  _error2 = errorPrefix + _error2.message;
                } else {
                  _error2 = errorPrefix + String(_error2);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error2);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
              return abortTask(fallbackTask, request, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request.allPendingTasks--;
            if (request.allPendingTasks === 0) {
              var onAllReady = request.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request.completedRootSegment !== null) {
                throw new Error("There can only be one root segment. This is a bug in React.");
              }
              request.completedRootSegment = segment;
            }
            request.pendingRootTasks--;
            if (request.pendingRootTasks === 0) {
              request.onShellError = noop$1;
              var onShellReady = request.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender)
              ;
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request, task, task.node);
            pushSegmentFinale(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request, task.blockedBoundary, segment);
          } catch (x) {
            resetHooksState();
            if (typeof x === "object" && x !== null && typeof x.then === "function") {
              var ping = task.ping;
              x.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request, task.blockedBoundary, segment, x);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request) {
          if (request.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks;
            var i;
            for (i = 0; i < pingedTasks.length; i++) {
              var task = pingedTasks[i];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i);
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = segment.id = request.nextSegmentId++;
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(destination, request.responseState, segmentID);
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r = flushSegment(request, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r;
            }
            default: {
              throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
            }
          }
        }
        function flushSegment(request, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
            flushSubtree(request, destination, segment);
            return writeEndClientRenderedSuspenseBoundary(destination, request.responseState);
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request.partialBoundaries.push(boundary);
            }
            var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
            writeStartPendingSuspenseBoundary(destination, request.responseState, id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else if (boundary.byteSize > request.progressiveChunkSize) {
            boundary.rootSegmentID = request.nextSegmentId++;
            request.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else {
            writeStartCompletedSuspenseBoundary(destination, request.responseState);
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
            }
            var contentSegment = completedSegments[0];
            flushSegment(request, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary(destination, request.responseState);
          }
        }
        function flushClientRenderedBoundary(request, destination, boundary) {
          return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
        }
        function flushSegmentContainer(request, destination, segment) {
          writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);
          flushSegment(request, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            flushPartiallyCompletedSegment(request, destination, boundary, segment);
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
        }
        function flushPartialBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i = 0;
          for (; i < completedSegments.length; i++) {
            var segment = completedSegments[i];
            if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {
              i++;
              completedSegments.splice(0, i);
              return false;
            }
          }
          completedSegments.splice(0, i);
          return true;
        }
        function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = segment.id = boundary.rootSegmentID;
            if (rootSegmentID === -1) {
              throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
            }
            return flushSegmentContainer(request, destination, segment);
          } else {
            flushSegmentContainer(request, destination, segment);
            return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
          }
        }
        function flushCompletedQueues(request, destination) {
          beginWriting();
          try {
            var completedRootSegment = request.completedRootSegment;
            if (completedRootSegment !== null && request.pendingRootTasks === 0) {
              flushSegment(request, destination, completedRootSegment);
              request.completedRootSegment = null;
              writeCompletedRoot(destination, request.responseState);
            }
            var clientRenderedBoundaries = request.clientRenderedBoundaries;
            var i;
            for (i = 0; i < clientRenderedBoundaries.length; i++) {
              var boundary = clientRenderedBoundaries[i];
              if (!flushClientRenderedBoundary(request, destination, boundary)) {
                request.destination = null;
                i++;
                clientRenderedBoundaries.splice(0, i);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i);
            var completedBoundaries = request.completedBoundaries;
            for (i = 0; i < completedBoundaries.length; i++) {
              var _boundary = completedBoundaries[i];
              if (!flushCompletedBoundary(request, destination, _boundary)) {
                request.destination = null;
                i++;
                completedBoundaries.splice(0, i);
                return;
              }
            }
            completedBoundaries.splice(0, i);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request.partialBoundaries;
            for (i = 0; i < partialBoundaries.length; i++) {
              var _boundary2 = partialBoundaries[i];
              if (!flushPartialBoundary(request, destination, _boundary2)) {
                request.destination = null;
                i++;
                partialBoundaries.splice(0, i);
                return;
              }
            }
            partialBoundaries.splice(0, i);
            var largeBoundaries = request.completedBoundaries;
            for (i = 0; i < largeBoundaries.length; i++) {
              var _boundary3 = largeBoundaries[i];
              if (!flushCompletedBoundary(request, destination, _boundary3)) {
                request.destination = null;
                i++;
                largeBoundaries.splice(0, i);
                return;
              }
            }
            largeBoundaries.splice(0, i);
          } finally {
            completeWriting(destination);
            if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0) {
              {
                if (request.abortableTasks.size !== 0) {
                  error2("There was still abortable task at the root when we closed. This is a bug in React.");
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request) {
          scheduleWork(function() {
            return performWork(request);
          });
        }
        function startFlowing(request, destination) {
          if (request.status === CLOSING) {
            request.status = CLOSED;
            closeWithError(destination, request.fatalError);
            return;
          }
          if (request.status === CLOSED) {
            return;
          }
          if (request.destination !== null) {
            return;
          }
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function abort(request, reason) {
          try {
            var abortableTasks = request.abortableTasks;
            abortableTasks.forEach(function(task) {
              return abortTask(task, request, reason);
            });
            abortableTasks.clear();
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function renderToReadableStream(children, options) {
          return new Promise(function(resolve, reject) {
            var onFatalError;
            var onAllReady;
            var allReady = new Promise(function(res, rej) {
              onAllReady = res;
              onFatalError = rej;
            });
            function onShellReady() {
              var stream = new ReadableStream(
                {
                  type: "bytes",
                  pull: function(controller) {
                    startFlowing(request, controller);
                  },
                  cancel: function(reason) {
                    abort(request);
                  }
                },
                // $FlowFixMe size() methods are not allowed on byte streams.
                {
                  highWaterMark: 0
                }
              );
              stream.allReady = allReady;
              resolve(stream);
            }
            function onShellError(error3) {
              allReady.catch(function() {
              });
              reject(error3);
            }
            var request = createRequest(children, createResponseState(options ? options.identifierPrefix : void 0, options ? options.nonce : void 0, options ? options.bootstrapScriptContent : void 0, options ? options.bootstrapScripts : void 0, options ? options.bootstrapModules : void 0), createRootFormatContext(options ? options.namespaceURI : void 0), options ? options.progressiveChunkSize : void 0, options ? options.onError : void 0, onAllReady, onShellReady, onShellError, onFatalError);
            if (options && options.signal) {
              var signal = options.signal;
              var listener = function() {
                abort(request, signal.reason);
                signal.removeEventListener("abort", listener);
              };
              signal.addEventListener("abort", listener);
            }
            startWork(request);
          });
        }
        exports.renderToReadableStream = renderToReadableStream;
        exports.version = ReactVersion;
      })();
    }
  }
});

// ../../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/server.browser.js
var require_server_browser = __commonJS({
  "../../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/server.browser.js"(exports) {
    "use strict";
    var l;
    var s;
    if (false) {
      l = null;
      s = null;
    } else {
      l = require_react_dom_server_legacy_browser_development();
      s = require_react_dom_server_browser_development();
    }
    exports.version = l.version;
    exports.renderToString = l.renderToString;
    exports.renderToStaticMarkup = l.renderToStaticMarkup;
    exports.renderToNodeStream = l.renderToNodeStream;
    exports.renderToStaticNodeStream = l.renderToStaticNodeStream;
    exports.renderToReadableStream = s.renderToReadableStream;
  }
});

// dist/$server_build/chunks/pages/index.astro.dd765c5d.mjs
var index_astro_dd765c5d_exports = {};
__export(index_astro_dd765c5d_exports, {
  default: () => $$Index,
  file: () => $$file,
  prerender: () => prerender,
  url: () => $$url
});
function mergeIconTransformations(obj1, obj2) {
  const result = {};
  if (!obj1.hFlip !== !obj2.hFlip) {
    result.hFlip = true;
  }
  if (!obj1.vFlip !== !obj2.vFlip) {
    result.vFlip = true;
  }
  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;
  if (rotate) {
    result.rotate = rotate;
  }
  return result;
}
function mergeIconData(parent, child) {
  const result = mergeIconTransformations(parent, child);
  for (const key in defaultExtendedIconProps) {
    if (key in defaultIconTransformations) {
      if (key in parent && !(key in result)) {
        result[key] = defaultIconTransformations[key];
      }
    } else if (key in child) {
      result[key] = child[key];
    } else if (key in parent) {
      result[key] = parent[key];
    }
  }
  return result;
}
function getIconsTree(data, names) {
  const icons2 = data.icons;
  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);
  const resolved = /* @__PURE__ */ Object.create(null);
  function resolve(name) {
    if (icons2[name]) {
      return resolved[name] = [];
    }
    if (!(name in resolved)) {
      resolved[name] = null;
      const parent = aliases[name] && aliases[name].parent;
      const value = parent && resolve(parent);
      if (value) {
        resolved[name] = [parent].concat(value);
      }
    }
    return resolved[name];
  }
  (names || Object.keys(icons2).concat(Object.keys(aliases))).forEach(resolve);
  return resolved;
}
function internalGetIconData(data, name, tree) {
  const icons2 = data.icons;
  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);
  let currentProps = {};
  function parse2(name2) {
    currentProps = mergeIconData(
      icons2[name2] || aliases[name2],
      currentProps
    );
  }
  parse2(name);
  tree.forEach(parse2);
  return mergeIconData(data, currentProps);
}
function getIconData(data, name) {
  if (data.icons[name]) {
    return internalGetIconData(data, name, []);
  }
  const tree = getIconsTree(data, [name])[name];
  return tree ? internalGetIconData(data, name, tree) : null;
}
function calculateSize(size, ratio, precision) {
  if (ratio === 1) {
    return size;
  }
  precision = precision || 100;
  if (typeof size === "number") {
    return Math.ceil(size * ratio * precision) / precision;
  }
  if (typeof size !== "string") {
    return size;
  }
  const oldParts = size.split(unitsSplit);
  if (oldParts === null || !oldParts.length) {
    return size;
  }
  const newParts = [];
  let code = oldParts.shift();
  let isNumber = unitsTest.test(code);
  while (true) {
    if (isNumber) {
      const num = parseFloat(code);
      if (isNaN(num)) {
        newParts.push(code);
      } else {
        newParts.push(Math.ceil(num * ratio * precision) / precision);
      }
    } else {
      newParts.push(code);
    }
    code = oldParts.shift();
    if (code === void 0) {
      return newParts.join("");
    }
    isNumber = !isNumber;
  }
}
function iconToSVG(icon, customisations) {
  const fullIcon = {
    ...defaultIconProps,
    ...icon
  };
  const fullCustomisations = {
    ...defaultIconCustomisations,
    ...customisations
  };
  const box = {
    left: fullIcon.left,
    top: fullIcon.top,
    width: fullIcon.width,
    height: fullIcon.height
  };
  let body = fullIcon.body;
  [fullIcon, fullCustomisations].forEach((props) => {
    const transformations = [];
    const hFlip = props.hFlip;
    const vFlip = props.vFlip;
    let rotation = props.rotate;
    if (hFlip) {
      if (vFlip) {
        rotation += 2;
      } else {
        transformations.push(
          "translate(" + (box.width + box.left).toString() + " " + (0 - box.top).toString() + ")"
        );
        transformations.push("scale(-1 1)");
        box.top = box.left = 0;
      }
    } else if (vFlip) {
      transformations.push(
        "translate(" + (0 - box.left).toString() + " " + (box.height + box.top).toString() + ")"
      );
      transformations.push("scale(1 -1)");
      box.top = box.left = 0;
    }
    let tempValue;
    if (rotation < 0) {
      rotation -= Math.floor(rotation / 4) * 4;
    }
    rotation = rotation % 4;
    switch (rotation) {
      case 1:
        tempValue = box.height / 2 + box.top;
        transformations.unshift(
          "rotate(90 " + tempValue.toString() + " " + tempValue.toString() + ")"
        );
        break;
      case 2:
        transformations.unshift(
          "rotate(180 " + (box.width / 2 + box.left).toString() + " " + (box.height / 2 + box.top).toString() + ")"
        );
        break;
      case 3:
        tempValue = box.width / 2 + box.left;
        transformations.unshift(
          "rotate(-90 " + tempValue.toString() + " " + tempValue.toString() + ")"
        );
        break;
    }
    if (rotation % 2 === 1) {
      if (box.left !== box.top) {
        tempValue = box.left;
        box.left = box.top;
        box.top = tempValue;
      }
      if (box.width !== box.height) {
        tempValue = box.width;
        box.width = box.height;
        box.height = tempValue;
      }
    }
    if (transformations.length) {
      body = '<g transform="' + transformations.join(" ") + '">' + body + "</g>";
    }
  });
  const customisationsWidth = fullCustomisations.width;
  const customisationsHeight = fullCustomisations.height;
  const boxWidth = box.width;
  const boxHeight = box.height;
  let width;
  let height;
  if (customisationsWidth === null) {
    height = customisationsHeight === null ? "1em" : customisationsHeight === "auto" ? boxHeight : customisationsHeight;
    width = calculateSize(height, boxWidth / boxHeight);
  } else {
    width = customisationsWidth === "auto" ? boxWidth : customisationsWidth;
    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === "auto" ? boxHeight : customisationsHeight;
  }
  const attributes = {};
  const setAttr = (prop, value) => {
    if (!isUnsetKeyword(value)) {
      attributes[prop] = value.toString();
    }
  };
  setAttr("width", width);
  setAttr("height", height);
  attributes.viewBox = box.left.toString() + " " + box.top.toString() + " " + boxWidth.toString() + " " + boxHeight.toString();
  return {
    attributes,
    body
  };
}
var icons, defaultIconDimensions, defaultIconTransformations, defaultIconProps, defaultExtendedIconProps, defaultIconSizeCustomisations, defaultIconCustomisations, unitsSplit, unitsTest, isUnsetKeyword, cache, $$Astro$2, $$Icon, $$Astro$1, $$Wrapper, $$Astro, prerender, $$Index, $$file, $$url;
var init_index_astro_dd765c5d = __esm({
  "dist/$server_build/chunks/pages/index.astro.dd765c5d.mjs"() {
    "use strict";
    init_astro_d1132a9b();
    icons = { "carbon": { "prefix": "carbon", "icons": { "3d-cursor": { "body": '<path d="M13 4H4v9.01h2V6h7V4z" fill="currentColor"/><path d="M29.49 13.12l-9-5a1 1 0 0 0-1 0l-9 5A1 1 0 0 0 10 14v10a1 1 0 0 0 .52.87l9 5A1 1 0 0 0 20 30a1.05 1.05 0 0 0 .49-.13l9-5A1 1 0 0 0 30 24V14a1 1 0 0 0-.51-.88zM19 27.3l-7-3.89v-7.72l7 3.89zm1-9.45L13.06 14L20 10.14L26.94 14zm8 5.56l-7 3.89v-7.72l7-3.89z" fill="currentColor"/>', "hidden": true }, "3d-cursor-alt": { "body": '<path d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4z" fill="currentColor"/><path d="M15 7h2v7h-2z" fill="currentColor"/><path d="M7 15h7v2H7z" fill="currentColor"/><path d="M15 18h2v7h-2z" fill="currentColor"/><path d="M18 15h7v2h-7z" fill="currentColor"/>', "hidden": true }, "3d-curve-auto-colon": { "body": '<path d="M9.5 8h10.6a5 5 0 1 0 0-2H9.5a5.5 5.5 0 0 0 0 11h11a3.5 3.5 0 0 1 0 7h-8.6a5 5 0 1 0 0 2h8.6a5.5 5.5 0 0 0 0-11h-11a3.5 3.5 0 0 1 0-7zM25 4a3 3 0 1 1-3 3a3 3 0 0 1 3-3zM7 28a3 3 0 1 1 3-3a3 3 0 0 1-3 3z" fill="currentColor"/>', "hidden": true }, "3d-curve-auto-vessels": { "body": '<path d="M17 11a3 3 0 0 1 3-3h.1a5 5 0 1 0 0-2H20a5 5 0 0 0-5 5v1h-2a3 3 0 0 1-3-3V7a5 5 0 0 0-5-5H4v2h1a3 3 0 0 1 3 3v2a5 5 0 0 0 5 5h2v7a3 3 0 0 1-3 3h-.1a5 5 0 1 0 0 2h.1a5 5 0 0 0 5-5h2.5a2.5 2.5 0 0 1 2.5 2.5a4.51 4.51 0 0 0 4.5 4.5H28v-2h-1.5a2.5 2.5 0 0 1-2.5-2.5a4.51 4.51 0 0 0-4.5-4.5H17zm8-7a3 3 0 1 1-3 3a3 3 0 0 1 3-3zM7 28a3 3 0 1 1 3-3a3 3 0 0 1-3 3z" fill="currentColor"/>', "hidden": true }, "3d-curve-manual": { "body": '<path d="M15 21a3 3 0 0 1-3 3h-.1a5 5 0 1 0 0 2h.1a5 5 0 0 0 5-5zm-8 7a3 3 0 1 1 3-3a3 3 0 0 1-3 3z" fill="currentColor"/><path d="M15 13h2v6h-2z" fill="currentColor"/><path d="M25 2a5 5 0 0 0-4.9 4H20a5 5 0 0 0-5 5h2a3 3 0 0 1 3-3h.1A5 5 0 1 0 25 2zm0 8a3 3 0 1 1 3-3a3 3 0 0 1-3 3z" fill="currentColor"/>', "hidden": true }, "3d-ica": { "body": '<path d="M15 14h-5a2 2 0 0 1-2-2V4a2 2 0 0 1 .59-1.42A3.57 3.57 0 0 1 10 2h5v2h-5v8h5z" fill="currentColor"/><path d="M4 6h2v8H4z" fill="currentColor"/><path d="M4 2h2v2H4z" fill="currentColor"/><path d="M27.45 19.11l-6-3a1 1 0 0 0-.9 0l-6 3A1 1 0 0 0 14 20v7a1 1 0 0 0 .55.89l6 3a1 1 0 0 0 .9 0l6-3A1 1 0 0 0 28 27v-7a1 1 0 0 0-.55-.89zm-6.45-1L24.76 20L21 21.88L17.24 20zm-5 3.5l4 2v4.76l-4-2zm6 6.76v-4.75l4-2v4.76z" fill="currentColor"/><path d="M23 2h-4a2 2 0 0 0-2 2v10h2v-4h4v4h2V4a2 2 0 0 0-2-2zm-4 6V4h4v4z" fill="currentColor"/>', "hidden": true }, "3d-mpr-toggle": { "body": '<path d="M11 2H2v9h2V4h7V2z" fill="currentColor"/><path d="M2 21v9h9v-2H4v-7H2z" fill="currentColor"/><path d="M30 11V2h-9v2h7v7h2z" fill="currentColor"/><path d="M21 30h9v-9h-2v7h-7v2z" fill="currentColor"/><path d="M25.49 10.13l-9-5a1 1 0 0 0-1 0l-9 5A1 1 0 0 0 6 11v10a1 1 0 0 0 .51.87l9 5a1 1 0 0 0 1 0l9-5A1 1 0 0 0 26 21V11a1 1 0 0 0-.51-.87zM16 7.14L22.94 11L16 14.86L9.06 11zM8 12.7l7 3.89v7.71l-7-3.89zm9 11.6v-7.71l7-3.89v7.71z" fill="currentColor"/>', "hidden": true }, "3d-print-mesh": { "body": '<path d="M29.976 15.783l-2-9a1 1 0 0 0-.421-.615l-6-4A1 1 0 0 0 21 2H11a1 1 0 0 0-.555.168l-6 4a1 1 0 0 0-.421.615l-2 9a1.002 1.002 0 0 0 .018.504l3 10a1 1 0 0 0 .67.671l10 3h.006a.979.979 0 0 0 .564 0h.005l10-3a1 1 0 0 0 .671-.67l3-10a1.002 1.002 0 0 0 .018-.505zm-19.05.833l-3.91-7.819l7.282 2.648zM16 12.497L19.589 18H12.41zM19.382 20L16 26.764L12.618 20zm-1.68-8.555l7.281-2.648l-3.91 7.82zm.488-2.305l3.096-4.747l3.515 2.343zM16 8.836L12.846 4h6.308zm-2.19.304L7.2 6.736l3.514-2.343zm-4.844 8.03l-4.802-1.801l1.201-5.402zm5.104 10.207l-6.502-1.95l3.128-4.798zm7.233-6.748l3.129 4.797l-6.502 1.951zm5.332-10.662l1.2 5.402l-4.802 1.8zM4.537 17.645l4.595 1.722l-2.793 4.283zm21.124 6.005l-2.793-4.283l4.595-1.722z" fill="currentColor"/>', "hidden": true }, "3d-software": { "body": '<path d="M21.49 13.115l-9-5a1 1 0 0 0-1 0l-9 5A1.008 1.008 0 0 0 2 14v9.995a1 1 0 0 0 .52.87l9 5A1.004 1.004 0 0 0 12 30a1.056 1.056 0 0 0 .49-.135l9-5A.992.992 0 0 0 22 24V14a1.008 1.008 0 0 0-.51-.885zM11 27.295l-7-3.89v-7.72l7 3.89zm1-9.45L5.06 14L12 10.135l6.94 3.86zm8 5.56l-7 3.89v-7.72l7-3.89z" fill="currentColor"/><path d="M30 6h-4V2h-2v4h-4v2h4v4h2V8h4V6z" fill="currentColor"/>', "hidden": true }, "3rd-party-connected": { "body": '<path d="M26 22a3.86 3.86 0 0 0-2 .57l-3.09-3.1a6 6 0 0 0 0-6.94L24 9.43a3.86 3.86 0 0 0 2 .57a4 4 0 1 0-4-4a3.86 3.86 0 0 0 .57 2l-3.1 3.09a6 6 0 0 0-6.94 0L9.43 8A3.86 3.86 0 0 0 10 6a4 4 0 1 0-4 4a3.86 3.86 0 0 0 2-.57l3.09 3.1a6 6 0 0 0 0 6.94L8 22.57A3.86 3.86 0 0 0 6 22a4 4 0 1 0 4 4a3.86 3.86 0 0 0-.57-2l3.1-3.09a6 6 0 0 0 6.94 0l3.1 3.09a3.86 3.86 0 0 0-.57 2a4 4 0 1 0 4-4zm-10-2a4 4 0 1 1 4-4a4 4 0 0 1-4 4z" fill="currentColor"/>', "hidden": true }, "4k": { "body": '<path fill="currentColor" d="M12 11.03v4h-2v-4H8v6h4v4h2v-10h-2zm12.19 0H22l-3 4.39v-4.39h-2v10h2V18.3l.91-1.33L22 21.03h2.19l-2.99-5.62l2.99-4.38z"/><path fill="currentColor" d="M28 26H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2ZM4 8v16h24V8Z"/>' }, "4k-filled": { "body": '<path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2ZM14 21h-2v-4H8v-6h2v4h2v-4h2Zm10.19 0H22l-2.09-4.06l-.91 1.33V21h-2V11h2v4.39L22 11h2.19l-3 4.38Z"/>' }, "accessibility": { "body": '<path fill="currentColor" d="m29.55 26.11l-3.05 1.52L23.66 21H15a2 2 0 0 1-2-2v-6a2 2 0 0 1 4 0v4h7v-2h-5v-2a4 4 0 0 0-8 0v1a9 9 0 1 0 8.77 11h-2.06A7 7 0 1 1 11 16v3a4 4 0 0 0 4 4h7.34l3.16 7.37l4.95-2.48zM15.5 8A3.5 3.5 0 1 1 19 4.5A3.5 3.5 0 0 1 15.5 8zm0-5A1.5 1.5 0 1 0 17 4.5A1.5 1.5 0 0 0 15.5 3z"/>' }, "accessibility-alt": { "body": '<path fill="currentColor" d="M23 14v-2H9v2h5v2.734l-3.868 6.77l1.736.992L15.58 18h.84l3.712 6.496l1.736-.992L18 16.734V14h5z"/><circle cx="16" cy="9" r="2" fill="currentColor"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "accessibility-color": { "body": '<path fill="currentColor" d="M16 20a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M16 24a10.655 10.655 0 0 1-9.97-7.758L5.97 16l.06-.242A10.655 10.655 0 0 1 16 8a10.655 10.655 0 0 1 9.97 7.758l.06.242l-.06.242A10.655 10.655 0 0 1 16 24Zm-7.965-8A8.598 8.598 0 0 0 16 22a8.598 8.598 0 0 0 7.965-6A8.598 8.598 0 0 0 16 10a8.598 8.598 0 0 0-7.965 6Z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "accessibility-color-filled": { "body": '<path fill="currentColor" d="M16 10a8.598 8.598 0 0 0-7.965 6A8.598 8.598 0 0 0 16 22a8.598 8.598 0 0 0 7.965-6A8.598 8.598 0 0 0 16 10Zm0 10a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 22a10.654 10.654 0 0 1-9.97-7.758L5.97 16l.06-.242A10.654 10.654 0 0 1 16 8a10.654 10.654 0 0 1 9.97 7.758l.06.242l-.06.242A10.654 10.654 0 0 1 16 24Z"/><circle cx="16" cy="16" r="2" fill="currentColor"/><path fill="none" d="M16 20a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2Z"/><path fill="none" d="M16 24a10.655 10.655 0 0 1-9.97-7.758L5.97 16l.06-.242A10.655 10.655 0 0 1 16 8a10.655 10.655 0 0 1 9.97 7.758l.06.242l-.06.242A10.655 10.655 0 0 1 16 24Zm-7.965-8A8.598 8.598 0 0 0 16 22a8.598 8.598 0 0 0 7.965-6A8.598 8.598 0 0 0 16 10a8.598 8.598 0 0 0-7.965 6Z"/>' }, "account": { "body": '<path fill="currentColor" d="M8 14h11v2H8Zm0 5h13v2H8Z"/><path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 2v2H4V6ZM4 26V10h24v16Z"/>' }, "accumulation-ice": { "body": '<path fill="currentColor" d="M22 8v8l1 2l1-2V8h-2zm-4 0v10l1 2l1-2V8h-2z"/><path fill="currentColor" d="M28 4a2.002 2.002 0 0 0-2 2v20H6v-4h4v-2H6v-4h4v-2H6v-4h8v4l1 2l1-2V8H6V6a2.002 2.002 0 0 0-2-2H2v2h2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6h2V4Z"/>' }, "accumulation-precipitation": { "body": '<path fill="currentColor" d="M16 16h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm4-8a3.898 3.898 0 0 1-4-3.777a3.902 3.902 0 0 1 .653-2.064l2.517-3.745a1.038 1.038 0 0 1 1.66 0l2.485 3.696A3.97 3.97 0 0 1 24 8.223A3.898 3.898 0 0 1 20 12zm0-7.237l-1.656 2.463a1.89 1.89 0 0 0-.344.997A1.9 1.9 0 0 0 20 10a1.9 1.9 0 0 0 2-1.777a1.98 1.98 0 0 0-.375-1.047z"/><path fill="currentColor" d="M28 4a2.002 2.002 0 0 0-2 2v20H6V10h2v8l1 2l1-2v-8h2v4l1 2l1-2V8H6V6a2.002 2.002 0 0 0-2-2H2v2h2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6h2V4Z"/>' }, "accumulation-rain": { "body": '<path fill="currentColor" d="M28 4a2.002 2.002 0 0 0-2 2v2h-2a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 20 5a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 16 8a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 12 5a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 8 8H6V6a2.002 2.002 0 0 0-2-2H2v2h2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6h2V4ZM6 26v-4h4v-2H6v-4h4v-2H6v-4h2a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 24 10h2v16Z"/>' }, "accumulation-snow": { "body": '<path fill="currentColor" d="M12 2h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm2 12h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm4-12h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2z"/><path fill="currentColor" d="M28 4a2.002 2.002 0 0 0-2 2v20H6v-4h4v-2H6v-4h4v-2H6v-4h4V8H6V6a2.002 2.002 0 0 0-2-2H2v2h2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6h2V4Z"/>' }, "activity": { "body": '<path fill="currentColor" d="M12 29a1 1 0 0 1-.92-.62L6.33 17H2v-2h5a1 1 0 0 1 .92.62L12 25.28l8.06-21.63A1 1 0 0 1 21 3a1 1 0 0 1 .93.68L25.72 15H30v2h-5a1 1 0 0 1-.95-.68L21 7l-8.06 21.35A1 1 0 0 1 12 29Z"/>' }, "add": { "body": '<path fill="currentColor" d="M17 15V8h-2v7H8v2h7v7h2v-7h7v-2z"/>' }, "add-alt": { "body": '<path fill="currentColor" d="M16 4c6.6 0 12 5.4 12 12s-5.4 12-12 12S4 22.6 4 16S9.4 4 16 4m0-2C8.3 2 2 8.3 2 16s6.3 14 14 14s14-6.3 14-14S23.7 2 16 2z"/><path fill="currentColor" d="M24 15h-7V8h-2v7H8v2h7v7h2v-7h7z"/>' }, "add-comment": { "body": '<path fill="currentColor" d="M17.74 30L16 29l4-7h6a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a4 4 0 0 1 4-4h20a4 4 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.84Z"/><path fill="currentColor" d="M17 9h-2v4h-4v2h4v4h2v-4h4v-2h-4V9z"/>' }, "add-filled": { "body": '<path fill="currentColor" d="M16 2A14.172 14.172 0 0 0 2 16a14.172 14.172 0 0 0 14 14a14.172 14.172 0 0 0 14-14A14.172 14.172 0 0 0 16 2Zm8 15h-7v7h-2v-7H8v-2h7V8h2v7h7Z"/><path fill="none" d="M24 17h-7v7h-2v-7H8v-2h7V8h2v7h7v2z"/>' }, "agriculture-analytics": { "body": '<path fill="currentColor" d="m24.251 21.37l2.194 1.462A1 1 0 0 0 27.8 22.6l3-4l-1.6-1.2l-2.433 3.244l-2.212-1.476a1 1 0 0 0-1.369.25L20 23.879V16h-2v10a2.002 2.002 0 0 0 2 2h10v-2h-9.057zM2 21h14v2H2zm0 5h14v2H2zm9-10v-5h1a4.005 4.005 0 0 0 4-4V4h-3a3.978 3.978 0 0 0-2.747 1.107A6.003 6.003 0 0 0 5 2H2v3a6.007 6.007 0 0 0 6 6h1v5H2v2h14v-2zm2-10h1v1a2.002 2.002 0 0 1-2 2h-1V8a2.002 2.002 0 0 1 2-2zM8 9a4.005 4.005 0 0 1-4-4V4h1a4.005 4.005 0 0 1 4 4v1z"/>' }, "ai-results": { "body": '<path d="M16 8a5.99 5.99 0 0 0 9.471 4.885L28.586 16L30 14.586l-3.115-3.115A5.997 5.997 0 1 0 16 8zm2 0a4 4 0 1 1 4 4a4.005 4.005 0 0 1-4-4z" fill="currentColor"/><path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.005 8.005 0 0 1 6-7.737L13.614 2.3A10.009 10.009 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M23.05 16a9.6 9.6 0 0 1-1.872 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386a10.966 10.966 0 0 0 2.369-2.833z" fill="currentColor"/>', "hidden": true }, "ai-results-high": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M23.049 16a9.614 9.614 0 0 1-1.871 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.989 9.989 0 0 0 25.282 16z" fill="currentColor"/><path d="M16 4a7.928 7.928 0 0 1 3.69.91l.896-1.79A9.99 9.99 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.186-3.86A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8z" fill="currentColor"/><path d="M29 14H19a1 1 0 0 1-.894-1.447l5-10a1 1 0 0 1 1.788 0l5 10A1 1 0 0 1 29 14zm-8.382-2h6.764L24 5.236z" fill="currentColor"/>', "hidden": true }, "ai-results-low": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M24 14a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4z" fill="currentColor"/><path d="M23.04 16a9.486 9.486 0 0 1-1.862 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.984 9.984 0 0 0 25.275 16z" fill="currentColor"/>', "hidden": true }, "ai-results-medium": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M28 14h-8a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2zM20 4v8h8V4z" fill="currentColor"/><path d="M23.04 16a9.486 9.486 0 0 1-1.862 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.984 9.984 0 0 0 25.275 16z" fill="currentColor"/>', "hidden": true }, "ai-results-urgent": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M20 2h2v7h-2z" fill="currentColor"/><path d="M21 11a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 21 11z" fill="currentColor"/><path d="M26 2h2v7h-2z" fill="currentColor"/><path d="M27 11a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 27 11z" fill="currentColor"/><path d="M23.04 16a9.486 9.486 0 0 1-1.862 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.984 9.984 0 0 0 25.275 16z" fill="currentColor"/>', "hidden": true }, "ai-results-very-high": { "body": '<path d="M24 2h2v7h-2z" fill="currentColor"/><path d="M25 11a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 25 11z" fill="currentColor"/><path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M23.049 16a9.614 9.614 0 0 1-1.871 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.989 9.989 0 0 0 25.282 16z" fill="currentColor"/><path d="M16 4a7.94 7.94 0 0 1 4 1.083V2.84A9.989 9.989 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.186-3.86A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8z" fill="currentColor"/>', "hidden": true }, "ai-status": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M23.04 16a9.486 9.486 0 0 1-1.862 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.984 9.984 0 0 0 25.275 16z" fill="currentColor"/><path d="M20 14a1 1 0 0 1-.894-.553L17.381 10H14V8h4a1 1 0 0 1 .894.553L20 10.763l3.106-6.21a1.042 1.042 0 0 1 1.788 0L26.619 8H30v2h-4a1 1 0 0 1-.894-.553L24 7.237l-3.106 6.21A1 1 0 0 1 20 14z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/>', "hidden": true }, "ai-status-complete": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M21 9.59L17.41 6L16 7.41l5 5l9-9L28.59 2L21 9.59z" fill="currentColor"/><path d="M23.8 14a7.28 7.28 0 0 1-2.622 4.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.143 9.143 0 0 0 25.84 14z" fill="currentColor"/>', "hidden": true }, "ai-status-failed": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M23.8 14a7.28 7.28 0 0 1-2.622 4.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.143 9.143 0 0 0 25.84 14z" fill="currentColor"/><path d="M30 3.41L28.59 2L25 5.59L21.41 2L20 3.41L23.59 7L20 10.59L21.41 12L25 8.41L28.59 12L30 10.59L26.41 7L30 3.41z" fill="currentColor"/>', "hidden": true }, "ai-status-in-progress": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M21.178 18.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.193 9.193 0 0 0 26 12h-2a7.203 7.203 0 0 1-2.822 6.143z" fill="currentColor"/><circle cx="18.5" cy="7.5" r="1.5" fill="currentColor"/><circle cx="28.5" cy="7.5" r="1.5" fill="currentColor"/><circle cx="23.5" cy="7.5" r="1.5" fill="currentColor"/>', "hidden": true }, "ai-status-queued": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M21.178 18.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.193 9.193 0 0 0 26 12h-2a7.203 7.203 0 0 1-2.822 6.143z" fill="currentColor"/><path fill="currentColor" d="M18 6h10v2H18z"/>', "hidden": true }, "ai-status-rejected": { "body": '<path d="M11 24h10v2H11z" fill="currentColor"/><path d="M13 28h6v2h-6z" fill="currentColor"/><path d="M10.815 18.14A7.185 7.185 0 0 1 8 12a8.01 8.01 0 0 1 8-8V2A10.011 10.011 0 0 0 6 12a9.18 9.18 0 0 0 3.46 7.616C10.472 20.551 11 21.081 11 22h2c0-1.84-1.11-2.866-2.185-3.86z" fill="currentColor"/><path d="M23.04 16a9.486 9.486 0 0 1-1.862 2.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.984 9.984 0 0 0 25.275 16z" fill="currentColor"/><path d="M30 8a6 6 0 1 0-6 6a6.007 6.007 0 0 0 6-6zm-2 0a3.952 3.952 0 0 1-.567 2.019l-5.452-5.452A3.953 3.953 0 0 1 24 4a4.005 4.005 0 0 1 4 4zm-8 0a3.952 3.952 0 0 1 .567-2.019l5.452 5.452A3.953 3.953 0 0 1 24 12a4.005 4.005 0 0 1-4-4z" fill="currentColor"/>', "hidden": true }, "airline-digital-gate": { "body": '<path fill="currentColor" d="M18 23h-2v-2a3.003 3.003 0 0 0-3-3H9a3.003 3.003 0 0 0-3 3v2H4v-2a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM11 6a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zM2 26h28v2H2zm29.966-14.259a1 1 0 0 0-1.225-.707l-3.086.826L24 7l-1 .268l1.458 5.448l-2.766.74L20 11.206l-1 .268l.934 3.488a1 1 0 0 0 1.224.708l10.1-2.704a1 1 0 0 0 .708-1.225z"/>' }, "airline-manage-gates": { "body": '<path fill="currentColor" d="M18 23h-2v-2a3.003 3.003 0 0 0-3-3H9a3.003 3.003 0 0 0-3 3v2H4v-2a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM11 6a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zM2 26h28v2H2zM22 4v2h4.586L20 12.586L21.414 14L28 7.414V12h2V4h-8z"/>' }, "airline-passenger-care": { "body": '<path fill="currentColor" d="M18 23h-2v-2a3.003 3.003 0 0 0-3-3H9a3.003 3.003 0 0 0-3 3v2H4v-2a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM11 6a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zM2 26h28v2H2zM27.303 8a2.662 2.662 0 0 0-1.908.806L25 9.21l-.395-.405a2.662 2.662 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L25 17l4.21-4.298a2.8 2.8 0 0 0 0-3.896A2.662 2.662 0 0 0 27.304 8z"/>' }, "airline-rapid-board": { "body": '<path fill="currentColor" d="M18 23h-2v-2a3.003 3.003 0 0 0-3-3H9a3.003 3.003 0 0 0-3 3v2H4v-2a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM11 6a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zM2 26h28v2H2zM30 8h-2V6h-2V4h4v4zM19 4h4v2h-2v2h-2V4zm9 9h2v2h-2zm-2-2h2v2h-2zm-7 0h2v2h2v2h-4v-4z"/>' }, "airplay": { "body": '<path fill="currentColor" d="M22.996 30H9.004a1.002 1.002 0 0 1-.821-1.577l6.998-9.996a1 1 0 0 1 1.638 0l6.998 9.996a1.002 1.002 0 0 1-.82 1.577ZM10.92 28h10.16L16 20.744Z"/><path fill="currentColor" d="M28 24h-4v-2h4V6H4v16h4v2H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2Z"/>' }, "airplay-filled": { "body": '<path fill="currentColor" d="M22.996 30H9.004a1.002 1.002 0 0 1-.821-1.577l6.998-9.996a1 1 0 0 1 1.638 0l6.998 9.996a1.002 1.002 0 0 1-.82 1.577Z"/><path fill="currentColor" d="M28 24h-4v-2h4V6H4v16h4v2H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2Z"/>' }, "airport-01": { "body": '<path fill="currentColor" fill-rule="evenodd" d="m17 14.5l6 2.5v-2l-6-3V9a1 1 0 0 0-2 0v3l-6 3v2l6-2.5V20l-3 2v1l4-1l4 1v-1l-3-2Z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "airport-02": { "body": '<path fill="currentColor" d="M23 17h-3.586L16 13h-2l2.586 4H10.72L9.5 15H8l1.057 3.305a1 1 0 0 0 .952.695H23a1 1 0 0 0 0-2Z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "airport-location": { "body": '<path fill="currentColor" d="M30 15h-6.07A8.008 8.008 0 0 0 17 8.07V2h-2v6.07A8.008 8.008 0 0 0 8.07 15H2v2h6.07A8.008 8.008 0 0 0 15 23.93V30h2v-6.07A8.008 8.008 0 0 0 23.93 17H30Zm-14 7a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Z"/>' }, "alarm": { "body": '<path fill="currentColor" d="M16 28a11 11 0 1 1 11-11a11 11 0 0 1-11 11Zm0-20a9 9 0 1 0 9 9a9 9 0 0 0-9-9Z"/><path fill="currentColor" d="M18.59 21L15 17.41V11h2v5.58l3 3.01L18.59 21zM4 7.592l3.582-3.589l1.416 1.413l-3.582 3.589zm19-2.184l1.415-1.413l3.581 3.589l-1.415 1.413z"/>' }, "alarm-add": { "body": '<path fill="currentColor" d="M16 28a11 11 0 1 1 11-11a11 11 0 0 1-11 11Zm0-20a9 9 0 1 0 9 9a9 9 0 0 0-9-9ZM4 7.592l3.582-3.589l1.416 1.413l-3.582 3.589zm19-2.184l1.415-1.413l3.581 3.589l-1.415 1.413z"/><path fill="currentColor" d="M21 16h-4v-4h-2v4h-4v2h4v4h2v-4h4v-2z"/>' }, "alarm-subtract": { "body": '<path fill="currentColor" d="M16 28a11 11 0 1 1 11-11a11 11 0 0 1-11 11Zm0-20a9 9 0 1 0 9 9a9 9 0 0 0-9-9ZM4 7.592l3.582-3.589l1.416 1.413l-3.582 3.589zm19-2.184l1.415-1.413l3.581 3.589l-1.415 1.413z"/><path fill="currentColor" d="M11 16h10v2H11z"/>' }, "align-box-bottom-center": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M22 20H10v-2h12zm-2 5h-8v-2h8z"/>' }, "align-box-bottom-left": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M9 18h11v2H9zm0 5h7v2H9z"/>' }, "align-box-bottom-right": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M23 20H12v-2h11zm0 5h-7v-2h7z"/>' }, "align-box-middle-center": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M22 15H10v-2h12zm-2 5h-8v-2h8z"/>' }, "align-box-middle-left": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M9 13h11v2H9zm0 5h7v2H9z"/>' }, "align-box-middle-right": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M23 15H12v-2h11zm0 5h-7v-2h7z"/>' }, "align-box-top-center": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M22 9H10V7h12zm-2 5h-8v-2h8z"/>' }, "align-box-top-left": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M9 7h11v2H9zm0 5h7v2H9z"/>' }, "align-box-top-right": { "body": '<path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM6 4v24h20V4Z"/><path fill="currentColor" d="M23 9H12V7h11zm0 5h-7v-2h7z"/>' }, "align-horizontal-center": { "body": '<path fill="currentColor" d="M24 18h-7v-4h3a2.002 2.002 0 0 0 2-2V8a2.002 2.002 0 0 0-2-2h-3V2h-2v4h-3a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h3v4H8a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h7v4h2v-4h7a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2ZM12 8h8v4h-8Zm12 16H8v-4h16Z"/>' }, "align-horizontal-left": { "body": '<path fill="currentColor" d="M26 26H11a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h15a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm0-6.001L11 20v4h15zM18 14h-7a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h7a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm0-6.001L11 8v4h7zM4 2h2v28H4z"/>' }, "align-horizontal-right": { "body": '<path fill="currentColor" d="M4 24v-4a2.002 2.002 0 0 1 2-2h15a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2H6a2.002 2.002 0 0 1-2-2zm2 0h15v-4l-15-.001zm6-12V8a2.002 2.002 0 0 1 2-2h7a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2h-7a2.002 2.002 0 0 1-2-2zm2 0h7V8l-7-.001zm14 18h-2V2h2z"/>' }, "align-vertical-bottom": { "body": '<path fill="currentColor" d="M2 26h28v2H2zm22-3h-4a2.002 2.002 0 0 1-2-2v-7a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v7a2.002 2.002 0 0 1-2 2zm-4-9v7h4.001L24 14zm-8 9H8a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v15a2.002 2.002 0 0 1-2 2zM8 6v15h4.001L12 6z"/>' }, "align-vertical-center": { "body": '<path fill="currentColor" d="M30 15h-4v-3a2.002 2.002 0 0 0-2-2h-4a2.002 2.002 0 0 0-2 2v3h-4V8a2.002 2.002 0 0 0-2-2H8a2.002 2.002 0 0 0-2 2v7H2v2h4v7a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2v-7h4v3a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2v-3h4ZM8 24V8h4l.001 16Zm12-4v-8h4l.001 8Z"/>' }, "align-vertical-top": { "body": '<path fill="currentColor" d="M24 20h-4a2.002 2.002 0 0 1-2-2v-7a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v7a2.002 2.002 0 0 1-2 2zm-4-9v7h4.001L24 11zm-8 17H8a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v15a2.002 2.002 0 0 1-2 2zM8 11v15h4.001L12 11zM2 4h28v2H2z"/>' }, "analytics": { "body": '<path fill="currentColor" d="M4 2H2v26a2 2 0 0 0 2 2h26v-2H4Z"/><path fill="currentColor" d="M30 9h-7v2h3.59L19 18.59l-4.29-4.3a1 1 0 0 0-1.42 0L6 21.59L7.41 23L14 16.41l4.29 4.3a1 1 0 0 0 1.42 0l8.29-8.3V16h2Z"/>' }, "analytics-custom": { "body": '<path fill="currentColor" d="m29.707 19.293l-3-3a1 1 0 0 0-1.414 0L16 25.586V30h4.414l9.293-9.293a1 1 0 0 0 0-1.414zM19.586 28H18v-1.586l5-5L24.586 23zM26 21.586L24.414 20L26 18.414L27.586 20zM30 4h-7v2h3.586L19 13.586l-4.293-4.293a1 1 0 0 0-1.414 0L6 16.586L7.414 18L14 11.414l4.293 4.293a1 1 0 0 0 1.414 0L28 7.414V11h2z"/><path fill="currentColor" d="M4 2H2v26a2 2 0 0 0 2 2h8v-2H4Z"/>' }, "analytics-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zM30 4h-7v2h3.586L19 13.586l-4.293-4.293a1 1 0 0 0-1.414 0L8 14.586L9.414 16L14 11.414l4.293 4.293a1 1 0 0 0 1.414 0L28 7.414V11h2zM16 28h14v2H16zM2 2h2v14H2z"/>' }, "angle": { "body": '<path d="M9 24a3.51 3.51 0 0 0-.88-1.86l9.53-16.58l-1.73-1l-9.57 16.56A3.06 3.06 0 0 0 5.5 21a3.5 3.5 0 1 0 3.15 5H28v-2zm-3.5 2A1.5 1.5 0 1 1 7 24.5A1.5 1.5 0 0 1 5.5 26z" fill="currentColor"/><path d="M22 21h2a13 13 0 0 0-5.42-10.56l-1.16 1.62A11 11 0 0 1 22 21z" fill="currentColor"/>', "hidden": true }, "annotation-visibility": { "body": '<path d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 22H4V6h24z" fill="currentColor"/><path d="M21 20h-8a3.51 3.51 0 0 0-.88-1.86l3.8-6.64l-1.74-1l-3.78 6.62a3.35 3.35 0 0 0-.9-.12a3.5 3.5 0 1 0 3.15 5H21zM9.5 22a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 9.5 22z" fill="currentColor"/><path d="M19 8h7v2h-7z" fill="currentColor"/><path d="M19 12h4v2h-4z" fill="currentColor"/>', "hidden": true }, "aperture": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm11.84 12.14L22 17.52V5.62a12 12 0 0 1 5.84 8.52ZM12 18.68v-5.36L16 11l4 2.31v5.36L16 21Zm8-14V11l-9.66-5.58A11.9 11.9 0 0 1 20 4.7Zm-11.52 2L14 9.85L4 15.62a12 12 0 0 1 4.48-8.96ZM4.16 17.85L10 14.47v11.91a12 12 0 0 1-5.84-8.53ZM12 27.3V21l9.67 5.58A11.92 11.92 0 0 1 16 28a12.05 12.05 0 0 1-4-.7Zm11.52-2L18 22.14l10-5.77a12 12 0 0 1-4.48 8.97Z"/>' }, "api": { "body": '<path fill="currentColor" d="M26 22a3.86 3.86 0 0 0-2 .57l-3.09-3.1a6 6 0 0 0 0-6.94L24 9.43a3.86 3.86 0 0 0 2 .57a4 4 0 1 0-4-4a3.86 3.86 0 0 0 .57 2l-3.1 3.09a6 6 0 0 0-6.94 0L9.43 8A3.86 3.86 0 0 0 10 6a4 4 0 1 0-4 4a3.86 3.86 0 0 0 2-.57l3.09 3.1a6 6 0 0 0 0 6.94L8 22.57A3.86 3.86 0 0 0 6 22a4 4 0 1 0 4 4a3.86 3.86 0 0 0-.57-2l3.1-3.09a6 6 0 0 0 6.94 0l3.1 3.09a3.86 3.86 0 0 0-.57 2a4 4 0 1 0 4-4Zm0-18a2 2 0 1 1-2 2a2 2 0 0 1 2-2ZM4 6a2 2 0 1 1 2 2a2 2 0 0 1-2-2Zm2 22a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm10-8a4 4 0 1 1 4-4a4 4 0 0 1-4 4Zm10 8a2 2 0 1 1 2-2a2 2 0 0 1-2 2Z"/>' }, "api-1": { "body": '<path fill="currentColor" d="M8 9H4a2 2 0 0 0-2 2v12h2v-5h4v5h2V11a2 2 0 0 0-2-2zm-4 7v-5h4v5zm18-5h3v10h-3v2h8v-2h-3V11h3V9h-8v2zm-8 12h-2V9h6a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-4zm0-7h4v-5h-4z"/>' }, "app": { "body": '<path fill="currentColor" d="M28 10h-6v14h2v-4h4a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-4 8v-6h4v6zm-6-8h-6v14h2v-4h4a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-4 8v-6h4v6zm-6-8H3v2h5v2H4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6v-8a2.002 2.002 0 0 0-2-2zm0 8H4v-2h4z"/>' }, "app-connectivity": { "body": '<path fill="currentColor" d="M20 14h8a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2h-8a2.002 2.002 0 0 0-2 2H9a2.002 2.002 0 0 0-2 2v4H4a2.002 2.002 0 0 0-2 2v8a2.002 2.002 0 0 0 2 2h2v4a2.002 2.002 0 0 0 2 2h10a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-8a2.002 2.002 0 0 0-2-2h-8a2.002 2.002 0 0 0-2 2v6H8v-4h4a2.002 2.002 0 0 0 2-2v-8a2.002 2.002 0 0 0-2-2H9V6h9v6a2.002 2.002 0 0 0 2 2Zm0 14v-4h8v4Zm8-8v2h-8v-2ZM4 20v-4h8v4Zm8-6H4v-2h8Zm8-2V8h8v4Zm8-8v2h-8V4Z"/>' }, "apple": { "body": '<path fill="currentColor" d="M21.779 8a11.484 11.484 0 0 0-3.055.534a14.566 14.566 0 0 1-1.822.413A6.005 6.005 0 0 0 11 4v2a3.993 3.993 0 0 1 3.827 2.9a20.115 20.115 0 0 1-1.617-.365A12.89 12.89 0 0 0 10.032 8C6.31 8 4 11.065 4 16c0 7.51 4.068 11.999 8 12h.002a7.158 7.158 0 0 0 2.49-.59A5.013 5.013 0 0 1 16 27a5.027 5.027 0 0 1 1.511.41A7.15 7.15 0 0 0 20 28c3.93-.001 8-4.49 8-12c0-3.69-1.63-8-6.221-8ZM20 26a5.504 5.504 0 0 1-1.79-.464A6.417 6.417 0 0 0 16 25a6.404 6.404 0 0 0-2.206.536A5.534 5.534 0 0 1 12 26h.002C9.052 25.999 6 22.259 6 16c0-1.804.393-6 4.032-6a11.236 11.236 0 0 1 2.68.473a12.982 12.982 0 0 0 3.05.527h.491a11.796 11.796 0 0 0 2.996-.536a9.848 9.848 0 0 1 2.53-.464C25.796 10 26 14.998 26 16c0 6.259-3.052 9.999-6 10Z"/><path fill="currentColor" d="M18 7h-1V6a2.002 2.002 0 0 1 2-2h1v1a2.002 2.002 0 0 1-2 2Z"/>' }, "apple-dash": { "body": '<path fill="currentColor" d="M7.082 11.671L5.409 10.58C4.5 11.967 4.015 13.809 4 15.905l2 .014c.012-1.712.386-3.18 1.082-4.248zm-.997 6.145l-1.99.194c.188 1.938.659 3.674 1.398 5.159l1.79-.891c-.63-1.266-1.033-2.768-1.198-4.461zm2.153 5.98l-1.569 1.24c1.333 1.687 3.097 2.758 4.84 2.938l.206-1.99c-1.191-.123-2.491-.94-3.477-2.188zM16 25c-.733 0-1.478.271-2.199.533c-.18.066-.363.132-.547.194l.643 1.894c.197-.066.394-.138.588-.209C15.042 27.21 15.619 27 16 27c.38 0 .957.21 1.515.412c.18.066.363.132.546.195l.648-1.892c-.17-.059-.341-.12-.51-.182c-.721-.262-1.466-.533-2.2-.533zm4.255.988l.185 1.992c1.746-.164 3.518-1.223 4.862-2.908l-1.563-1.247c-.992 1.243-2.295 2.052-3.484 2.163zM24.7 22.31l1.787.898c.745-1.483 1.221-3.218 1.414-5.156l-1.99-.199c-.169 1.694-.576 3.194-1.21 4.458zm3.3-6.36c-.008-2.094-.485-3.936-1.382-5.33l-1.682 1.08c.69 1.073 1.058 2.544 1.064 4.256l2-.007zM20 4h-1a2 2 0 0 0-2 2v1h1a2 2 0 0 0 2-2V4z"/><path fill="currentColor" d="m23.813 10.53l1.103-1.667A5.191 5.191 0 0 0 22 8c-1.415 0-2.417.288-3.301.542c-.577.166-1.137.32-1.798.4C16.399 6.138 13.947 4 11 4v2c1.822 0 3.346 1.232 3.827 2.901a12.524 12.524 0 0 1-1.526-.359C12.417 8.288 11.416 8 10 8c-1.07 0-2.05.29-2.916.863l1.103 1.668A3.227 3.227 0 0 1 10 10c1.134 0 1.918.226 2.749.464c.917.264 1.865.536 3.25.536s2.335-.273 3.252-.536C20.081 10.226 20.866 10 22 10c.67 0 1.28.179 1.812.53Z"/>' }, "application": { "body": '<path fill="currentColor" d="M16 18H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2zM6 6v10h10V6zm20 6v4h-4v-4h4m0-2h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm0 12v4h-4v-4h4m0-2h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm-10 2v4h-4v-4h4m0-2h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2z"/>' }, "application-mobile": { "body": '<path fill="currentColor" d="M23 7h4v4h-4zm0 6h4v4h-4zm-6-6h4v4h-4zm0 6h4v4h-4z"/><circle cx="14.5" cy="24.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M21 30H8a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h13v2H8v24h13v-8h2v8a2.002 2.002 0 0 1-2 2Z"/>' }, "application-virtual": { "body": '<path fill="currentColor" d="M17 19h4v4h-4zm-6 0h4v4h-4zm6 6h4v4h-4zm-6 0h4v4h-4z"/><path fill="currentColor" d="M24.5 25H24v-2h.5a5.496 5.496 0 0 0 .377-10.98l-.837-.056l-.09-.834a7.998 7.998 0 0 0-15.9 0l-.09.834l-.837.057A5.496 5.496 0 0 0 7.5 23H8v2h-.5a7.496 7.496 0 0 1-1.322-14.876a10 10 0 0 1 19.644 0A7.496 7.496 0 0 1 24.5 25Z"/>' }, "application-web": { "body": '<path fill="currentColor" d="M26 2h4v4h-4zm0 6h4v4h-4zm-6-6h4v4h-4zm0 6h4v4h-4z"/><path fill="currentColor" d="M28 16v6H4V6h12V4H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2v-6ZM18 28h-4v-4h4Z"/>' }, "apps": { "body": '<path fill="currentColor" d="M8 4v4H4V4Zm2-2H2v8h8Zm8 2v4h-4V4Zm2-2h-8v8h8Zm8 2v4h-4V4Zm2-2h-8v8h8ZM8 14v4H4v-4Zm2-2H2v8h8Zm8 2v4h-4v-4Zm2-2h-8v8h8Zm8 2v4h-4v-4Zm2-2h-8v8h8ZM8 24v4H4v-4Zm2-2H2v8h8Zm8 2v4h-4v-4Zm2-2h-8v8h8Zm8 2v4h-4v-4Zm2-2h-8v8h8Z"/>' }, "archive": { "body": '<path fill="currentColor" d="M14 19h4v2h-4z"/><path fill="currentColor" d="M6 2v26a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2Zm18 26H8V16h16Zm0-14H8v-4h16ZM8 8V4h16v4Z"/>' }, "area": { "body": '<path fill="currentColor" d="M27 22.142V9.858A3.992 3.992 0 1 0 22.142 5H9.858A3.992 3.992 0 1 0 5 9.858v12.284A3.992 3.992 0 1 0 9.858 27h12.284A3.992 3.992 0 1 0 27 22.142ZM26 4a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM4 6a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Zm2 22a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm16.142-3H9.858A3.994 3.994 0 0 0 7 22.142V9.858A3.995 3.995 0 0 0 9.858 7h12.284A3.994 3.994 0 0 0 25 9.858v12.284A3.993 3.993 0 0 0 22.142 25ZM26 28a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2Z"/>' }, "area-custom": { "body": '<path fill="currentColor" d="M30 6a3.992 3.992 0 0 0-7.977-.224L9.586 8.263A3.99 3.99 0 1 0 5 13.858v8.284A3.991 3.991 0 1 0 9.858 27h8.284a3.991 3.991 0 1 0 5.595-4.586l2.487-12.437A3.994 3.994 0 0 0 30 6Zm-4-2a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM4 10a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Zm2 18a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm12.142-3H9.858A3.994 3.994 0 0 0 7 22.142v-8.284a3.987 3.987 0 0 0 2.977-3.634l12.437-2.487a4.005 4.005 0 0 0 1.849 1.85l-2.487 12.436A3.987 3.987 0 0 0 18.142 25ZM22 28a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "arrival": { "body": '<path fill="currentColor" d="M2 28h28v2H2zM17.21 5.23l1.39.38l1 11.29l5.87 1.57A2 2 0 0 1 27 20.62a1.88 1.88 0 0 1-1.37 1.52a2 2 0 0 1-1 0l-18.7-5a1.89 1.89 0 0 1-1.33-2.3l1.75-6.5l1.44.38l.61 5.18l6 1.62l2.81-10.29m-1-2.2a1 1 0 0 0-.68.69L13 13.07l-2.81-.75l-.5-4.53A1 1 0 0 0 9 7l-3.13-.86a.94.94 0 0 0-.5 0a1 1 0 0 0-.68.68l-2 7.49a3.87 3.87 0 0 0 2.74 4.74l18.71 5A3.87 3.87 0 0 0 29 21a4 4 0 0 0-3-4.42l-4.52-1.21l-.95-10.66a1 1 0 0 0-.72-.85L16.73 3a1.06 1.06 0 0 0-.5 0z"/>' }, "arrow-annotation": { "body": '<path d="M13.71 12.29L7.42 6H14V4H4v9.99l2 .02v-6.6l6.29 6.29l1.42-1.41z" fill="currentColor"/><path d="M28 10H18v2h10v16H12V18h-2v10a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2z" fill="currentColor"/><path d="M19 25h2v-7h3v-2h-8v2h3v7z" fill="currentColor"/>', "hidden": true }, "arrow-down": { "body": '<path fill="currentColor" d="M24.59 16.59L17 24.17V4h-2v20.17l-7.59-7.58L6 18l10 10l10-10l-1.41-1.41z"/>' }, "arrow-down-left": { "body": '<path fill="currentColor" d="M22 26v-2H9.41L26 7.41L24.59 6L8 22.59V10H6v16h16z"/>' }, "arrow-down-right": { "body": '<path fill="currentColor" d="M10 26v-2h12.59L6 7.41L7.41 6L24 22.59V10h2v16H10z"/>' }, "arrow-left": { "body": '<path fill="currentColor" d="m14 26l1.41-1.41L7.83 17H28v-2H7.83l7.58-7.59L14 6L4 16l10 10z"/>' }, "arrow-right": { "body": '<path fill="currentColor" d="m18 6l-1.43 1.393L24.15 15H4v2h20.15l-7.58 7.573L18 26l10-10L18 6z"/>' }, "arrow-shift-down": { "body": '<path fill="currentColor" d="M23 6v10h5a1 1 0 0 1 .707 1.707l-12 12a1 1 0 0 1-1.414 0l-12-12A1 1 0 0 1 4 16h5V6a2.002 2.002 0 0 1 2-2h10a2.003 2.003 0 0 1 2 2Zm-7 21.586L25.586 18H21V6H11v12H6.414Z"/>' }, "arrow-up": { "body": '<path fill="currentColor" d="M16 4L6 14l1.41 1.41L15 7.83V28h2V7.83l7.59 7.58L26 14L16 4z"/>' }, "arrow-up-left": { "body": '<path fill="currentColor" d="M22 6v2H9.41L26 24.59L24.59 26L8 9.41V22H6V6h16z"/>' }, "arrow-up-right": { "body": '<path fill="currentColor" d="M10 6v2h12.59L6 24.59L7.41 26L24 9.41V22h2V6H10z"/>' }, "arrows-horizontal": { "body": '<path fill="currentColor" d="M11.41 26.59L7.83 23H28v-2H7.83l3.58-3.59L10 16l-6 6l6 6l1.41-1.41zM28 10l-6-6l-1.41 1.41L24.17 9H4v2h20.17l-3.58 3.59L22 16l6-6z"/>' }, "arrows-vertical": { "body": '<path fill="currentColor" d="M27.6 20.6L24 24.2V4h-2v20.2l-3.6-3.6L17 22l6 6l6-6zM9 4l-6 6l1.4 1.4L8 7.8V28h2V7.8l3.6 3.6L15 10z"/>' }, "asleep": { "body": '<path fill="currentColor" d="M13.502 5.414a15.075 15.075 0 0 0 11.594 18.194a11.113 11.113 0 0 1-7.975 3.39c-.138 0-.278.005-.418 0a11.094 11.094 0 0 1-3.2-21.584M14.98 3a1.002 1.002 0 0 0-.175.016a13.096 13.096 0 0 0 1.825 25.981c.164.006.328 0 .49 0a13.072 13.072 0 0 0 10.703-5.555a1.01 1.01 0 0 0-.783-1.565A13.08 13.08 0 0 1 15.89 4.38A1.015 1.015 0 0 0 14.98 3Z"/>' }, "asleep-filled": { "body": '<path fill="currentColor" d="M14.98 3a1.002 1.002 0 0 0-.175.016a13.096 13.096 0 0 0 1.825 25.981c.164.006.328 0 .49 0a13.072 13.072 0 0 0 10.703-5.555a1.01 1.01 0 0 0-.783-1.565A13.08 13.08 0 0 1 15.89 4.38A1.015 1.015 0 0 0 14.98 3Z"/>' }, "assembly": { "body": '<path fill="currentColor" d="m16 25.4l-8-4.7v-9.4l8-4.7l8 4.7v9.4l-8 4.7zm-6-5.8l6 3.5l6-3.5v-7.1L16 9l-6 3.5v7.1z"/><path fill="currentColor" d="M27 8.2L17 2.3c-.3-.2-.6-.3-1-.3s-.7.1-1 .3L5 8.2c-.6.4-1 1-1 1.7v12.2c0 .7.4 1.4 1 1.7l10 5.9c.3.2.7.3 1 .3s.7-.1 1-.3l10-5.9c.6-.4 1-1 1-1.7V9.9c0-.7-.4-1.4-1-1.7zm-1 13.9L16 28L6 22.1V9.9L16 4l10 5.9v12.2z"/>' }, "assembly-cluster": { "body": '<path fill="currentColor" d="m21.3 4.9l-4.5-2.7c-.3-.1-.5-.2-.8-.2s-.5.1-.7.2l-4.5 2.7c-.5.3-.8.8-.8 1.3v5.6c0 .5.3 1 .7 1.3l4.5 2.7c.2.1.5.2.7.2s.5-.1.7-.2l4.5-2.7c.4-.3.7-.7.7-1.3V6.2c.2-.5-.1-1-.5-1.3zM20 11.5l-4 2.4l-4-2.4v-5l4-2.4l4 2.4v5zm9.3 7.4l-4.5-2.7c-.3-.1-.5-.2-.8-.2s-.5.1-.7.2l-4.5 2.7c-.4.3-.7.7-.7 1.3v5.6c0 .5.3 1 .7 1.3l4.5 2.7c.2.1.5.2.7.2s.5-.1.7-.2l4.5-2.7c.4-.3.7-.7.7-1.3v-5.6c.1-.5-.2-1-.6-1.3zM28 25.5l-4 2.4l-4-2.4v-5l4-2.4l4 2.4v5zm-14.7-6.6l-4.5-2.7c-.3-.1-.5-.2-.8-.2s-.5.1-.7.2l-4.5 2.7c-.5.3-.8.8-.8 1.3v5.6c0 .5.3 1 .7 1.3l4.5 2.7c.3.1.5.2.8.2s.5-.1.7-.2l4.5-2.7c.4-.3.7-.7.7-1.3v-5.6c.1-.5-.2-1-.6-1.3zM12 25.5l-4 2.4l-4-2.4v-5l4-2.4l4 2.4v5z"/>' }, "assembly-reference": { "body": '<path fill="currentColor" d="m8.438 6.145l3.013-1.78l1.018 1.721l-3.013 1.78zM6 12H4V9.9c0-.7.4-1.4 1-1.7l1.5-.9l1 1.7l-1.5.9V12zm-2 2h2v4H4zm2.5 10.7L5 23.8c-.6-.4-1-1-1-1.7V20h2v2.1l1.5.9l-1 1.7zm1.932 1.128l1.017-1.722l3.013 1.78l-1.017 1.723zM17.5 27.1L16 28l-1.5-.9l-1 1.7l1.5.9c.3.2.7.3 1 .3c.4 0 .7-.1 1-.3l1.5-.9l-1-1.7zm2.022-1.193l3.013-1.781l1.018 1.722l-3.014 1.78zM25.2 24.9l-1-1.7l1.8-1V20h2v2.1c0 .7-.4 1.4-1 1.7l-1.8 1.1zM26 14h2v4h-2zm2-2h-2V9.9l-1.8-1l1-1.7l1.8 1c.6.4 1 1 1 1.7V12zm-8.548-5.96l1.017-1.721l3.013 1.78l-1.017 1.722zM17.5 4.9L16 4l-1.5.9l-1-1.7l1.5-.9c.3-.2.6-.3 1-.3s.7.1 1 .3l1.5.9l-1 1.7z"/>' }, "asset": { "body": '<path fill="currentColor" d="M12 24a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M30 6a4.004 4.004 0 0 0-4-4a3.949 3.949 0 0 0-1.854.477l-16.389 8.48a9.992 9.992 0 1 0 13.309 13.236l8.49-16.4A3.95 3.95 0 0 0 30 6Zm-4-2a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2Zm-3.98 1.808c-.004.065-.02.126-.02.192a4.004 4.004 0 0 0 4 4c.065 0 .124-.016.188-.019l-4.332 8.362a10.017 10.017 0 0 0-8.215-8.196ZM12 28a8 8 0 1 1 8-8a8.01 8.01 0 0 1-8 8Z"/>' }, "asset-confirm": { "body": '<path fill="currentColor" d="m21 27.18l-2.59-2.59L17 26l4 4l7-7l-1.41-1.41L21 27.18zM12 24a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/><path fill="currentColor" d="M26 2a3.86 3.86 0 0 0-1.85.48L7.76 10.96A9.99 9.99 0 0 0 12 30a9.345 9.345 0 0 0 2-.21v-2.04a8.229 8.229 0 0 1-2 .25a8 8 0 1 1 8-8a8.266 8.266 0 0 1-.06 1h2.78l6.84-13.21A3.973 3.973 0 0 0 26 2Zm-4.14 16.34a10.019 10.019 0 0 0-8.22-8.19l8.38-4.34c0 .06-.02.12-.02.19a3.999 3.999 0 0 0 4 4c.06 0 .12-.02.19-.02ZM26 8a2 2 0 1 1 2-2a2.006 2.006 0 0 1-2 2Z"/>' }, "asset-digital-twin": { "body": '<circle cx="25" cy="7" r="2" fill="currentColor"/><path fill="currentColor" d="M12 23a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1Z"/><circle cx="12" cy="14" r="1" fill="currentColor"/><circle cx="17.909" cy="5.705" r="1" fill="currentColor"/><circle cx="9.787" cy="9.907" r="1" fill="currentColor"/><circle cx="12.495" cy="8.506" r="1" fill="currentColor"/><circle cx="15.201" cy="7.105" r="1" fill="currentColor"/><circle cx="4.696" cy="13.187" r="1" fill="currentColor"/><circle cx="2.133" cy="21.631" r="1" fill="currentColor"/><circle cx="3.079" cy="24.516" r="1" fill="currentColor"/><circle cx="4.848" cy="26.982" r="1" fill="currentColor"/><circle cx="7.272" cy="28.81" r="1" fill="currentColor"/><circle cx="2.098" cy="18.596" r="1" fill="currentColor"/><circle cx="2.979" cy="15.691" r="1" fill="currentColor"/><circle cx="7.081" cy="11.308" r="1" fill="currentColor"/><circle cx="20.616" cy="4.304" r="1" fill="currentColor"/><circle cx="23.323" cy="2.903" r="1" fill="currentColor"/><circle cx="28.988" cy="8.89" r="1" fill="currentColor"/><circle cx="27.587" cy="11.596" r="1" fill="currentColor"/><circle cx="26.186" cy="14.303" r="1" fill="currentColor"/><circle cx="24.784" cy="17.01" r="1" fill="currentColor"/><circle cx="23.383" cy="19.717" r="1" fill="currentColor"/><circle cx="21.982" cy="22.424" r="1" fill="currentColor"/><circle cx="18.637" cy="27.464" r="1" fill="currentColor"/><circle cx="16.092" cy="29.122" r="1" fill="currentColor"/><circle cx="13.166" cy="29.932" r="1" fill="currentColor"/><circle cx="10.133" cy="29.825" r="1" fill="currentColor"/><circle cx="20.572" cy="25.125" r="1" fill="currentColor"/><circle cx="28.893" cy="3.24" r="1" fill="currentColor"/><circle cx="26.188" cy="2.004" r="1" fill="currentColor"/><circle cx="12" cy="26" r="1" fill="currentColor"/><circle cx="6" cy="20" r="1" fill="currentColor"/><circle cx="18" cy="20" r="1" fill="currentColor"/><circle cx="6.804" cy="17" r="1" fill="currentColor"/><circle cx="17.196" cy="23" r="1" fill="currentColor"/><circle cx="9" cy="25.196" r="1" fill="currentColor"/><circle cx="15" cy="14.804" r="1" fill="currentColor"/><circle cx="9" cy="14.804" r="1" fill="currentColor"/><circle cx="15" cy="25.196" r="1" fill="currentColor"/><circle cx="6.804" cy="23" r="1" fill="currentColor"/><circle cx="17.196" cy="17" r="1" fill="currentColor"/><circle cx="30" cy="6.026" r="1" fill="currentColor"/>' }, "asset-view": { "body": '<circle cx="22" cy="24" r="2" fill="currentColor"/><path fill="currentColor" d="M29.777 23.479A8.64 8.64 0 0 0 22 18a8.64 8.64 0 0 0-7.777 5.479L14 24l.223.521A8.64 8.64 0 0 0 22 30a8.64 8.64 0 0 0 7.777-5.479L30 24zM22 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm-10-4a4 4 0 1 1 2.981-6.667l-1.49 1.334A2 2 0 1 0 12 22z"/><path fill="currentColor" d="M26 2a3.86 3.86 0 0 0-1.85.48L7.76 10.96A9.99 9.99 0 0 0 12 30v-2a8 8 0 1 1 5.63-13.68l1.4-1.4a10.006 10.006 0 0 0-5.39-2.77l8.38-4.34c0 .06-.02.12-.02.19a3.999 3.999 0 0 0 4 4c.06 0 .12-.02.19-.02L23.07 16h2.24l4.25-8.21A3.973 3.973 0 0 0 26 2Zm0 6a2 2 0 1 1 2-2a2.006 2.006 0 0 1-2 2Z"/>' }, "asterisk": { "body": '<path fill="currentColor" d="m28.316 13.949l-.632-1.898L17 15.612V4h-2v11.612L4.316 12.051l-.632 1.898l10.684 3.561L7.2 27.066l1.6 1.201l7.2-9.6l7.2 9.6l1.6-1.201l-7.168-9.556l10.684-3.561z"/>' }, "at": { "body": '<path fill="currentColor" d="M16 3A12.92 12.92 0 0 0 3 16v1a13 13 0 0 0 13 13h7v-2h-7A11 11 0 0 1 5 17v-1A10.94 10.94 0 0 1 16 5a10.64 10.64 0 0 1 11 11c0 3.59-1.4 5-3.66 5c-1.58 0-2.34-1.29-2.34-3v-8h-2v1.94A3.84 3.84 0 0 0 15.5 10a5.48 5.48 0 0 0-5.5 5.44v2.12A5.48 5.48 0 0 0 15.5 23a4.28 4.28 0 0 0 4-2.46A4.35 4.35 0 0 0 23.41 23c3.07 0 5.59-2 5.59-7A12.72 12.72 0 0 0 16 3Zm3 14.56a3.5 3.5 0 0 1-7 0v-2.12a3.5 3.5 0 0 1 7 0Z"/>' }, "attachment": { "body": '<path fill="currentColor" d="m28.1 18.9l-15-15c-2.5-2.6-6.6-2.6-9.2-.1s-2.6 6.7 0 9.2l.1.1L6.8 16l1.4-1.4l-2.9-2.9c-1.7-1.7-1.7-4.6 0-6.3s4.6-1.8 6.3-.1l.1.1l14.9 14.9c1.8 1.7 1.8 4.6.1 6.3c-1.7 1.8-4.6 1.8-6.3.1l-.1-.1l-7.4-7.4c-1-1-.9-2.6 0-3.5c1-.9 2.5-.9 3.5 0l4.1 4.1l1.4-1.4l-4.2-4.2c-1.8-1.7-4.6-1.6-6.3.2c-1.6 1.7-1.6 4.4 0 6.2l7.5 7.5c2.5 2.6 6.6 2.6 9.2.1s2.6-6.7 0-9.3c0 .1 0 0 0 0z"/>' }, "audio-console": { "body": '<path fill="currentColor" d="M28 14.005h-1v-12h-2v12h-1a2.002 2.002 0 0 0-2 2v2a2.002 2.002 0 0 0 2 2h1v10h2v-10h1a2.003 2.003 0 0 0 2-2v-2a2.002 2.002 0 0 0-2-2zm0 4h-4v-2h4zm-10-12h-1v-4h-2v4h-1a2.002 2.002 0 0 0-2 2v2a2.002 2.002 0 0 0 2 2h1v18h2v-18h1a2.002 2.002 0 0 0 2-2v-2a2.002 2.002 0 0 0-2-2zm0 4h-4v-2h4zm-10 10H7v-18H5v18H4a2.002 2.002 0 0 0-2 2v2a2.002 2.002 0 0 0 2 2h1v4h2v-4h1a2.002 2.002 0 0 0 2-2v-2a2.002 2.002 0 0 0-2-2zm0 4H4v-2h4z"/>' }, "augmented-reality": { "body": '<path fill="currentColor" d="m27.447 9.105l-6-3a1 1 0 0 0-.894 0l-6 3A1 1 0 0 0 14 10v7a1 1 0 0 0 .553.894l6 3a1.001 1.001 0 0 0 .894 0l6-3A1 1 0 0 0 28 17v-7a1 1 0 0 0-.553-.895ZM21 8.118L24.764 10L21 11.882L17.236 10Zm-5 3.5l4 2v4.764l-4-2Zm6 6.764v-4.764l4-2v4.764Z"/><circle cx="13.5" cy="24.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M20 30H7a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h13v2H7v24h13v-4h2v4a2.002 2.002 0 0 1-2 2Z"/>' }, "auto-scroll": { "body": '<path d="M12 16a4 4 0 1 0 4-4a4 4 0 0 0-4 4zm6 0a2 2 0 1 1-2-2a2 2 0 0 1 2 2z" fill="currentColor"/><path d="M16 27.17l-5.6-5.59L9 23l7 7l7-7l-1.41-1.41L16 27.17z" fill="currentColor"/><path d="M16 4.83l5.58 5.57L23 9l-7-7l-7 7l1.41 1.41L16 4.83z" fill="currentColor"/>', "hidden": true }, "automatic": { "body": '<path fill="currentColor" d="M26 16h-4a2.002 2.002 0 0 0-2 2v12h2v-5h4v5h2V18a2.002 2.002 0 0 0-2-2zm-4 7v-5h4v5zm-6 4a10.986 10.986 0 0 1-9.216-5H12v-2H4v8h2v-3.685A13.024 13.024 0 0 0 16 29zm4-17h5.215A10.997 10.997 0 0 0 5 16H3a13.005 13.005 0 0 1 23-8.315V4h2v8h-8z"/>' }, "autoscaling": { "body": '<path fill="currentColor" d="M22 28H12v-2h10V10H6v10H4V10a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M28 22h-2v-2h2V4H12v2h-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M10 14v2h4.586L3 27.586L4.414 29L16 17.414V22h2v-8h-8z"/>' }, "awake": { "body": '<path fill="currentColor" d="M15 2h2v4.96h-2zm6.687 6.89l3.507-3.506l1.414 1.414l-3.507 3.507zM25.04 15H30v2h-4.96zm-3.347 8.104l1.414-1.414l3.507 3.507L25.2 26.61zM15 25.04h2V30h-2zm-9.604.162l3.508-3.507l1.414 1.414l-3.507 3.507zM2 15h4.96v2H2zm3.39-8.197l1.415-1.414l3.507 3.507l-1.414 1.414zM16 12a4 4 0 1 1-4 4a4 4 0 0 1 4-4m0-2a6 6 0 1 0 6 6a6 6 0 0 0-6-6Z"/>' }, "badge": { "body": '<path fill="currentColor" d="m23 2l1.593 3L28 5.414l-2.5 2.253L26 11l-3-1.875L20 11l.5-3.333L18 5.414L21.5 5L23 2z"/><path fill="currentColor" d="m22.717 13.249l-1.938-.498a6.994 6.994 0 1 1-5.028-8.531l.499-1.937A8.99 8.99 0 0 0 8 17.69V30l6-4l6 4V17.708a8.963 8.963 0 0 0 2.717-4.459ZM18 26.263l-4-2.667l-4 2.667V19.05a8.924 8.924 0 0 0 8 .006Z"/>' }, "baggage-claim": { "body": '<circle cx="6" cy="26" r="2" fill="currentColor"/><path fill="currentColor" d="M28 18h-3v-2a2.002 2.002 0 0 0-2-2h-4a2.002 2.002 0 0 0-2 2v2h-3a2.002 2.002 0 0 0-2 2v8a2.002 2.002 0 0 0 2 2h14a2.002 2.002 0 0 0 2-2v-8a2.002 2.002 0 0 0-2-2Zm-9-2h4v2h-4Zm9 12H14v-8h14Z"/><path fill="currentColor" d="M10 6h4v6h2V6h4v6h2V6h4v6h2V6.005A2.005 2.005 0 0 0 25.995 4H4.005A2.005 2.005 0 0 0 2 6.005v13.99A2.005 2.005 0 0 0 4.005 22H10ZM8 20H4V6h4Z"/>' }, "bar": { "body": '<path fill="currentColor" d="M25 11H15a1 1 0 0 0-1 1v4a6.005 6.005 0 0 0 5 5.91V28h-3v2h8v-2h-3v-6.09A6.005 6.005 0 0 0 26 16v-4a1 1 0 0 0-1-1Zm-1 5a4 4 0 0 1-8 0v-3h8Z"/><path fill="currentColor" d="M15 1h-5a1 1 0 0 0-1 1v7.37A6.09 6.09 0 0 0 6 15v14a1 1 0 0 0 1 1h5v-2H8V15c0-3.188 2.231-4.02 2.316-4.051L11 10.72V3h3v5h2V2a1 1 0 0 0-1-1Z"/>' }, "barcode": { "body": '<path fill="currentColor" d="M2 6h2v22H2zm10 0h2v20h-2zM6 6h4v20H6zm10 0h4v20h-4zm6 0h4v20h-4zm6 0h2v22h-2z"/>' }, "bare-metal-server": { "body": '<circle cx="9" cy="6" r="1" fill="currentColor"/><path fill="currentColor" d="M26 10H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2ZM6 4v4h20V4Z"/><circle cx="9" cy="16" r="1" fill="currentColor"/><path fill="currentColor" d="M26 20H6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2ZM6 14v4h20v-4Z"/><circle cx="9" cy="26" r="1" fill="currentColor"/><path fill="currentColor" d="M26 30H6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2ZM6 24v4h20v-4Z"/>' }, "bare-metal-server-01": { "body": '<path fill="currentColor" d="M17 28v-6h-2v6H5v2h22v-2H17z"/><circle cx="9" cy="16" r="1" fill="currentColor"/><path fill="currentColor" d="M26 20H6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2ZM6 14v4h20v-4Z"/>' }, "bare-metal-server-02": { "body": '<path fill="currentColor" d="M17 28v-6h-2v6H5v2h22v-2H17z"/><circle cx="9" cy="16" r="1" fill="currentColor"/><path fill="currentColor" d="M26 20H6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2ZM6 14v4h20v-4Z"/><circle cx="9" cy="6" r="1" fill="currentColor"/><path fill="currentColor" d="M26 10H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2ZM6 4v4h20V4Z"/>' }, "barrier": { "body": '<defs/><path d="M15 5h2v4h-2z" fill="currentColor"/><path d="M15 11h2v4h-2z" fill="currentColor"/><path d="M15 17h2v4h-2z" fill="currentColor"/><path d="M15 23h2v4h-2z" fill="currentColor"/>', "hidden": true }, "basketball": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2Zm11.95 13h-5.91a14.409 14.409 0 0 1 2.738-7.153A11.94 11.94 0 0 1 27.95 15ZM17 15V4.05a11.918 11.918 0 0 1 6.287 2.438A16.265 16.265 0 0 0 20.04 15Zm-2 0h-3.04a16.265 16.265 0 0 0-3.247-8.512A11.918 11.918 0 0 1 15 4.051Zm0 2v10.95a11.918 11.918 0 0 1-6.287-2.438A16.265 16.265 0 0 0 11.96 17Zm2 0h3.04a16.265 16.265 0 0 0 3.248 8.512A11.918 11.918 0 0 1 17 27.949ZM7.22 7.847A14.409 14.409 0 0 1 9.96 15H4.051a11.94 11.94 0 0 1 3.17-7.153ZM4.05 17h5.91a14.409 14.409 0 0 1-2.738 7.153A11.94 11.94 0 0 1 4.05 17Zm20.73 7.153A14.409 14.409 0 0 1 22.04 17h5.908a11.94 11.94 0 0 1-3.17 7.153Z"/>' }, "bastion-host": { "body": '<path fill="currentColor" d="M27.527 2.709A1.996 1.996 0 0 0 26 2h-2.69a1.5 1.5 0 0 0-1.343.83L21.382 4H20v-.5A1.5 1.5 0 0 0 18.5 2h-5A1.5 1.5 0 0 0 12 3.5V4h-1.382l-.585-1.17A1.502 1.502 0 0 0 8.69 2H6a2 2 0 0 0-1.972 2.333L4.732 8.5A3 3 0 0 0 7.69 11H8v12a3.003 3.003 0 0 0-3 3v4h22v-4a3.003 3.003 0 0 0-3-3V11h.31a3 3 0 0 0 2.958-2.5l.704-4.167a1.994 1.994 0 0 0-.445-1.624ZM25 26v2H7v-2a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1Zm-3-3H10V11h12Zm3.296-14.833A.998.998 0 0 1 24.31 9H7.69a.998.998 0 0 1-.986-.834L6 4h2.382l1 2H14V4h4v2h4.617l1.001-2H26Z"/>' }, "bat": { "body": '<path fill="currentColor" d="M31.91 6.584A1 1 0 0 0 31 6c-4.768 0-8.26.889-11 2.844V3h-2v3h-4V3h-2v5.844C9.26 6.889 5.768 6 1 6a1 1 0 0 0-.756 1.654C1.945 9.622 3 11.704 3 16a1 1 0 0 0 1 1c2.768 0 6 1.31 6 5a1.004 1.004 0 0 0 .934.998c.416.03 4.066.39 4.066 4.002a1 1 0 0 0 2 0c0-3.613 3.65-3.973 4.062-4.002A1 1 0 0 0 22 22c0-3.69 3.232-5 6-5a1 1 0 0 0 1-1c0-4.296 1.055-6.378 2.756-8.346a1 1 0 0 0 .153-1.07Zm-4.894 8.46c-3.385.308-6.553 2.229-6.97 6.079A6.552 6.552 0 0 0 16 23.609a6.552 6.552 0 0 0-4.046-2.486c-.417-3.85-3.585-5.77-6.97-6.079a13.202 13.202 0 0 0-1.939-6.98c4.132.273 7.033 1.428 9.248 3.643A1 1 0 0 0 14 11V8h4v3a1 1 0 0 0 1.707.707c2.215-2.215 5.116-3.37 9.248-3.643a13.202 13.202 0 0 0-1.939 6.98Z"/>' }, "batch-job": { "body": '<path fill="currentColor" d="M32 26v-2h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.964 4.964 0 0 0 26 20.101V18h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.964 4.964 0 0 0 20.101 24H18v2h2.101a4.97 4.97 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.964 4.964 0 0 0 1.753.732V32h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.964 4.964 0 0 0 29.899 26H32zm-7 2c-1.654 0-3-1.346-3-3s1.346-3 3-3s3 1.346 3 3s-1.346 3-3 3zm-5-11h-8a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2zm-8-2h8V4h-8v11z"/><path fill="currentColor" d="M17 21H8a2 2 0 0 1-2-2V7h2v12h9v2Z"/><path fill="currentColor" d="M13 25H4c-1.103 0-2-.897-2-2V11h2v12h9v2Z"/>' }, "batch-job-step": { "body": '<path fill="currentColor" d="M24 20v4h-4v4h-4v2h6v-4h4v-4h4v-2h-6zM8 4h8v6c0 1.103.897 2 2 2h6v4h2v-6a1 1 0 0 0-.293-.707l-7-7A1 1 0 0 0 18 2H8c-1.103 0-2 .897-2 2v24c0 1.103.897 2 2 2h4v-2H8V4zm15.586 6H18V4.414L23.586 10z"/>' }, "battery-charging": { "body": '<path fill="currentColor" d="M27 11h-1v-1a2 2 0 0 0-2-2h-4v2h4v3h3v6h-3v3h-5v2h5a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zM11 22H6V10h6V8H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h5z"/><path fill="currentColor" d="m14.81 23.58l-1.62-1.16L17.06 17H9.37l6.85-8.62l1.56 1.24L13.51 15h7.43l-6.13 8.58z"/>' }, "battery-empty": { "body": '<path fill="currentColor" d="M24 24H6a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h18a2.002 2.002 0 0 1 2 2v1h1a2.002 2.002 0 0 1 2 2v6a2.003 2.003 0 0 1-2 2h-1v1a2.003 2.003 0 0 1-2 2ZM6 10v12h18v-3h3v-6h-3v-3Z"/>' }, "battery-full": { "body": '<path fill="currentColor" d="M24 24H6a2 2 0 0 1-2-2V10a2 2 0 0 1 2-2h18a2 2 0 0 1 2 2v1h1a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-1v1a2 2 0 0 1-2 2ZM6 10v12h18v-3h3v-6h-3v-3Z"/><path fill="currentColor" d="M22 12v8H8v-8z"/>' }, "battery-half": { "body": '<path fill="currentColor" d="M24 24H6a2 2 0 0 1-2-2V10a2 2 0 0 1 2-2h18a2 2 0 0 1 2 2v1h1a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2h-1v1a2 2 0 0 1-2 2ZM6 10v12h18v-3h3v-6h-3v-3Z"/><path fill="currentColor" d="M16 12v8H8v-8z"/>' }, "battery-low": { "body": '<path fill="currentColor" d="M24 24H6a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h18a2.002 2.002 0 0 1 2 2v1h1a2.002 2.002 0 0 1 2 2v6a2.003 2.003 0 0 1-2 2h-1v1a2.003 2.003 0 0 1-2 2ZM6 10v12h18v-3h3v-6h-3v-3Z"/><path fill="currentColor" d="M10 12v8H8v-8z"/>' }, "battery-quarter": { "body": '<path fill="currentColor" d="M24 24H6a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h18a2.002 2.002 0 0 1 2 2v1h1a2.002 2.002 0 0 1 2 2v6a2.003 2.003 0 0 1-2 2h-1v1a2.003 2.003 0 0 1-2 2ZM6 10v12h18v-3h3v-6h-3v-3Z"/><path fill="currentColor" d="M12 12v8H8v-8z"/>' }, "bee": { "body": '<path fill="currentColor" d="M16 10a6 6 0 0 0-6 6v8a6 6 0 0 0 12 0v-8a6 6 0 0 0-6-6zm-4.25 7.87h8.5v4.25h-8.5zM16 28.25A4.27 4.27 0 0 1 11.75 24v-.13h8.5V24A4.27 4.27 0 0 1 16 28.25zm4.25-12.13h-8.5V16a4.25 4.25 0 0 1 8.5 0zm10.41 3.09L24 13v9.1a4 4 0 0 0 8 0a3.83 3.83 0 0 0-1.34-2.89zM28 24.35a2.25 2.25 0 0 1-2.25-2.25V17l3.72 3.47A2.05 2.05 0 0 1 30.2 22a2.25 2.25 0 0 1-2.2 2.35zM0 22.1a4 4 0 0 0 8 0V13l-6.66 6.21A3.88 3.88 0 0 0 0 22.1zm2.48-1.56L6.25 17v5.1a2.25 2.25 0 0 1-4.5 0a2.05 2.05 0 0 1 .73-1.56zM15 5.5A3.5 3.5 0 1 0 11.5 9A3.5 3.5 0 0 0 15 5.5zm-5.25 0a1.75 1.75 0 1 1 1.75 1.75A1.77 1.77 0 0 1 9.75 5.5zM20.5 2A3.5 3.5 0 1 0 24 5.5A3.5 3.5 0 0 0 20.5 2zm0 5.25a1.75 1.75 0 1 1 1.75-1.75a1.77 1.77 0 0 1-1.75 1.75z"/>' }, "bee-bat": { "body": '<circle cx="13" cy="8" r="2" fill="currentColor"/><circle cx="19" cy="8" r="2" fill="currentColor"/><path fill="currentColor" d="M31.808 8.665a.875.875 0 0 0-.808-.54h-2c-4.21 0-7.721 2.002-9.165 4.901a4.819 4.819 0 0 0-7.67 0C10.721 10.127 7.21 8.125 3 8.125H1a.875.875 0 0 0-.618 1.494l.101.101a5.388 5.388 0 0 1 1.678 6.031A.875.875 0 0 0 3 16.875a2.897 2.897 0 0 1 2.159.727c.978.981.971 2.887.966 4.148V22a.875.875 0 0 0 .875.875h4.125V23a4.875 4.875 0 0 0 9.75 0v-.125H25a.875.875 0 0 0 .875-.875v-.25c-.005-1.26-.011-3.167.967-4.148A2.897 2.897 0 0 1 29 16.875a.875.875 0 0 0 .839-1.124a5.388 5.388 0 0 1 1.676-6.03l.104-.102a.875.875 0 0 0 .19-.954ZM16 12.875A3.129 3.129 0 0 1 19.125 16v.125h-6.25V16A3.129 3.129 0 0 1 16 12.875Zm-3.125 5h6.25v3.25h-6.25Zm-5 3.25c-.019-1.459-.185-3.462-1.477-4.759a4.188 4.188 0 0 0-2.31-1.152a6.657 6.657 0 0 0-1.136-5.339H3c4.556 0 8.125 2.69 8.125 6.125v5.125ZM19.124 23a3.125 3.125 0 0 1-6.25 0v-.125h6.25Zm8.787-7.786a4.188 4.188 0 0 0-2.31 1.152c-1.292 1.297-1.458 3.3-1.476 4.759h-3.251V16c0-3.435 3.569-6.125 8.125-6.125h.048a6.656 6.656 0 0 0-1.136 5.34Z"/>' }, "beta": { "body": '<path fill="currentColor" d="M20.717 13.77A5.917 5.917 0 0 0 23 9c0-3.533-2.878-6-7-6a6.627 6.627 0 0 0-7 7v21h2v-5.88a8.126 8.126 0 0 0 6 2.48a7.383 7.383 0 0 0 7.653-7.6a6.636 6.636 0 0 0-3.936-6.23ZM17 25.6a5.678 5.678 0 0 1-6-5.6V10a4.686 4.686 0 0 1 5-5c3.037 0 5 1.57 5 4a3.873 3.873 0 0 1-4 4v2c3.434 0 5.653 1.963 5.653 5A5.39 5.39 0 0 1 17 25.6Z"/>' }, "bicycle": { "body": '<path fill="currentColor" d="M26 16c-.088 0-.173.01-.26.013L24.237 9H28V7h-5a1 1 0 0 0-.978 1.21L22.62 11H12.387l-1-3H14V6H7v2h2.28l1.041 3.123l-2.57 5.14A6 6 0 1 0 11.91 23h2.61a1.991 1.991 0 0 0 1.562-.75l7.058-8.824l.644 3.004A5.99 5.99 0 1 0 26 16ZM6 26a4 4 0 1 1 .836-7.91l-1.73 3.463l.009.004A.983.983 0 0 0 5 22a.993.993 0 0 0 1.885.443l.01.004L8.617 19A3.983 3.983 0 0 1 6 26Zm5.91-5a5.999 5.999 0 0 0-2.373-3.836l1.678-3.358L13.613 21Zm3.458-1.06L13.054 13h7.865ZM26 26a3.988 3.988 0 0 1-1.786-7.56l.808 3.77l.02-.004A.986.986 0 0 0 26 23a1 1 0 0 0 1-1a.946.946 0 0 0-.042-.206l.02-.004l-.808-3.773A3.993 3.993 0 0 1 26 26Z"/>' }, "binoculars": { "body": '<path fill="currentColor" d="M28 8V5a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v3a2 2 0 0 0-2 2v2h-4v-2a2 2 0 0 0-2-2V5a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v3a2 2 0 0 0-2 2v12a2 2 0 0 0 1 1.72V27a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-3.28A2 2 0 0 0 14 22v-2h4v2a2 2 0 0 0 1 1.72V27a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-3.28A2 2 0 0 0 30 22V10a2 2 0 0 0-2-2ZM11 26H5v-2h6Zm1-4H4V10h2V6h4v4h2Zm2-4v-4h4v4Zm13 8h-6v-2h6Zm1-4h-8V10h2V6h4v4h2Z"/>' }, "bloch-sphere": { "body": '<path d="M21.87 7.84l-1.74-1L16 14a2 2 0 1 0 2 2a2 2 0 0 0-.27-1z" fill="currentColor"/><path d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2zm0 2a12 12 0 0 1 11.17 7.65a25.69 25.69 0 0 0-3.69-1.5l-1 1.77a22.7 22.7 0 0 1 5.41 2.39a11.05 11.05 0 0 1 0 3.38A22.92 22.92 0 0 1 16 21a22.92 22.92 0 0 1-11.87-3.31a11.05 11.05 0 0 1 0-3.38A22.8 22.8 0 0 1 15 11V9a25 25 0 0 0-10.17 2.6A12 12 0 0 1 16 4zm0 24a12 12 0 0 1-11.17-7.65A24.88 24.88 0 0 0 16 23a24.88 24.88 0 0 0 11.17-2.65A12 12 0 0 1 16 28z" fill="currentColor"/>', "hidden": true }, "block-storage": { "body": '<path fill="currentColor" d="M9 12v-2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-9h-2v9H4V12"/><path fill="currentColor" d="M22 12h-8V4h8zM12 4v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2zm2 14v4h-4v-4h4m-6 0v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2zm20-1v2h-2v-2h2m-4-1v4a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1z"/>' }, "block-storage-alt": { "body": '<path fill="currentColor" d="M28 20h-2v2h2v6H4v-6h2v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="M15 20H8v-7h7zm-5-2h3v-3h-3zm14 2h-7v-7h7zm-5-2h3v-3h-3zm-4-7H8V4h7zm-5-2h3V6h-3zm14 2h-7V4h7zm-5-2h3V6h-3z"/>' }, "blockchain": { "body": '<path fill="currentColor" d="M6 24H4V8h2ZM28 8h-2v16h2Zm-4-2V4H8v2Zm0 22v-2H8v2Z"/>' }, "blog": { "body": '<path fill="currentColor" d="M4 24h10v2H4zm0-6h10v2H4zm22-4H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2zM6 6v6h20V6zm20 22h-6a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2zm-6-8v6h6v-6z"/>' }, "bluetooth": { "body": '<path fill="currentColor" d="M16 30a1.06 1.06 0 0 1-.42-.09A1 1 0 0 1 15 29V18.41L8.41 25L7 23.59L14.59 16L7 8.41L8.41 7L15 13.59V3a1 1 0 0 1 .58-.91a1 1 0 0 1 1.07.15l7 6A1 1 0 0 1 24 9a1 1 0 0 1-.29.75L17.41 16l6.3 6.29A1 1 0 0 1 24 23a1 1 0 0 1-.35.72l-7 6A1 1 0 0 1 16 30Zm1-11.59v8.42l4.53-3.89Zm0-13.24v8.42l4.53-4.53Z"/>' }, "bluetooth-off": { "body": '<path fill="currentColor" d="M28 26.59L5.41 4L4 5.41L14.59 16L7 23.59L8.41 25L15 18.41V29a1 1 0 0 0 .58.91A1.06 1.06 0 0 0 16 30a1 1 0 0 0 .65-.24l6.3-5.4L26.59 28zm-11 .24v-8.42l4.53 4.53zm0-14.08V5.17l4.53 3.89l-4.11 4.11l1.41 1.41l4.88-4.87A1 1 0 0 0 24 9a1 1 0 0 0-.35-.72l-7-6a1 1 0 0 0-1.07-.15A1 1 0 0 0 15 3v7.75z"/>' }, "book": { "body": '<path fill="currentColor" d="M19 10h7v2h-7zm0 5h7v2h-7zm0 5h7v2h-7zM6 10h7v2H6zm0 5h7v2H6zm0 5h7v2H6z"/><path fill="currentColor" d="M28 5H4a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V7a2.002 2.002 0 0 0-2-2ZM4 7h11v18H4Zm13 18V7h11v18Z"/>' }, "bookmark": { "body": '<path fill="currentColor" d="M24 4v22.75l-7.1-3.59l-.9-.45l-.9.45L8 26.75V4h16m0-2H8a2 2 0 0 0-2 2v26l10-5l10 5V4a2 2 0 0 0-2-2Z"/>' }, "bookmark-add": { "body": '<path fill="currentColor" d="M24 16v10.752l-7.096-3.59l-.904-.457l-.9.456L8 26.748V4h10V2H8a2 2 0 0 0-2 2v26l10-5.054L26 30V16Z"/><path fill="currentColor" d="M26 6V2h-2v4h-4v2h4v4h2V8h4V6h-4z"/>' }, "bookmark-filled": { "body": '<path fill="currentColor" d="M24 2H8a2 2 0 0 0-2 2v26l10-5.054L26 30V4a2 2 0 0 0-2-2Z"/>' }, "boolean": { "body": '<path fill="currentColor" d="M23 23a7 7 0 1 1 7-7a7.008 7.008 0 0 1-7 7Zm0-12a5 5 0 1 0 5 5a5.005 5.005 0 0 0-5-5Z"/><circle cx="9" cy="16" r="7" fill="currentColor"/>' }, "boot": { "body": '<path fill="currentColor" d="M24 17h-6a1 1 0 0 1-1-1V4a2.002 2.002 0 0 0-2-2H5a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h22a2.002 2.002 0 0 0 2-2v-6a5.006 5.006 0 0 0-5-5Zm3 5v2h-4v-5h1a3.003 3.003 0 0 1 3 3ZM15 4v2h-4v2h4v2h-4v2h4v2h-4v2h4a3.003 3.003 0 0 0 3 3h3v5h-6.838l-3-1H5V4Zm10 24v-1h-2v1h-2v-1h-2v1h-2v-1h-2v1h-2v-1h-2v1H5v-3h5.838l3 1H27v2Z"/>' }, "boot-volume": { "body": '<path fill="currentColor" d="M32 22v-2h-3v-2h-2v2h-1v2h1v6c0 1.103.897 2 2 2h3v-2h-3v-6h3zm-9 8h-3c-1.103 0-2-.897-2-2v-6c0-1.103.897-2 2-2h3c1.103 0 2 .897 2 2v6c0 1.103-.897 2-2 2zm-3-8v6h3v-6h-3zm-6 8h-3c-1.103 0-2-.897-2-2v-6c0-1.103.897-2 2-2h3c1.103 0 2 .897 2 2v6c0 1.103-.897 2-2 2zm-3-8v6h3v-6h-3zm-6-2H2v-4H0v14h5c1.103 0 2-.897 2-2v-6c0-1.103-.897-2-2-2zm-3 8v-6h3v6H2zm2-14V5h7.586l4 4H28v7h2V9a2.002 2.002 0 0 0-2-2H16.414L13 3.586A1.987 1.987 0 0 0 11.586 3H4a2.002 2.002 0 0 0-2 2v9h2z"/>' }, "boot-volume-alt": { "body": '<path fill="currentColor" d="M26 30h-7c-1.103 0-2-.897-2-2v-2h2v2h7v-7h-2v-2h2c1.103 0 2 .897 2 2v7c0 1.103-.897 2-2 2Z"/><path fill="currentColor" d="M12 24h2v-6.586L22.582 26L24 24.586L15.414 16H22v-2H12v10z"/><path fill="currentColor" d="M8 27H4a2.002 2.002 0 0 1-2-2V5a2.002 2.002 0 0 1 2-2h7.586c.53-.002 1.04.21 1.414.586L16.414 7H28a2.002 2.002 0 0 1 2 2v7h-2V9H15.586l-4-4H4v20h4v2Z"/>' }, "border-bottom": { "body": '<path fill="currentColor" d="M29 29H3v-2h26zm0-4h-2v-2h2zm0-4h-2v-2h2zm0-4h-2v-2h2zm0-4h-2v-2h2zm0-4h-2V7h2zm0-4h-2V3h2zm-4 0h-2V3h2zm-4 0h-2V3h2zm-4 0h-2V3h2zM9 5H7V3h2zm4 0h-2V3h2zM5 25H3v-2h2zm0-4H3v-2h2zm0-4H3v-2h2zm0-4H3v-2h2zm0-4H3V7h2zm0-4H3V3h2zm3 5h10v2H8zm0 5h6v2H8z"/>' }, "border-full": { "body": '<path fill="currentColor" d="M8 10h10v2H8zm0 5h6v2H8z"/><path fill="currentColor" d="M29 29H3V3h26ZM5 27h22V5H5Z"/>' }, "border-left": { "body": '<path fill="currentColor" d="M3 29V3h2v26zm4 0v-2h2v2zm4 0v-2h2v2zm4 0v-2h2v2zm4 0v-2h2v2zm4 0v-2h2v2zm4 0v-2h2v2zm0-4v-2h2v2zm0-4v-2h2v2zm0-4v-2h2v2zm0-8V7h2v2zm0 4v-2h2v2zM7 5V3h2v2zm4 0V3h2v2zm4 0V3h2v2zm4 0V3h2v2zm4 0V3h2v2zm4 0V3h2v2zM8 10h10v2H8zm0 5h6v2H8z"/>' }, "border-none": { "body": '<path fill="currentColor" d="M3 3h2v2H3zm4 0h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zM3 7h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zM27 3h2v2h-2zm-4 0h2v2h-2zm-4 0h2v2h-2zM7 27h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zm8 0h2v2h-2zm-4 0h2v2h-2zm8-20h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zM8 10h10v2H8zm0 5h6v2H8z"/>' }, "border-right": { "body": '<path fill="currentColor" d="M29 3v26h-2V3zm-4 0v2h-2V3zm-4 0v2h-2V3zm-4 0v2h-2V3zm-4 0v2h-2V3zM9 3v2H7V3zM5 3v2H3V3zm0 4v2H3V7zm0 4v2H3v-2zm0 4v2H3v-2zm0 8v2H3v-2zm0-4v2H3v-2zm20 8v2h-2v-2zm-4 0v2h-2v-2zm-4 0v2h-2v-2zm-4 0v2h-2v-2zm-4 0v2H7v-2zm-4 0v2H3v-2zm3-17h10v2H8zm0 5h6v2H8z"/>' }, "border-top": { "body": '<path fill="currentColor" d="M3 3h26v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm4 0h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2zm8 0h2v2h-2zm-4 0h2v2h-2zm8-20h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zm0 4h2v2h-2zM8 10h10v2H8zm0 5h6v2H8z"/>' }, "bot": { "body": '<path fill="currentColor" d="M18 10h2v2h-2zm-6 0h2v2h-2z"/><path fill="currentColor" d="M26 20h-5v-2h1a2.002 2.002 0 0 0 2-2v-4h2v-2h-2V8a2.002 2.002 0 0 0-2-2h-2V2h-2v4h-4V2h-2v4h-2a2.002 2.002 0 0 0-2 2v2H6v2h2v4a2.002 2.002 0 0 0 2 2h1v2H6a2.002 2.002 0 0 0-2 2v8h2v-8h20v8h2v-8a2.002 2.002 0 0 0-2-2ZM10 8h12v8H10Zm3 10h6v2h-6Z"/>' }, "bottles-01": { "body": '<path fill="currentColor" d="M26 9.37V3a1 1 0 0 0-1-1h-3v2h2v6.72s3 .507 3 4.28v13h-3v2h4a1 1 0 0 0 1-1V15c0-3.452-1.933-5.024-3-5.63zm-7 0V3a1 1 0 0 0-1-1h-3v2h2v6.72s3 .507 3 4.28v13h-3v2h4a1 1 0 0 0 1-1V15c0-3.452-1.933-5.024-3-5.63zm-7 0V3a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v6.37c-1.067.606-3 2.178-3 5.63v14a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V15c0-3.452-1.933-5.024-3-5.63zM13 28H5V15c0-3.772 3-4.28 3-4.28V4h2v6.72s3 .508 3 4.28v13z"/>' }, "bottles-01-dash": { "body": '<path fill="currentColor" d="M26 9.37V3a1 1 0 0 0-1-1h-3v2h2v6.72s3 .507 3 4.28v13h-3v2h4a1 1 0 0 0 1-1V15c0-3.452-1.933-5.024-3-5.63zm-7 0V3a1 1 0 0 0-1-1h-3v2h2v6.72s3 .507 3 4.28v13h-3v2h4a1 1 0 0 0 1-1V15c0-3.452-1.933-5.024-3-5.63zM13 28h-3v2h4a1 1 0 0 0 1-1v-4h-2v3zm-8-3H3v4a1 1 0 0 0 1 1h4v-2H5v-3zm8-7h2v5h-2zM3 18h2v5H3zm9-8.63V3a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v6.37c-1.067.606-3 2.178-3 5.63v1h2v-1c0-3.772 3-4.28 3-4.28V4h2v6.72s3 .508 3 4.28v1h2v-1c0-3.452-1.933-5.024-3-5.63z"/>' }, "bottles-02": { "body": '<path fill="currentColor" d="M24 9.051V6a1 1 0 0 0-1-1h-3v2h2v3.02s2 1.124 2 3.48V25h-4v2h5a1 1 0 0 0 1-1V13.5a5.93 5.93 0 0 0-2-4.449zm-8 0V6a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3.051A5.93 5.93 0 0 0 6 13.5V26a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V13.5a5.93 5.93 0 0 0-2-4.449zM16 25H8V13.5c0-2.356 2-3.48 2-3.48V7h4v3.02s2 1.124 2 3.48V25z"/>' }, "bottles-02-dash": { "body": '<path fill="currentColor" d="M24 9.051V6a1 1 0 0 0-1-1h-3v2h2v3.02s2 1.124 2 3.48V25h-4v2h5a1 1 0 0 0 1-1V13.5a5.93 5.93 0 0 0-2-4.449zM16 25h-3v2h4a1 1 0 0 0 1-1v-4h-2v3zm-8-3H6v4a1 1 0 0 0 1 1h4v-2H8v-3zm8-6h2v4h-2zM6 16h2v4H6zm10-6.949V6a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3.051A5.93 5.93 0 0 0 6 13.5v.5h2v-.5c0-2.356 2-3.48 2-3.48V7h4v3.02s2 1.124 2 3.48v.5h2v-.5a5.93 5.93 0 0 0-2-4.449z"/>' }, "bottles-container": { "body": '<path fill="currentColor" d="M23 10V8a1 1 0 0 0-1-1h-3v2h2v1.969s2 1.124 2 3.48V23h-4v2h5a1 1 0 0 0 1-1v-9.55A5.93 5.93 0 0 0 23 10zm-8 0V8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v2a5.93 5.93 0 0 0-2 4.449V24a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-9.551A5.93 5.93 0 0 0 15 10zm0 13H9v-8.551c0-2.356 2-3.48 2-3.48v-1.97h2v1.97s2 1.124 2 3.48V23z"/><path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm0 26H4V4h24v24Z"/>' }, "box": { "body": '<path fill="currentColor" d="M20 21h-8a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2Zm-8-4v2h8v-2Z"/><path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2v16a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm-2 24H6V12h20Zm2-18H4V6h24v4Z"/>' }, "box-extra-large": { "body": '<path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V9h2v17h20V9h2v17a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M19 21V9h-2v14h7v-2h-5zM16 9h-2l-2 6l-2-6H8l2.752 7L8 23h2l2-6l2 6h2l-2.755-7L16 9zM4 4h24v2H4z"/>' }, "box-large": { "body": '<path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V9h2v17h20V9h2v17a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M14 21V9h-2v14h8v-2h-6zM4 4h24v2H4z"/>' }, "box-medium": { "body": '<path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V9h2v17h20V9h2v17a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="m18 9l-1.515 5L16 15.977L15.535 14L14 9h-2v14h2v-8l-.158-1.996l.579 1.996L16 19.626L17.579 15l.58-2L18 15v8h2V9h-2zM4 4h24v2H4z"/>' }, "box-plot": { "body": '<path fill="currentColor" d="M22 6V4H12v2h4v2h-4v12h4v2h-4v2h10v-2h-4v-2h4V8h-4V6Zm-8 12v-3h6v3Zm6-5h-6v-3h6Z"/><path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/>' }, "box-small": { "body": '<path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V9h2v17h20V9h2v17a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M18 23h-6v-2h6v-4h-4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h6v2h-6v4h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 4h24v2H4z"/>' }, "branch": { "body": '<path fill="currentColor" d="M26 18a3.995 3.995 0 0 0-3.858 3H18a3.003 3.003 0 0 1-3-3v-4a4.951 4.951 0 0 0-1.026-3h8.168a4 4 0 1 0 0-2H9.858a4 4 0 1 0 0 2H10a3.003 3.003 0 0 1 3 3v4a5.006 5.006 0 0 0 5 5h4.142A3.994 3.994 0 1 0 26 18Zm0-10a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM6 12a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm20 12a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2Z"/>' }, "breaking-change": { "body": '<path fill="currentColor" d="M31 25a6 6 0 1 0-6 6a6.007 6.007 0 0 0 6-6zm-2 0a3.952 3.952 0 0 1-.567 2.019l-5.452-5.452A3.953 3.953 0 0 1 25 21a4.005 4.005 0 0 1 4 4zm-8 0a3.952 3.952 0 0 1 .567-2.019l5.452 5.452A3.953 3.953 0 0 1 25 29a4.005 4.005 0 0 1-4-4zm-1.41-9L17 18.59L18.42 20l4-4l-4-4L17 13.41L19.59 16zm-9.18 0L13 13.41L11.58 12l-4 4l4 4L13 18.59L10.41 16z"/><path fill="currentColor" d="M4 9h22v7h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h12v-2H4Zm0-5h22v3H4Z"/>' }, "brightness-contrast": { "body": '<path fill="currentColor" d="M15 2h2v3h-2zm12 13h3v2h-3zM15 27h2v3h-2zM2 15h3v2H2zm3.45-8.117L6.864 5.47l2.122 2.12L7.57 9.004zM23 7.581l2.12-2.121l1.414 1.414l-2.121 2.122zm.002 16.835l1.414-1.414l2.122 2.122l-1.414 1.414zM5.47 25.13L7.59 23L9 24.42l-2.12 2.12l-1.41-1.41zM16 8a8 8 0 1 0 8 8a8 8 0 0 0-8-8zm0 14a6 6 0 0 1 0-12z"/>' }, "bring-forward": { "body": '<path fill="currentColor" d="M12 15h-2v-3a2.002 2.002 0 0 1 2-2h3v2h-3zm3 15h-3a2.002 2.002 0 0 1-2-2v-3h2v3h3zm3-2h4v2h-4zm10 2h-3v-2h3v-3h2v3a2.002 2.002 0 0 1-2 2zM10 18h2v4h-2zm18 0h2v4h-2zm2-3h-2v-3h-3v-2h3a2.002 2.002 0 0 1 2 2zm-12-5h4v2h-4z"/><path fill="currentColor" d="M8 22H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v4h-2V4H4v16h4Z"/>' }, "bring-to-front": { "body": '<path fill="currentColor" d="M28 10h-6V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h6v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2ZM4 20L3.998 4H20v6h-8a2 2 0 0 0-2 2v8Z"/>' }, "brush-freehand": { "body": '<path d="M28.828 3.172a4.094 4.094 0 0 0-5.656 0L4.05 22.292A6.954 6.954 0 0 0 2 27.242V30h2.756a6.952 6.952 0 0 0 4.95-2.05L28.828 8.829a3.999 3.999 0 0 0 0-5.657zM10.91 18.26l2.829 2.829l-2.122 2.121l-2.828-2.828zm-2.619 8.276A4.966 4.966 0 0 1 4.756 28H4v-.759a4.967 4.967 0 0 1 1.464-3.535l1.91-1.91l2.829 2.828zM27.415 7.414l-12.261 12.26l-2.829-2.828l12.262-12.26a2.047 2.047 0 0 1 2.828 0a2 2 0 0 1 0 2.828z" fill="currentColor"/><path d="M6.5 15a3.5 3.5 0 0 1-2.475-5.974l3.5-3.5a1.502 1.502 0 0 0 0-2.121a1.537 1.537 0 0 0-2.121 0L3.415 5.394L2 3.98l1.99-1.988a3.585 3.585 0 0 1 4.95 0a3.504 3.504 0 0 1 0 4.949L5.439 10.44a1.502 1.502 0 0 0 0 2.121a1.537 1.537 0 0 0 2.122 0l4.024-4.024L13 9.95l-4.025 4.024A3.475 3.475 0 0 1 6.5 15z" fill="currentColor"/>', "hidden": true }, "brush-polygon": { "body": '<path d="M28.828 3.172a4.094 4.094 0 0 0-5.656 0L4.05 22.292A6.954 6.954 0 0 0 2 27.242V30h2.756a6.952 6.952 0 0 0 4.95-2.05L28.828 8.829a3.999 3.999 0 0 0 0-5.657zM10.91 18.26l2.829 2.829l-2.122 2.121l-2.828-2.828zm-2.619 8.276A4.966 4.966 0 0 1 4.756 28H4v-.759a4.967 4.967 0 0 1 1.464-3.535l1.91-1.91l2.829 2.828zM27.415 7.414l-12.261 12.26l-2.829-2.828l12.262-12.26a2.047 2.047 0 0 1 2.828 0a2 2 0 0 1 0 2.828z" fill="currentColor"/><path d="M14 2a2.995 2.995 0 0 0-2.816 2H7.816A2.993 2.993 0 1 0 4 7.815v3.37a3 3 0 1 0 2 0v-3.37A2.996 2.996 0 0 0 7.816 6h3.368A2.995 2.995 0 1 0 14 2zM5 15a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm0-9a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm9 0a1 1 0 1 1 1-1a1 1 0 0 1-1 1z" fill="currentColor"/>', "hidden": true }, "build-tool": { "body": '<path fill="currentColor" d="M28 14h-1V7c0-1.1-.9-2-2-2h-6v2h6v7h-1c-1.1 0-2 .9-2 2v9H9.9c-.4-1.4-1.5-2.5-2.9-2.9V7h6.2l-2.6 2.6L12 11l5-5l-5-5l-1.4 1.4L13.2 5H7c-1.1 0-2 .9-2 2v15.1c-1.7.4-3 2-3 3.9c0 2.2 1.8 4 4 4c1.9 0 3.4-1.3 3.9-3H22v1c0 1.1.9 2 2 2h4c1.1 0 2-.9 2-2V16c0-1.1-.9-2-2-2zM6 28c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2zm18 0V16h4v12h-4z"/>' }, "building": { "body": '<path fill="currentColor" d="M28 2H16a2.002 2.002 0 0 0-2 2v10H4a2.002 2.002 0 0 0-2 2v14h28V4a2.002 2.002 0 0 0-2-2ZM9 28v-7h4v7Zm19 0H15v-8a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v8H4V16h12V4h12Z"/><path fill="currentColor" d="M18 8h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2z"/>' }, "building-insights-1": { "body": '<path fill="currentColor" d="M28 2H16a2.002 2.002 0 0 0-2 2v10H4a2.002 2.002 0 0 0-2 2v14h28V4a2.002 2.002 0 0 0-2-2ZM9 28v-7h4v7Zm19 0H15v-8a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v8H4V16h12V4h12Z"/><path fill="currentColor" d="M18 8h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2zM9 12H7a5.006 5.006 0 0 1 5-5v2a3.003 3.003 0 0 0-3 3zm-5 0H2A10.011 10.011 0 0 1 12 2v2a8.01 8.01 0 0 0-8 8z"/>' }, "building-insights-2": { "body": '<path fill="currentColor" d="M28 2H16a2.002 2.002 0 0 0-2 2v10H4a2.002 2.002 0 0 0-2 2v14h28V4a2.002 2.002 0 0 0-2-2ZM9 28v-7h4v7Zm19 0H15v-8a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v8H4V16h12V4h12Z"/><path fill="currentColor" d="M18 8h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2zM5.5 12a3.5 3.5 0 0 1 0-7h.627A4.006 4.006 0 0 1 10 2h2v2h-2a2.002 2.002 0 0 0-2 2v1H5.5a1.5 1.5 0 0 0 0 3H12v2z"/>' }, "building-insights-3": { "body": '<path fill="currentColor" d="M28 2H16a2.002 2.002 0 0 0-2 2v10H4a2.002 2.002 0 0 0-2 2v14h28V4a2.002 2.002 0 0 0-2-2ZM9 28v-7h4v7Zm19 0H15v-8a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v8H4V16h12V4h12Z"/><path fill="currentColor" d="M18 8h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2zm-6 6h2v2h-2zm6 0h2v2h-2zM2 10h5v2H2zm8-8h2v5h-2zM4 5.414L5.414 4L9 7.585L7.585 9z"/>' }, "bullhorn": { "body": '<path fill="currentColor" d="M26 6v2.17l-20.36 3.7a2 2 0 0 0-1.64 2v4.34a2 2 0 0 0 1.64 2l2.36.35V24a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-1.26l6 1.09V26h2V6Zm-8 18h-8v-3.07l8 1.45ZM6 18.17v-4.34l20-3.63v11.6Z"/>' }, "buoy": { "body": '<path fill="currentColor" d="M28 22a3.438 3.438 0 0 1-3.051-2.316a1 1 0 0 0-1.896-.005A3.44 3.44 0 0 1 20 22a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 16 19a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 12 22a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 8 19a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 4 22H2v2h2a4.932 4.932 0 0 0 4-1.987a5.596 5.596 0 0 0 1 .99a7 7 0 0 0 14 0a5.596 5.596 0 0 0 1-.99A4.932 4.932 0 0 0 28 24h2v-2Zm-12 6a5.002 5.002 0 0 1-4.907-4.085A5.225 5.225 0 0 0 12 24a4.932 4.932 0 0 0 4-1.987A4.932 4.932 0 0 0 20 24a5.225 5.225 0 0 0 .907-.085A5.002 5.002 0 0 1 16 28Z"/><path fill="currentColor" d="M20.07 7.835A2.012 2.012 0 0 0 18.077 6H17V2h-2v4h-1.082a1.995 1.995 0 0 0-1.986 1.772L10.28 19h2.022l.734-5h5.921l.735 5h2.021ZM13.33 12l.588-4l4.167.063l.578 3.937Z"/>' }, "bus": { "body": '<path fill="currentColor" d="M27 11h2v4h-2zM3 11h2v4H3zm17 9h2v2h-2zm-10 0h2v2h-2z"/><path fill="currentColor" d="M21 4H11a5.006 5.006 0 0 0-5 5v14a2.002 2.002 0 0 0 2 2v3h2v-3h12v3h2v-3a2.003 2.003 0 0 0 2-2V9a5.006 5.006 0 0 0-5-5Zm3 6v6H8v-6ZM11 6h10a2.995 2.995 0 0 1 2.816 2H8.184A2.995 2.995 0 0 1 11 6ZM8 23v-5h16.001l.001 5Z"/>' }, "button-centered": { "body": '<path fill="currentColor" d="M9 15h14v2H9z"/><path fill="currentColor" d="M28 22H4a2.002 2.002 0 0 1-2-2v-8a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2ZM4 12v8h24v-8Z"/>' }, "button-flush-left": { "body": '<path fill="currentColor" d="M6 15h14v2H6z"/><path fill="currentColor" d="M28 22H4c-1.103 0-2-.897-2-2v-8c0-1.103.897-2 2-2h24c1.103 0 2 .897 2 2v8c0 1.103-.897 2-2 2zM4 12v8h24v-8H4z"/>' }, "cabin-care": { "body": '<path fill="currentColor" d="M27.302 2a2.662 2.662 0 0 0-1.908.806l-.393.405l-.397-.405a2.661 2.661 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L25.001 11l4.209-4.298a2.8 2.8 0 0 0 0-3.896A2.661 2.661 0 0 0 27.302 2zm-3.48 16h-8.739L11.864 5.965a4 4 0 0 0-7.727 2.07l4.408 16.482A2 2 0 0 0 10.477 26H19v2H4v2h15a2 2 0 0 0 2-2v-2h3a4.005 4.005 0 0 0 3.98-4.4a4.121 4.121 0 0 0-4.158-3.6zM24 24H10.478L6.068 7.518a2 2 0 1 1 3.864-1.035L13.547 20H24a2 2 0 0 1 0 4z"/>' }, "cabin-care-alert": { "body": '<path fill="currentColor" d="M24 2h2v7h-2z"/><rect width="3" height="3" x="23.5" y="11" fill="currentColor" rx="1.5"/><path fill="currentColor" d="M23.822 18h-8.739L11.864 5.965a4 4 0 0 0-7.727 2.07l4.408 16.482A2 2 0 0 0 10.477 26H19v2H4v2h15a2 2 0 0 0 2-2v-2h3a4.005 4.005 0 0 0 3.98-4.4a4.122 4.122 0 0 0-4.158-3.6ZM24 24H10.477L6.07 7.518a2 2 0 1 1 3.863-1.035L13.547 20H24a2 2 0 0 1 0 4Z"/>' }, "cabin-care-alt": { "body": '<path fill="currentColor" d="M30 25v-2h-9.232l-.8-3H27v-2h-7.565l-2.47-9.258l-1.93.516l3.8 14.257A2.004 2.004 0 0 0 20.77 25H22v3H10v-3h6v-2H6.768l-.8-3H13v-2H5.435l-2.47-9.258l-1.93.516l3.8 14.257A2.004 2.004 0 0 0 6.77 25H8v3H2v2h28v-2h-6v-3zM27.303 2a2.661 2.661 0 0 0-1.908.806L25 3.21l-.395-.405a2.661 2.661 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L25 11l4.21-4.298a2.8 2.8 0 0 0 0-3.896A2.661 2.661 0 0 0 27.304 2z"/>' }, "cad": { "body": '<path fill="currentColor" d="M18 9h-4a2 2 0 0 0-2 2v12h2v-5h4v5h2V11a2 2 0 0 0-2-2zm-4 7v-5h4v5zm12 7h-4V9h4a4 4 0 0 1 4 4v6a4 4 0 0 1-4 4zm-2-2h2a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2h-2zm-14 2H4a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h6v2H4v10h6z"/>' }, "cafe": { "body": '<path fill="currentColor" d="M2 28h28v2H2zm22.5-17H8a2.002 2.002 0 0 0-2 2v8a5.006 5.006 0 0 0 5 5h8a5.006 5.006 0 0 0 5-5v-1h.5a4.5 4.5 0 0 0 0-9zM22 21a3.003 3.003 0 0 1-3 3h-8a3.003 3.003 0 0 1-3-3v-8h14zm2.5-3H24v-5h.5a2.5 2.5 0 0 1 0 5zM19 9h-2v-.146a1.988 1.988 0 0 0-1.105-1.789L13.21 5.724A3.979 3.979 0 0 1 11 2.146V1h2v1.146a1.99 1.99 0 0 0 1.105 1.789l2.684 1.341A3.98 3.98 0 0 1 19 8.854z"/>' }, "calculation": { "body": '<path fill="currentColor" d="M14 8h-4V4H8v4H4v2h4v4h2v-4h4V8zM4 19h10v2H4zm0 5h10v2H4zM18 8h10v2H18zm6.41 14L28 18.41L26.59 17L23 20.59L19.41 17L18 18.41L21.59 22L18 25.59L19.41 27L23 23.41L26.59 27L28 25.59L24.41 22z"/>' }, "calculation-alt": { "body": '<path fill="currentColor" d="M19 13h6v2h-6zm-6 8h-2v-2H9v2H7v2h2v2h2v-2h2v-2zM7 9h6v2H7zm12 8h6v2h-6z"/><path fill="currentColor" d="M27 3H5a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h22a2.002 2.002 0 0 0 2-2V5a2.002 2.002 0 0 0-2-2ZM15 5v10H5V5ZM5 17h10v10H5Zm12 10V5h10v22Z"/>' }, "calculator": { "body": '<path fill="currentColor" d="M26 4v24H6V4h20m0-2H6a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Z"/><path fill="currentColor" d="M9 23h2v2H9zm12 0h2v2h-2zM9 18h2v2H9zm12 0h2v2h-2zM9 13h2v2H9zm6 10h2v2h-2zm0-5h2v2h-2zm0-5h2v2h-2zm6 0h2v2h-2zM9 7h14v3H9z"/>' }, "calculator-check": { "body": '<path fill="currentColor" d="M24 26.59L21.41 24L20 25.41l4 4l7-7L29.59 21L24 26.59zM15 23h2v2h-2zm-6 0h2v2H9zm12-5h2v2h-2zm-6 0h2v2h-2zm-6 0h2v2H9zm12-5h2v2h-2zm-6 0h2v2h-2zm-6 0h2v2H9zm0-6h14v3H9z"/><path fill="currentColor" d="M17 30H6.005A2.007 2.007 0 0 1 4 27.995V3.996A1.998 1.998 0 0 1 5.996 2h20.008A1.998 1.998 0 0 1 28 3.996V18h-2V4H6v24h11Z"/>' }, "calendar": { "body": '<path fill="currentColor" d="M26 4h-4V2h-2v2h-8V2h-2v2H6c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h20c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 22H6V12h20v14zm0-16H6V6h4v2h2V6h8v2h2V6h4v4z"/>' }, "calendar-add": { "body": '<path fill="currentColor" d="M30 22h-6v-6h-2v6h-6v2h6v6h2v-6h6z"/><path fill="currentColor" d="M28 6c0-1.1-.9-2-2-2h-4V2h-2v2h-8V2h-2v2H6c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h8v-2H6V6h4v2h2V6h8v2h2V6h4v8h2V6z"/>' }, "calendar-add-alt": { "body": '<path fill="currentColor" d="M26 21h-3v-3h-2v3h-3v2h3v3h2v-3h3z"/><path fill="currentColor" d="M22 30c-4.4 0-8-3.6-8-8s3.6-8 8-8s8 3.6 8 8s-3.6 8-8 8zm0-14c-3.3 0-6 2.7-6 6s2.7 6 6 6s6-2.7 6-6s-2.7-6-6-6z"/><path fill="currentColor" d="M28 6c0-1.1-.9-2-2-2h-4V2h-2v2h-8V2h-2v2H6c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h6v-2H6V6h4v2h2V6h8v2h2V6h4v6h2V6z"/>' }, "calendar-heat-map": { "body": '<path fill="currentColor" d="M26 4h-4V2h-2v2h-8V2h-2v2H6a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2ZM6 6h4v2h2V6h8v2h2V6h4v4H6Zm0 6h5v6H6Zm13 14h-6v-6h6Zm0-8h-6v-6h6Zm2 8v-6h5l.001 6Z"/>' }, "calendar-settings": { "body": '<path fill="currentColor" d="M30 23v-2h-2.09a5.96 5.96 0 0 0-1.024-2.47l1.478-1.48l-1.414-1.414l-1.479 1.479A5.958 5.958 0 0 0 23 16.09V14h-2v2.09a5.958 5.958 0 0 0-2.47 1.024l-1.48-1.478l-1.414 1.414l1.479 1.479A5.962 5.962 0 0 0 16.09 21H14v2h2.09a5.962 5.962 0 0 0 1.024 2.47l-1.478 1.48l1.414 1.414l1.479-1.479A5.958 5.958 0 0 0 21 27.91V30h2v-2.09a5.958 5.958 0 0 0 2.47-1.024l1.48 1.478l1.414-1.414l-1.479-1.479A5.96 5.96 0 0 0 27.91 23Zm-8 3a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="M28 6a2 2 0 0 0-2-2h-4V2h-2v2h-8V2h-2v2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h4v-2H6V6h4v2h2V6h8v2h2V6h4v6h2Z"/>' }, "calendar-tools": { "body": '<path fill="currentColor" d="M23.981 24.433A3.955 3.955 0 0 0 26 25a4.005 4.005 0 0 0 4-4a3.943 3.943 0 0 0-.15-1.023l-2.436 2.437a2 2 0 1 1-2.828-2.828l2.437-2.437A3.95 3.95 0 0 0 26 17a4.005 4.005 0 0 0-4 4a3.954 3.954 0 0 0 .567 2.02L17 28.585L18.414 30Z"/><path fill="currentColor" fill-rule="evenodd" d="M26 4h-4V2h-2v2h-8V2h-2v2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h8v-2H6V6h4v2h2V6h8v2h2V6h4v8h2V6a2 2 0 0 0-2-2Z"/>' }, "calibrate": { "body": '<path fill="currentColor" d="M28.83 21.17L25 17.37l.67-.67a1 1 0 0 0 0-1.41l-6-6a1 1 0 0 0-1.41 0l-.79.79l-6.76-6.79a1 1 0 0 0-1.41 0l-4 4l-.12.15l-4 6a1 1 0 0 0 .12 1.26l3 3a1 1 0 0 0 1.42 0L10 13.41l2.09 2.09l-4.8 4.79a1 1 0 0 0 0 1.41l2 2a1 1 0 0 0 .71.3a1 1 0 0 0 .52-.15l4.33-2.6l2.44 2.45a1 1 0 0 0 1.41 0l.67-.7l3.79 3.83a4 4 0 0 0 5.66-5.66ZM10 10.58l-5 5l-1.71-1.71l3.49-5.24L10 5.41l6.09 6.09l-2.59 2.58Zm8 11l-2.84-2.84l-5 3l-.74-.74L19 11.41L23.59 16Zm9.42 3.83a2 2 0 0 1-2.83 0l-3.8-3.79l2.83-2.83l3.8 3.79a2 2 0 0 1 0 2.83Z"/>' }, "camera": { "body": '<path fill="currentColor" d="M29 26H3a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1h6.46l1.71-2.55A1 1 0 0 1 12 4h8a1 1 0 0 1 .83.45L22.54 7H29a1 1 0 0 1 1 1v17a1 1 0 0 1-1 1ZM4 24h24V9h-6a1 1 0 0 1-.83-.45L19.46 6h-6.92l-1.71 2.55A1 1 0 0 1 10 9H4Z"/><path fill="currentColor" d="M16 22a6 6 0 1 1 6-6a6 6 0 0 1-6 6Zm0-10a4 4 0 1 0 4 4a4 4 0 0 0-4-4Z"/>' }, "camera-action": { "body": '<path fill="currentColor" d="M12 23a6 6 0 1 1 6-6a6 6 0 0 1-6 6Zm0-10a4 4 0 1 0 4 4a4 4 0 0 0-4-4Z"/><path fill="currentColor" d="M29 27H3a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h26a1 1 0 0 1 1 1v20a1 1 0 0 1-1 1ZM4 25h24V7H4Z"/><path fill="currentColor" d="M19 9h7v2h-7z"/><circle cx="12" cy="17" r="1" fill="currentColor"/>' }, "campsite": { "body": '<path fill="currentColor" d="M27.562 26L17.17 8.928l2.366-3.888L17.828 4L16 7.005L14.17 4l-1.708 1.04l2.366 3.888L4.438 26H2v2h28v-2ZM16 10.85L25.22 26H17v-8h-2v8H6.78Z"/>' }, "car": { "body": '<path fill="currentColor" d="m29.338 15.934l-7.732-2.779l-3.232-4.058A2.99 2.99 0 0 0 16.054 8H8.058a2.998 2.998 0 0 0-2.48 1.312l-2.712 3.983A4.988 4.988 0 0 0 2 16.107V24a1 1 0 0 0 1 1h2.142a3.98 3.98 0 0 0 7.716 0h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-7.125a1 1 0 0 0-.662-.941ZM9 26a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2Zm14 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm5-3h-1.142a3.98 3.98 0 0 0-7.716 0h-6.284a3.98 3.98 0 0 0-7.716 0H4v-6.893a2.998 2.998 0 0 1 .52-1.688l2.711-3.981A1 1 0 0 1 8.058 10h7.996a.993.993 0 0 1 .764.354l3.4 4.269a1 1 0 0 0 .444.318L28 17.578Z"/>' }, "car-front": { "body": '<path fill="currentColor" d="M13 19h6v2h-6z"/><path fill="currentColor" d="m25.44 14l-1.27-4.55A2.009 2.009 0 0 0 22.246 8H9.754a2.009 2.009 0 0 0-1.923 1.45L6.531 14H4v2h2v7a2.002 2.002 0 0 0 2 2v3h2v-3h12v3h2v-3a2.002 2.002 0 0 0 2-2v-7h2v-2ZM9.755 10h12.492l1.428 5H8.326ZM24 21v2H8v-2h2v-2H8v-2h16v2h-2v2Z"/>' }, "carbon": { "body": '<path fill="currentColor" d="M13.5 30.815a1.001 1.001 0 0 1-.493-.13l-8.5-4.815A1 1 0 0 1 4 25V15a1 1 0 0 1 .507-.87l8.5-4.815a1.001 1.001 0 0 1 .986 0l8.5 4.815A1 1 0 0 1 23 15v10a1 1 0 0 1-.507.87l-8.5 4.815a1.001 1.001 0 0 1-.493.13ZM6 24.417l7.5 4.248l7.5-4.248v-8.834l-7.5-4.248L6 15.582Z"/><path fill="currentColor" d="M28 17h-2V7.583l-7.5-4.248l-8.007 4.535l-.986-1.74l8.5-4.815a1.001 1.001 0 0 1 .986 0l8.5 4.815A1 1 0 0 1 28 7Z"/>' }, "carbon-accounting": { "body": '<path fill="currentColor" d="M29 26h-6v-4a2.002 2.002 0 0 1 2-2h2v-2h-4v-2h4a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2h-2v2h4zm-10-4h-4a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v10a2.002 2.002 0 0 1-2 2zm-4-12v10h4V10zm-4 12H5a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h6v2H5v10h6z"/>' }, "carbon-for-ibm-dotcom": { "body": '<path fill="currentColor" d="m29.509 17.689l-6-3.55a.997.997 0 0 0-1.018.001l-6 3.55a.998.998 0 0 0-.491.86v6.9c0 .354.187.681.491.86l6 3.55a.989.989 0 0 0 1.018 0l6-3.55a.998.998 0 0 0 .491-.86v-6.9a1 1 0 0 0-.491-.861zM28 24.88l-5 2.958l-5-2.958v-5.76l5-2.958l5 2.958v5.76z"/><circle cx="6" cy="6" r="1" fill="currentColor"/><circle cx="9" cy="6" r="1" fill="currentColor"/><path fill="currentColor" d="M28 2H4c-1.103 0-2 .897-2 2v20c0 1.103.897 2 2 2h9v-2H4V10h24v4h2V4c0-1.103-.897-2-2-2zM4 8V4h24v4H4z"/>' }, "carbon-for-ibm-product": { "body": '<path fill="currentColor" d="m22.509 12.689l-6-3.55a.997.997 0 0 0-1.018.001l-6 3.55a.998.998 0 0 0-.491.86v6.9c0 .354.187.681.491.86l6 3.55a.989.989 0 0 0 1.018 0l6-3.55a.998.998 0 0 0 .491-.86v-6.9a1 1 0 0 0-.491-.861zM21 19.88l-5 2.958l-5-2.958v-5.76l5-2.958l5 2.958v5.76z"/><path fill="currentColor" d="M6 20.184V11.07l6.2-3.664l-1.017-1.722l-6.692 3.955A1 1 0 0 0 4 10.5v9.684A2.996 2.996 0 0 0 2 23c0 1.654 1.346 3 3 3s3-1.346 3-3a2.996 2.996 0 0 0-2-2.816zM5 24a1.001 1.001 0 0 1 0-2a1.001 1.001 0 0 1 0 2zm22-4c-1.654 0-3 1.346-3 3c0 .353.072.687.185 1.002L16 28.838l-6.404-3.784l-1.017 1.722l6.912 4.084a.997.997 0 0 0 1.018.001l8.96-5.295c.45.269.97.434 1.531.434c1.654 0 3-1.346 3-3s-1.346-3-3-3zm0 4a1.001 1.001 0 0 1 0-2a1.001 1.001 0 0 1 0 2zM16 7c.731 0 1.392-.273 1.913-.708L26 11.071V18h2v-7.5a1 1 0 0 0-.491-.861l-8.567-5.062C18.978 4.39 19 4.198 19 4c0-1.654-1.346-3-3-3s-3 1.346-3 3s1.346 3 3 3zm0-4a1.001 1.001 0 1 1-1 1c0-.552.449-1 1-1z"/>' }, "carbon-ui-builder": { "body": '<path fill="currentColor" d="M24 28h6v2h-6z"/><circle cx="21" cy="29" r="1" fill="currentColor"/><circle cx="29" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="M26 26h-6v-2h6zm-2-6h6v2h-6z"/><circle cx="21" cy="21" r="1" fill="currentColor"/><path fill="currentColor" d="m21.493 14.13l-8.5-4.815a1 1 0 0 0-.986 0l-8.5 4.815A1 1 0 0 0 3 15v10a1 1 0 0 0 .507.87l8.5 4.815l.986-1.74L5 24.417v-8.834l7.5-4.248l7.5 4.248V18h2v-3a1 1 0 0 0-.507-.87Z"/><path fill="currentColor" d="M25 15h2V7a1 1 0 0 0-.507-.87l-8.5-4.815a1 1 0 0 0-.986 0l-8.5 4.815l.986 1.74L17.5 3.334L25 7.583V15Z"/>' }, "caret-down": { "body": '<path fill="currentColor" d="m24 12l-8 10l-8-10z"/>' }, "caret-left": { "body": '<path fill="currentColor" d="m20 24l-10-8l10-8z"/>' }, "caret-right": { "body": '<path fill="currentColor" d="m12 8l10 8l-10 8z"/>' }, "caret-sort": { "body": '<path fill="currentColor" d="m24 24l-8 8l-8-8zM8 8l8-8l8 8z"/>' }, "caret-sort-down": { "body": '<path fill="currentColor" d="m24 24l-8 8l-8-8z"/>' }, "caret-sort-up": { "body": '<path fill="currentColor" d="m8 8l8-8l8 8z"/>' }, "caret-up": { "body": '<path fill="currentColor" d="m8 20l8-10l8 10z"/>' }, "carousel-horizontal": { "body": '<path fill="currentColor" d="M22 26H10a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2zM10 8v16h12V8zM4 24H0v-2h4V10H0V8h4a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2zm28 0h-4a2 2 0 0 1-2-2V10a2 2 0 0 1 2-2h4v2h-4v12h4z"/>' }, "carousel-vertical": { "body": '<path fill="currentColor" d="M26 10v12a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V10a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2zM8 22h16V10H8zm16 6v4h-2v-4H10v4H8v-4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2zm0-28v4a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2V0h2v4h12V0z"/>' }, "catalog": { "body": '<path fill="currentColor" d="M26 2H8a2 2 0 0 0-2 2v4H4v2h2v5H4v2h2v5H4v2h2v4a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm0 26H8v-4h2v-2H8v-5h2v-2H8v-5h2V8H8V4h18Z"/><path fill="currentColor" d="M14 8h8v2h-8zm0 7h8v2h-8zm0 7h8v2h-8z"/>' }, "catalog-publish": { "body": '<path fill="currentColor" d="m20 20l1.4 1.4l-2.6 2.6H28v2h-9.2l2.6 2.6L20 30l-5-5zm-6-5h8v2h-8zm0-7h8v2h-8z"/><path fill="currentColor" d="M13 28H8v-4h2v-2H8v-5h2v-2H8v-5h2V8H8V4h18v16h2V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v4H4v2h2v5H4v2h2v5H4v2h2v4c0 1.1.9 2 2 2h5v-2z"/>' }, "categories": { "body": '<path fill="currentColor" d="m6.76 6l.45.89L7.76 8H12v5H4V6h2.76m.62-2H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1H9l-.72-1.45a1 1 0 0 0-.9-.55zm15.38 2l.45.89l.55 1.11H28v5h-8V6h2.76m.62-2H19a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1h-4l-.72-1.45a1 1 0 0 0-.9-.55zM6.76 19l.45.89l.55 1.11H12v5H4v-7h2.76m.62-2H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-7a1 1 0 0 0-1-1H9l-.72-1.45a1 1 0 0 0-.9-.55zm15.38 2l.45.89l.55 1.11H28v5h-8v-7h2.76m.62-2H19a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1v-7a1 1 0 0 0-1-1h-4l-.72-1.45a1 1 0 0 0-.9-.55z"/>' }, "category": { "body": '<path fill="currentColor" d="M27 22.141V18a2 2 0 0 0-2-2h-8v-4h2a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2h-6a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h2v4H7a2 2 0 0 0-2 2v4.142a4 4 0 1 0 2 0V18h8v4.142a4 4 0 1 0 2 0V18h8v4.141a4 4 0 1 0 2 0ZM13 4h6l.001 6H13ZM8 26a2 2 0 1 1-2-2a2.002 2.002 0 0 1 2 2Zm10 0a2 2 0 1 1-2-2a2.003 2.003 0 0 1 2 2Zm8 2a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "category-add": { "body": '<path fill="currentColor" d="m15 6l-1.41 1.41L17.17 11l-3.58 3.59L15 16l5-5l-5-5z"/><path fill="currentColor" d="M28 24H17v-4h6a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2H9a2.002 2.002 0 0 0-2 2v14a2.002 2.002 0 0 0 2 2h6v4H4a2 2 0 0 0-2 2v4h2v-4h11v4h2v-4h11v4h2v-4a2 2 0 0 0-2-2ZM9 4h14l.002 14H9Z"/>' }, "category-and": { "body": '<path fill="currentColor" d="M4 30v-4h11v4h2v-4h11v4h2v-4a2 2 0 0 0-2-2H17v-5h-2v5H4a2 2 0 0 0-2 2v4zm16.695-16.014A10.08 10.08 0 0 0 21.946 10H23V8h-3v1a9.263 9.263 0 0 1-.664 3.27L16.65 8.883a5.126 5.126 0 0 0 2.144-2.37a3.252 3.252 0 0 0-.189-2.702a3.38 3.38 0 0 0-2.239-1.706a3.469 3.469 0 0 0-4.222 2.119c-.505 1.552.44 3.116 1.261 4.108a4.726 4.726 0 0 0-2.346 4.828A4.453 4.453 0 0 0 15.427 17h.006a5.784 5.784 0 0 0 3.971-1.423L20.532 17h2.552zM14.047 4.84A1.322 1.322 0 0 1 15.414 4a2.41 2.41 0 0 1 .521.058a1.402 1.402 0 0 1 .912.702a1.25 1.25 0 0 1 .079 1.042a3.687 3.687 0 0 1-1.682 1.593c-.66-.713-1.435-1.822-1.197-2.554zM15.432 15h-.004a2.443 2.443 0 0 1-2.392-2.15a2.826 2.826 0 0 1 1.81-3.026l3.312 4.179a3.885 3.885 0 0 1-2.726.997z"/>' }, "category-new": { "body": '<path fill="currentColor" d="M21 10h-4V6h-2v4h-4v2h4v4h2v-4h4v-2z"/><path fill="currentColor" d="M28 24H17v-4h6a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2H9a2.002 2.002 0 0 0-2 2v14a2.002 2.002 0 0 0 2 2h6v4H4a2 2 0 0 0-2 2v4h2v-4h11v4h2v-4h11v4h2v-4a2 2 0 0 0-2-2ZM9 4h14l.002 14H9Z"/>' }, "category-new-each": { "body": '<path fill="currentColor" d="M29 10h-5v2h5v6h-7v2h3v2.142a4 4 0 1 0 2 0V20h2a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-1 16a2 2 0 1 1-2-2a2.003 2.003 0 0 1 2 2zM19 6h-5v2h5v6h-7v2h3v6.142a4 4 0 1 0 2 0V16h2a2.002 2.002 0 0 0 2-2V8a2.002 2.002 0 0 0-2-2zm-1 20a2 2 0 1 1-2-2a2.003 2.003 0 0 1 2 2zM9 2H3a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h2v10.142a4 4 0 1 0 2 0V12h2a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2zM8 26a2 2 0 1 1-2-2a2.002 2.002 0 0 1 2 2zM3 10V4h6l.002 6z"/>' }, "ccx": { "body": '<path d="M10 23H5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2H5v6h5z" fill="currentColor"/><path d="M19 23h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2h-5v6h5z" fill="currentColor"/><path d="M29 9h-2l-2 6l-2-6h-2l2.75 7L21 23h2l2-6l2 6h2l-2.75-7L29 9z" fill="currentColor"/>', "hidden": true }, "cd-archive": { "body": '<path d="M16 28a12 12 0 1 1 12-12a12 12 0 0 1-12 12zm0-22a10 10 0 1 0 10 10A10 10 0 0 0 16 6z" fill="currentColor"/><path d="M16 22a6 6 0 1 1 6-6a6 6 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4 4 0 0 0-4-4z" fill="currentColor"/><circle cx="16" cy="16" r="2" fill="currentColor"/>', "hidden": true }, "cd-create-archive": { "body": '<path d="M14 20a6 6 0 1 1 6-6a6 6 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4 4 0 0 0-4-4z" fill="currentColor"/><circle cx="14" cy="14" r="2" fill="currentColor"/><path d="M17 23.54A10 10 0 1 1 24 14c0 .34 0 .67-.05 1h2c0-.33.05-.66.05-1a12 12 0 1 0-12 12a12.33 12.33 0 0 0 3-.39z" fill="currentColor"/><path d="M25 30l-2.14-1A5 5 0 0 1 20 24.47V18h10v6.47A5 5 0 0 1 27.14 29zm-3-10v4.47a3 3 0 0 0 1.72 2.71l1.28.61l1.28-.61A3 3 0 0 0 28 24.47V20z" fill="currentColor"/>', "hidden": true }, "cd-create-exchange": { "body": '<circle cx="14" cy="14" r="2" fill="currentColor"/><path d="M14 2a12 12 0 0 0 0 24v-2a10 10 0 1 1 10-10a8.27 8.27 0 0 1 0 1h2c0-.33.05-.66.05-1A12 12 0 0 0 14 2z" fill="currentColor"/><path d="M17 24h9.17l-2.59 2.59L25 28l5-5l-5-5l-1.42 1.42L26.17 22H17v2z" fill="currentColor"/><path d="M14 20a6 6 0 1 1 6-6a6 6 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4 4 0 0 0-4-4z" fill="currentColor"/>', "hidden": true }, "cda": { "body": '<path fill="currentColor" d="M28 9h-4a2.002 2.002 0 0 0-2 2v12h2v-5h4v5h2V11a2.002 2.002 0 0 0-2-2zm-4 7v-5h4v5zm-8 7h-4V9h4a4.004 4.004 0 0 1 4 4v6a4.004 4.004 0 0 1-4 4zm-2-2h2a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2h-2zm-4 2H4a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h6v2H4v10h6z"/>' }, "cell-tower": { "body": '<path fill="currentColor" d="M25 11v5h-8v-5h-2v5H7v-5H5v12h2v-5h3v12h2V18h3v5h2v-5h3v12h2V18h3v5h2V11zm-9-5c-1.7 0-3.2.7-4.2 1.8l1.4 1.4C13.9 8.4 14.9 8 16 8s2.1.4 2.8 1.2l1.4-1.4C19.2 6.7 17.7 6 16 6z"/><path fill="currentColor" d="m8.9 4.9l1.4 1.4C11.8 4.9 13.8 4 16 4s4.2.9 5.7 2.3l1.4-1.4C21.3 3.1 18.8 2 16 2s-5.3 1.1-7.1 2.9z"/>' }, "center-circle": { "body": '<path fill="currentColor" d="M30 15h-2.05A12.007 12.007 0 0 0 17 4.05V2h-2v2.05A12.007 12.007 0 0 0 4.05 15H2v2h2.05A12.007 12.007 0 0 0 15 27.95V30h2v-2.05A12.007 12.007 0 0 0 27.95 17H30ZM17 25.95V22h-2v3.95A10.017 10.017 0 0 1 6.05 17H10v-2H6.05A10.017 10.017 0 0 1 15 6.05V10h2V6.05A10.017 10.017 0 0 1 25.95 15H22v2h3.95A10.017 10.017 0 0 1 17 25.95Z"/>' }, "center-square": { "body": '<path fill="currentColor" d="M6 12H4V4h8v2H6v6zm22 0h-2V6h-6V4h8v8zM12 28H4v-8h2v6h6v2zm16 0h-8v-2h6v-6h2v8zM15 10h2v4h-2zm-5 5h4v2h-4zm8 0h4v2h-4zm-3 3h2v4h-2z"/>' }, "center-to-fit": { "body": '<path fill="currentColor" d="M8 2H2v6h2V4h4V2zm16 0h6v6h-2V4h-4V2zM8 30H2v-6h2v4h4v2zm16 0h6v-6h-2v4h-4v2zm0-6H8a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zM8 10v12h16V10z"/>' }, "certificate": { "body": '<path fill="currentColor" d="m24 17l1.912 3.703l4.088.594L27 24l.771 4L24 25.75L20.229 28L21 24l-3-2.703l4.2-.594L24 17zM6 16h6v2H6zm0-4h10v2H6zm0-4h10v2H6z"/><path fill="currentColor" d="M16 26H4V6h24v10h2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h12Z"/>' }, "certificate-check": { "body": '<path fill="currentColor" d="M6 16h6v2H6zm0-4h10v2H6zm0-4h10v2H6z"/><path fill="currentColor" d="M14 26H4V6h24v10h2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10Z"/><path fill="currentColor" d="M22 25.59L19.41 23L18 24.41l4 4l8-8L28.59 19L22 25.59z"/>' }, "change-catalog": { "body": '<path fill="currentColor" d="M24 24v2h2.46A5.94 5.94 0 0 1 22 28a6.007 6.007 0 0 1-6-6h-2a7.984 7.984 0 0 0 14 5.265V30h2v-6zm-2-10a8.04 8.04 0 0 0-6 2.735V14h-2v6h6v-2h-2.46A5.94 5.94 0 0 1 22 16a6.007 6.007 0 0 1 6 6h2a8.01 8.01 0 0 0-8-8z"/><path fill="currentColor" d="M12 28H6v-4h2v-2H6v-5h2v-2H6v-5h2V8H6V4h18v8h2V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4H2v2h2v5H2v2h2v5H2v2h2v4a2 2 0 0 0 2 2h6Z"/>' }, "character-decimal": { "body": '<path fill="currentColor" d="M21 15h2v2h-2z"/><path fill="currentColor" d="M24 23h-4a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v10a2.003 2.003 0 0 1-2 2zm-4-12v10h4V11zm-9 4h2v2h-2z"/><path fill="currentColor" d="M14 23h-4a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v10a2.003 2.003 0 0 1-2 2zm-4-12v10h4V11zM4 21h2v2H4z"/>' }, "character-fraction": { "body": '<path fill="currentColor" d="M28 30h-8v-6a2.002 2.002 0 0 1 2-2h4v-4h-6v-2h6a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2h-4v4h6ZM7 23.586L22.586 8L24 9.414L8.414 25zM4.5 15.5v-1h3v-11h-3v-1h4v12h3v1h-7z"/><path fill="currentColor" d="M8 3v12V3m1-1H4v2h3v10H4v2h8v-2H9V2Z"/>' }, "character-integer": { "body": '<path fill="currentColor" d="M19.5 22.5v-1h3v-11h-3v-1h4v12h3v1h-7z"/><path fill="currentColor" d="M23 10v12v-12m1-1h-5v2h3v10h-3v2h8v-2h-3V9zM5 21h10v2H5zm10-8h-4V9H9v4H5v2h4v4h2v-4h4v-2z"/>' }, "character-lower-case": { "body": '<path fill="currentColor" d="M29 23h-5a2.003 2.003 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h5v2h-5v6h5zM18 13h-4V9h-2v14h6a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-4 8v-6h4v6zm-6-8H3v2h5v2H4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6v-8a2.002 2.002 0 0 0-2-2zm0 8H4v-2h4z"/>' }, "character-negative-number": { "body": '<path fill="currentColor" d="M19.5 22.5v-1h3v-11h-3v-1h4v12h3v1h-7z"/><path fill="currentColor" d="M23 10v12v-12m1-1h-5v2h3v10h-3v2h8v-2h-3V9zM5 15h10v2H5z"/>' }, "character-patterns": { "body": '<path fill="currentColor" d="M6 26v-8.172l-3.586 3.586L1 20l6-6l6 6l-1.414 1.414L8 17.828V26h10v2H8a2.002 2.002 0 0 1-2-2zm24-4v-2h-8v2h5.5L22 28v2h8v-2h-5.493L30 22zM26 6v8.172l3.586-3.586L31 12l-6 6l-6-6l1.414-1.414L24 14.172V6H14V4h10a2.002 2.002 0 0 1 2 2zM8 2H3v2h5v2H4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6V4a2.002 2.002 0 0 0-2-2zm0 8H4V8h4z"/>' }, "character-sentence-case": { "body": '<path fill="currentColor" d="M29 23h-5a2.003 2.003 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h5v2h-5v6h5zM18 13h-4V9h-2v14h6a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-4 8v-6h4v6zM8 9H4a2.002 2.002 0 0 0-2 2v12h2v-5h4v5h2V11a2.002 2.002 0 0 0-2-2zm-4 7v-5h4v5z"/>' }, "character-upper-case": { "body": '<path fill="currentColor" d="M30 23h-6a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h6v2h-6v10h6zM20 12a3.003 3.003 0 0 0-3-3h-5v14h5a3.003 3.003 0 0 0 3-3v-2a2.977 2.977 0 0 0-.78-2a2.977 2.977 0 0 0 .78-2zm-6-1h3a1.001 1.001 0 0 1 1 1v2a1.001 1.001 0 0 1-1 1h-3zm4 9a1 1 0 0 1-1 1h-3v-4h3a1 1 0 0 1 1 1zM8 9H4a2.002 2.002 0 0 0-2 2v12h2v-5h4v5h2V11a2.002 2.002 0 0 0-2-2zm-4 7v-5h4v5z"/>' }, "character-whole-number": { "body": '<path fill="currentColor" d="M28 9h-6v2h6v4h-4v2h4v4h-6v2h6a2.003 2.003 0 0 0 2-2V11a2.002 2.002 0 0 0-2-2zm-8 14h-8v-6a2.002 2.002 0 0 1 2-2h4v-4h-6V9h6a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2h-4v4h6zm-17.5-.5v-1h3v-11h-3v-1h4v12h3v1h-7z"/><path fill="currentColor" d="M6 10v12v-12m1-1H2v2h3v10H2v2h8v-2H7V9Z"/>' }, "charging-station": { "body": '<path fill="currentColor" d="m11.857 21.514l-1.714-1.028L12.234 17h-5l3.909-6.514l1.714 1.028L10.766 15h5l-3.909 6.514z"/><path fill="currentColor" d="M30 7h-1V4h-2v3h-1v6h1v11.5a1.5 1.5 0 0 1-3 0V16a1 1 0 0 0-1-1h-4V5a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v21H2v2h19v-2h-2v-9h3v7.5a3.5 3.5 0 0 0 7 0V13h1ZM17 26H6V6h11Z"/>' }, "charging-station-filled": { "body": '<path fill="currentColor" d="M29 7V4h-2v3h-1v6h1v11.5a1.5 1.5 0 0 1-3 0V16a1 1 0 0 0-1-1h-4V5a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v21H2v2h19v-2h-2v-9h3v7.5a3.5 3.5 0 0 0 7 0V13h1V7ZM11.857 21.515l-1.714-1.03L12.233 17h-5l3.91-6.515l1.714 1.03L10.767 15h5Z"/><path fill="none" d="m11.857 21.514l-1.714-1.028L12.234 17h-5l3.909-6.514l1.714 1.028L10.766 15h5l-3.909 6.514z"/>' }, "chart-3d": { "body": '<path fill="currentColor" d="M28 23v3.586l-5-5V15a1 1 0 0 0-.553-.894L17 11.381V5.828l2.586 2.586L21 7l-5-5l-5 5l1.414 1.414L15 5.828v5.554l-5.447 2.723A1 1 0 0 0 9 15v6.586l-5 5V23H2v7h7v-2H5.414l4.783-4.783l5.356 2.678a1.001 1.001 0 0 0 .894 0l5.356-2.678L26.586 28H23v2h7v-7Zm-13 .382l-4-2v-4.764l4 2Zm1-6.5L12.236 15L16 13.118L19.764 15Zm5 4.5l-4 2v-4.764l4-2Z"/>' }, "chart-area": { "body": '<path fill="currentColor" d="m20.476 8.015l-7.029-3.804a2.008 2.008 0 0 0-2.115.205L4 10.001V2H2v26a2 2 0 0 0 2 2h26V5.735ZM28 20.21l-7.62 1.802l-7.029-2.884a1.99 1.99 0 0 0-2.022.37L4 25.836V21.38l8.375-9.4l7.019 5.62a2.015 2.015 0 0 0 2.046.212l6.56-3.21ZM12.524 5.985l7.03 3.804a2.012 2.012 0 0 0 1.34.16L28 8.265v4.113l-7.381 3.642L13.6 10.4a1.99 1.99 0 0 0-2.688.264L4 18.384v-5.87ZM4.55 28l8.069-7.011l7.029 2.884a1.998 1.998 0 0 0 1.147.077L28 22.26V28Z"/>' }, "chart-area-smooth": { "body": '<path fill="currentColor" d="m30 6.614l-1.315.437A20.922 20.922 0 0 1 23 8c-1.734 0-3.322-.907-5.004-1.868C16.162 5.084 14.266 4 12 4C9.123 4 5.915 6.206 4 7.772V2H2v26a2.002 2.002 0 0 0 2 2h26ZM4 20.294C5.874 17.376 9.56 13 12 13c1.638 0 2.96 1.102 4.36 2.269C17.897 16.549 19.638 18 22 18a9.469 9.469 0 0 0 6-2.529v4.956A13.003 13.003 0 0 1 22 22a13.862 13.862 0 0 1-4.684-.949A15.682 15.682 0 0 0 12 20c-2.927 0-6.068 2.959-8 5.158ZM12 6c1.734 0 3.322.907 5.004 1.868C18.838 8.916 20.734 10 23 10a21.432 21.432 0 0 0 5-.678v3.321c-.683.803-3.084 3.357-6 3.357c-1.638 0-2.96-1.102-4.36-2.269C16.103 12.451 14.362 11 12 11c-2.936 0-6.063 3.34-8 5.845v-6.421C5.546 8.966 9.259 6 12 6ZM4.249 28C5.862 25.909 9.41 22 12 22a13.862 13.862 0 0 1 4.684.949A15.682 15.682 0 0 0 22 24a14.736 14.736 0 0 0 6-1.34V28Z"/>' }, "chart-area-stepper": { "body": '<path fill="currentColor" d="M22 10V6H10v6H4V2H2v26a2.002 2.002 0 0 0 2 2h26V10Zm-10 4V8h8v4h8v10h-6v-6H12v6H4v-8ZM4 28v-4h10v-6h6v6h8v4Z"/>' }, "chart-average": { "body": '<path fill="currentColor" d="M23 24c-3.6 0-5.03-4.176-6.413-8.214C15.277 11.958 13.92 8 11 8a3.44 3.44 0 0 0-3.053 2.321L6.05 9.684C6.101 9.534 7.321 6 11 6c4.35 0 6.012 4.855 7.48 9.138C19.689 18.667 20.83 22 23 22a3.44 3.44 0 0 0 3.053-2.321l1.896.637C27.899 20.466 26.679 24 23 24Z"/><path fill="currentColor" d="M4 28V17h2v-2H4V2H2v26a2 2 0 0 0 2 2h26v-2Z"/><path fill="currentColor" d="M8 15h2v2H8zm4 0h2v2h-2zm8 0h2v2h-2zm4 0h2v2h-2zm4 0h2v2h-2z"/>' }, "chart-bar": { "body": '<path fill="currentColor" d="M4 2H2v26a2 2 0 0 0 2 2h26v-2H4v-3h22v-8H4v-4h14V5H4Zm20 17v4H4v-4ZM16 7v4H4V7Z"/>' }, "chart-bar-floating": { "body": '<path fill="currentColor" d="M28 24H14v-8h14zm-12-2h10v-4H16zm10-10H8V4h18zm-16-2h14V6H10z"/><path fill="currentColor" d="M30 30H4a2.002 2.002 0 0 1-2-2V2h2v26h26Z"/>' }, "chart-bar-overlay": { "body": '<path fill="currentColor" d="M4 28v-2h22V16H4v-2h14V4H4V2H2v26a2 2 0 0 0 2 2h26v-2Zm20-10v6H4v-2h16v-2H4v-2ZM16 6v6H4v-2h8V8H4V6Z"/>' }, "chart-bar-stacked": { "body": '<path fill="currentColor" d="M4 28v-3h22v-8H4v-4h14V5H4V2H2v26a2 2 0 0 0 2 2h26v-2Zm20-5H14v-4h10Zm-8-12h-6V7h6Z"/>' }, "chart-bar-target": { "body": '<path fill="currentColor" d="M28 17h2v8h-2zM20 5h2v8h-2z"/><path fill="currentColor" d="M4 2H2v26a2 2 0 0 0 2 2h26v-2H4v-3h22v-8H4v-4h14V5H4Zm20 17v4H4v-4ZM16 7v4H4V7Z"/>' }, "chart-bubble": { "body": '<path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/><path fill="currentColor" d="M10 16a2 2 0 1 1-2 2a2 2 0 0 1 2-2m0-2a4 4 0 1 0 4 4a4 4 0 0 0-4-4zm11-8a4 4 0 1 1-4 4a4 4 0 0 1 4-4m0-2a6 6 0 1 0 6 6a6 6 0 0 0-6-6zm3.5 17a1.5 1.5 0 1 1-1.5 1.5a1.5 1.5 0 0 1 1.5-1.5m0-2a3.5 3.5 0 1 0 3.5 3.5a3.5 3.5 0 0 0-3.5-3.5z"/>' }, "chart-bubble-packed": { "body": '<path fill="currentColor" d="M27.532 17.172A8.99 8.99 0 1 0 13.607 5.88a5.997 5.997 0 1 0-8.556 7.342a6.997 6.997 0 1 0 7.994 11.484A5.998 5.998 0 0 0 25 24c0-.122-.011-.24-.018-.36a3.487 3.487 0 1 0 2.55-6.468ZM21 4a7 7 0 1 1-7 7a7.008 7.008 0 0 1 7-7ZM8 4a4 4 0 1 1-4 4a4.005 4.005 0 0 1 4-4Zm11 24a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/>' }, "chart-bullet": { "body": '<path fill="currentColor" d="M30 22H16v-1h-2v1H2v6h12v1h2v-1h14zM4 26v-2h10v2zm24 0H16v-2h12zm2-13h-6v-1h-2v1H2v6h20v1h2v-1h6zM4 17v-2h18v2zm24 0h-4v-2h4zm2-13H10V3H8v1H2v6h6v1h2v-1h20zM4 8V6h4v2zm24 0H10V6h18z"/>' }, "chart-candlestick": { "body": '<path fill="currentColor" d="M26 10h-2V6h-2v4h-2v12h2v4h2v-4h2zm-2 10h-2v-8h2zM14 8h-2V4h-2v4H8v10h2v4h2v-4h2zm-2 8h-2v-6h2z"/><path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/>' }, "chart-cluster-bar": { "body": '<path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/><path fill="currentColor" d="M10 16h2v10h-2zm-3 6h2v4H7zM26 8h2v18h-2zm-3 6h2v12h-2zm-6 12h-2V12h2zm3 0h-2v-8h2z"/>' }, "chart-column": { "body": '<path fill="currentColor" d="M27 28V6h-8v22h-4V14H7v14H4V2H2v26a2 2 0 0 0 2 2h26v-2Zm-14 0H9V16h4Zm12 0h-4V8h4Z"/>' }, "chart-column-floating": { "body": '<path fill="currentColor" d="M28 22h-8V4h8zm-6-2h4V6h-4zm-6 4H8V10h8zm-6-2h4V12h-4z"/><path fill="currentColor" d="M30 30H4a2.002 2.002 0 0 1-2-2V2h2v26h26Z"/>' }, "chart-column-target": { "body": '<path fill="currentColor" d="M27 28V6h-8v22h-4V14H7v14H4V2H2v26a2 2 0 0 0 2 2h26v-2zm-14 0H9V16h4zm12 0h-4V8h4zM19 2h8v2h-8z"/><path fill="currentColor" d="M7 10h8v2H7z"/>' }, "chart-combo": { "body": '<path fill="currentColor" d="M27 28V16h-8v12h-4V12H7v16H4V2H2v26a2 2 0 0 0 2 2h26v-2Zm-14 0H9V14h4Zm12 0h-4V18h4Z"/><path fill="currentColor" d="M22.786 14a1.988 1.988 0 0 1-1.18-.387L11.205 5.987L8.242 10L6.637 8.806l2.982-4a1.998 1.998 0 0 1 2.749-.446L22.789 12l3.604-4.86L28 8.33l-3.604 4.862a2.001 2.001 0 0 1-1.61.808Z"/>' }, "chart-combo-stacked": { "body": '<path fill="currentColor" d="M27 28V16h-8v12h-4V12H7v16H4V2H2v26a2 2 0 0 0 2 2h26v-2ZM13 14v6H9v-6Zm12 4v6h-4v-6Z"/><path fill="currentColor" d="M22.786 14a1.988 1.988 0 0 1-1.18-.387L11.205 5.987L8.242 10L6.637 8.806l2.982-4a1.998 1.998 0 0 1 2.749-.446L22.789 12l3.604-4.86L28 8.33l-3.604 4.862a2.001 2.001 0 0 1-1.61.808Z"/>' }, "chart-custom": { "body": '<path fill="currentColor" d="m29.707 19.293l-3-3a1 1 0 0 0-1.414 0L16 25.586V30h4.414l9.293-9.293a1 1 0 0 0 0-1.414ZM19.586 28H18v-1.586l5-5L24.586 23ZM26 21.586L24.414 20L26 18.414L27.586 20ZM18 18v-4h2v4zm-4 0v-6h2v6zm-4 0V8h2v10z"/><path fill="currentColor" d="M12 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v10h-2V4H6v24h6Z"/>' }, "chart-error-bar": { "body": '<path fill="currentColor" d="M22 28V12h-4V8h2V6h-6v2h2v4h-4v16H4V2H2v26a2 2 0 0 0 2 2h26v-2Zm-8-14h2v4h-2Zm6 14h-6v-8h6Zm0-10h-2v-4h2Z"/>' }, "chart-error-bar-alt": { "body": '<path fill="currentColor" d="M14 10V8H8v2h2v4.184a2.983 2.983 0 0 0 0 5.632V24H8v2h6v-2h-2v-4.184a2.983 2.983 0 0 0 0-5.632V10zm12-4V4h-6v2h2v2.184a2.983 2.983 0 0 0 0 5.632V18h-2v2h6v-2h-2v-4.184a2.983 2.983 0 0 0 0-5.632V6z"/><path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/>' }, "chart-evaluation": { "body": '<path fill="currentColor" d="m25.586 8l3-3L30 6.411l-3 3.001zM16 20.5l-5-4.961l1.59-1.57l3.41 3.38L23.41 10L25 11.579L16 20.5z"/><path fill="currentColor" d="M4 28v-2.587L10.414 19L9 17.585l-5 5V2H2v26a2 2 0 0 0 2 2h26v-2Z"/>' }, "chart-high-low": { "body": '<path fill="currentColor" d="M15 8h-3V6h-2v14H7v2h3v2h2V10h3V8zm12 2h-3V6h-2v12h-3v2h3v4h2V12h3v-2z"/><path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/>' }, "chart-histogram": { "body": '<path fill="currentColor" d="M6 16c2.973 0 4.232-2.251 5.345-4.237C12.475 9.744 13.45 8 16 8s3.526 1.744 4.655 3.763C21.768 13.749 23.027 16 26 16h4v-2h-4c-1.713 0-2.483-1.22-3.6-3.214C21.209 8.654 19.724 6 16 6s-5.207 2.654-6.4 4.786C8.482 12.779 7.712 14 6 14H4V2H2v26a2 2 0 0 0 2 2h26v-2h-2v-6h-2v6h-4v-8h-2v8h-4V16h-2v12h-4v-8H8v8H4V16Z"/>' }, "chart-line": { "body": '<path fill="currentColor" d="m4.67 28l6.39-12l7.3 6.49a2 2 0 0 0 1.7.47a2 2 0 0 0 1.42-1.07L27 10.9l-1.82-.9l-5.49 11l-7.3-6.49a2 2 0 0 0-1.68-.51a2 2 0 0 0-1.42 1L4 25V2H2v26a2 2 0 0 0 2 2h26v-2Z"/>' }, "chart-line-data": { "body": '<path fill="currentColor" d="M10.06 17.88A4.25 4.25 0 0 0 11 18a4 4 0 0 0 2.23-.68l3.22 2.87a3.88 3.88 0 0 0-.2 3.17A4 4 0 1 0 22.62 19l2.54-5.09a3.78 3.78 0 0 0 2.91-.53a4 4 0 1 0-4.69-.38l-2.54 5.09A3.86 3.86 0 0 0 20 18a4 4 0 0 0-2.23.68l-3.22-2.87a3.88 3.88 0 0 0 .2-3.17a4 4 0 1 0-6.45 4.29L4 25V2H2v26a2 2 0 0 0 2 2h26v-2H4.67ZM26 8a2 2 0 1 1-2 2a2 2 0 0 1 2-2Zm-4 14a2 2 0 1 1-2-2a2 2 0 0 1 2 2ZM11 12a2 2 0 1 1-2 2a2 2 0 0 1 2-2Z"/>' }, "chart-line-smooth": { "body": '<path fill="currentColor" d="M13 15c1.485 0 2.554 1.497 3.686 3.081C17.998 19.918 19.486 22 22 22c5.67 0 7.78-10.79 8-12l-1.968-.358C27.55 12.282 25.394 20 22 20c-1.485 0-2.554-1.497-3.686-3.081C17.002 15.082 15.514 13 13 13c-4.186 0-7.445 7.404-9 11.762V2H2v26a2.002 2.002 0 0 0 2 2h26v-2H5.044c1.51-5.143 4.92-13 7.956-13Z"/>' }, "chart-logistic-regression": { "body": '<circle cx="26" cy="22" r="2" fill="currentColor"/><circle cx="20" cy="22" r="2" fill="currentColor"/><circle cx="14" cy="6" r="2" fill="currentColor"/><circle cx="8" cy="6" r="2" fill="currentColor"/><path fill="currentColor" d="M8.234 24a8.989 8.989 0 0 0 8.538-6.154l2.353-7.06A6.992 6.992 0 0 1 25.766 6H30V4h-4.234a8.989 8.989 0 0 0-8.538 6.154l-2.353 7.06A6.992 6.992 0 0 1 8.234 22H4V2H2v26c0 1.103.897 2 2 2h26v-2H4v-4h4.234Z"/>' }, "chart-marimekko": { "body": '<path fill="currentColor" d="M27 3H5a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h22a2.002 2.002 0 0 0 2-2V5a2.002 2.002 0 0 0-2-2Zm0 7h-6V5h6Zm-8-2h-6V5h6Zm0 2v8h-6v-8Zm-8 12H5V12h6Zm2-2h6v7h-6Zm8-8h6v4h-6ZM11 5v5H5V5ZM5 24h6v3H5Zm16 3v-9h6v9Z"/>' }, "chart-maximum": { "body": '<path fill="currentColor" d="M8 6h2v2H8zm4 0h2v2h-2zm8 0h2v2h-2zm4 0h2v2h-2zm4 0h2v2h-2z"/><path fill="currentColor" d="m27.989 28l-.027-.163C26.51 19.074 24.066 9.089 18 8.089V6h-2v2.085c-6.084.978-8.533 10.977-9.986 19.752L5.987 28H4V8h2V6H4V2H2v26a2 2 0 0 0 2 2h26v-2ZM8.015 28c2.024-12.108 4.96-18 8.973-18s6.949 5.892 8.972 18Z"/>' }, "chart-median": { "body": '<path fill="currentColor" d="M16 24v-2h2v2z"/><path fill="currentColor" d="M18 28v-2h-2v2H4V2H2v26a2 2 0 0 0 2 2h26v-2Z"/><path fill="currentColor" d="M26.053 19.679A3.44 3.44 0 0 1 23 22c-2.17 0-3.312-3.333-4.52-6.862c-.356-1.039-.724-2.11-1.138-3.138H18v-2h-1.578c-1.21-2.285-2.84-4-5.422-4c-3.678 0-4.898 3.533-4.949 3.684l1.896.637A3.44 3.44 0 0 1 11 8c2.92 0 4.276 3.958 5.587 7.786c.255.742.51 1.49.782 2.214H16v2h2.202c1.083 2.289 2.496 4 4.798 4c3.678 0 4.898-3.533 4.949-3.684ZM16 8V6h2v2zm0-4V2h2v2z"/>' }, "chart-minimum": { "body": '<path fill="currentColor" d="M4 28v-2h2v-2H4V2H2v26a2 2 0 0 0 2 2h26v-2Z"/><path fill="currentColor" d="M8 24h2v2H8zm4 0h2v2h-2zm8 0h2v2h-2zm4 0h2v2h-2zm4 0h2v2h-2z"/><path fill="currentColor" d="M27.946 4.328L25.973 4C23.949 16.108 21.013 22 17 22s-6.949-5.892-8.973-18l-1.973.328C7.51 13.057 9.964 22.93 16 23.913V26h2v-2.087c6.037-.983 8.49-10.856 9.946-19.585Z"/>' }, "chart-multi-line": { "body": '<path fill="currentColor" d="m4.586 28l7.178-5.998l7.994 1.938a2.021 2.021 0 0 0 1.314-.12L28 20.58l-.848-1.812l-6.916 3.229l-7.994-1.938a2.003 2.003 0 0 0-1.74.384L4 25.882V20.49l7.764-6.488l7.994 1.938a2.021 2.021 0 0 0 1.314-.12L28 12.58l-.847-1.812l-6.918 3.229l-7.994-1.938a2.005 2.005 0 0 0-1.74.384L4 17.882V12.49l7.764-6.488l7.994 1.938a2.021 2.021 0 0 0 1.314-.12L28 4.585l-.846-1.812l-6.918 3.224l-7.994-1.938a2.003 2.003 0 0 0-1.74.384L4 9.882V2H2v26a2 2 0 0 0 2 2h26v-2Z"/>' }, "chart-multitype": { "body": '<path fill="currentColor" d="M28 22h2v8h-2zm-4-4h2v12h-2zm-4 8h2v4h-2zM9 16a7 7 0 1 0 7 7a7.008 7.008 0 0 0-7-7zm4.899 6H10v-3.899A5.014 5.014 0 0 1 13.899 22zM9 28a5 5 0 0 1-1-9.899V22a2 2 0 0 0 2 2h3.899A5.008 5.008 0 0 1 9 28zm13.535-16l4-6H30V4h-4.535l-4 6H18V2h-2v12a2 2 0 0 0 2 2h12v-2H18v-2z"/><circle cx="11" cy="7" r="1" fill="currentColor"/><circle cx="9" cy="11" r="1" fill="currentColor"/><circle cx="7" cy="5" r="1" fill="currentColor"/><circle cx="5" cy="9" r="1" fill="currentColor"/><circle cx="3" cy="13" r="1" fill="currentColor"/>' }, "chart-network": { "body": '<path fill="currentColor" d="M26 14a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2v4.1a5 5 0 0 0-3.9 3.9H14v-2a2 2 0 0 0-2-2h-2v-4.1a5 5 0 1 0-2 0V18H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-2h4.1a5 5 0 1 0 5.9-5.9V14ZM6 9a3 3 0 1 1 3 3a3 3 0 0 1-3-3Zm6 17H6v-6h6Zm14-3a3 3 0 1 1-3-3a3 3 0 0 1 3 3ZM20 6h6v6h-6Z"/>' }, "chart-parallel": { "body": '<path fill="currentColor" d="M28 2v3.307l-6 2.25V2h-2v5.523l-8-3.2V2h-2v2.446l-6 3.75V2H2v28h2v-2.382l6-3V30h2v-5.656l8 2.4V30h2v-3.446l6-3.75V30h2V2Zm0 5.443V12.5L22 17V9.693Zm-8 2.234v7.557l-8-4.8V6.477ZM10 6.804v5.742l-6 5.25v-7.242ZM4 25.382v-4.928l6-5.25v7.178Zm8-3.126v-7.49l8 4.8v5.09Zm10 1.94V19.5l6-4.5v5.446Z"/>' }, "chart-pie": { "body": '<path fill="currentColor" d="M16 4a12 12 0 1 0 12 12A12 12 0 0 0 16 4Zm10 11h-9V6.05A10 10 0 0 1 26 15ZM15.42 26A10 10 0 0 1 15 6.05v9a2 2 0 0 0 2 2h9A10 10 0 0 1 15.42 26Z"/>' }, "chart-point": { "body": '<path fill="currentColor" d="M30 30H4a2.002 2.002 0 0 1-2-2V2h2v26h26Z"/><circle cx="9" cy="6" r="3" fill="currentColor"/><circle cx="9" cy="22" r="3" fill="currentColor"/><circle cx="18" cy="14" r="3" fill="currentColor"/><path fill="currentColor" d="M9 17a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1Z"/><circle cx="27" cy="6" r="3" fill="currentColor"/><circle cx="27" cy="22" r="3" fill="currentColor"/><path fill="currentColor" d="M27 17a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm-9 13a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm0-14a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1z"/>' }, "chart-population": { "body": '<path fill="currentColor" d="M30 22H17v-2h9v-6h-9v-2h5V6h-5V2h-2v4h-5v6h5v2H6v6h9v2H2v6h13v2h2v-2h13ZM20 8v2h-3V8Zm-8 2V8h3v2Zm12 6v2h-7v-2ZM8 18v-2h7v2Zm-4 8v-2h11v2Zm24 0H17v-2h11Z"/>' }, "chart-radar": { "body": '<path fill="currentColor" d="M16 2L2 13l6 17h16l6-17Zm2.582 19.265l-5.986 1.33l-1.423-7.824l4.91-4.21l5.442 4.082Zm.198 2.005L21.326 28H10.674l1.79-3.327Zm-9.19-9.776l-3.85-.889L15 5.329v3.528ZM17 8.75V5.33l9.26 7.275l-3.15.727ZM4.614 14.398l4.654 1.074l1.484 8.164l-1.738 3.228Zm18.372 12.466l-2.577-4.785l3.007-6.765l3.97-.916Z"/>' }, "chart-radial": { "body": '<path fill="currentColor" d="M16 30A14.016 14.016 0 0 1 2 16h2A12 12 0 1 0 16 4V2a14 14 0 0 1 0 28Z"/><path fill="currentColor" d="M16 26A10.011 10.011 0 0 1 6 16h2a8 8 0 1 0 8-8V6a10 10 0 0 1 0 20Z"/><path fill="currentColor" d="M16 22a6.007 6.007 0 0 1-6-6h2a4 4 0 1 0 4-4v-2a6 6 0 0 1 0 12Z"/>' }, "chart-relationship": { "body": '<path fill="currentColor" d="M26 6a3.996 3.996 0 0 0-3.858 3H17.93A7.996 7.996 0 1 0 9 17.93v4.212a4 4 0 1 0 2 0v-4.211a7.951 7.951 0 0 0 3.898-1.62l3.669 3.67A3.953 3.953 0 0 0 18 22a4 4 0 1 0 4-4a3.952 3.952 0 0 0-2.019.567l-3.67-3.67A7.95 7.95 0 0 0 17.932 11h4.211A3.993 3.993 0 1 0 26 6ZM12 26a2 2 0 1 1-2-2a2.002 2.002 0 0 1 2 2Zm-2-10a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Zm14 6a2 2 0 1 1-2-2a2.002 2.002 0 0 1 2 2Zm2-10a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "chart-ring": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2Zm11.95 13.001h-6.04a5.982 5.982 0 0 0-9.38-3.885l-4.27-4.27A11.978 11.978 0 0 1 27.95 15ZM16 20a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4ZM4 16a11.937 11.937 0 0 1 2.846-7.74l4.27 4.27A5.984 5.984 0 0 0 15 21.91v6.04A12.01 12.01 0 0 1 4 16Zm13 11.95v-6.04A6.007 6.007 0 0 0 21.91 17h6.04A12.008 12.008 0 0 1 17 27.95Z"/>' }, "chart-river": { "body": '<path fill="currentColor" d="m12.433 20.017l8.037 4.68a1.958 1.958 0 0 0 1.051.301a2.241 2.241 0 0 0 .489-.055l7.253-1.977A1 1 0 0 0 30 22V7.996a1 1 0 0 0-1.26-.966l-7.237 1.953l-8.037-4.68a1.992 1.992 0 0 0-1.865-.135L4 7.473V2H2v26a2 2 0 0 0 2 2h26v-2H4v-4.342ZM28 21.234l-6.497 1.75l-8.037-4.68a1.993 1.993 0 0 0-1.865-.135L4 21.475v-4.818l8.433-3.641l8.037 4.68a1.962 1.962 0 0 0 1.05.302a2.211 2.211 0 0 0 .49-.056L28 16.31ZM12.433 6.016l8.037 4.68a2.01 2.01 0 0 0 1.54.245L28 9.308v4.926l-6.497 1.75l-8.037-4.68a1.992 1.992 0 0 0-1.865-.136L4 14.474V9.656Z"/>' }, "chart-rose": { "body": '<path fill="currentColor" d="M30 17A15.017 15.017 0 0 0 15 2h-1v6.06A9.012 9.012 0 0 0 6.06 16H4v1a11.01 11.01 0 0 0 10 10.95V30h1a13.008 13.008 0 0 0 12.95-12H30ZM16 4.038A13.022 13.022 0 0 1 27.962 16H16Zm-2 6.042V16H8.08A7.004 7.004 0 0 1 14 10.08ZM6.055 18H14v7.939A9.013 9.013 0 0 1 6.055 18ZM16 27.955V18h9.955A11.02 11.02 0 0 1 16 27.955Z"/>' }, "chart-scatter": { "body": '<path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/><circle cx="10" cy="22" r="2" fill="currentColor"/><circle cx="14" cy="15" r="2" fill="currentColor"/><circle cx="22" cy="15" r="2" fill="currentColor"/><circle cx="26" cy="6" r="2" fill="currentColor"/><circle cx="14" cy="8" r="2" fill="currentColor"/>' }, "chart-spiral": { "body": '<path fill="currentColor" d="M16 2a13.919 13.919 0 0 0-8.675 3.033A1.973 1.973 0 0 0 7 5a2 2 0 0 0-2 2a1.975 1.975 0 0 0 .033.325A13.986 13.986 0 1 0 16 2Zm0 26A11.977 11.977 0 0 1 6.359 8.886a1.831 1.831 0 0 0 1.153.04l1.463 1.463a8.986 8.986 0 0 0 11.831 13.207a1.992 1.992 0 0 0 2.79-2.79a8.93 8.93 0 0 0 0-9.612a1.992 1.992 0 0 0-2.79-2.79a8.944 8.944 0 0 0-10.417.571L8.926 7.512a1.83 1.83 0 0 0-.04-1.153A11.992 11.992 0 1 1 16 28Zm0-14a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2Zm3.433-.019l2.055-2.055a2.044 2.044 0 0 0 .227.045a6.957 6.957 0 0 1 0 8.058a2.044 2.044 0 0 0-.227.045l-2.055-2.055a3.879 3.879 0 0 0 0-4.038Zm.596-3.696a2 2 0 0 0 .045.227l-2.055 2.055a3.879 3.879 0 0 0-4.038 0L11.816 10.4a6.952 6.952 0 0 1 8.213-.116Zm-7.462 3.696A3.951 3.951 0 0 0 12 16a4.005 4.005 0 0 0 4 4a3.952 3.952 0 0 0 2.019-.567l2.055 2.055a2 2 0 0 0-.045.227a6.988 6.988 0 0 1-9.627-9.9Z"/>' }, "chart-stacked": { "body": '<path fill="currentColor" d="M28 28V6h-8v22h-4V14H8v14H4V2H2v26a2 2 0 0 0 2 2h26v-2ZM22 8h4v10h-4Zm-12 8h4v6h-4Z"/>' }, "chart-stepper": { "body": '<path fill="currentColor" d="M14 22v-8h8V6h8V4H20v8h-8v8H4V2H2v26a2.002 2.002 0 0 0 2 2h26v-2H4v-6Z"/>' }, "chart-sunburst": { "body": '<path fill="currentColor" d="M16 2a1 1 0 0 0-1 1v7.09a5.962 5.962 0 0 0-2.46 1.043L7.838 6.431a1.455 1.455 0 0 0-2.087.024a14.05 14.05 0 0 0 4.054 22.142a10.848 10.848 0 0 0 1.899.768a14.098 14.098 0 0 0 13.844-3.132a1.434 1.434 0 0 0 .028-2.064l-4.699-4.699A5.963 5.963 0 0 0 21.91 17H29a1 1 0 0 0 1-1A14.016 14.016 0 0 0 16 2Zm0 10a4 4 0 1 1-4 4a4.005 4.005 0 0 1 4-4ZM6.83 8.251l4.296 4.296a5.91 5.91 0 0 0-.011 6.924l-4.277 4.277A12.017 12.017 0 0 1 6.83 8.251Zm1.423 16.91l4.276-4.276A5.959 5.959 0 0 0 15 21.91v6.042a11.878 11.878 0 0 1-6.747-2.79ZM17 27.956V21.91a5.963 5.963 0 0 0 2.46-1.027l4.283 4.282A11.89 11.89 0 0 1 17 27.956ZM21.91 15A6.006 6.006 0 0 0 17 10.09V4.041A12.02 12.02 0 0 1 27.959 15Z"/>' }, "chart-t-sne": { "body": '<circle cx="10" cy="20" r="2" fill="currentColor"/><circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="10" cy="14" r="2" fill="currentColor"/><circle cx="28" cy="4" r="2" fill="currentColor"/><circle cx="22" cy="6" r="2" fill="currentColor"/><circle cx="28" cy="10" r="2" fill="currentColor"/><circle cx="20" cy="12" r="2" fill="currentColor"/><circle cx="28" cy="22" r="2" fill="currentColor"/><circle cx="26" cy="28" r="2" fill="currentColor"/><circle cx="20" cy="26" r="2" fill="currentColor"/><circle cx="22" cy="20" r="2" fill="currentColor"/><circle cx="16" cy="4" r="2" fill="currentColor"/><circle cx="4" cy="24" r="2" fill="currentColor"/><circle cx="4" cy="16" r="2" fill="currentColor"/>' }, "chart-treemap": { "body": '<path fill="currentColor" d="M28 2H4a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2Zm0 12h-5V4h5ZM16 4h5v10h-5Zm-2 0v16H4V4ZM4 22h10v6H4Zm12 6V16h12v12Z"/>' }, "chart-venn-diagram": { "body": '<path fill="currentColor" d="M20 6a9.92 9.92 0 0 0-4 .84A9.92 9.92 0 0 0 12 6a10 10 0 0 0 0 20a9.92 9.92 0 0 0 4-.84a9.92 9.92 0 0 0 4 .84a10 10 0 0 0 0-20Zm-8 18a8 8 0 0 1 0-16a7.91 7.91 0 0 1 1.76.2a10 10 0 0 0 0 15.6A7.91 7.91 0 0 1 12 24Zm8-8a8 8 0 0 1-4 6.92a8 8 0 0 1 0-13.84A8 8 0 0 1 20 16Zm0 8a7.91 7.91 0 0 1-1.76-.2a10 10 0 0 0 0-15.6A7.91 7.91 0 0 1 20 8a8 8 0 0 1 0 16Z"/>' }, "chart-violin-plot": { "body": '<path fill="currentColor" d="M30 30H4a2 2 0 0 1-2-2V2h2v26h26Z"/><path fill="currentColor" d="M14.86 7.823L13 4.723V2h-2v2.723l-1.86 3.1A7.999 7.999 0 0 0 8 11.94v.122a7.996 7.996 0 0 0 1.14 4.116l1.86 3.1V26h2v-6.723l1.86-3.1A7.999 7.999 0 0 0 16 12.06v-.122a7.996 7.996 0 0 0-1.14-4.116zM12 6.943l1.145 1.91A6.003 6.003 0 0 1 13.919 11H10.08a6.009 6.009 0 0 1 .774-2.148zm0 10.114l-1.145-1.91A6.003 6.003 0 0 1 10.081 13h3.838a6.009 6.009 0 0 1-.774 2.148zm15.86-5.234L26 8.723V2h-2v6.723l-1.86 3.1A7.999 7.999 0 0 0 21 15.94v.122a7.996 7.996 0 0 0 1.14 4.116l1.86 3.1V26h2v-2.723l1.86-3.1A7.999 7.999 0 0 0 29 16.06v-.122a7.996 7.996 0 0 0-1.14-4.116zm-2.86-.88l1.145 1.909A6.003 6.003 0 0 1 26.919 15h-3.837a6.009 6.009 0 0 1 .773-2.148zm0 10.113l-1.145-1.908A6.003 6.003 0 0 1 23.081 17h3.837a6.009 6.009 0 0 1-.773 2.148z"/>' }, "chart-waterfall": { "body": '<path fill="currentColor" d="M28 28V18h-2v10h-4V4h-2v24H10V14H8v14H4V2H2v26a2.002 2.002 0 0 0 2 2h26v-2Z"/><path fill="currentColor" d="M14 4h2v14h-2z"/>' }, "chart-win-loss": { "body": '<path fill="currentColor" d="M30 15H16V6a2.002 2.002 0 0 0-2-2H6a2.002 2.002 0 0 0-2 2v9H2v2h14v9a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-9h2ZM6 6h8v9H6Zm20 20h-8v-9h8Z"/>' }, "chat": { "body": '<path fill="currentColor" d="M17.74 30L16 29l4-7h6a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a4 4 0 0 1 4-4h20a4 4 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.84Z"/><path fill="currentColor" d="M8 10h16v2H8zm0 6h10v2H8z"/>' }, "chat-bot": { "body": '<path fill="currentColor" d="M16 19a6.99 6.99 0 0 1-5.833-3.129l1.666-1.107a5 5 0 0 0 8.334 0l1.666 1.107A6.99 6.99 0 0 1 16 19zm4-11a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2zm-8 0a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2z"/><path fill="currentColor" d="M17.736 30L16 29l4-7h6a1.997 1.997 0 0 0 2-2V6a1.997 1.997 0 0 0-2-2H6a1.997 1.997 0 0 0-2 2v14a1.997 1.997 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V6a3.999 3.999 0 0 1 4-4h20a3.999 3.999 0 0 1 4 4v14a4 4 0 0 1-4 4h-4.835Z"/>' }, "chat-launch": { "body": '<path fill="currentColor" d="M22 4v2h4.586L20 12.586L21.414 14L28 7.414V12h2V4h-8zm6 12v4a1.996 1.996 0 0 1-2 2h-6l-4 7l1.736 1l3.429-6H26a4 4 0 0 0 4-4v-4zM4 20V8a1.996 1.996 0 0 1 2-2h12V4H6a3.999 3.999 0 0 0-4 4v12a4 4 0 0 0 4 4h9v-2H6a1.996 1.996 0 0 1-2-2z"/>' }, "chat-off": { "body": '<path fill="currentColor" d="M28 8v13h2V8a3.999 3.999 0 0 0-4-4H8.243l2 2H26a1.996 1.996 0 0 1 2 2zm2 20.586L3.414 2L2 3.414l1.504 1.504A3.918 3.918 0 0 0 2 8v12a4 4 0 0 0 4 4h6v-2H6a1.996 1.996 0 0 1-2-2V8a1.981 1.981 0 0 1 .92-1.667L20.585 22H17l-4 7l1.736 1l3.429-6h4.42l6 6z"/>' }, "chat-operational": { "body": '<path fill="currentColor" d="M15.586 10.414L19.166 14l-3.582 3.587L17 19l5-5l-5-5l-1.414 1.414z"/><path fill="currentColor" d="M20.586 10.414L24.166 14l-3.582 3.587L22 19l5-5l-5-5l-1.414 1.414zM10 9l1.593 3l3.407.414l-2.5 2.253L13 18l-3-1.875L7 18l.5-3.333L5 12.414L8.5 12L10 9z"/><path fill="currentColor" d="M17.736 30L16 29l4-7h6a1.997 1.997 0 0 0 2-2V8a1.997 1.997 0 0 0-2-2H6a1.997 1.997 0 0 0-2 2v12a1.997 1.997 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a3.999 3.999 0 0 1 4-4h20a3.999 3.999 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.835Z"/>' }, "checkbox": { "body": '<path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM6 26V6h20v20Z"/>' }, "checkbox-checked": { "body": '<path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM6 26V6h20v20Z"/><path fill="currentColor" d="m14 21.5l-5-4.96L10.59 15L14 18.35L21.41 11L23 12.58l-9 8.92z"/>' }, "checkbox-checked-filled": { "body": '<path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z"/><path fill="none" d="m14 21.5l-5-4.957L10.59 15L14 18.346L21.409 11L23 12.577Z"/>' }, "checkbox-indeterminate": { "body": '<path fill="currentColor" d="M10 14h12v4H10z"/><path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM6 26V6h20v20Z"/>' }, "checkbox-indeterminate-filled": { "body": '<path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm-4 14H10v-4h12Z"/><path fill="none" d="M22 18H10v-4h12Z"/>' }, "checkbox-undeterminate-filled": { "body": '<path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm-4 14H10v-4h12Z"/>', "hidden": true }, "checkmark": { "body": '<path fill="currentColor" d="m13 24l-9-9l1.414-1.414L13 21.171L26.586 7.586L28 9L13 24z"/>' }, "checkmark-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-2 19.59l-5-5L10.59 15L14 18.41L21.41 11l1.596 1.586Z"/><path fill="none" d="m14 21.591l-5-5L10.591 15L14 18.409L21.41 11l1.595 1.585L14 21.591z"/>' }, "checkmark-filled-error": { "body": '<path fill="currentColor" d="M30 24a6 6 0 1 0-6 6a6.007 6.007 0 0 0 6-6Zm-2 0a3.952 3.952 0 0 1-.567 2.019l-5.452-5.452A3.953 3.953 0 0 1 24 20a4.005 4.005 0 0 1 4 4Zm-8 0a3.952 3.952 0 0 1 .567-2.019l5.452 5.452A3.953 3.953 0 0 1 24 28a4.005 4.005 0 0 1-4-4Z"/><path fill="currentColor" d="M14 2a12 12 0 1 0 2 23.82V24a8 8 0 0 1 8-8h1.82A11.935 11.935 0 0 0 14 2Zm-2 16.59l-4-4L9.59 13L12 15.41L17.41 10L19 11.59Z"/><path fill="none" d="m12 18.591l-4-4L9.591 13L12 15.409L17.409 10L19 11.591l-7 7z"/>' }, "checkmark-filled-warning": { "body": '<path fill="currentColor" d="M14 2a12 12 0 1 0 3.393 23.506l3.924-7.85A2.985 2.985 0 0 1 24 16h1.82A11.935 11.935 0 0 0 14 2Zm-2 16.59l-4-4L9.59 13L12 15.41L17.41 10L19 11.59Z"/><path fill="currentColor" d="M27.38 28h-6.762L24 21.236ZM24 18a1 1 0 0 0-.895.553l-5 10A1 1 0 0 0 19 30h10a1 1 0 0 0 .921-1.39l-5.026-10.057A1 1 0 0 0 24 18Z"/><path fill="none" d="m12 18.591l-4-4L9.591 13L12 15.409L17.409 10L19 11.591l-7 7z"/>' }, "checkmark-outline": { "body": '<path fill="currentColor" d="m14 21.414l-5-5.001L10.413 15L14 18.586L21.585 11L23 12.415l-9 8.999z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/>' }, "checkmark-outline-error": { "body": '<path fill="currentColor" d="M14 24a10 10 0 1 1 10-10h2a12 12 0 1 0-12 12Z"/><path fill="currentColor" d="M12 15.59L9.41 13L8 14.41l4 4l7-7L17.59 10L12 15.59zM30 24a6 6 0 1 0-6 6a6.007 6.007 0 0 0 6-6zm-2 0a3.952 3.952 0 0 1-.567 2.019l-5.452-5.452A3.953 3.953 0 0 1 24 20a4.005 4.005 0 0 1 4 4zm-8 0a3.952 3.952 0 0 1 .567-2.019l5.452 5.452A3.953 3.953 0 0 1 24 28a4.005 4.005 0 0 1-4-4z"/>' }, "checkmark-outline-warning": { "body": '<path fill="currentColor" d="M14 24a10 10 0 1 1 10-10h2a12 12 0 1 0-12 12Z"/><path fill="currentColor" d="M12 15.59L9.41 13L8 14.41l4 4l7-7L17.59 10L12 15.59zM27.38 28h-6.762L24 21.236zM24 18a1 1 0 0 0-.895.553l-5 10A1 1 0 0 0 19 30h10a1 1 0 0 0 .921-1.39l-5.026-10.057A1 1 0 0 0 24 18z"/>' }, "chemistry": { "body": '<path fill="currentColor" d="M27.231 23.618L20 13.675V4h2V2H10v2h2v9.675l-7.231 9.943A4.018 4.018 0 0 0 8.019 30H23.98a4.018 4.018 0 0 0 3.25-6.382ZM14 14.325V4h4v10.325L20.673 18h-9.346ZM23.981 28H8.02a2.02 2.02 0 0 1-1.633-3.206L9.873 20h12.254l3.487 4.794A2.02 2.02 0 0 1 23.981 28Z"/>' }, "chemistry-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4z"/><path fill="currentColor" d="M20 13.67V4h2V2H10v2h2v9.67L9.58 17h2.477L14 14.33V4h4v10.33l7.61 10.46a2.013 2.013 0 0 1-.44 2.82a2.04 2.04 0 0 1-1.19.39H15v2h8.98a4.015 4.015 0 0 0 3.25-6.38Z"/>' }, "chevron-down": { "body": '<path fill="currentColor" d="M16 22L6 12l1.4-1.4l8.6 8.6l8.6-8.6L26 12z"/>' }, "chevron-left": { "body": '<path fill="currentColor" d="M10 16L20 6l1.4 1.4l-8.6 8.6l8.6 8.6L20 26z"/>' }, "chevron-mini": { "body": '<path fill="currentColor" d="M31 19v12H19l12-12z"/>' }, "chevron-right": { "body": '<path fill="currentColor" d="M22 16L12 26l-1.4-1.4l8.6-8.6l-8.6-8.6L12 6z"/>' }, "chevron-sort": { "body": '<path fill="currentColor" d="m16 28l-7-7l1.41-1.41L16 25.17l5.59-5.58L23 21l-7 7zm0-24l7 7l-1.41 1.41L16 6.83l-5.59 5.58L9 11l7-7z"/>' }, "chevron-sort-down": { "body": '<path fill="currentColor" d="m16 28l-7-7l1.4-1.4l5.6 5.6l5.6-5.6L23 21z"/>' }, "chevron-sort-up": { "body": '<path fill="currentColor" d="m16 4l7 7l-1.4 1.4L16 6.8l-5.6 5.6L9 11z"/>' }, "chevron-up": { "body": '<path fill="currentColor" d="m16 10l10 10l-1.4 1.4l-8.6-8.6l-8.6 8.6L6 20z"/>' }, "chip": { "body": '<path fill="currentColor" d="M11 11v10h10V11Zm8 8h-6v-6h6Z"/><path fill="currentColor" d="M30 13v-2h-4V8a2 2 0 0 0-2-2h-3V2h-2v4h-6V2h-2v4H8a2 2 0 0 0-2 2v3H2v2h4v6H2v2h4v3a2 2 0 0 0 2 2h3v4h2v-4h6v4h2v-4h3a2 2 0 0 0 2-2v-3h4v-2h-4v-6Zm-6 11H8V8h16Z"/>' }, "choices": { "body": '<path fill="currentColor" d="M28 13V4h-9v2h5.586L16 14.586L7.414 6H13V4H4v9h2V7.414l9 9V26H4v2h24v-2H17v-9.586l9-9V13h2z"/>' }, "choose-item": { "body": '<path fill="currentColor" d="M28 6h2v20h-2zM17 6l-1.43 1.393L23.15 15H2v2h21.15l-7.58 7.573L17 26l10-10L17 6z"/>' }, "choropleth-map": { "body": '<path fill="currentColor" d="m29.243 4.03l-8-2a1.006 1.006 0 0 0-.615.042l-9.7 3.88L3.243 4.03A1 1 0 0 0 2 5v22a1 1 0 0 0 .757.97l8 2A1.024 1.024 0 0 0 11 30a.995.995 0 0 0 .372-.072l9.7-3.88l7.686 1.922A1 1 0 0 0 30 27V5a1 1 0 0 0-.757-.97ZM28 11h-6V4.28l6 1.5Zm-18 8H4v-6h6Zm2-8V7.677l8-3.2V11Zm8 2v6h-8v-6Zm-8 8h8v3.323l-8 3.2Zm10-8h6v6h-6ZM10 7.78V11H4V6.28ZM4 21h6v6.72l-6-1.5Zm18 3.219V21h6v4.72Z"/>' }, "cics-cmas": { "body": '<path fill="currentColor" d="M30.334 30H26v-2h4v-2h-2a2.002 2.002 0 0 1-2-2v-2.334A1.668 1.668 0 0 1 27.666 20H32v2h-4v2h2a2.002 2.002 0 0 1 2 2v2.333A1.668 1.668 0 0 1 30.334 30zm-8-10h-2.667A1.667 1.667 0 0 0 18 21.666V30h2v-4h2v4h2v-8.334A1.667 1.667 0 0 0 22.334 20zM20 24v-2h2v2zm-7.5 0L11 20H9v10h2v-7l1.5 4l1.5-4v7h2V20h-2l-1.5 4zM1 22v6.5A1.473 1.473 0 0 0 2.5 30H7v-2H3v-6h4v-2H3a2.006 2.006 0 0 0-2 2zM13 8h-2v3H8v2h3v3h2v-3h3v-2h-3V8z"/><path fill="currentColor" d="M6 6h20v12h2V6a2.006 2.006 0 0 0-2-2H6a2.006 2.006 0 0 0-2 2v12h2Z"/>' }, "cics-db2-connection": { "body": '<path fill="currentColor" d="M22.5 30c-1.93 0-3.5-1.57-3.5-3.5c0-.935.364-1.813 1.024-2.474l1.415 1.414a1.502 1.502 0 0 0 2.122 2.12l5-5a1.502 1.502 0 0 0-2.123-2.12l-1.415-1.413A3.478 3.478 0 0 1 27.5 18c1.93 0 3.5 1.57 3.5 3.5c0 .935-.364 1.814-1.025 2.475l-5 5A3.476 3.476 0 0 1 22.5 30Z"/><path fill="currentColor" d="M16.5 31c-1.93 0-3.5-1.57-3.5-3.5c0-.935.364-1.814 1.025-2.475l5-5A3.476 3.476 0 0 1 21.5 19c1.93 0 3.5 1.57 3.5 3.5c0 .935-.364 1.813-1.024 2.474L22.56 23.56a1.502 1.502 0 0 0-2.122-2.12l-5 5a1.502 1.502 0 0 0 2.123 2.12l1.415 1.413A3.478 3.478 0 0 1 16.5 31zM16 2C10.702 2 5 3.252 5 6v18c0 1.68 2.134 2.798 5 3.415v-2.046C8.006 24.896 7.055 24.226 7 24v-3.572c1.494.749 3.674 1.215 6 1.43V19.86c-3.878-.377-5.877-1.422-6-1.86v-3.572C9.128 15.495 12.643 16 16 16c5.298 0 11-1.252 11-4V6c0-2.748-5.702-4-11-4zM6.998 6.015C7.151 5.46 10.15 4 16 4c5.798 0 8.795 1.434 8.997 2c-.202.566-3.2 2-8.997 2c-5.85 0-8.85-1.46-9.002-1.985zM25 11.987c-.16.557-3.159 2.013-9 2.013c-5.85 0-8.85-1.46-9-2V8.428C9.128 9.495 12.643 10 16 10s6.872-.505 9-1.572v3.56z"/>' }, "cics-explorer": { "body": '<path fill="currentColor" d="m24 16l-4.6-1.4l2.3-4.3l-4.3 2.3L16 8l-1.4 4.6l-4.3-2.3l2.3 4.3L8 16l4.6 1.4l-2.3 4.3l4.3-2.3L16 24l1.4-4.6l4.3 2.3l-2.3-4.3L24 16z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "cics-program": { "body": '<path fill="currentColor" d="m20.17 19l-2.59 2.59L19 23l4-4l-4-4l-1.42 1.41L20.17 19zm-8.34 0l2.59-2.59L13 15l-4 4l4 4l1.42-1.41L11.83 19z"/><circle cx="9" cy="8" r="1" fill="currentColor"/><circle cx="6" cy="8" r="1" fill="currentColor"/><path fill="currentColor" d="M28 4H4c-1.103 0-2 .897-2 2v20c0 1.103.897 2 2 2h24c1.103 0 2-.897 2-2V6c0-1.103-.897-2-2-2Zm0 2v4H4V6h24ZM4 26V12h24v14H4Z"/>' }, "cics-region": { "body": '<path fill="currentColor" d="m23.5 18l-2.5.7V16h-2v2.7l-2.5-.7l-.5 1.9l2.4.7L17 23l1.7 1l1.3-2.2l1.3 2.2l1.7-1l-1.4-2.4l2.4-.7l-.5-1.9zM16 13v-2h-3V8h-2v3H8v2h3v3h2v-3h3z"/><path fill="currentColor" d="M26 4H6a2.006 2.006 0 0 0-2 2v20a2.006 2.006 0 0 0 2 2h20a2.006 2.006 0 0 0 2-2V6a2.006 2.006 0 0 0-2-2ZM6 26V6h20v20Z"/>' }, "cics-region-alt": { "body": '<path fill="currentColor" d="M31 13v-2h-4c-1.103 0-2 .897-2 2v2c0 1.103.897 2 2 2h2v2h-4v2h4c1.103 0 2-.897 2-2v-2c0-1.103-.897-2-2-2h-2v-2h4zm-14 0v6c0 1.103.897 2 2 2h4v-2h-4v-6h4v-2h-4c-1.103 0-2 .897-2 2zm-8 0h2v6H9v2h6v-2h-2v-6h2v-2H9v2zm-8 0v6c0 1.103.897 2 2 2h4v-2H3v-6h4v-2H3c-1.103 0-2 .897-2 2z"/>' }, "cics-region-routing": { "body": '<path fill="currentColor" d="M22 2v2h4.6L20 10.6l1.4 1.4L28 5.4V10h2V2h-8zm-3 14v2.7l-2.5-.7l-.5 1.9l2.4.7L17 23l1.7 1l1.3-2.2l1.3 2.2l1.7-1l-1.4-2.4l2.4-.7l-.5-1.9l-2.5.7V16h-2zm-6 0v-3h3v-2h-3V8h-2v3H8v2h3v3h2z"/><path fill="currentColor" d="M26 26H6V6h13V4H6a2.006 2.006 0 0 0-2 2v20a2.006 2.006 0 0 0 2 2h20a2.006 2.006 0 0 0 2-2V13h-2Z"/>' }, "cics-region-target": { "body": '<path fill="currentColor" d="M26 7h2v3h-2zm3-3h3v2h-3zm-3-4h2v3h-2zm-4 4h3v2h-3zm-3 12v2.7l-2.5-.7l-.5 1.9l2.4.7L17 23l1.7 1l1.3-2.2l1.3 2.2l1.7-1l-1.4-2.4l2.4-.7l-.5-1.9l-2.5.7V16h-2zm-6 0v-3h3v-2h-3V8h-2v3H8v2h3v3h2z"/><path fill="currentColor" d="M26 26H6V6h13V4H6a2.006 2.006 0 0 0-2 2v20a2.006 2.006 0 0 0 2 2h20a2.006 2.006 0 0 0 2-2V13h-2Z"/>' }, "cics-sit": { "body": '<path fill="currentColor" d="m23 22l7 5l-7 5V22z"/><path fill="currentColor" d="M26 3H6C4.346 3 3 4.346 3 6v20c0 1.654 1.346 3 3 3h11v-9h12V6c0-1.654-1.346-3-3-3ZM6 5h20a1 1 0 0 1 1 1v3H5V6a1 1 0 0 1 1-1Zm9 6v7H5v-7h10Zm0 16H6a1 1 0 0 1-1-1v-6h10v7Zm2-9v-7h10v7H17Z"/>' }, "cics-sit-overrides": { "body": '<path fill="currentColor" d="m31.707 20.293l-3-3a1 1 0 0 0-1.414 0L18 26.586V31h4.414l9.293-9.293a1 1 0 0 0 0-1.414zm-7.414 6L21.586 29H20v-1.586l2.707-2.707L25 22.414L26.586 24l-2.293 2.293zM28 22.586L26.414 21L28 19.414L29.586 21L28 22.586zM20 20v-2h-4v-7h10v2h2V6c0-1.654-1.346-3-3-3H5C3.346 3 2 4.346 2 6v20c0 1.654 1.346 3 3 3h11v-9h4zm-6-2H4v-7h10v7zM5 5h20a1 1 0 0 1 1 1v3H4V6a1 1 0 0 1 1-1zm9 22H5a1 1 0 0 1-1-1v-6h10v7z"/>' }, "cics-system-group": { "body": '<path fill="currentColor" d="M28 2h-5v2h5v24h-5v2h5a2.006 2.006 0 0 0 2-2V4a2.006 2.006 0 0 0-2-2zM14 17H8a.945.945 0 0 0-1 1v6a.945.945 0 0 0 1 1h6a.945.945 0 0 0 1-1v-6a.945.945 0 0 0-1-1zm-1 6H9v-4h4z"/><path fill="currentColor" d="M25 24v-6a.945.945 0 0 0-1-1h-6a.945.945 0 0 0-1 1v6a.945.945 0 0 0 1 1h6a1.002 1.002 0 0 0 1-1zm-2-1h-4v-4h4zM14 7H8a.945.945 0 0 0-1 1v6a.945.945 0 0 0 1 1h6a.945.945 0 0 0 1-1V8a.945.945 0 0 0-1-1zm-1 6H9V9h4zm5 2h6a.945.945 0 0 0 1-1V8a.945.945 0 0 0-1-1h-6a.945.945 0 0 0-1 1v6a1.002 1.002 0 0 0 1 1zm1-6h4v4h-4z"/><path fill="currentColor" d="M4 4h5V2H4a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h5v-2H4Z"/>' }, "cics-transaction-server-zos": { "body": '<circle cx="28" cy="10" r="2" fill="currentColor"/><path fill="currentColor" d="M18 29h-7v-2h7c4.963 0 9-4.037 9-9v-4h2v4c0 6.065-4.935 11-11 11Z"/><path fill="currentColor" d="M16 21c-2.757 0-5-2.243-5-5s2.243-5 5-5s5 2.243 5 5s-2.243 5-5 5Zm0-8c-1.654 0-3 1.346-3 3s1.346 3 3 3s3-1.346 3-3s-1.346-3-3-3Z"/><circle cx="4" cy="22" r="2" fill="currentColor"/><path fill="currentColor" d="M5 18H3v-4C3 7.935 7.935 3 14 3h7v2h-7c-4.963 0-9 4.037-9 9v4Z"/>' }, "cics-wui-region": { "body": '<path fill="currentColor" d="M22 22h2v6h-2v2h6v-2h-2v-6h2v-2h-6v2zm-4 6h-2v-8h-2v8.6a1.453 1.453 0 0 0 1.5 1.4h3a1.453 1.453 0 0 0 1.5-1.4V20h-2zm-7.8-8l-.2 8.5L9 22H7l-1 6.5l-.2-8.5H4l.72 10H7l1-6.5L9 30h2.28L12 20h-1.8zm5.8-9h-3V8h-2v3H8v2h3v3h2v-3h3v-2z"/><path fill="currentColor" d="M26 4H6a2.006 2.006 0 0 0-2 2v12h2V6h20v12h2V6a2.006 2.006 0 0 0-2-2Z"/>' }, "cicsplex": { "body": '<path fill="currentColor" d="M8 18.6V17H6v1.6a7.383 7.383 0 0 0 7.4 7.4H15v-2h-1.6A5.378 5.378 0 0 1 8 18.6zm20-.6h-8a2.006 2.006 0 0 0-2 2v8a2.006 2.006 0 0 0 2 2h8a2.006 2.006 0 0 0 2-2v-8a2.006 2.006 0 0 0-2-2zm-8 10v-8h8v8zm4-14.6V15h2v-1.6A7.383 7.383 0 0 0 18.6 6H17v2h1.6a5.378 5.378 0 0 1 5.4 5.4zM12 2H4a2.006 2.006 0 0 0-2 2v8a2.006 2.006 0 0 0 2 2h8a2.006 2.006 0 0 0 2-2V4a2.006 2.006 0 0 0-2-2zM4 12V4h8v8z"/>' }, "circle-dash": { "body": '<path fill="currentColor" d="M7.7 4.7a14.7 14.7 0 0 0-3 3.1L6.3 9a13.26 13.26 0 0 1 2.6-2.7zm-3.1 7.6l-1.9-.6A12.51 12.51 0 0 0 2 16h2a11.48 11.48 0 0 1 .6-3.7zm-1.9 8.1a14.4 14.4 0 0 0 2 3.9l1.6-1.2a12.89 12.89 0 0 1-1.7-3.3zm5.1 6.9a14.4 14.4 0 0 0 3.9 2l.6-1.9A12.89 12.89 0 0 1 9 25.7zm3.9-24.6l.6 1.9A11.48 11.48 0 0 1 16 4V2a12.51 12.51 0 0 0-4.3.7zm12.5 24.6a15.18 15.18 0 0 0 3.1-3.1L25.7 23a11.53 11.53 0 0 1-2.7 2.7zm3.2-7.6l1.9.6A15.47 15.47 0 0 0 30 16h-2a11.48 11.48 0 0 1-.6 3.7zm1.8-8.1a14.4 14.4 0 0 0-2-3.9l-1.6 1.2a12.89 12.89 0 0 1 1.7 3.3zm-5.1-7a14.4 14.4 0 0 0-3.9-2l-.6 1.9a12.89 12.89 0 0 1 3.3 1.7zm-3.8 24.7l-.6-1.9a11.48 11.48 0 0 1-3.7.6v2a21.42 21.42 0 0 0 4.3-.7z"/>' }, "circle-filled": { "body": '<circle cx="16" cy="16" r="10" fill="currentColor"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "circle-measurement": { "body": '<path d="M16 30a14 14 0 1 1 14-14a14 14 0 0 1-14 14zm0-26a12 12 0 1 0 12 12A12 12 0 0 0 16 4z" fill="currentColor"/><path d="M21 12.41V16h2V9h-7v2h3.59L11 19.59V16H9v7h7v-2h-3.59z" fill="currentColor"/>', "hidden": true }, "circle-packing": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm7.5 7a3.5 3.5 0 1 1-3.5 3.5A3.504 3.504 0 0 1 23.5 9Zm.435-1.978A5.528 5.528 0 0 0 23.5 7a5.483 5.483 0 0 0-4.132 1.878A8.01 8.01 0 0 0 13.8 4.211a11.855 11.855 0 0 1 10.134 2.811ZM16 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm-4-10a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Zm-8-2a11.97 11.97 0 0 1 .211-2.199a7.992 7.992 0 0 0 7.346 6.176a5.958 5.958 0 0 0-.89 6.757A12.002 12.002 0 0 1 4 16Zm17.332 10.734a5.983 5.983 0 0 0-4.178-8.62a8.02 8.02 0 0 0 1.913-2.368a5.488 5.488 0 0 0 8.917-.068c.003.108.016.214.016.322a12.002 12.002 0 0 1-6.668 10.734Z"/>' }, "circle-solid": { "body": '<circle cx="16" cy="16" r="14" fill="currentColor"/>' }, "circuit-composer": { "body": '<path d="M18 9v6h-4V9h-2v14h2v-6h4v6h2V9h-2z" fill="currentColor"/><path d="M30 15h-4V6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v9H2v2h4v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-9h4zM8 26V6h16v20z" fill="currentColor"/>', "hidden": true }, "classification": { "body": '<circle cx="15" cy="19" r="1" fill="currentColor"/><path fill="currentColor" d="m27.7 9.3l-7-7A.909.909 0 0 0 20 2H10a2.006 2.006 0 0 0-2 2v10H6a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h2v4a2.006 2.006 0 0 0 2 2h16a2.006 2.006 0 0 0 2-2V10a.91.91 0 0 0-.3-.7ZM20 4.4l5.6 5.6H20ZM6 16h9.597L19 19l-3.393 3H6Zm20 12H10v-4h5.609a2.008 2.008 0 0 0 1.313-.493l3.384-2.991a2.002 2.002 0 0 0 .01-3.023l-3.404-3.009A1.996 1.996 0 0 0 15.61 14H10V4h8v6a2.006 2.006 0 0 0 2 2h6Z"/>' }, "classifier-language": { "body": '<path fill="currentColor" d="M30 10V2h-8v8h3v4h-2v2h7v-2h-3v-4zm-6-6h4v4h-4zm-4 19.41L18.59 22L16 24.59L13.41 22L12 23.41L14.59 26L12 28.59L13.41 30L16 27.41L18.59 30L20 28.59L17.41 26L20 23.41zM20 14h-8v2h3v5h2v-5h3v-2zM7 9.86a4 4 0 1 0-2 0V14H2v2h7v-2H7zM4 6a2 2 0 1 1 2 2a2 2 0 0 1-2-2z"/>' }, "clean": { "body": '<path fill="currentColor" d="M26 20h-6v-2h6zm4 8h-6v-2h6zm-2-4h-6v-2h6z"/><path fill="currentColor" d="M17.003 20a4.895 4.895 0 0 0-2.404-4.173L22 3l-1.73-1l-7.577 13.126a5.699 5.699 0 0 0-5.243 1.503C3.706 20.24 3.996 28.682 4.01 29.04a1 1 0 0 0 1 .96h14.991a1 1 0 0 0 .6-1.8c-3.54-2.656-3.598-8.146-3.598-8.2Zm-5.073-3.003A3.11 3.11 0 0 1 15.004 20c0 .038.002.208.017.469l-5.9-2.624a3.8 3.8 0 0 1 2.809-.848ZM15.45 28A5.2 5.2 0 0 1 14 25h-2a6.5 6.5 0 0 0 .968 3h-2.223A16.617 16.617 0 0 1 10 24H8a17.342 17.342 0 0 0 .665 4H6c.031-1.836.29-5.892 1.803-8.553l7.533 3.35A13.025 13.025 0 0 0 17.596 28Z"/>' }, "close": { "body": '<path fill="currentColor" d="M24 9.4L22.6 8L16 14.6L9.4 8L8 9.4l6.6 6.6L8 22.6L9.4 24l6.6-6.6l6.6 6.6l1.4-1.4l-6.6-6.6L24 9.4z"/>' }, "close-filled": { "body": '<path fill="currentColor" d="M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2zm5.4 21L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4l-1.6 1.6z"/>' }, "close-outline": { "body": '<path fill="currentColor" d="M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2zm0 26C9.4 28 4 22.6 4 16S9.4 4 16 4s12 5.4 12 12s-5.4 12-12 12z"/><path fill="currentColor" d="M21.4 23L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4z"/>' }, "closed-caption": { "body": '<path fill="currentColor" d="M15 21h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2h-5v6h5zm10 0h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2h-5v6h5z"/><path fill="currentColor" d="M28 26H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2ZM4 8v16h24V8Z"/>' }, "closed-caption-alt": { "body": '<path fill="currentColor" d="M19 17h6v2h-6zm-8 0h6v2h-6zm-5 0h3v2H6zm16-4h4v2h-4zm-9 0h7v2h-7zm-7 0h5v2H6z"/><path fill="currentColor" d="M17.736 30L16 29l4-7h6a1.997 1.997 0 0 0 2-2V8a1.997 1.997 0 0 0-2-2H6a1.997 1.997 0 0 0-2 2v12a1.997 1.997 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a3.999 3.999 0 0 1 4-4h20a3.999 3.999 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.835Z"/>' }, "closed-caption-filled": { "body": '<path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Zm-13 7h-5v6h5v2h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5Zm10 0h-5v6h5v2h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5Z"/>' }, "cloud": { "body": '<path fill="currentColor" d="M16 7a7.66 7.66 0 0 1 1.51.15a8 8 0 0 1 6.35 6.34l.26 1.35l1.35.24a5.5 5.5 0 0 1-1 10.92H7.5a5.5 5.5 0 0 1-1-10.92l1.34-.24l.26-1.35A8 8 0 0 1 16 7m0-2a10 10 0 0 0-9.83 8.12A7.5 7.5 0 0 0 7.49 28h17a7.5 7.5 0 0 0 1.32-14.88a10 10 0 0 0-7.94-7.94A10.27 10.27 0 0 0 16 5Z"/>' }, "cloud-alerting": { "body": '<path fill="currentColor" d="M28 17v5H4V6h11V4H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2v-5ZM18 28h-4v-4h4Z"/><path fill="currentColor" d="M29 14H17a1 1 0 0 1-.857-1.514l6-10a1 1 0 0 1 1.715 0l6 10A1 1 0 0 1 29 14Zm-10.234-2h8.468L23 4.944Z"/>' }, "cloud-app": { "body": '<path fill="currentColor" d="M25.829 13.116A10.02 10.02 0 0 0 16 5v2a8.023 8.023 0 0 1 7.865 6.493l.259 1.346l1.349.245A5.502 5.502 0 0 1 24.508 26H16v2h8.508a7.502 7.502 0 0 0 1.32-14.884zM8 24h6v2H8zm-4 0h2v2H4zm2-4h8v2H6zm-4 0h2v2H2zm6-4h6v2H8zm-4 0h2v2H4zm6-4h4v2h-4zm-4 0h2v2H6zm6-4h2v2h-2z"/>' }, "cloud-auditing": { "body": '<path fill="currentColor" d="M28 16v6H4V6h12V4H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2v-6ZM18 28h-4v-4h4Z"/><path fill="currentColor" d="m21 15l-5-4.96l1.59-1.57L21 11.85l7.41-7.35L30 6.08L21 15z"/>' }, "cloud-ceiling": { "body": '<path fill="currentColor" d="M2 28h9v2H2zm19 0h9v2h-9zm-4-1.833v-8.335l2.586 2.582L21 19l-5-5l-5 5l1.413 1.415L15 17.832v8.335l-2.587-2.583L11 25l5 5l5-5l-1.414-1.414L17 26.167z"/><path fill="currentColor" d="M23 16h-2v-2h2a3 3 0 0 0 0-6a2.576 2.576 0 0 1-.215.026l-.804.058l-.227-.774a5.993 5.993 0 0 0-11.175-.866l-.284.6l-.842-.046A3.5 3.5 0 0 0 9.5 14H11v2H9.5a5.5 5.5 0 0 1-.43-10.983a7.99 7.99 0 0 1 14.35 1A5 5 0 0 1 23 16Z"/>' }, "cloud-data-ops": { "body": '<path fill="currentColor" d="M28 18h2v10h-2zm-4-4h2v14h-2zm-4 8h2v6h-2zm2.175-12l1.585-1.266a9.952 9.952 0 0 0-5.87-3.552a10.002 10.002 0 0 0-11.72 7.933A7.505 7.505 0 0 0 .054 21.41A7.684 7.684 0 0 0 7.77 28H16v-2H7.694a5.632 5.632 0 0 1-5.602-4.486a5.506 5.506 0 0 1 4.434-6.43l1.349-.245l.214-1.11a8.206 8.206 0 0 1 6.742-6.642a7.967 7.967 0 0 1 3.014.13A7.804 7.804 0 0 1 22.175 10z"/>' }, "cloud-download": { "body": '<path fill="currentColor" d="M23.5 22H23v-2h.5a4.5 4.5 0 0 0 .36-9H23l-.1-.82a7 7 0 0 0-13.88 0L9 11h-.86a4.5 4.5 0 0 0 .36 9H9v2h-.5A6.5 6.5 0 0 1 7.2 9.14a9 9 0 0 1 17.6 0A6.5 6.5 0 0 1 23.5 22Z"/><path fill="currentColor" d="M17 26.17V14h-2v12.17l-2.59-2.58L11 25l5 5l5-5l-1.41-1.41L17 26.17z"/>' }, "cloud-foundry-1": { "body": '<path fill="currentColor" d="M16 7a7.66 7.66 0 0 1 1.51.15a8 8 0 0 1 6.35 6.34l.26 1.35l1.35.24a5.5 5.5 0 0 1-1 10.92H7.5a5.5 5.5 0 0 1-1-10.92l1.34-.24l.26-1.35A8 8 0 0 1 16 7m0-2a10 10 0 0 0-9.83 8.12A7.5 7.5 0 0 0 7.49 28h17a7.5 7.5 0 0 0 1.32-14.88a10 10 0 0 0-7.94-7.94A10.27 10.27 0 0 0 16 5Z"/><path fill="currentColor" d="M14 24h-3a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3v2h-3v3h3zm7-9v-2h-2a2 2 0 0 0-2 2v2h-1v2h1v5h2v-5h2v-2h-2v-2z"/>' }, "cloud-foundry-2": { "body": '<path fill="currentColor" d="M25 11V9h-8v14h2v-6h5v-2h-5v-4h6zM15 23H9a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h6v2H9v10h6z"/>' }, "cloud-logging": { "body": '<path fill="currentColor" d="M28 16v6H4V6h11V4H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2v-6zM18 28h-4v-4h4zm0-24h12v2H18z"/><path fill="currentColor" d="M18 8h12v2H18zm0 4h6v2h-6z"/>' }, "cloud-monitoring": { "body": '<path fill="currentColor" d="M28 16v6H4V6h7V4H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2v-6ZM18 28h-4v-4h4Z"/><path fill="currentColor" d="M18 18h-.01a1 1 0 0 1-.951-.725L15.246 11H11V9h5a1 1 0 0 1 .962.725l1.074 3.76l3.009-9.78A1.014 1.014 0 0 1 22 3a.98.98 0 0 1 .949.684L24.72 9H30v2h-6a1 1 0 0 1-.949-.684l-1.013-3.04l-3.082 10.018A1 1 0 0 1 18 18Z"/>' }, "cloud-offline": { "body": '<path fill="currentColor" d="M24.8 12.136a8.87 8.87 0 0 0-.979-2.543L30 3.414L28.587 2L2 28.587L3.414 30l5-5H23.5a6.497 6.497 0 0 0 1.3-12.864zM23.5 23H10.414l11.928-11.928a6.905 6.905 0 0 1 .6 2.071l.099.812l.815.064A4.497 4.497 0 0 1 23.5 23zm-19.204.449l1.432-1.431a4.477 4.477 0 0 1 2.416-7.999l.816-.064l.099-.812a6.987 6.987 0 0 1 10.63-5.086l1.443-1.443A8.986 8.986 0 0 0 7.2 12.136A6.49 6.49 0 0 0 4.296 23.45z"/>' }, "cloud-registry": { "body": '<path fill="currentColor" d="M28 30h-5a2.002 2.002 0 0 1-2-2v-5a2.002 2.002 0 0 1 2-2h5a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2zm-5-7h-.001L23 28h5v-5zm-7 0h-5a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h10a2.002 2.002 0 0 1 2 2v5h-2v-5H11v10h5z"/><path fill="currentColor" d="M16 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v12h-2V4H4v24h12Z"/>' }, "cloud-satellite": { "body": '<circle cx="9" cy="20" r="2" fill="currentColor"/><path fill="currentColor" d="M16 20a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2Z"/><circle cx="23" cy="12" r="2" fill="currentColor"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "cloud-satellite-config": { "body": '<path fill="currentColor" d="M32 26v-2h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 26 20.101V18h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 20.101 24H18v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V32h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 29.899 26Zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/><circle cx="7" cy="20" r="2" fill="currentColor"/><path fill="currentColor" d="M14 20a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2Z"/><circle cx="21" cy="12" r="2" fill="currentColor"/><path fill="currentColor" d="M13.02 28.271L3 22.427V9.574l11-6.416l11.496 6.706l1.008-1.728l-12-7a1 1 0 0 0-1.008 0l-12 7A1 1 0 0 0 1 9v14a1 1 0 0 0 .496.864L12.013 30Z"/>' }, "cloud-satellite-link": { "body": '<path fill="currentColor" d="m30.976 24.975l-5.001 5.001a3.501 3.501 0 0 1-4.951-4.95l1.414 1.414a1.5 1.5 0 0 0 2.122 2.122l5.002-5.002a1.5 1.5 0 0 0-2.122-2.122l-1.415-1.414a3.501 3.501 0 0 1 4.952 4.95Z"/><path fill="currentColor" d="m20.025 21.024l-5.001 5.001a3.501 3.501 0 0 0 4.95 4.951l-1.414-1.414a1.5 1.5 0 0 1-2.122-2.122l5.002-5.002a1.5 1.5 0 0 1 2.122 2.122l1.414 1.415a3.501 3.501 0 0 0-4.95-4.952Z"/><circle cx="7" cy="20" r="2" fill="currentColor"/><path fill="currentColor" d="M14 20a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2Z"/><circle cx="21" cy="12" r="2" fill="currentColor"/><path fill="currentColor" d="M11.308 27.273L3 22.425V9.574l11-6.416l11.496 6.706l1.008-1.728l-12-7a1 1 0 0 0-1.008 0l-12 7A1 1 0 0 0 1 9v14a1 1 0 0 0 .496.864L10.3 29Z"/>' }, "cloud-satellite-services": { "body": '<path fill="currentColor" d="M29 26a2.97 2.97 0 0 0-1.855.66L25 25.423v-1.606a3 3 0 1 0-2 0v1.606l-2.145 1.239A2.97 2.97 0 0 0 19 26a3.02 3.02 0 1 0 2.925 2.353L24 27.154l2.075 1.198A2.998 2.998 0 1 0 29 26Zm-10 4a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm5-10a1 1 0 1 1-1 1a1 1 0 0 1 1-1Zm5 10a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><circle cx="7" cy="20" r="2" fill="currentColor"/><path fill="currentColor" d="M14 20a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2Z"/><circle cx="21" cy="12" r="2" fill="currentColor"/><path fill="currentColor" d="M13.02 28.271L3 22.427V9.574l11-6.416l11.496 6.706l1.008-1.728l-12-7a1 1 0 0 0-1.008 0l-12 7A1 1 0 0 0 1 9v14a1 1 0 0 0 .496.864L12.013 30Z"/>' }, "cloud-service-management": { "body": '<path fill="currentColor" d="M28 17v5H4V6h10V4H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2v-5ZM18 28h-4v-4h4Z"/><path fill="currentColor" d="M30 10V8h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 24 4.101V2h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 18.101 8H16v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V16h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 27.899 10Zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/>' }, "cloud-services": { "body": '<path fill="currentColor" d="M25.822 10.124a10 10 0 0 0-19.644 0A7.496 7.496 0 0 0 7.5 25H8v-2h-.5a5.496 5.496 0 0 1-.377-10.98l.836-.057l.09-.833a7.998 7.998 0 0 1 15.902 0l.09.833l.836.058A5.496 5.496 0 0 1 24.5 23H24v2h.5a7.496 7.496 0 0 0 1.322-14.876Z"/><path fill="currentColor" d="M23 22v-2h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 17 16.101V14h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 11.101 20H9v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V28h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 20.899 22Zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/>' }, "cloud-upload": { "body": '<path fill="currentColor" d="m11 18l1.41 1.41L15 16.83V29h2V16.83l2.59 2.58L21 18l-5-5l-5 5z"/><path fill="currentColor" d="M23.5 22H23v-2h.5a4.5 4.5 0 0 0 .36-9H23l-.1-.82a7 7 0 0 0-13.88 0L9 11h-.86a4.5 4.5 0 0 0 .36 9H9v2h-.5A6.5 6.5 0 0 1 7.2 9.14a9 9 0 0 1 17.6 0A6.5 6.5 0 0 1 23.5 22Z"/>' }, "cloudy": { "body": '<path fill="currentColor" d="M30 15.5a6.532 6.532 0 0 0-5.199-6.363a8.994 8.994 0 0 0-17.6 0A6.532 6.532 0 0 0 2 15.5a6.454 6.454 0 0 0 1.688 4.35A5.983 5.983 0 0 0 8 30h11a5.976 5.976 0 0 0 5.61-8.102A6.505 6.505 0 0 0 30 15.501ZM19 28H8a3.993 3.993 0 0 1-.673-7.93l.663-.112l.146-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 28Zm4.5-8h-.055a5.956 5.956 0 0 0-2.796-1.756a7.495 7.495 0 0 0-14.299 0a5.988 5.988 0 0 0-1.031.407A4.445 4.445 0 0 1 4 15.5a4.517 4.517 0 0 1 4.144-4.481l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.497 4.497 0 0 1 23.5 20Z"/>' }, "cobb-angle": { "body": '<path d="M20 17v-2a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2zm-10-2h8v2h-8z" fill="currentColor"/><path d="M23.42 24.48A2 2 0 0 0 21 23.06l-7.73 2.07a2 2 0 0 0-1.42 2.44l.52 1.93a2 2 0 0 0 1.9 1.5a3 3 0 0 0 .52-.07l7.73-2.07a2 2 0 0 0 1.41-2.45zM14.27 29l-.51-1.94L21.48 25l.52 1.92z" fill="currentColor"/><path d="M13.24 6.86L21 8.93a2.24 2.24 0 0 0 .51.07a2 2 0 0 0 1.94-1.48L24 5.58a2 2 0 0 0-1.41-2.45l-7.8-2.07a2 2 0 0 0-2.45 1.41l-.52 1.93a2 2 0 0 0 1.42 2.44zm1-3.86L22 5.07L21.48 7l-7.72-2.07z" fill="currentColor"/><path d="M14 21h2v2h-2z" fill="currentColor"/><path d="M14 9h2v2h-2z" fill="currentColor"/>', "hidden": true }, "code": { "body": '<path fill="currentColor" d="m31 16l-7 7l-1.41-1.41L28.17 16l-5.58-5.59L24 9l7 7zM1 16l7-7l1.41 1.41L3.83 16l5.58 5.59L8 23l-7-7zm11.42 9.484L17.64 6l1.932.517L14.352 26z"/>' }, "code-hide": { "body": '<path fill="currentColor" d="m17.713 13.471l1.863-6.953L17.645 6l-1.565 5.838l1.633 1.633zm6.494 6.494l1.414 1.414L31 16l-7-7l-1.414 1.414L28.172 16l-3.965 3.965zM30 28.586L3.414 2L2 3.414l5.793 5.793L1 16l7 7l1.414-1.414L3.828 16l5.379-5.379l5.677 5.677l-2.461 9.184l1.932.518l2.162-8.069L28.586 30L30 28.586z"/>' }, "code-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm26-10l-6-6l-1.414 1.414L27.172 10l-4.586 4.586L24 16l6-6zm-16.08 7.484l4.15-15.483l1.932.517l-4.15 15.484zM4 10l6-6l1.414 1.414L6.828 10l4.586 4.586L10 16l-6-6z"/>' }, "code-signing-service": { "body": '<circle cx="25" cy="20" r="1" fill="currentColor"/><path fill="currentColor" d="M19.414 30H15v-4.414l5.034-5.034A4.607 4.607 0 0 1 20 20a5 5 0 1 1 4.448 4.966zM17 28h1.586l5.206-5.206l.54.124a3.035 3.035 0 1 0-2.25-2.25l.124.54L17 26.414zM6 8h2v8H6zM2 8h2v8H2zm16 0h2v6h-2zm-4 8h-2a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-2-2h2v-4h-2zM2 18h2v8H2zm12 0h2v4h-2zm-4 8H8a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-2-2h2v-4H8zM2 2h2v4H2zm12 0h2v4h-2zm4 0h2v4h-2zm-8 4H8a2 2 0 0 1-2-2V2h2v2h2V2h2v2a2 2 0 0 1-2 2z"/>' }, "cognitive": { "body": '<path fill="currentColor" d="M30 13A11 11 0 0 0 19 2h-8a9 9 0 0 0-9 9v3a5 5 0 0 0 5 5h1.1a5 5 0 0 0 4.9 4h1.38l4 7l1.73-1l-4-6.89A2 2 0 0 0 14.38 21H13a3 3 0 0 1 0-6h1v-2h-1a5 5 0 0 0-4.9 4H7a3 3 0 0 1-3-3v-2h2a3 3 0 0 0 3-3V8H7v1a1 1 0 0 1-1 1H4.08A7 7 0 0 1 11 4h6v2a1 1 0 0 1-1 1h-2v2h2a3 3 0 0 0 3-3V4a9 9 0 0 1 8.05 5H26a3 3 0 0 0-3 3v1h2v-1a1 1 0 0 1 1-1h1.77a8.76 8.76 0 0 1 .23 2v1a5 5 0 0 1-5 5h-3v2h3a7 7 0 0 0 3-.68V21a3 3 0 0 1-3 3h-1v2h1a5 5 0 0 0 5-5v-2.11A7 7 0 0 0 30 14Z"/>' }, "collaborate": { "body": '<path fill="currentColor" d="M6 21v-1H4v1a7 7 0 0 0 7 7h3v-2h-3a5 5 0 0 1-5-5zm18-10v1h2v-1a7 7 0 0 0-7-7h-3v2h3a5 5 0 0 1 5 5zm-13 0H5a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2zm19 21h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-7-5a4 4 0 1 0 4-4a4 4 0 0 0-4 4zm6 0a2 2 0 1 1-2-2a2 2 0 0 1 2 2z"/>' }, "collapse-all": { "body": '<path fill="currentColor" d="M30 15h-2V7H13V5h15a2.002 2.002 0 0 1 2 2Z"/><path fill="currentColor" d="M25 20h-2v-8H8v-2h15a2.002 2.002 0 0 1 2 2Z"/><path fill="currentColor" d="M18 27H4a2.002 2.002 0 0 1-2-2v-8a2.002 2.002 0 0 1 2-2h14a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2ZM4 17v8h14.001L18 17Z"/>' }, "collapse-categories": { "body": '<path fill="currentColor" d="M14 25h14v2H14zm-6.83 1l-2.58 2.58L6 30l4-4l-4-4l-1.42 1.41L7.17 26zM14 15h14v2H14zm-6.83 1l-2.58 2.58L6 20l4-4l-4-4l-1.42 1.41L7.17 16zM14 5h14v2H14zM7.17 6L4.59 8.58L6 10l4-4l-4-4l-1.42 1.41L7.17 6z"/>' }, "color-palette": { "body": '<circle cx="10" cy="12" r="2" fill="currentColor"/><circle cx="16" cy="9" r="2" fill="currentColor"/><circle cx="22" cy="12" r="2" fill="currentColor"/><circle cx="23" cy="18" r="2" fill="currentColor"/><circle cx="19" cy="23" r="2" fill="currentColor"/><path fill="currentColor" d="M16.54 2A14 14 0 0 0 2 16a4.82 4.82 0 0 0 6.09 4.65l1.12-.31a3 3 0 0 1 3.79 2.9V27a3 3 0 0 0 3 3a14 14 0 0 0 14-14.54A14.05 14.05 0 0 0 16.54 2Zm8.11 22.31A11.93 11.93 0 0 1 16 28a1 1 0 0 1-1-1v-3.76a5 5 0 0 0-5-5a5.07 5.07 0 0 0-1.33.18l-1.12.31A2.82 2.82 0 0 1 4 16A12 12 0 0 1 16.47 4A12.18 12.18 0 0 1 28 15.53a11.89 11.89 0 0 1-3.35 8.79Z"/>' }, "color-switch": { "body": '<path fill="currentColor" d="M26 4H6a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2ZM6 26L26 6v20Z"/>' }, "column": { "body": '<path fill="currentColor" d="M24 4h2v24h-2zm-6 2v20h-4V6h4m0-2h-4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zM6 4h2v24H6z"/>' }, "column-delete": { "body": '<path fill="currentColor" d="M30 3.41L28.59 2L25 5.59L21.41 2L20 3.41L23.59 7L20 10.59L21.41 12L25 8.41L28.59 12L30 10.59L26.41 7L30 3.41z"/><path fill="currentColor" d="M24 14v14h-6V6h-2v22a2.002 2.002 0 0 0 2 2h6a2.002 2.002 0 0 0 2-2V14zM10 30H4a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2zM4 8v20h6V8z"/>' }, "column-dependency": { "body": '<path fill="currentColor" d="M30 10V2h-8v3h-5a2.002 2.002 0 0 0-2 2v8h-5v-3H2v8h8v-3h5v8a2.002 2.002 0 0 0 2 2h5v3h8v-8h-8v3h-5v-8h5v3h8v-8h-8v3h-5V7h5v3ZM8 18H4v-4h4Zm16 6h4v4h-4Zm0-10h4v4h-4Zm0-10h4v4h-4Z"/>' }, "column-insert": { "body": '<path fill="currentColor" d="M28 30h-6a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v18a2.002 2.002 0 0 1-2 2zm-6-20v18h6V10zm-6-1l5.586-5.586L20.172 2L16 6.172L11.828 2l-1.414 1.414L16 9zm-6 21H4a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v18a2.002 2.002 0 0 1-2 2zM4 10v18h6V10z"/>' }, "commit": { "body": '<path fill="currentColor" d="M30 15h-8.09a5.992 5.992 0 0 0-11.82 0H2v2h8.09a5.992 5.992 0 0 0 11.82 0H30Zm-14 5a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/>' }, "communication-unified": { "body": '<path fill="currentColor" d="M28 17H18a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h4v-2h-4v-6h10v6h-2.535l-2.594 3.89L24.535 30l2-3H28a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zM8.667 24.109l.861-.862a.833.833 0 0 1 .899-.184l1.05.42a.833.833 0 0 1 .523.773v1.908a.833.833 0 0 1-.879.834c-7.354-.457-8.84-6.686-9.115-9.072A.832.832 0 0 1 2.834 17h1.874a.834.834 0 0 1 .774.524l.42 1.05a.833.833 0 0 1-.184.898l-.862.861a4.527 4.527 0 0 0 3.81 3.776zM21 9h7v2h-7zm0-4h9v2h-9zm-4 1l-3 2.2V6a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2V9.8l3 2.2zM4 12V6h8v6z"/>' }, "compare": { "body": '<path fill="currentColor" d="M28 6H18V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2ZM4 15h6.17l-2.58 2.59L9 19l5-5l-5-5l-1.41 1.41L10.17 13H4V4h12v20H4Zm12 13v-2a2 2 0 0 0 2-2V8h10v9h-6.17l2.58-2.59L23 13l-5 5l5 5l1.41-1.41L21.83 19H28v9Z"/>' }, "compass": { "body": '<path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12 12 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Z"/><path fill="currentColor" d="M23 10.41L21.59 9l-4.3 4.3a3 3 0 0 0-4 4L9 21.59L10.41 23l4.3-4.3a3 3 0 0 0 4-4ZM17 16a1 1 0 1 1-1-1a1 1 0 0 1 1 1Z"/><circle cx="16" cy="7.5" r="1.5" fill="currentColor"/>' }, "composer-edit": { "body": '<path d="M25.82 10H30V8h-4.18a3 3 0 0 0-5.64 0H13V5H5v3H2v2h3v3h8v-3h7.18A3 3 0 0 0 22 11.82v7.32A4 4 0 0 0 19.14 22H2v2h17.14a4 4 0 0 0 7.72 0H30v-2h-3.14A4 4 0 0 0 24 19.14v-7.32A3 3 0 0 0 25.82 10zM11 11H7V7h4zm14 12a2 2 0 1 1-2-2a2 2 0 0 1 2 2z" fill="currentColor"/>', "hidden": true }, "concept": { "body": '<path fill="currentColor" d="M20.885 19.471a5.96 5.96 0 0 0 0-6.942L23 10.414l1.293 1.293a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 0-1.414l-4-4a1 1 0 0 0-1.414 0l-4 4a1 1 0 0 0 0 1.414L21.586 9l-2.115 2.115a5.96 5.96 0 0 0-6.942 0L10 8.585V2H2v8h6.586l2.529 2.529a5.96 5.96 0 0 0 0 6.942L9 21.586l-1.293-1.293a1 1 0 0 0-1.414 0l-4 4a1 1 0 0 0 0 1.414l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 0-1.414L10.414 23l2.115-2.115a5.96 5.96 0 0 0 6.942 0L22 23.415V30h8v-8h-6.586ZM25 4.414L27.586 7L25 9.586L22.414 7ZM7 27.586L4.414 25L7 22.414L9.586 25ZM8 8H4V4h4Zm4 8a4 4 0 1 1 4 4a4.005 4.005 0 0 1-4-4Zm12 8h4v4h-4Z"/>' }, "condition-point": { "body": '<path fill="currentColor" d="m8 16l8-8l8 8l-8 8z"/><path fill="currentColor" d="M29.39 14.527L17.474 2.609a2.085 2.085 0 0 0-2.946 0L2.609 14.527a2.085 2.085 0 0 0 0 2.946l11.918 11.918a2.085 2.085 0 0 0 2.946 0l11.918-11.918a2.085 2.085 0 0 0 0-2.946ZM16 28.036L3.965 16L16 3.964L28.036 16Z"/>' }, "condition-wait-point": { "body": '<path fill="currentColor" d="m8 16l8-8l8 8l-8 8z"/><path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12.014 12.014 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Z"/>' }, "connect": { "body": '<path fill="currentColor" d="M23 16.01a7 7 0 0 0-4.18 1.39l-4.22-4.22A6.86 6.86 0 0 0 16 9.01a7 7 0 1 0-2.81 5.59l4.21 4.22a7 7 0 1 0 5.6-2.81Zm-19-7a5 5 0 1 1 5 5a5 5 0 0 1-5-5Z"/>' }, "connect-recursive": { "body": '<path fill="currentColor" d="M28 7H13.828l3.586-3.586L16 2l-6 6l6 6l1.414-1.414L13.828 9H28v11H11.899A5.014 5.014 0 0 0 8 16.101V2H6v14.101A5 5 0 0 0 6 25.9V30h2v-4.101A5.014 5.014 0 0 0 11.899 22H28a2.002 2.002 0 0 0 2-2V9a2.002 2.002 0 0 0-2-2ZM7 24a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/>' }, "connect-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4z"/><path fill="currentColor" d="M23 16c-1.57 0-3.012.516-4.181 1.392L14.6 13.175A6.922 6.922 0 0 0 16 9c0-3.86-3.14-7-7-7S2 5.14 2 9s3.14 7 7 7c1.57 0 3.018-.535 4.187-1.411l4.218 4.217A6.986 6.986 0 0 0 16 23c0 3.86 3.14 7 7 7s7-3.14 7-7s-3.14-7-7-7ZM4 9c0-2.757 2.243-5 5-5s5 2.243 5 5s-2.243 5-5 5s-5-2.243-5-5Z"/>' }, "connect-source": { "body": '<path fill="currentColor" d="m24 10l-1.414 1.414L26.172 15H11.899A5.014 5.014 0 0 0 8 11.101V2H6v9.101A5 5 0 0 0 6 20.9V30h2v-9.101A5.014 5.014 0 0 0 11.899 17h14.273l-3.586 3.586L24 22l6-6ZM7 19a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/>' }, "connect-target": { "body": '<path fill="currentColor" d="M28 2h2v28h-2zm-8 8l-1.414 1.414L22.172 15H11.899a5 5 0 1 0 0 2h10.273l-3.586 3.586L20 22l6-6zM7 19a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3z"/>' }, "connection-receive": { "body": '<path fill="currentColor" d="M8 8h2v4H8zm0 6h2v4H8zm6-6h2v4h-2zm0 6h2v4h-2zm-6 6h2v4H8zm6 0h2v4h-2zm16-6h-8.17l2.58 2.59L23 18l-5-5l5-5l1.41 1.41L21.83 12H30v2z"/><path fill="currentColor" d="M28 20v8h-6v-8h-2v8H4V4h16v2h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v26h28V20Z"/>' }, "connection-send": { "body": '<path fill="currentColor" d="M8 8h2v4H8zm0 6h2v4H8zm6-6h2v4h-2zm0 6h2v4h-2zm-6 6h2v4H8zm6 0h2v4h-2zm4-6h8.17l-2.58 2.59L25 18l5-5l-5-5l-1.41 1.41L26.17 12H18v2z"/><path fill="currentColor" d="M28 20v8h-6v-8h-2v8H4V4h16v2h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v26h28V20Z"/>' }, "connection-signal": { "body": '<path fill="currentColor" d="M15 12h2v18h-2zm-3.67 6.22a7 7 0 0 1 0-10.44l1.34 1.49a5 5 0 0 0 0 7.46zm9.34 0l-1.34-1.49a5 5 0 0 0 0-7.46l1.34-1.49a7 7 0 0 1 0 10.44z"/><path fill="currentColor" d="M8.4 21.8a11 11 0 0 1 0-17.6l1.2 1.6a9 9 0 0 0 0 14.4zm15.2 0l-1.2-1.6a9 9 0 0 0 0-14.4l1.2-1.6a11 11 0 0 1 0 17.6z"/>' }, "connection-signal-off": { "body": '<path fill="currentColor" d="M26 13a8.909 8.909 0 0 1-2.525 6.234l1.413 1.413A10.98 10.98 0 0 0 23.601 4.2l-1.202 1.6A8.932 8.932 0 0 1 26 13Z"/><path fill="currentColor" d="M21 13a5.002 5.002 0 0 1-.902 2.856l1.427 1.428a6.983 6.983 0 0 0-.858-9.501l-1.334 1.49A5.008 5.008 0 0 1 21 13zm9 15.586L3.414 2L2 3.414l3.71 3.71A10.982 10.982 0 0 0 8.4 21.801l1.2-1.6A8.968 8.968 0 0 1 7.172 8.585l2.197 2.197a6.966 6.966 0 0 0 1.964 7.435l1.334-1.49A5.007 5.007 0 0 1 11 13a4.885 4.885 0 0 1 .04-.546l3.96 3.96V30h2V18.414L28.586 30z"/>' }, "connection-two-way": { "body": '<path fill="currentColor" d="M8 8h2v4H8zm0 6h2v4H8zm6-6h2v4h-2zm0 6h2v4h-2zm-6 6h2v4H8zm6 0h2v4h-2zm16 2h-8.17l2.58 2.59L23 26l-5-5l5-5l1.41 1.41L21.83 20H30v2zM19 12h8.17l-2.58 2.59L26 16l5-5l-5-5l-1.41 1.41L27.17 10H19v2z"/><path fill="currentColor" d="M28 26v2H4V4h16v2h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v26h28v-4Z"/>' }, "construction": { "body": '<path fill="currentColor" d="M29.34 16.06a1 1 0 0 0-1.108.3l-3.772 4.526l-5.436-.988l-3.602-8.952A3.014 3.014 0 0 0 12.614 9h-4.06a3.002 3.002 0 0 0-1.544.428L2 12.434v6.4l5 .91V30h2v-9.893l3.565.648L14 24.2V30h2v-6.2l-1.091-2.618l8.081 1.469l-4.758 5.709A1 1 0 0 0 19 30h10a1 1 0 0 0 1-1V17a1 1 0 0 0-.66-.94zM4 17.166v-3.6l3-1.8v5.945zm5 .909V11h3.614a1.014 1.014 0 0 1 .945.67l3.14 7.805zM28 28h-6.865L28 19.762zM12.5 8A3.5 3.5 0 1 1 16 4.5A3.504 3.504 0 0 1 12.5 8zm0-5A1.5 1.5 0 1 0 14 4.5A1.502 1.502 0 0 0 12.5 3z"/>' }, "container-registry": { "body": '<path fill="currentColor" d="M17 13V6H8v16h16v-9Zm-7-5h5v5h-5Zm0 7h5v5h-5Zm12 5h-5v-5h5Z"/><path fill="currentColor" d="M28 11h-9V2h9zm-7-2h5V4h-5zm7 11h-2v2h2v6H4v-6h2v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2z"/><circle cx="7" cy="25" r="1" fill="currentColor"/>' }, "container-services": { "body": '<path fill="currentColor" d="M27 22v-5a2.002 2.002 0 0 0-2-2h-8v-5h3a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2h-8a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h3v5H7a2.002 2.002 0 0 0-2 2v5H2v8h8v-8H7v-5h8v5h-3v8h8v-8h-3v-5h8v5h-3v8h8v-8ZM12 4h8v4h-8ZM8 28H4v-4h4Zm10 0h-4v-4h4Zm10 0h-4v-4h4Z"/>' }, "container-software": { "body": '<path fill="currentColor" d="M28 12h-8V4h8Zm-6-2h4V6h-4Z"/><path fill="currentColor" d="M17 15V9H9v14h14v-8Zm-6-4h4v4h-4Zm4 10h-4v-4h4Zm6 0h-4v-4h4Z"/><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h10v2H6v20h20V16h2v10a2.002 2.002 0 0 1-2 2Z"/>' }, "content-delivery-network": { "body": '<circle cx="21" cy="21" r="2" fill="currentColor"/><circle cx="7" cy="7" r="2" fill="currentColor"/><path fill="currentColor" d="M27 31a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2Z"/><path fill="currentColor" d="M30 16A14.041 14.041 0 0 0 16 2a13.043 13.043 0 0 0-6.8 1.8l1.1 1.7a24.425 24.425 0 0 1 2.4-1A25.135 25.135 0 0 0 10 15H4a11.149 11.149 0 0 1 1.4-4.7L3.9 9A13.842 13.842 0 0 0 2 16a13.998 13.998 0 0 0 14 14a13.366 13.366 0 0 0 5.2-1l-.6-1.9a11.442 11.442 0 0 1-5.2.9A21.071 21.071 0 0 1 12 17h17.9a3.402 3.402 0 0 0 .1-1ZM12.8 27.6a13.02 13.02 0 0 1-5.3-3.1A12.505 12.505 0 0 1 4 17h6a25.002 25.002 0 0 0 2.8 10.6ZM12 15a21.446 21.446 0 0 1 3.3-11h1.4A21.446 21.446 0 0 1 20 15Zm10 0a23.278 23.278 0 0 0-2.8-10.6A12.092 12.092 0 0 1 27.9 15Z"/>' }, "content-view": { "body": '<circle cx="16" cy="19" r="2" fill="currentColor"/><path fill="currentColor" d="M23.777 18.479A8.64 8.64 0 0 0 16 13a8.64 8.64 0 0 0-7.777 5.479L8 19l.223.521A8.64 8.64 0 0 0 16 25a8.64 8.64 0 0 0 7.777-5.479L24 19ZM16 23a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="M27 3H5a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h22a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2ZM5 5h22v4H5Zm0 22V11h22v16Z"/>' }, "continue": { "body": '<path fill="currentColor" d="M10 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.501-.865l19 11a1 1 0 0 1 0 1.73l-19 11A.998.998 0 0 1 10 28zm1-21.266v18.532L27 16zM4 4h2v24H4z"/>' }, "continue-filled": { "body": '<path fill="currentColor" d="M10 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.501-.865l19 11a1 1 0 0 1 0 1.73l-19 11A.998.998 0 0 1 10 28zM4 4h2v24H4z"/>' }, "continuous-deployment": { "body": '<path fill="currentColor" d="m24 2l-6 6l1.4 1.4L23 5.8V19c0 5-4 9-9 9c-1.6 0-3.1-.4-4.3-1.1c.4.1.8.1 1.3.1c4.4 0 8-3.6 8-8s-3.6-8-8-8s-8 3.6-8 8c0 6.1 4.9 11 11 11s11-4.9 11-11V5.8l3.6 3.6L30 8l-6-6zM5 19.6V19c0-3.3 2.7-6 6-6s6 2.7 6 6s-2.7 6-6 6c-3.1 0-5.7-2.4-6-5.4z"/>' }, "continuous-integration": { "body": '<path fill="currentColor" d="m31.9 15.5l-5.7-10c-.3-.3-.6-.5-.9-.5H6.7c-.3 0-.6.2-.8.5l-5.7 10c-.2.2-.2.3-.2.5s0 .3.1.5l5.7 10c.3.3.6.5.9.5h18.5c.4 0 .7-.2.9-.5l5.7-10c.2-.2.2-.3.2-.5s0-.3-.1-.5zM17.8 15h-8l4-7l4 7zm-2.3-8h8l-4 7l-4-7zm2.3 10l-4 7l-4-7h8zm1.7 1l4 7h-8l4-7zm1.7-1h8l-4 7l-4-7zm0-2l4-7l4 7h-8zM7.3 7H12l-4.6 8H2.7l4.6-8zm0 18l-4.6-8h4.7l4.6 8H7.3z"/>' }, "contour-draw": { "body": '<defs/><path d="M7.7 4.7a14.703 14.703 0 0 0-3 3.1L6.3 9a13.263 13.263 0 0 1 2.6-2.7z" fill="currentColor"/><path d="M4.6 12.3l-1.9-.6A12.511 12.511 0 0 0 2 16h2a11.476 11.476 0 0 1 .6-3.7z" fill="currentColor"/><path d="M11.7 2.7l.6 1.9A11.476 11.476 0 0 1 16 4V2a12.511 12.511 0 0 0-4.3.7z" fill="currentColor"/><path d="M24.2 27.3a15.18 15.18 0 0 0 3.1-3.1L25.7 23a11.526 11.526 0 0 1-2.7 2.7z" fill="currentColor"/><path d="M27.4 19.7l1.9.6A15.475 15.475 0 0 0 30 16h-2a11.476 11.476 0 0 1-.6 3.7z" fill="currentColor"/><path d="M29.2 11.6a14.403 14.403 0 0 0-2-3.9l-1.6 1.2a12.887 12.887 0 0 1 1.7 3.3z" fill="currentColor"/><path d="M24.1 4.6a14.403 14.403 0 0 0-3.9-2l-.6 1.9a12.887 12.887 0 0 1 3.3 1.7z" fill="currentColor"/><path d="M20.3 29.3l-.6-1.9a11.476 11.476 0 0 1-3.7.6v2a21.42 21.42 0 0 0 4.3-.7z" fill="currentColor"/><path d="M15.402 24.248a11.949 11.949 0 0 0-1.718-3.335l1.613-1.183a13.949 13.949 0 0 1 2.005 3.893z" fill="currentColor"/><path d="M11.02 18.267a11.921 11.921 0 0 0-3.347-1.694l.612-1.905a13.924 13.924 0 0 1 3.907 1.978z" fill="currentColor"/>', "hidden": true }, "contour-edit": { "body": '<defs/><path d="M16 30v-2a12.002 12.002 0 0 0 3.692-23.421l.616-1.904A14.002 14.002 0 0 1 16 30z" fill="currentColor"/><path d="M7.7 4.7a14.703 14.703 0 0 0-3 3.1L6.3 9a13.263 13.263 0 0 1 2.6-2.7z" fill="currentColor"/><path d="M4.6 12.3l-1.9-.6A12.511 12.511 0 0 0 2 16h2a11.476 11.476 0 0 1 .6-3.7z" fill="currentColor"/><path d="M11.7 2.7l.6 1.9A11.476 11.476 0 0 1 16 4V2a12.511 12.511 0 0 0-4.3.7z" fill="currentColor"/><path d="M15.402 24.248a11.949 11.949 0 0 0-1.718-3.335l1.613-1.183a13.949 13.949 0 0 1 2.005 3.893z" fill="currentColor"/><path d="M11.02 18.267a11.921 11.921 0 0 0-3.347-1.694l.612-1.905a13.924 13.924 0 0 1 3.907 1.978z" fill="currentColor"/>', "hidden": true }, "contour-finding": { "body": '<defs/><path d="M7.7 4.7a14.703 14.703 0 0 0-3 3.1L6.3 9a13.263 13.263 0 0 1 2.6-2.7z" fill="currentColor"/><path d="M4.6 12.3l-1.9-.6A12.511 12.511 0 0 0 2 16h2a11.476 11.476 0 0 1 .6-3.7z" fill="currentColor"/><path d="M2.7 20.4a14.403 14.403 0 0 0 2 3.9l1.6-1.2a12.887 12.887 0 0 1-1.7-3.3z" fill="currentColor"/><path d="M7.8 27.3a14.403 14.403 0 0 0 3.9 2l.6-1.9A12.887 12.887 0 0 1 9 25.7z" fill="currentColor"/><path d="M11.7 2.7l.6 1.9A11.476 11.476 0 0 1 16 4V2a12.511 12.511 0 0 0-4.3.7z" fill="currentColor"/><path d="M24.2 27.3a15.18 15.18 0 0 0 3.1-3.1L25.7 23a11.526 11.526 0 0 1-2.7 2.7z" fill="currentColor"/><path d="M27.4 19.7l1.9.6A15.475 15.475 0 0 0 30 16h-2a11.476 11.476 0 0 1-.6 3.7z" fill="currentColor"/><path d="M29.2 11.6a14.403 14.403 0 0 0-2-3.9l-1.6 1.2a12.887 12.887 0 0 1 1.7 3.3z" fill="currentColor"/><path d="M24.1 4.6a14.403 14.403 0 0 0-3.9-2l-.6 1.9a12.887 12.887 0 0 1 3.3 1.7z" fill="currentColor"/><path d="M20.3 29.3l-.6-1.9a11.476 11.476 0 0 1-3.7.6v2a21.42 21.42 0 0 0 4.3-.7z" fill="currentColor"/><path d="M16 26a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10zm0-18a8 8 0 1 0 8 8a8.01 8.01 0 0 0-8-8z" fill="currentColor"/>', "hidden": true }, "contrast": { "body": '<path fill="currentColor" d="M29.37 11.84a13.6 13.6 0 0 0-1.06-2.51A14.17 14.17 0 0 0 25.9 6.1a14 14 0 1 0 0 19.8a14.17 14.17 0 0 0 2.41-3.23a13.6 13.6 0 0 0 1.06-2.51a14 14 0 0 0 0-8.32ZM4 16A12 12 0 0 1 16 4v24A12 12 0 0 1 4 16Z"/>' }, "convert-to-cloud": { "body": '<path fill="currentColor" d="M26.5 12H19a4 4 0 0 1 0-8h.084A4.786 4.786 0 0 1 23 2a4.982 4.982 0 0 1 4.654 3.203A3.467 3.467 0 0 1 30 8.5a3.504 3.504 0 0 1-3.5 3.5zM19 6a2 2 0 0 0 0 4h7.5A1.502 1.502 0 0 0 28 8.5a1.486 1.486 0 0 0-1.278-1.474l-.661-.099l-.162-.649a2.957 2.957 0 0 0-5.487-.712L20.114 6zm4 8l-5 5l1.414 1.414L22 17.832V24h-6v2h6a2.002 2.002 0 0 0 2-2v-6.168l2.587 2.583L28 19zM2 20h10v2H2zm0 4h10v2H2zm0 4h10v2H2z"/>' }, "cookie": { "body": '<circle cx="10" cy="21" r="2" fill="currentColor"/><circle cx="23" cy="20" r="2" fill="currentColor"/><circle cx="13" cy="10" r="2" fill="currentColor"/><circle cx="14" cy="15" r="1" fill="currentColor"/><circle cx="23" cy="5" r="2" fill="currentColor"/><circle cx="29" cy="3" r="1" fill="currentColor"/><circle cx="16" cy="23" r="1" fill="currentColor"/><path fill="currentColor" d="M16 30C8.3 30 2 23.7 2 16S8.3 2 16 2h.3l1.4.1l-.3 1.2c-.1.4-.2.9-.2 1.3c0 2.8 2.2 5 5 5c1 0 2-.3 2.9-.9l1.3 1.5c-.4.4-.6.9-.6 1.4c0 1.3 1.3 2.4 2.7 1.9l1.2-.5l.2 1.3c.1.6.1 1.2.1 1.7c0 7.7-6.3 14-14 14zm-.7-26C9 4.4 4 9.6 4 16c0 6.6 5.4 12 12 12s12-5.4 12-12v-.4c-2.3.1-4.2-1.7-4.2-4v-.2c-.5.1-1 .2-1.6.2c-3.9 0-7-3.1-7-7c0-.2 0-.4.1-.6z"/>' }, "copy": { "body": '<path fill="currentColor" d="M28 10v18H10V10h18m0-2H10a2 2 0 0 0-2 2v18a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z"/><path fill="currentColor" d="M4 18H2V4a2 2 0 0 1 2-2h14v2H4Z"/>' }, "copy-file": { "body": '<path fill="currentColor" d="m27.4 14.7l-6.1-6.1C21 8.2 20.5 8 20 8h-8c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V16.1c0-.5-.2-1-.6-1.4zM20 10l5.9 6H20v-6zm-8 18V10h6v6c0 1.1.9 2 2 2h6v10H12z"/><path fill="currentColor" d="M6 18H4V4c0-1.1.9-2 2-2h14v2H6v14z"/>' }, "copy-link": { "body": '<path fill="currentColor" d="M11.947 19a4.948 4.948 0 0 1-3.499-8.447l5.106-5.104a4.948 4.948 0 0 1 6.998 6.998l-.553.552l-1.415-1.413l.557-.557a2.95 2.95 0 0 0-.004-4.166a3.02 3.02 0 0 0-4.17 0l-5.104 5.104a2.947 2.947 0 0 0 0 4.17a3.02 3.02 0 0 0 4.17 0l1.414 1.414a4.918 4.918 0 0 1-3.5 1.449Z"/><path fill="currentColor" d="M19.947 17a4.948 4.948 0 0 1-3.499-8.447l.553-.552l1.414 1.415l-.552.552a2.948 2.948 0 0 0 0 4.169a3.02 3.02 0 0 0 4.17 0l5.105-5.105a2.951 2.951 0 0 0 0-4.168a3.02 3.02 0 0 0-4.17 0l-1.414-1.415a4.948 4.948 0 0 1 6.998 6.998l-5.104 5.103a4.92 4.92 0 0 1-3.5 1.45Z"/><path fill="currentColor" d="M24 30H4a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h4v2H4v20h20V18h2v10a2.002 2.002 0 0 1-2 2Z"/>' }, "corn": { "body": '<path fill="currentColor" d="M23 16c-.337 0-.67.02-1 .05V16c0-7.885-2.956-14-5.5-14S11 8.115 11 16v5H6v3a6.007 6.007 0 0 0 6 6h3a11.012 11.012 0 0 0 11-11v-3Zm-10 0h2v-2h-1.927a25.894 25.894 0 0 1 .565-4H16V8h-1.8c.81-2.406 1.815-3.772 2.3-3.986c.66.292 2.284 2.703 3.065 6.986H18v2h1.844A29.163 29.163 0 0 1 20 16v.426A11.055 11.055 0 0 0 13.79 21H13Zm-1 12a4.005 4.005 0 0 1-4-4v-1h4.764A10.903 10.903 0 0 0 12 27Zm12-9a9.01 9.01 0 0 1-9 9h-1v-1a9.01 9.01 0 0 1 9-9h1Z"/>' }, "corner": { "body": '<path fill="currentColor" d="M28 9H14V6H6v8h3v14h2V14h3v-3h14Zm-16 3H8V8h4Z"/>' }, "coronavirus": { "body": '<circle cx="15.5" cy="11.5" r="1.5" fill="currentColor"/><circle cx="20.5" cy="15.5" r="1.5" fill="currentColor"/><circle cx="16" cy="16" r="1" fill="currentColor"/><circle cx="16.5" cy="20.5" r="1.5" fill="currentColor"/><circle cx="11.5" cy="16.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M28 13v2h-2.05a9.948 9.948 0 0 0-2.215-5.321l1.437-1.437l1.414 1.415L28 8.243L23.758 4l-1.414 1.414l1.414 1.414l-1.437 1.437A9.946 9.946 0 0 0 17 6.05V4h2V2h-6v2h2v2.05a9.946 9.946 0 0 0-5.32 2.215L8.241 6.828l1.414-1.414L8.242 4L4 8.243l1.414 1.414l1.414-1.415L8.265 9.68A9.948 9.948 0 0 0 6.051 15H4v-2H2v6h2v-2h2.05a9.948 9.948 0 0 0 2.215 5.321l-1.437 1.437l-1.414-1.415L4 23.757L8.242 28l1.414-1.414l-1.414-1.414l1.437-1.437A9.946 9.946 0 0 0 15 25.95V28h-2v2h6v-2h-2v-2.05a9.946 9.946 0 0 0 5.32-2.215l1.438 1.437l-1.414 1.414L23.758 28L28 23.757l-1.414-1.414l-1.414 1.415l-1.437-1.437A9.948 9.948 0 0 0 25.949 17H28v2h2v-6ZM16 24a8 8 0 1 1 8-8a8.01 8.01 0 0 1-8 8Z"/>' }, "cost": { "body": '<path fill="currentColor" d="M16 23a7 7 0 1 1 7-7a7.008 7.008 0 0 1-7 7Zm0-12a5 5 0 1 0 5 5a5.006 5.006 0 0 0-5-5Z"/><path fill="currentColor" d="M30 6.414L28.586 5l-3.35 3.35a12.081 12.081 0 0 0-1.586-1.586L27 3.414L25.586 2l-3.61 3.61A11.98 11.98 0 0 0 5.61 21.976L2 25.586L3.414 27l3.35-3.35a12.081 12.081 0 0 0 1.586 1.586L5 28.586L6.414 30l3.61-3.61A11.98 11.98 0 0 0 26.39 10.024ZM16 26a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10Z"/>' }, "cost-total": { "body": '<path fill="currentColor" d="M10 13h12v2H10zm0 5h12v2H10z"/><path fill="currentColor" d="M30 6.414L28.586 5l-3.35 3.35a12.081 12.081 0 0 0-1.586-1.586L27 3.414L25.586 2l-3.61 3.61A11.98 11.98 0 0 0 5.61 21.976L2 25.586L3.414 27l3.35-3.35a12.081 12.081 0 0 0 1.586 1.586L5 28.586L6.414 30l3.61-3.61A11.98 11.98 0 0 0 26.39 10.024ZM16 26a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10Z"/>' }, "cough": { "body": '<path fill="currentColor" d="M26 30h-2v-3h-4a5.005 5.005 0 0 1-5-5v-1.28l-2.316-.771a1 1 0 0 1-.541-1.463L15 13.723V11a9.01 9.01 0 0 1 9-9h5v2h-5a7.008 7.008 0 0 0-7 7v3a1 1 0 0 1-.143.514L14.5 18.446l1.817.605A1 1 0 0 1 17 20v2a3.003 3.003 0 0 0 3 3h5a1 1 0 0 1 1 1Z"/><circle cx="9" cy="23" r="1" fill="currentColor"/><circle cx="6" cy="20" r="1" fill="currentColor"/><circle cx="6" cy="26" r="1" fill="currentColor"/><circle cx="3" cy="17" r="1" fill="currentColor"/><circle cx="3" cy="29" r="1" fill="currentColor"/><circle cx="3" cy="23" r="1" fill="currentColor"/><path fill="currentColor" d="M19 12h4v2h-4z"/>' }, "course": { "body": '<path fill="currentColor" d="M24 30H8a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v16.618l-5-2.5l-5 2.5V4H8v24h16v-4h2v4a2.003 2.003 0 0 1-2 2Zm-3-14.118l3 1.5V4h-6v13.382Z"/>' }, "covariate": { "body": '<circle cx="8" cy="16" r="2" fill="currentColor"/><circle cx="14" cy="8" r="2" fill="currentColor"/><circle cx="28" cy="12" r="2" fill="currentColor"/><circle cx="21" cy="18" r="2" fill="currentColor"/><path fill="currentColor" d="M30 3.414L28.586 2L4 26.586V2H2v26a2 2 0 0 0 2 2h26v-2H5.414ZM4 28Z"/>' }, "credentials": { "body": '<path fill="currentColor" d="M16 22a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2zM14 6h4v2h-4z"/><path fill="currentColor" d="M24 2H8a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h16a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2Zm-4 26h-8v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1Zm2 0v-2a3 3 0 0 0-3-3h-6a3 3 0 0 0-3 3v2H8V4h16v24Z"/>' }, "crop": { "body": '<path fill="currentColor" d="M25 20h-2V9H12V7h11a2 2 0 0 1 2 2Z"/><path fill="currentColor" d="M9 23V2H7v5H2v2h5v14a2 2 0 0 0 2 2h14v5h2v-5h5v-2Z"/>' }, "crop-growth": { "body": '<path fill="currentColor" d="M26 13a4.005 4.005 0 0 0 4-4V6h-3a3.979 3.979 0 0 0-2.747 1.106A6.004 6.004 0 0 0 19 4h-3v3a6.007 6.007 0 0 0 6 6h1v13H11v-5h1a4.005 4.005 0 0 0 4-4v-3h-3a3.979 3.979 0 0 0-2.747 1.106A6.004 6.004 0 0 0 5 12H2v3a6.007 6.007 0 0 0 6 6h1v5H2v2h28v-2h-5V13Zm-1-3a2.002 2.002 0 0 1 2-2h1v1a2.002 2.002 0 0 1-2 2h-1Zm-14 8a2.002 2.002 0 0 1 2-2h1v1a2.002 2.002 0 0 1-2 2h-1Zm-2 1H8a4.005 4.005 0 0 1-4-4v-1h1a4.005 4.005 0 0 1 4 4Zm14-8h-1a4.005 4.005 0 0 1-4-4V6h1a4.005 4.005 0 0 1 4 4Z"/>' }, "crop-health": { "body": '<path fill="currentColor" d="M2 28h8v2H2zm15 1a1 1 0 0 1-.78-.375L12.52 24H2v-2h11a1 1 0 0 1 .78.375l3.147 3.932l5.241-7.862A1 1 0 0 1 23.8 18.4l2.7 3.6H30v2h-4a1 1 0 0 1-.8-.4l-2.152-2.87l-5.216 7.825a.999.999 0 0 1-.789.444zm-6-13v-5h1a4.005 4.005 0 0 0 4-4V4h-3a3.978 3.978 0 0 0-2.747 1.107A6.003 6.003 0 0 0 5 2H2v3a6.007 6.007 0 0 0 6 6h1v5H2v2h14v-2zm2-10h1v1a2.002 2.002 0 0 1-2 2h-1V8a2.002 2.002 0 0 1 2-2zM8 9a4.005 4.005 0 0 1-4-4V4h1a4.005 4.005 0 0 1 4 4v1z"/>' }, "cross-reference": { "body": '<path d="M11 24h4v2h-4z" fill="currentColor"/><path d="M5 24h4v2H5z" fill="currentColor"/><path d="M23 24h4v2h-4z" fill="currentColor"/><path d="M17 24h4v2h-4z" fill="currentColor"/><path d="M9 22a4.92 4.92 0 0 1 4-2h6a5.22 5.22 0 0 1 4 2h2.3a6.87 6.87 0 0 0-6.3-4h-6a6.87 6.87 0 0 0-6.3 4z" fill="currentColor"/><path d="M24 28h2v2h-2z" fill="currentColor"/><path d="M6 28h2v2H6z" fill="currentColor"/><path d="M16 16a7 7 0 1 1 7-7a7 7 0 0 1-7 7zm0-12a5 5 0 0 0-5 5a5 5 0 0 0 10 0a5 5 0 0 0-5-5z" fill="currentColor"/>', "hidden": true }, "cross-tab": { "body": '<path fill="currentColor" d="M28 2H10a2.002 2.002 0 0 0-2 2v3H4a2.002 2.002 0 0 0-2 2v19a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2ZM10 4h18v3H10Zm18 10h-8V9h8Zm-18 7v-5h8v5Zm8 2v5h-8v-5ZM8 21H4v-5h4ZM18 9v5h-8V9Zm2 7h8v5h-8ZM8 9v5H4V9ZM4 23h4v5H4Zm16 5v-5h8v5Z"/>' }, "crossroads": { "body": '<path fill="currentColor" d="M26.586 6.586A1.986 1.986 0 0 0 25.172 6H17V2h-2v10H6.828a1.986 1.986 0 0 0-1.414.586L2 16l3.414 3.414A1.986 1.986 0 0 0 6.828 20H15v10h2V14h8.172a1.986 1.986 0 0 0 1.414-.586L30 10ZM6.828 18l-2-2l2-2H15v4Zm18.344-6H17V8h8.172l2 2Z"/>' }, "crowd-report": { "body": '<path fill="currentColor" d="m16.832 19.555l-1.664-1.11L17.465 15H20v-5h-8v5h2v2h-2a2.002 2.002 0 0 1-2-2v-5a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2h-1.465Z"/><path fill="currentColor" d="m16 30l-8.436-9.949a35.076 35.076 0 0 1-.348-.451A10.889 10.889 0 0 1 5 13a11 11 0 0 1 22 0a10.884 10.884 0 0 1-2.215 6.597l-.001.003s-.3.394-.345.447ZM8.812 18.395c.002 0 .234.308.287.374L16 26.908l6.91-8.15c.044-.055.278-.365.279-.366A8.901 8.901 0 0 0 25 13a9 9 0 0 0-18 0a8.905 8.905 0 0 0 1.813 5.395Z"/>' }, "crowd-report-filled": { "body": '<path fill="none" d="m16.832 19.555l-1.664-1.11L17.465 15H20v-5h-8v5h2v2h-2a2.002 2.002 0 0 1-2-2v-5a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2h-1.465Z"/><path fill="currentColor" d="M16 2A11.013 11.013 0 0 0 5 13a10.889 10.889 0 0 0 2.216 6.6s.3.395.349.452L16 30l8.439-9.953c.044-.053.345-.447.345-.447l.001-.003A10.885 10.885 0 0 0 27 13A11.013 11.013 0 0 0 16 2Zm6 13a2.002 2.002 0 0 1-2 2h-1.465l-1.703 2.555l-1.664-1.11L17.465 15H20v-5h-8v5h2v2h-2a2.002 2.002 0 0 1-2-2v-5a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2Z"/>' }, "csv": { "body": '<path fill="currentColor" d="m28 9l-2 13l-2-13h-2l2.516 14h2.968L30 9h-2zM18 23h-6v-2h6v-4h-4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h6v2h-6v4h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-8 0H4a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h6v2H4v10h6z"/>' }, "cu1": { "body": '<path d="M10 23H5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2H5v6h5z" fill="currentColor"/><path d="M18 23h-4a2 2 0 0 1-2-2V9h2v12h4V9h2v12a2 2 0 0 1-2 2z" fill="currentColor"/><path d="M27 21V9.01h-5v2h3V21h-3v2h8v-2h-3z" fill="currentColor"/>', "hidden": true }, "cu3": { "body": '<path d="M10 23H5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2H5v6h5z" fill="currentColor"/><path d="M18 23h-4a2 2 0 0 1-2-2V9h2v12h4V9h2v12a2 2 0 0 1-2 2z" fill="currentColor"/><path d="M28 9h-6v2h6v4h-5v2h5v4h-6v2h6a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2z" fill="currentColor"/>', "hidden": true }, "cube": { "body": '<path fill="currentColor" d="m28.504 8.136l-12-7a1 1 0 0 0-1.008 0l-12 7A1 1 0 0 0 3 9v14a1 1 0 0 0 .496.864l12 7a1 1 0 0 0 1.008 0l12-7A1 1 0 0 0 29 23V9a1 1 0 0 0-.496-.864ZM16 3.158L26.016 9L16 14.842L5.984 9ZM5 10.74l10 5.833V28.26L5 22.426Zm12 17.52V16.574l10-5.833v11.685Z"/>' }, "cube-view": { "body": '<circle cx="16" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M23.777 15.479A8.64 8.64 0 0 0 16 10a8.64 8.64 0 0 0-7.777 5.479L8 16l.223.521A8.64 8.64 0 0 0 16 22a8.64 8.64 0 0 0 7.777-5.479L24 16ZM16 20a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="m28.504 8.136l-12-7a1 1 0 0 0-1.008 0l-12 7A1 1 0 0 0 3 9v14a1 1 0 0 0 .496.864l12 7a1 1 0 0 0 1.008 0l12-7A1 1 0 0 0 29 23V9a1 1 0 0 0-.496-.864ZM27 22.426l-11 6.416l-11-6.416V9.574l11-6.416l11 6.416Z"/>' }, "currency": { "body": '<path fill="currentColor" d="M21 12v-2h-4V7h-2v3h-2a2.002 2.002 0 0 0-2 2v3a2.002 2.002 0 0 0 2 2h6v3h-8v2h4v3h2v-3h2a2.002 2.002 0 0 0 2-2v-3a2.002 2.002 0 0 0-2-2h-6v-3Z"/><path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12.035 12.035 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14.041 14.041 0 0 0 16 2Z"/>' }, "currency-baht": { "body": '<path fill="currentColor" d="M21.402 15.643A4.973 4.973 0 0 0 23 12v-1a5.006 5.006 0 0 0-5-5h-1V3h-2v3h-5v20h5v3h2v-3h2a5.006 5.006 0 0 0 5-5v-1a4.983 4.983 0 0 0-2.598-4.357ZM12 8h6a3.003 3.003 0 0 1 3 3v1a3.003 3.003 0 0 1-3 3h-6Zm10 13a3.003 3.003 0 0 1-3 3h-7v-7h7a3.003 3.003 0 0 1 3 3Z"/>' }, "currency-dollar": { "body": '<path fill="currentColor" d="M23 20.515c0-4.615-3.78-5.141-6.817-5.563c-3.31-.46-5.183-.86-5.183-3.71C11 8.85 13.507 8 15.654 8a6.754 6.754 0 0 1 5.568 2.628l1.556-1.256A8.65 8.65 0 0 0 17 6.096V3h-2v3.022c-3.615.22-6 2.26-6 5.22c0 4.73 3.83 5.263 6.907 5.69c3.253.453 5.093.842 5.093 3.583C21 23.547 17.867 24 16 24c-3.43 0-4.878-.964-6.222-2.628l-1.556 1.256A8.438 8.438 0 0 0 15 25.965V29h2v-3.045c3.726-.304 6-2.327 6-5.44Z"/>' }, "currency-euro": { "body": '<path fill="currentColor" d="M17 26c-3.616 0-6.333-2.297-7.446-6H19v-2H9.132A15.278 15.278 0 0 1 9 16c0-.33.01-.664.026-1H19v-2H9.237C9.845 9.352 11.81 6 17 6c3.853 0 5.532 1.647 7.128 4.49l1.744-.98C24.265 6.649 22.078 4 17 4C10.645 4 7 8.374 7 16c0 7.065 4.112 12 10 12c5.078 0 7.265-2.648 8.872-5.51l-1.744-.98C22.532 24.354 20.853 26 17 26Z"/>' }, "currency-lira": { "body": '<path fill="currentColor" d="M23 19a6.007 6.007 0 0 1-6 6h-4v-6.892L21.214 15v-2L13 16.108v-3L21.214 10V8L13 11.108V5h-2v6.865L8 13v2l3-1.135v3L8 18v2l3-1.135V27h6a8.01 8.01 0 0 0 8-8Z"/>' }, "currency-pound": { "body": '<path fill="currentColor" d="M12.453 25A8.777 8.777 0 0 0 14 20a10.6 10.6 0 0 0-.18-2H22v-2h-8.783a47.4 47.4 0 0 0-.255-.624A9.859 9.859 0 0 1 12 11a4.792 4.792 0 0 1 5-5a6.123 6.123 0 0 1 5.222 2.628l1.556-1.256A8.11 8.11 0 0 0 17 4a6.778 6.778 0 0 0-7 7a11.65 11.65 0 0 0 1.056 5H8v2h3.773A8.209 8.209 0 0 1 12 20c0 2.523-1.486 5-3 5v2h15v-2Z"/>' }, "currency-ruble": { "body": '<path fill="currentColor" d="M19 4h-9v11H7v2h3v3H7v2h3v6h2v-6h9v-2h-9v-3h7a6.007 6.007 0 0 0 6-6v-1a6.007 6.007 0 0 0-6-6Zm4 7a4.005 4.005 0 0 1-4 4h-7V6h7a4.005 4.005 0 0 1 4 4Z"/>' }, "currency-rupee": { "body": '<path fill="currentColor" d="M24 7V5H8v2h5.5a4.49 4.49 0 0 1 4.45 4H8v2h9.95a4.49 4.49 0 0 1-4.45 4H8v2.345L17.617 28l1.338-1.486L10.606 19H13.5a6.504 6.504 0 0 0 6.475-6H24v-2h-4.025a6.472 6.472 0 0 0-1.795-4Z"/>' }, "currency-shekel": { "body": '<path fill="currentColor" d="M9 27H7V5h8a5.006 5.006 0 0 1 5 5v12h-2V10a3.003 3.003 0 0 0-3-3H9Z"/><path fill="currentColor" d="M20 27h-8V10h2v15h6a3.003 3.003 0 0 0 3-3V5h2v17a5.006 5.006 0 0 1-5 5Z"/>' }, "currency-won": { "body": '<path fill="currentColor" d="M28 14v-2h-4.955L24 5h-2l-2 18l-3-15h-2l-3 15l-2-18H8l.955 7H4v2h5.227l.409 3H4v2h5.909L11 27h2l3-15l3 15h2l1.091-8H28v-2h-5.636l.409-3H28z"/>' }, "currency-yen": { "body": '<path fill="currentColor" d="M24.271 5H22l-6 11l-6-11H7.729l6.065 11H8v2h7v3H8v2h7v4h2v-4h7v-2h-7v-3h7v-2h-5.794l6.065-11z"/>' }, "cursor-1": { "body": '<path fill="currentColor" d="M23 28a1 1 0 0 1-.71-.29l-6.13-6.14l-3.33 5a1 1 0 0 1-1 .44a1 1 0 0 1-.81-.7l-6-20A1 1 0 0 1 6.29 5l20 6a1 1 0 0 1 .7.81a1 1 0 0 1-.44 1l-5 3.33l6.14 6.13a1 1 0 0 1 0 1.42l-4 4A1 1 0 0 1 23 28Zm0-2.41L25.59 23l-7.16-7.15l5.25-3.5L7.49 7.49l4.86 16.19l3.5-5.25Z"/>' }, "cursor-2": { "body": '<path fill="currentColor" d="m27.34 12.06l-22-8a1 1 0 0 0-1.28 1.28l8 22A1 1 0 0 0 13 28a1 1 0 0 0 .93-.63l3.84-9.6l9.6-3.84a1 1 0 0 0 0-1.87Zm-10.71 4l-.4.16l-.16.4L13 24.2L6.67 6.67L24.2 13Z"/>' }, "customer-service": { "body": '<path fill="currentColor" d="M26 30h-2v-5a5.006 5.006 0 0 0-5-5h-6a5.006 5.006 0 0 0-5 5v5H6v-5a7.008 7.008 0 0 1 7-7h6a7.008 7.008 0 0 1 7 7v5zM22 6v4c0 1.103-.897 2-2 2h-1a1 1 0 0 0 0 2h1c2.206 0 4-1.794 4-4V6h-2zm-6 10c-3.86 0-7-3.14-7-7s3.14-7 7-7c1.988 0 3.89.85 5.217 2.333l-1.49 1.334A5.008 5.008 0 0 0 16 4c-2.757 0-5 2.243-5 5s2.243 5 5 5v2z"/>' }, "cut": { "body": '<path fill="currentColor" d="M26.5 19.63L20.24 16l6.26-3.63a5 5 0 0 0-1.21-9.2A5.19 5.19 0 0 0 24 3a5 5 0 0 0-4.33 7.53a5 5 0 0 0 2.39 2.1l-3.82 2.21L4 6.6L3 8.34L16.24 16L3 23.68l1 1.74l14.24-8.26l3.82 2.21a5 5 0 0 0-2.39 2.1A5 5 0 0 0 24 29a5.19 5.19 0 0 0 1.29-.17a5 5 0 0 0 1.21-9.2Zm-5.1-10.1a3 3 0 0 1 1.1-4.12a3 3 0 0 1 4.1 1.11a3 3 0 0 1-1.1 4.11a3 3 0 0 1-4.1-1.1Zm5.2 16a3 3 0 0 1-4.1 1.11a3 3 0 0 1-1.1-4.12a3 3 0 0 1 4.1-1.1a3 3 0 0 1 1.1 4.06Z"/>' }, "cut-in-half": { "body": '<path d="M28 4H4a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2zM4 6h12v20H4z" fill="currentColor"/>', "hidden": true }, "cut-out": { "body": '<path fill="currentColor" d="m19.05 13.733l-1-1.733l-10.122 5.846l-.997-.576a2.952 2.952 0 0 0 .667-.769A3 3 0 1 0 3.5 17.599L5.928 19L3.5 20.402a3.034 3.034 0 1 0 3.44.323l.988-.57L14.59 24l1-1.73L9.928 19zM4.034 15.26a1 1 0 1 1 .466.607a.993.993 0 0 1-.466-.607zM5 22a1 1 0 1 1-.865 1.5A1 1 0 0 1 5 22zm12 4h4v2h-4zm-7 0h4v2h-4z"/><path fill="currentColor" d="M28 28h-4v-2h4V4H7v4H5V4a2.002 2.002 0 0 1 2-2h21a2.002 2.002 0 0 1 2 2v22a2.002 2.002 0 0 1-2 2Z"/>' }, "cy": { "body": '<path d="M15 23h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2h-5v6h5z" fill="currentColor"/><path d="M24 9h-2l-2 7l-2-7h-2l3 9v5h2v-5l3-9z" fill="currentColor"/>', "hidden": true }, "cyclist": { "body": '<path fill="currentColor" d="M25 30a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4zM7 30a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4z"/><path fill="currentColor" d="M17 27h-2v-6.586L9.585 15a2.003 2.003 0 0 1 0-2.83l4.586-4.585a2.002 2.002 0 0 1 2.828 0L21.414 12H27v2h-6.415l-5-5L11 13.585l6 6zm4.5-19A3.5 3.5 0 1 1 25 4.5A3.504 3.504 0 0 1 21.5 8zm0-5A1.5 1.5 0 1 0 23 4.5A1.502 1.502 0 0 0 21.5 3z"/>' }, "cz": { "body": '<path d="M14 23H9a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2H9v6h5z" fill="currentColor"/><path d="M24 9h-8v2h6l-6 10v2h8v-2h-6l6-10V9z" fill="currentColor"/>', "hidden": true }, "dashboard": { "body": '<path fill="currentColor" d="M24 21h2v5h-2zm-4-5h2v10h-2zm-9 10a5.006 5.006 0 0 1-5-5h2a3 3 0 1 0 3-3v-2a5 5 0 0 1 0 10z"/><path fill="currentColor" d="M28 2H4a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h24a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2Zm0 9H14V4h14ZM12 4v7H4V4ZM4 28V13h24l.002 15Z"/>' }, "dashboard-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm20 1h2v5h-2zm-4-5h2v10h-2zm-4 2h2v8h-2z"/><path fill="currentColor" d="M28 2H4a2.002 2.002 0 0 0-2 2v12h2v-3h24.001l.001 15H16v2h12a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2Zm-16 9H4V4h8Zm2 0V4h14v7Z"/>' }, "data-1": { "body": '<path fill="currentColor" d="M15 6h13v2H15zm0 18h13v2H15zM4 15h13v2H4zm3-4a4 4 0 1 1 4-4a4 4 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2 2 0 0 0-2-2zm0 24a4 4 0 1 1 4-4a4 4 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2 2 0 0 0-2-2zm18-3a4 4 0 1 1 4-4a4 4 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2 2 0 0 0-2-2z"/>' }, "data-2": { "body": '<path fill="currentColor" d="M4 6h11v2H4zm14 0h10v2H18zm3 6h7v2h-7zm-10 0h7v2h-7zm-7 0h4v2H4zm0 6h24v2H4zm0 6h17v2H4zm20 0h4v2h-4z"/>' }, "data-accessor": { "body": '<path fill="currentColor" d="M28 20h-2v2h2v6H4v-6h2v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="M21 13a2.96 2.96 0 0 0-1.285.3l-2.3-2.3l2.3-2.3A2.96 2.96 0 0 0 21 9a3 3 0 1 0-3-3a2.966 2.966 0 0 0 .3 1.285l-2.3 2.3l-2.3-2.3A2.966 2.966 0 0 0 14 6a3 3 0 1 0-3 3a2.96 2.96 0 0 0 1.285-.3l2.3 2.3l-2.3 2.3A2.96 2.96 0 0 0 11 13a3 3 0 1 0 3 3a2.966 2.966 0 0 0-.3-1.285l2.3-2.3l2.3 2.3A2.966 2.966 0 0 0 18 16a3 3 0 1 0 3-3Zm0-8a1 1 0 1 1-1 1a1 1 0 0 1 1-1ZM10 6a1 1 0 1 1 1 1a1 1 0 0 1-1-1Zm1 11a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm10 0a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "data-backup": { "body": '<circle cx="7" cy="7" r="1" fill="currentColor"/><circle cx="7" cy="15" r="1" fill="currentColor"/><circle cx="7" cy="23" r="1" fill="currentColor"/><path fill="currentColor" d="M12 26H4v-6h8v-2H4v-6h18V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h8ZM4 4h16v6H4Z"/><path fill="currentColor" d="M28 17v2.413A6.996 6.996 0 1 0 22 30v-2a5 5 0 1 1 4.576-7H24v2h6v-6Z"/>' }, "data-base": { "body": '<path fill="currentColor" d="M24 3H8a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2Zm0 2v6H8V5ZM8 19v-6h16v6Zm0 8v-6h16v6Z"/><circle cx="11" cy="8" r="1" fill="currentColor"/><circle cx="11" cy="16" r="1" fill="currentColor"/><circle cx="11" cy="24" r="1" fill="currentColor"/>' }, "data-base-alt": { "body": '<path fill="currentColor" d="M7 8h5v2H7zm0 4h5v2H7zm0 4h5v2H7zm13-8h5v2h-5zm0 4h5v2h-5zm0 4h5v2h-5z"/><path fill="currentColor" d="M28 4H4a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2ZM4 6h11v22H4Zm13 22V6h11v22Z"/>' }, "data-bin": { "body": '<path fill="currentColor" d="M28 2h-8a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2zm0 2v7h-8V4zm0 9v6h-8v-6zm-8 15v-7h8v7zm-8-13h-2v-2H8v2H6v2h2v2h2v-2h2v-2z"/><path fill="currentColor" d="M16 6V4h-6a2.002 2.002 0 0 0-2 2v3.08a6.99 6.99 0 0 0 0 13.84V26a2.002 2.002 0 0 0 2 2h6v-2h-6v-3.08a6.99 6.99 0 0 0 0-13.84V6Zm-2 10a5 5 0 1 1-5-5a5.006 5.006 0 0 1 5 5Z"/>' }, "data-blob": { "body": '<path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM4 4v24h24V4Z"/><path fill="currentColor" d="M13 7h2v7h-2zM8 7h2v7H8zm14 7h-2a2.002 2.002 0 0 1-2-2V9a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v3a2.002 2.002 0 0 1-2 2zm-2-5v3h2V9zm2 9h2v7h-2zM8 18h2v7H8zm9 7h-2a2.002 2.002 0 0 1-2-2v-3a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v3a2.002 2.002 0 0 1-2 2zm-2-5v3h2v-3z"/>' }, "data-categorical": { "body": '<path fill="currentColor" d="M29 30H19a1 1 0 0 1-1-1V19a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1zm-9-2h8v-8h-8v8zM8 30c-3.308 0-6-2.692-6-6s2.692-6 6-6s6 2.692 6 6s-2.692 6-6 6zm0-10c-2.206 0-4 1.794-4 4s1.794 4 4 4s4-1.794 4-4s-1.794-4-4-4zm14-6H10a1 1 0 0 1-.857-1.515l6.002-10.003C15.338 2.16 15.669 2 16 2s.662.16.855.482l6.002 10.003A1 1 0 0 1 22 14zm-10.234-2h8.468L16 4.944L11.766 12z"/>' }, "data-center": { "body": '<path fill="currentColor" d="M28 10h-5V6a2.002 2.002 0 0 0-2-2H11a2.002 2.002 0 0 0-2 2v4H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V12a2.002 2.002 0 0 0-2-2ZM4 28V12h5v2H7v2h2v2H7v2h2v2H7v2h2v4Zm17 0H11V6h10Zm7 0h-5v-4h2v-2h-2v-2h2v-2h-2v-2h2v-2h-2v-2h5Z"/><path fill="currentColor" d="M14 8h4v2h-4zm0 4h4v2h-4zm0 4h4v2h-4z"/>' }, "data-check": { "body": '<path fill="currentColor" d="m23 27.18l-2.59-2.59L19 26l4 4l7-7l-1.41-1.41L23 27.18z"/><circle cx="11" cy="8" r="1" fill="currentColor"/><circle cx="11" cy="16" r="1" fill="currentColor"/><circle cx="11" cy="24" r="1" fill="currentColor"/><path fill="currentColor" d="M24 3H8a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h8v-2H8v-6h18V5a2 2 0 0 0-2-2Zm0 16H8v-6h16Zm0-8H8V5h16Z"/>' }, "data-class": { "body": '<path fill="currentColor" d="M26 16a3.961 3.961 0 0 0-2.02.566l-2.859-2.859l2.293-2.293a2 2 0 0 0 0-2.828l-6-6a2 2 0 0 0-2.828 0l-6 6a2 2 0 0 0 0 2.828l2.293 2.293l-2.859 2.859a4.043 4.043 0 1 0 1.414 1.414l2.859-2.859l2.293 2.293a1.977 1.977 0 0 0 .414.31V22h-3v8h8v-8h-3v-4.277a1.977 1.977 0 0 0 .414-.309l2.293-2.293l2.859 2.859A3.989 3.989 0 1 0 26 16ZM8 20a2 2 0 1 1-2-2a2.002 2.002 0 0 1 2 2Zm10 4v4h-4v-4h4Zm-2-8l-6-6l6-6l6 6Zm10 6a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "data-collection": { "body": '<circle cx="16" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M30 17v-2h-6.17l2.58-2.59L25 11l-5 5l5 5l1.41-1.41L23.83 17H30zm-15 6.83V30h2v-6.17l2.59 2.58L21 25l-5-5l-5 5l1.41 1.41L15 23.83zM7 11l-1.41 1.41L8.17 15H2v2h6.17l-2.58 2.59L7 21l5-5l-5-5zm10-2.83V2h-2v6.17l-2.59-2.58L11 7l5 5l5-5l-1.41-1.41L17 8.17z"/>' }, "data-connected": { "body": '<path fill="currentColor" d="M30 30h-6v-2h4V4h-4V2h6v28z"/><path fill="currentColor" d="M24.91 19.59a4.51 4.51 0 0 0-2.66-3.24a4.55 4.55 0 0 0-3.5 0a4.94 4.94 0 0 0-.64.35l-2.81-2.81a4.53 4.53 0 1 0-1.41 1.41l2.81 2.81a4.48 4.48 0 0 0-.61 3.3a4.51 4.51 0 0 0 2.66 3.24a4.55 4.55 0 0 0 3.5 0a4.51 4.51 0 0 0 2.66-3.24a4.65 4.65 0 0 0 0-1.82ZM11.5 14a2.5 2.5 0 1 1 2.5-2.5a2.5 2.5 0 0 1-2.5 2.5Z"/><path fill="currentColor" d="M8 30H2V2h6v2H4v24h4v2z"/>' }, "data-definition": { "body": '<circle cx="14" cy="14" r="2" fill="currentColor"/><path fill="currentColor" d="M20 30a.997.997 0 0 1-.707-.293L8.586 19A2.013 2.013 0 0 1 8 17.586V10a2.002 2.002 0 0 1 2-2h7.586A1.986 1.986 0 0 1 19 8.586l10.707 10.707a1 1 0 0 1 0 1.414l-9 9A.997.997 0 0 1 20 30ZM10 10v7.586l10 10L27.586 20l-10-10Z"/><path fill="currentColor" d="M12 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v8h-2V4H4v24h8Z"/>' }, "data-diode": { "body": '<path fill="currentColor" d="M30 15h-3V7h-2v8h-3V7h-2v7.826L7.524 7.148A1 1 0 0 0 6 8v7H2v2h4v7a1 1 0 0 0 1.524.852L20 17.174V25h2v-8h3v8h2v-8h3ZM8 22.21V9.79L18.092 16Z"/>' }, "data-enrichment": { "body": '<path fill="currentColor" d="M28 13h2v2h-2zm-4.222-8.203l1.414-1.415l1.414 1.415l-1.414 1.414zM15 0h2v2h-2zM6.808 6.234L5.394 4.819l1.414-1.414L8.222 4.82zM2 13h2v2H2zm11 17h6v2h-6zm-2-4h10v2H11zm5-22C10.5 4 6 8.5 6 14c0 4.4 2 6.3 3.5 7.6c1 .9 1.5 1.5 1.5 2.4h2c0-1.8-1.1-2.9-2.2-3.9C9.4 18.9 8 17.5 8 14c0-4.4 3.6-8 8-8s8 3.6 8 8c0 3.5-1.4 4.9-2.8 6.1c-1.1 1-2.2 2-2.2 3.9h2c0-.9.5-1.5 1.5-2.4C24 20.3 26 18.4 26 14c0-5.5-4.5-10-10-10z"/>' }, "data-enrichment-add": { "body": '<path fill="currentColor" d="M28 13h2v2h-2zm-4.222-8.203l1.414-1.415l1.414 1.415l-1.414 1.414zM15 0h2v2h-2zM6.808 6.234L5.394 4.819l1.414-1.414L8.222 4.82zM2 13h2v2H2zm18 0h-3v-3h-2v3h-3v2h3v3h2v-3h3zm-7 17h6v2h-6zm-2-4h10v2H11z"/><path fill="currentColor" d="M16 4C10.5 4 6 8.5 6 14c0 4.4 2 6.3 3.5 7.6c1 .9 1.5 1.5 1.5 2.4h2c0-1.8-1.1-2.9-2.2-3.9C9.4 18.9 8 17.5 8 14c0-4.4 3.6-8 8-8s8 3.6 8 8c0 3.5-1.4 4.9-2.8 6.1c-1.1 1-2.2 2-2.2 3.9h2c0-.9.5-1.5 1.5-2.4C24 20.3 26 18.4 26 14c0-5.5-4.5-10-10-10z"/>' }, "data-error": { "body": '<circle cx="11" cy="8" r="1" fill="currentColor"/><circle cx="11" cy="16" r="1" fill="currentColor"/><circle cx="11" cy="24" r="1" fill="currentColor"/><path fill="currentColor" d="M24 3H8a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h10v-2H8v-6h18V5a2 2 0 0 0-2-2Zm0 16H8v-6h16Zm0-8H8V5h16Z"/><path fill="currentColor" d="M29 24.415L27.586 23L25 25.587L22.414 23L21 24.415L23.586 27L21 29.586L22.414 31L25 28.414L27.586 31L29 29.586L26.414 27L29 24.415z"/>' }, "data-format": { "body": '<path fill="currentColor" d="M18 11h8v2h-8zM6 19h8v2H6zm4-3a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm12 14a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/><path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM4 4v24h24V4Z"/>' }, "data-player": { "body": '<path fill="currentColor" d="M28 24v2H15.816a2.983 2.983 0 0 0-5.632 0H4v-2H2v6h2v-2h6.184a2.983 2.983 0 0 0 5.632 0H28v2h2v-6zM13 7.5v8.999L21 12l-8-4.5z"/><path fill="currentColor" d="M16 22a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10Zm0-18a8 8 0 1 0 8 8a8.01 8.01 0 0 0-8-8Z"/>' }, "data-quality-definition": { "body": '<path fill="currentColor" d="m24.6 24.4l2.6 2.6l-2.6 2.6L26 31l4-4l-4-4zm-2.2 0L19.8 27l2.6 2.6L21 31l-4-4l4-4z"/><circle cx="11" cy="8" r="1" fill="currentColor"/><circle cx="11" cy="16" r="1" fill="currentColor"/><circle cx="11" cy="24" r="1" fill="currentColor"/><path fill="currentColor" d="M24 3H8c-1.1 0-2 .9-2 2v22c0 1.1.9 2 2 2h7v-2H8v-6h18V5c0-1.1-.9-2-2-2zm0 16H8v-6h16v6zm0-8H8V5h16v6z"/>' }, "data-reference": { "body": '<path fill="currentColor" d="M25 13V4h-2v2h-3v2h3v5h-3v2h8v-2h-3zM8.5 6A3.5 3.5 0 1 1 5 9.5A3.504 3.504 0 0 1 8.5 6m0-2A5.5 5.5 0 1 0 14 9.5A5.5 5.5 0 0 0 8.5 4zm15 16a3.5 3.5 0 1 1-3.5 3.5a3.504 3.504 0 0 1 3.5-3.5m0-2a5.5 5.5 0 1 0 5.5 5.5a5.5 5.5 0 0 0-5.5-5.5zM6 19v2h3.586L4 26.586L5.414 28L11 22.414V26h2v-7H6z"/>' }, "data-refinery": { "body": '<path fill="currentColor" d="M7 30a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5Zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3Z"/><path fill="currentColor" d="M24 26H14v-2h10v-7H8a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h10v2H8v7h16a2.002 2.002 0 0 1 2 2v7a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M28 12h-6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2Zm-6-8v6h6V4Z"/>' }, "data-refinery-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm24-8h-6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-6-8v6h6V4z"/><path fill="currentColor" d="M24 26h-8v-2h8v-7H8a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h10v2H8v7h16a2.002 2.002 0 0 1 2 2v7a2.002 2.002 0 0 1-2 2Z"/>' }, "data-regular": { "body": '<path fill="currentColor" d="M27 24c-.462 0-.895.113-1.286.3l-4.829-4.83A5.96 5.96 0 0 0 22 16c0-3.309-2.692-6-6-6c-1.294 0-2.49.416-3.471 1.115L7.7 6.286C7.887 5.895 8 5.462 8 5a3 3 0 1 0-3 3c.462 0 .895-.113 1.286-.3l4.829 4.83A5.96 5.96 0 0 0 10 16c0 3.309 2.692 6 6 6c1.294 0 2.49-.416 3.47-1.115l4.83 4.829c-.187.391-.3.824-.3 1.286a3 3 0 1 0 3-3Zm-11-4c-2.206 0-4-1.794-4-4s1.794-4 4-4s4 1.794 4 4s-1.794 4-4 4Z"/>' }, "data-set": { "body": '<path fill="currentColor" d="M25 13V4h-2v2h-3v2h3v5h-3v2h8v-2h-3zM8.5 6A3.5 3.5 0 1 1 5 9.5A3.5 3.5 0 0 1 8.5 6m0-2A5.5 5.5 0 1 0 14 9.5A5.5 5.5 0 0 0 8.5 4zm0 16A3.5 3.5 0 1 1 5 23.5A3.5 3.5 0 0 1 8.5 20m0-2a5.5 5.5 0 1 0 5.5 5.5A5.5 5.5 0 0 0 8.5 18zm15 2a3.5 3.5 0 1 1-3.5 3.5a3.5 3.5 0 0 1 3.5-3.5m0-2a5.5 5.5 0 1 0 5.5 5.5a5.5 5.5 0 0 0-5.5-5.5z"/>' }, "data-share": { "body": '<path fill="currentColor" d="M5 25v-9.172l-3.586 3.586L0 18l6-6l6 6l-1.414 1.414L7 15.828V25h12v2H7a2.002 2.002 0 0 1-2-2zm19-3h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2h-4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2zm4 6v-4h-4.002L24 28zM27 6v9.172l3.586-3.586L32 13l-6 6l-6-6l1.414-1.414L25 15.172V6H13V4h12a2.002 2.002 0 0 1 2 2zM2 6h6v2H2zm0-4h8v2H2z"/>' }, "data-structured": { "body": '<circle cx="9" cy="7" r="1" fill="currentColor"/><path fill="currentColor" d="M27 22.14V18a2 2 0 0 0-2-2h-8v-4h9a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h9v4H7a2 2 0 0 0-2 2v4.14a4 4 0 1 0 2 0V18h8v4h-3v8h8v-8h-3v-4h8v4.14a4 4 0 1 0 2 0ZM8 26a2 2 0 1 1-2-2a2 2 0 0 1 2 2Zm10-2v4h-4v-4ZM6 10V4h20v6Zm20 18a2 2 0 1 1 2-2a2 2 0 0 1-2 2Z"/>' }, "data-table": { "body": '<path fill="currentColor" d="M8 18h4v2H8zm6 0h4v2h-4zm-6-4h4v2H8zm6 8h4v2h-4zm6-8h4v2h-4zm0 8h4v2h-4z"/><path fill="currentColor" d="M27 3H5a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h22a2.002 2.002 0 0 0 2-2V5a2.002 2.002 0 0 0-2-2Zm0 2v4H5V5ZM5 27V11h22v16Z"/>' }, "data-table-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm16 2h4v2h-4zm-4-4h4v2h-4zm4-4h4v2h-4zM8 14h4v2H8z"/><path fill="currentColor" d="M27 3H5a2.003 2.003 0 0 0-2 2v11h2v-5h22v16H16v2h11a2.003 2.003 0 0 0 2-2V5a2.003 2.003 0 0 0-2-2Zm0 6H5V5h22Z"/>' }, "data-unstructured": { "body": '<path fill="currentColor" d="M6 24a2 2 0 1 1-2 2a2 2 0 0 1 2-2m0-2a4 4 0 1 0 4 4a4 4 0 0 0-4-4zM16 4a2 2 0 1 1-2 2a2 2 0 0 1 2-2m0-2a4 4 0 1 0 4 4a4 4 0 0 0-4-4zm10 2a2 2 0 1 1-2 2a2 2 0 0 1 2-2m0-2a4 4 0 1 0 4 4a4 4 0 0 0-4-4zm-8 22v4h-4v-4h4m2-2h-8v8h8z"/><path fill="currentColor" d="M27 22.14V17a2 2 0 0 0-2-2H7v-5h3V2H2v8h3v5a2 2 0 0 0 2 2h18v5.14a4 4 0 1 0 2 0ZM4 4h4v4H4Zm22 24a2 2 0 1 1 2-2a2 2 0 0 1-2 2Z"/>' }, "data-view": { "body": '<circle cx="22" cy="24" r="2" fill="currentColor"/><path fill="currentColor" d="M29.777 23.479A8.64 8.64 0 0 0 22 18a8.64 8.64 0 0 0-7.777 5.479L14 24l.223.521A8.64 8.64 0 0 0 22 30a8.64 8.64 0 0 0 7.777-5.479L30 24ZM22 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><circle cx="8" cy="8" r="1" fill="currentColor"/><circle cx="8" cy="16" r="1" fill="currentColor"/><circle cx="8" cy="24" r="1" fill="currentColor"/><path fill="currentColor" d="M5 21h7v-2H5v-6h16v3h2V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h7v-2H5ZM5 5h16v6H5Z"/>' }, "data-view-alt": { "body": '<circle cx="22" cy="24" r="2" fill="currentColor"/><path fill="currentColor" d="M29.777 23.479A8.64 8.64 0 0 0 22 18a8.64 8.64 0 0 0-7.777 5.479L14 24l.223.521A8.64 8.64 0 0 0 22 30a8.64 8.64 0 0 0 7.777-5.479L30 24zM22 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zM7 17h5v2H7zm0-5h12v2H7zm0-5h12v2H7z"/><path fill="currentColor" d="M22 2H4a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8v-2H4V4h18v11h2V4a2.006 2.006 0 0 0-2-2Z"/>' }, "data-vis-1": { "body": '<path fill="currentColor" d="M26 22a3.955 3.955 0 0 0-2.02.567l-3.813-3.814a4.965 4.965 0 0 0 0-5.506l2.547-2.547A3.028 3.028 0 1 0 21.3 9.286l-2.547 2.547a4.965 4.965 0 0 0-5.506 0L9.433 8.019A3.955 3.955 0 0 0 10 6a4 4 0 1 0-4 4a3.955 3.955 0 0 0 2.02-.567l3.813 3.814a4.965 4.965 0 0 0 0 5.506l-3.814 3.814A3.956 3.956 0 0 0 6 22a4 4 0 1 0 4 4a3.955 3.955 0 0 0-.567-2.02l3.814-3.813a4.969 4.969 0 0 0 1.753.732v3.285a3 3 0 1 0 2 0v-3.285a4.969 4.969 0 0 0 1.753-.732l3.814 3.814A3.955 3.955 0 0 0 22 26a4 4 0 1 0 4-4Zm-10-9a3 3 0 1 1-3 3a3.003 3.003 0 0 1 3-3ZM4 6a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Zm2 22a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm20 0a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2Z"/>' }, "data-vis-2": { "body": '<path fill="currentColor" d="M28 2H17a2.002 2.002 0 0 0-2 2v6H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h11a2.002 2.002 0 0 0 2-2v-6h11a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2Zm0 2v4H17V4ZM15 22H4v-4h11Zm2-12h11l.001 4H17Zm-2 2v4H4v-4ZM4 28v-4h11.001v4Zm13-8v-4h11.002v4Z"/>' }, "data-vis-3": { "body": '<path fill="currentColor" d="M28 3a2.991 2.991 0 0 0-2.816 2h-3.326a3.98 3.98 0 0 0-7.716 0H9.858A3.992 3.992 0 1 0 5 9.858v4.284a3.98 3.98 0 0 0 0 7.716v3.326a3 3 0 1 0 2 0v-3.326a3.978 3.978 0 0 0 1.673-.903l3.364 1.682A2.963 2.963 0 0 0 12 23a3.012 3.012 0 1 0 .922-2.157l-3.148-1.574A3.95 3.95 0 0 0 10 18a3.996 3.996 0 0 0-3-3.858V9.858A3.995 3.995 0 0 0 9.858 7h4.284a3.937 3.937 0 0 0 4.782 2.882l1.811 3.17a3.045 3.045 0 1 0 1.733-.998L20.689 8.94A3.984 3.984 0 0 0 21.858 7h3.326A2.995 2.995 0 1 0 28 3ZM8 18a2 2 0 1 1-2-2a2.002 2.002 0 0 1 2 2ZM6 8a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm10-2a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Z"/>' }, "data-vis-4": { "body": '<path fill="currentColor" d="M27 3H5a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h22a2.003 2.003 0 0 0 2-2V5a2.002 2.002 0 0 0-2-2Zm0 6H17V5h10ZM15 27h-4v-4h4Zm0-6h-4v-4h4Zm-6 0H5v-4h4Zm2-6v-4h10v4Zm0-6V5h4v4Zm12 2h4v4h-4ZM9 5v10H5V5ZM5 23h4v4H5Zm12 4V17h10.001l.001 10Z"/>' }, "data-volume": { "body": '<path fill="currentColor" d="M30 20h-4v2h4v2h-3a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h5v-8c0-1.103-.897-2-2-2zm0 8h-3v-2h3v2zm-6-6v-2h-3v-2h-2v2h-2v2h2v6c0 1.103.897 2 2 2h3v-2h-3v-6h3zm-10-2h-4v2h4v2h-3a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h5v-8c0-1.103-.897-2-2-2zm0 8h-3v-2h3v2zM5 16v4H2c-1.103 0-2 .897-2 2v6c0 1.103.897 2 2 2h5V16H5zm-3 6h3v6H2v-6zm2-8V5h7.586l4 4H28v8h2V9a2.002 2.002 0 0 0-2-2H16.414L13 3.586A1.987 1.987 0 0 0 11.586 3H4a2.002 2.002 0 0 0-2 2v9h2z"/>' }, "data-volume-alt": { "body": '<path fill="currentColor" d="M25 29c-1.654 0-3-1.346-3-3s1.346-3 3-3s3 1.346 3 3s-1.346 3-3 3Zm0-4a1.001 1.001 0 0 0 0 2a1.001 1.001 0 0 0 0-2Z"/><circle cx="20" cy="21" r="2" fill="currentColor"/><path fill="currentColor" d="M15 19c-1.654 0-3-1.346-3-3s1.346-3 3-3s3 1.346 3 3s-1.346 3-3 3Zm0-4a1.001 1.001 0 0 0 0 2a1.001 1.001 0 0 0 0-2Z"/><path fill="currentColor" d="M13 27H4a2.002 2.002 0 0 1-2-2V5a2.002 2.002 0 0 1 2-2h7.586c.53-.002 1.04.21 1.414.586L16.414 7H28a2.002 2.002 0 0 1 2 2v7h-2V9H15.586l-4-4H4v20h9v2Z"/>' }, "database-datastax": { "body": '<path fill="currentColor" d="m18.868 22.068l1.794-1.747a4.218 4.218 0 0 0 3.288 1.632c1.403 0 2-.528 2-1.38c0-.69-.413-1.126-1.471-1.264l-1.196-.161c-2.575-.322-4-1.449-4-3.633c0-2.323 1.816-3.795 4.552-3.795a5.722 5.722 0 0 1 4.691 1.886l-1.725 1.724a3.965 3.965 0 0 0-2.874-1.287c-1.265 0-1.817.506-1.817 1.242c0 .804.437 1.172 1.564 1.356l1.219.161c2.621.368 3.886 1.541 3.886 3.541c0 2.323-1.955 3.933-4.944 3.933a6.094 6.094 0 0 1-4.967-2.208zM4.24 7.95h5.84c4.186 0 6.922 2.69 6.922 8.025S14.266 24 10.082 24H4.24zm5.84 13.36c2.254 0 3.703-1.334 3.703-4.07v-2.53c0-2.736-1.449-4.07-3.702-4.07H7.276v10.67z"/>' }, "database-elastic": { "body": '<path fill="currentColor" d="m17.828 22.068l1.794-1.747a4.218 4.218 0 0 0 3.288 1.632c1.403 0 2-.528 2-1.38c0-.69-.414-1.126-1.472-1.264l-1.195-.161c-2.576-.322-4.001-1.449-4.001-3.633c0-2.323 1.816-3.795 4.553-3.795a5.722 5.722 0 0 1 4.69 1.886l-1.724 1.724a3.964 3.964 0 0 0-2.874-1.287c-1.265 0-1.817.506-1.817 1.242c0 .804.437 1.172 1.564 1.356l1.218.161c2.622.368 3.886 1.541 3.886 3.542c0 2.322-1.954 3.932-4.943 3.932a6.094 6.094 0 0 1-4.967-2.208zM5.248 24V7.95h10.577v2.69H8.283v3.886h6.668v2.69H8.283v4.094h7.542V24z"/>' }, "database-enterprise-db2": { "body": '<path fill="currentColor" d="M17.84 24V11.997h2.943v2h.115a3.312 3.312 0 0 1 3.357-2.277c2.46 0 3.84 1.702 3.84 4.691V24h-2.943v-7.29c0-1.701-.575-2.575-1.978-2.575c-1.218 0-2.391.644-2.391 1.932V24zM4.224 24V7.95h10.578v2.69H7.259v3.886h6.669v2.69H7.259v4.094h7.543V24z"/>' }, "database-etcd": { "body": '<path fill="currentColor" d="M20.944 20.942v-6.6h-1.77v-2.345h.92c.874 0 1.15-.414 1.15-1.242V8.708h2.644v3.289h2.46v2.345h-2.46v7.313h2.277V24h-2.116a2.778 2.778 0 0 1-3.105-3.058zM6.684 24V7.95h10.579v2.69H9.72v3.886h6.669v2.69H9.72v4.094h7.543V24z"/>' }, "database-mongodb": { "body": '<path fill="currentColor" d="M25.348 28.875c-4.047 0-5.588-1.058-5.588-2.828a2.212 2.212 0 0 1 2.139-2.3v-.253a1.973 1.973 0 0 1-1.54-2c0-1.242 1.057-1.863 2.206-2.116v-.092a3.623 3.623 0 0 1-2.184-3.495c0-2.438 1.725-4.07 4.967-4.07a6.672 6.672 0 0 1 2.092.299v-.39a1.534 1.534 0 0 1 1.702-1.748h1.863v2.253h-2.553v.322a3.592 3.592 0 0 1 1.863 3.334c0 2.415-1.702 4.024-4.967 4.024a7.366 7.366 0 0 1-1.84-.207a1.23 1.23 0 0 0-.85 1.081c0 .598.506.897 1.564.897h3.218c2.943 0 4.208 1.265 4.208 3.426c0 2.506-1.7 3.863-6.3 3.863zm1.495-4.737H22.75a1.473 1.473 0 0 0-.621 1.242c0 .92.69 1.471 2.53 1.471h1.471c1.909 0 2.76-.483 2.76-1.494c0-.76-.553-1.22-2.047-1.22zm.667-8.163v-.391c0-1.219-.759-1.84-2.162-1.84s-2.162.62-2.162 1.84v.39c0 1.196.76 1.84 2.162 1.84s2.162-.644 2.162-1.84zM2.234 7.95H5.66l4.116 7.841h.092l4.07-7.841h3.29V24h-2.876V12.48h-.091l-1.242 2.552l-3.289 6.07l-3.288-6.07l-1.241-2.552h-.093V24H2.234z"/>' }, "database-postgresql": { "body": '<path fill="currentColor" d="M22.98 28.875c-4.047 0-5.588-1.058-5.588-2.828a2.211 2.211 0 0 1 2.139-2.3v-.253a1.972 1.972 0 0 1-1.541-2c0-1.242 1.057-1.863 2.207-2.116v-.092a3.622 3.622 0 0 1-2.184-3.495c0-2.438 1.724-4.07 4.967-4.07a6.677 6.677 0 0 1 2.092.299v-.391a1.534 1.534 0 0 1 1.702-1.748h1.862v2.253h-2.552v.322a3.593 3.593 0 0 1 1.862 3.335c0 2.414-1.702 4.024-4.967 4.024a7.372 7.372 0 0 1-1.84-.207a1.23 1.23 0 0 0-.85 1.08c0 .599.506.897 1.563.897h3.22c2.943 0 4.208 1.265 4.208 3.427c0 2.506-1.702 3.863-6.3 3.863zm1.494-4.737h-4.093a1.474 1.474 0 0 0-.621 1.242c0 .92.69 1.472 2.53 1.472h1.47c1.91 0 2.76-.483 2.76-1.495c0-.76-.551-1.22-2.046-1.22zm.667-8.163v-.391c0-1.219-.759-1.84-2.161-1.84s-2.162.62-2.162 1.84v.39c0 1.196.759 1.84 2.162 1.84s2.16-.644 2.16-1.84zM4.603 24V7.95h7.22c2.967 0 4.76 2 4.76 4.967c0 2.99-1.794 4.967-4.76 4.967H7.639V24zm3.036-8.738h3.909a1.689 1.689 0 0 0 1.885-1.817v-1.058a1.672 1.672 0 0 0-1.885-1.793h-3.91z"/>' }, "database-rabbit": { "body": '<path fill="currentColor" d="M17.943 20.735c0-2.46 1.863-3.68 5.128-3.68h2.047v-.873c0-1.334-.667-2.116-2.23-2.116a3.125 3.125 0 0 0-2.737 1.518l-1.748-1.564a5.054 5.054 0 0 1 4.691-2.3c3.242 0 4.967 1.54 4.967 4.277v5.657h1.196V24h-1.633a2.184 2.184 0 0 1-2.23-2.07h-.138c-.39 1.54-1.701 2.345-3.495 2.345c-2.438 0-3.818-1.402-3.818-3.54zm7.175-.322v-1.587h-1.886c-1.54 0-2.3.529-2.3 1.472v.39c0 .966.667 1.45 1.817 1.45c1.311 0 2.369-.598 2.369-1.725zM6.972 24H3.936V7.95h7.244c2.92 0 4.737 1.932 4.737 4.967a4.424 4.424 0 0 1-2.989 4.553L16.216 24h-3.38l-2.99-6.186H6.972zm3.909-8.738a1.689 1.689 0 0 0 1.886-1.817v-1.058a1.672 1.672 0 0 0-1.886-1.793H6.97v4.668z"/>' }, "database-redis": { "body": '<path fill="currentColor" d="M25.716 22H25.6a3.371 3.371 0 0 1-3.312 2.276c-3.012 0-4.69-2.276-4.69-6.3c0-4.001 1.678-6.255 4.69-6.255a3.305 3.305 0 0 1 3.312 2.254h.115v-6.99h2.943V24h-2.943zm0-2.116v-3.817c0-1.173-1.081-1.932-2.484-1.932a2.556 2.556 0 0 0-2.552 2.829v2.07a2.537 2.537 0 0 0 2.552 2.805c1.403 0 2.484-.713 2.484-1.955zM6.558 24H3.522V7.95h7.244c2.92 0 4.737 1.932 4.737 4.967a4.424 4.424 0 0 1-2.99 4.553L15.802 24h-3.38l-2.99-6.186H6.558zm3.909-8.738a1.689 1.689 0 0 0 1.885-1.817v-1.058a1.672 1.672 0 0 0-1.885-1.793h-3.91v4.668z"/>' }, "datastore": { "body": '<circle cx="23" cy="23" r="1" fill="currentColor"/><path fill="currentColor" d="M8 22h12v2H8z"/><circle cx="23" cy="9" r="1" fill="currentColor"/><path fill="currentColor" d="M8 8h12v2H8z"/><path fill="currentColor" d="M26 14a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2v4H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2h-2v-4ZM6 6h20v6H6Zm20 20H6v-6h20Zm-4-8H10v-4h12Z"/>' }, "db2-buffer-pool": { "body": '<path fill="currentColor" d="m26.338 31l-1.736-1l2.288-4H23l3.993-7l1.737 1l-2.284 4h3.89l-3.998 7zM8 14h4v2H8zm12 0h4v2h-4zM8 18h4v2H8zm6 0h4v2h-4zm0 4h4v2h-4z"/><path fill="currentColor" d="M5 11h22v5h2V5c0-1.103-.897-2-2-2H5c-1.103 0-2 .897-2 2v22c0 1.103.897 2 2 2h15v-2H5V11Zm22-6v4H5V5h22Z"/>' }, "db2-data-sharing-group": { "body": '<path fill="currentColor" d="M8 28v-6.17l2.59 2.58L12 23l-5-5l-5 5l1.41 1.41L6 21.83V28c0 1.103.897 2 2 2h9v-2H8zm17-11c-2.85 0-5 1.29-5 3v7c0 1.71 2.15 3 5 3s5-1.29 5-3v-7c0-1.71-2.15-3-5-3zm0 2c1.936 0 3 .751 3 1s-1.064 1-3 1s-3-.751-3-1s1.064-1 3-1zm0 9c-1.936 0-3-.751-3-1v-4.58c.826.363 1.85.58 3 .58s2.174-.217 3-.58V27c0 .249-1.064 1-3 1zm3.59-20.41L26 10.17V4c0-1.103-.897-2-2-2h-9v2h9v6.17l-2.59-2.58L20 9l5 5l5-5l-1.41-1.41zM7 15c2.85 0 5-1.29 5-3V5c0-1.71-2.15-3-5-3S2 3.29 2 5v7c0 1.71 2.15 3 5 3zM7 4c1.936 0 3 .751 3 1S8.936 6 7 6s-3-.751-3-1s1.064-1 3-1zM4 7.42c.826.363 1.85.58 3 .58s2.174-.217 3-.58V12c0 .249-1.064 1-3 1s-3-.751-3-1V7.42z"/>' }, "db2-database": { "body": '<path fill="currentColor" d="M16 3C10.702 3 5 4.252 5 7v18c0 2.748 5.702 4 11 4s11-1.252 11-4V7c0-2.748-5.702-4-11-4Zm0 2c5.798 0 8.795 1.434 8.997 2c-.202.566-3.2 2-8.997 2c-5.841 0-8.84-1.456-9-1.982v-.005C7.16 6.456 10.159 5 16 5ZM7 9.428C9.128 10.495 12.643 11 16 11s6.872-.505 9-1.572v3.56c-.16.556-3.159 2.012-9 2.012c-5.85 0-8.85-1.46-9-2V9.428Zm0 6C9.128 16.495 12.643 17 16 17s6.872-.505 9-1.572v3.56c-.16.556-3.159 2.012-9 2.012c-5.85 0-8.85-1.46-9-2v-3.572ZM16 27c-5.85 0-8.85-1.46-9-2v-3.572C9.128 22.495 12.643 23 16 23s6.872-.505 9-1.572v3.56c-.16.556-3.159 2.012-9 2.012Z"/>' }, "debug": { "body": '<path fill="currentColor" d="m29.83 20l.34-2l-5.17-.85v-4.38l5.06-1.36l-.51-1.93l-4.83 1.29A9 9 0 0 0 20 5V2h-2v2.23a8.81 8.81 0 0 0-4 0V2h-2v3a9 9 0 0 0-4.71 5.82L2.46 9.48L2 11.41l5 1.36v4.38L1.84 18l.32 2L7 19.18a8.9 8.9 0 0 0 .82 3.57l-4.53 4.54l1.42 1.42l4.19-4.2a9 9 0 0 0 14.2 0l4.19 4.2l1.42-1.42l-4.54-4.54a8.9 8.9 0 0 0 .83-3.57ZM15 25.92A7 7 0 0 1 9 19v-6h6ZM9.29 11a7 7 0 0 1 13.42 0ZM23 19a7 7 0 0 1-6 6.92V13h6Z"/>' }, "decision-tree": { "body": '<path fill="currentColor" d="M30 12V4h-8v3h-4a2.002 2.002 0 0 0-2 2v6h-6v-3H2v8h8v-3h6v6a2.002 2.002 0 0 0 2 2h4v3h8v-8h-8v3h-4V9h4v3ZM8 18H4v-4h4Zm16 4h4v4h-4Zm0-16h4v4h-4Z"/>' }, "delivery": { "body": '<path fill="currentColor" d="M4 16h12v2H4zm-2-5h10v2H2z"/><path fill="currentColor" d="m29.919 16.606l-3-7A.999.999 0 0 0 26 9h-3V7a1 1 0 0 0-1-1H6v2h15v12.556A3.992 3.992 0 0 0 19.142 23h-6.284a4 4 0 1 0 0 2h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-7a.997.997 0 0 0-.081-.394ZM9 26a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm14-15h2.34l2.144 5H23Zm0 15a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm5-3h-1.142A3.995 3.995 0 0 0 23 20v-2h5Z"/>' }, "delivery-add": { "body": '<path fill="currentColor" d="M12 6H8V2H6v4H2v2h4v4h2V8h4V6z"/><path fill="currentColor" d="m29.919 16.606l-3-7A.999.999 0 0 0 26 9h-3V7a1 1 0 0 0-1-1h-7v2h6v12.556A3.992 3.992 0 0 0 19.142 23h-6.284a3.98 3.98 0 0 0-7.716 0H4v-9H2v10a1 1 0 0 0 1 1h2.142a3.98 3.98 0 0 0 7.716 0h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-7a.997.997 0 0 0-.081-.394ZM9 26a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2Zm14-15h2.34l2.144 5H23Zm0 15a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm5-3h-1.142A3.995 3.995 0 0 0 23 20v-2h5Z"/>' }, "delivery-parcel": { "body": '<path fill="currentColor" d="m29.482 8.624l-10-5.5a1 1 0 0 0-.964 0l-10 5.5a1 1 0 0 0 0 1.752L18 15.591V26.31l-3.036-1.67L14 26.391l4.518 2.485a.998.998 0 0 0 .964 0l10-5.5A1 1 0 0 0 30 22.5v-13a1 1 0 0 0-.518-.876ZM19 5.142L26.925 9.5L19 13.858L11.075 9.5Zm9 16.767l-8 4.4V15.59l8-4.4Z"/><path fill="currentColor" d="M10 16H2v-2h8zm2 8H4v-2h8zm2-4H6v-2h8z"/>' }, "delivery-truck": { "body": '<path fill="currentColor" d="m29.92 16.61l-3-7A1 1 0 0 0 26 9h-3V7a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v17a1 1 0 0 0 1 1h2.14a4 4 0 0 0 7.72 0h6.28a4 4 0 0 0 7.72 0H29a1 1 0 0 0 1-1v-7a1 1 0 0 0-.08-.39ZM23 11h2.34l2.14 5H23ZM9 26a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm10.14-3h-6.28a4 4 0 0 0-7.72 0H4V8h17v12.56A4 4 0 0 0 19.14 23ZM23 26a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm5-3h-1.14A4 4 0 0 0 23 20v-2h5Z"/>' }, "denominate": { "body": '<path d="M25 23h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3z" fill="currentColor"/><path d="M18 18a4 4 0 1 0 4-4a4 4 0 0 0-4 4zm6 0a2 2 0 1 1-2-2a2 2 0 0 1 2 2z" fill="currentColor"/><path d="M15 15.415L13.586 14L11 16.587L8.414 14L7 15.415L9.586 18L7 20.586L8.414 22L11 19.414L13.586 22L15 20.586L12.414 18L15 15.415z" fill="currentColor"/><path d="M14 26H4V6h7.172l3.414 3.414l.586.586H28v8h2v-8a2 2 0 0 0-2-2H16l-3.414-3.414A2 2 0 0 0 11.172 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10z" fill="currentColor"/>', "hidden": true }, "departure": { "body": '<path fill="currentColor" d="M2 28h28v2H2zM13.48 5.15l5.69 8.14l.8 1.15l1.35-.36l4.52-1.21a2.13 2.13 0 0 1 1.12 0A1.84 1.84 0 0 1 28.23 14A1.87 1.87 0 0 1 27 16.45l-18.71 5a1.78 1.78 0 0 1-1 0A1.87 1.87 0 0 1 6 20.12l-.25-.93L5 16.38l-.74-2.74l1.44-.39l2.3 3.1l.81 1.08l1.31-.35l2.8-.75l1.94-.52l-.52-1.93l-2.26-8.36l1.4-.37M14.16 3a1.06 1.06 0 0 0-.5 0l-3.09.83A1 1 0 0 0 9.89 5l2.5 9.36l-2.81.75l-2.73-3.61a1 1 0 0 0-.52-.36a1.06 1.06 0 0 0-.5 0L2.72 12A1 1 0 0 0 2 13.16l1 3.74l.75 2.8l.25.94a3.87 3.87 0 0 0 2.74 2.74a3.91 3.91 0 0 0 2 0l18.7-5a3.84 3.84 0 0 0 0-7.44a4.27 4.27 0 0 0-2.16 0l-4.51 1.21l-6.07-8.74a1 1 0 0 0-.54-.41z"/>' }, "deploy": { "body": '<path fill="currentColor" d="m23 2l-6 6l1.415 1.402L22 5.818V28H6V12H4v16a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2V5.815l3.586 3.587L29 8Z"/><path fill="currentColor" d="M16 24h-4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2Zm-4-6v4h4v-4Z"/>' }, "deploy-rules": { "body": '<path fill="currentColor" d="m18 4l-6 6l1.41 1.41L17 7.83V20h2V7.83l3.59 3.58L24 10l-6-6zM8 18h7v2H8zm0 4h16v2H8zm0 4h16v2H8z"/>' }, "deployment-pattern": { "body": '<path fill="currentColor" d="M8 20H4.73A1.974 1.974 0 0 0 3 19a2 2 0 0 0 0 4a1.974 1.974 0 0 0 1.73-1H8zM29 9a1.974 1.974 0 0 0-1.73 1H24v2h3.27A2 2 0 1 0 29 9z"/><path fill="currentColor" d="M25.414 5L21 .586L16.586 5L20 8.414V18h2V8.414zM21 3.414L22.586 5L21 6.586L19.414 5zm-9 20.172V14h-2v9.586L6.586 27L11 31.414L15.414 27zM9.414 27L11 25.414L12.586 27L11 28.586z"/><path fill="currentColor" d="M18 10H8.414L5 6.586L.586 11L5 15.414L8.414 12H18ZM5 12.586L3.414 11L5 9.414L6.586 11Z"/><path fill="currentColor" d="M13 3a2 2 0 0 0-4 0a1.973 1.973 0 0 0 1 1.73V8h2V4.73A1.973 1.973 0 0 0 13 3zm9 24.27V24h-2v3.27a2 2 0 1 0 2 0z"/><path fill="currentColor" d="M31.414 21L27 16.586L23.586 20H14v2h9.586L27 25.414ZM27 19.414L28.586 21L27 22.586L25.414 21Z"/>' }, "deployment-policy": { "body": '<path fill="currentColor" d="M19 16v-2h7.171l-2.293-2.293l1.414-1.414L30 15l-4.708 4.707l-1.414-1.414L26.171 16H19zm-2-4h-2V5.828l-2.293 2.293l-1.414-1.414L16 2l4.707 4.707l-1.414 1.414L17 5.828V12zm0 8.101V18a4.005 4.005 0 0 0-4-4H5.828l2.293-2.293l-1.414-1.414L2 15l4.707 4.707l1.414-1.414L5.828 16H13a2.002 2.002 0 0 1 2 2v2.101a5 5 0 1 0 2 0zM16 28a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3z"/>' }, "deployment-unit-data": { "body": '<path fill="currentColor" d="M16 23h-4V9h4a4.005 4.005 0 0 1 4 4v6a4.004 4.004 0 0 1-4 4Zm-2-2h2a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2h-2Z"/>' }, "deployment-unit-execution": { "body": '<path fill="currentColor" d="M20 11V9h-8v14h8v-2h-6v-4h5v-2h-5v-4h6z"/>' }, "deployment-unit-installation": { "body": '<path fill="currentColor" d="M12 11h3v10h-3v2h8v-2h-3V11h3V9h-8v2z"/>' }, "deployment-unit-presentation": { "body": '<path fill="currentColor" d="M14 23h-2V9h6a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2h-4Zm0-7h4v-5h-4Z"/>' }, "deployment-unit-technical-data": { "body": '<path fill="currentColor" d="M21 23h-4V9h4a4.005 4.005 0 0 1 4 4v6a4.004 4.004 0 0 1-4 4zm-2-2h2a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2h-2zM7 11h3v12h2V11h3V9H7v2z"/>' }, "deployment-unit-technical-execution": { "body": '<path fill="currentColor" d="M25 11V9h-8v14h8v-2h-6v-4h5v-2h-5v-4h6zM7 11h3v12h2V11h3V9H7v2z"/>' }, "deployment-unit-technical-installation": { "body": '<path fill="currentColor" d="M17 11h3v10h-3v2h8v-2h-3V11h3V9h-8v2zM7 11h3v12h2V11h3V9H7v2z"/>' }, "deployment-unit-technical-presentation": { "body": '<path fill="currentColor" d="M19 23h-2V9h6a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2h-4zm0-7h4v-5.002h-4zM7 11h3v12h2V11h3V9H7v2z"/>' }, "desk-adjustable": { "body": '<path fill="currentColor" d="M17 27.172V22h-2v5.172l-2.586-2.586L11 26l5 5l5-5l-1.414-1.414L17 27.172z"/><path fill="currentColor" d="M30 12H2v8h2v10h2V20h20v10h2V20h2zm-2 6H4v-4h24zM15 4.828V10h2V4.828l2.586 2.586L21 6l-5-5l-5 5l1.414 1.414L15 4.828z"/>' }, "development": { "body": '<path fill="currentColor" d="M8 4v4H4V4h4M2 2v8h8V2zm16 5v4h-4V7h4m-6-2v8h8V5zM8 16v4H4v-4h4m-6-2v8h8v-8z"/><path fill="currentColor" d="M22 10v6h-6v6h-6v8h20V10Zm-4 8h4v4h-4Zm-2 10h-4v-4h4Zm6 0h-4v-4h4Zm6 0h-4v-4h4Zm0-6h-4v-4h4Zm-4-6v-4h4v4Z"/>' }, "devices": { "body": '<path fill="currentColor" d="M10 30H4a2 2 0 0 1-2-2V16a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2ZM4 16v12h6V16Z"/><path fill="currentColor" d="M28 4H6a2 2 0 0 0-2 2v6h2V6h22v14H14v2h2v4h-2v2h9v-2h-5v-4h10a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/>' }, "dew-point": { "body": '<path fill="currentColor" d="M24 10a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm-9.5 26A5.496 5.496 0 0 1 9 24.52c0-3.443 4.344-21.014 4.53-21.76a1 1 0 0 1 1.94 0c.186.746 4.53 18.317 4.53 21.76A5.496 5.496 0 0 1 14.5 30zm0-22.756C13.04 13.38 11 22.409 11 24.52a3.5 3.5 0 0 0 7 0c0-2.111-2.04-11.14-3.5-17.276z"/>' }, "dew-point-filled": { "body": '<path fill="currentColor" d="M24 10a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm-9.5 26A5.496 5.496 0 0 1 9 24.52c0-3.443 4.344-21.014 4.53-21.76a1 1 0 0 1 1.94 0c.186.746 4.53 18.317 4.53 21.76A5.496 5.496 0 0 1 14.5 30z"/>' }, "diagram": { "body": '<path fill="currentColor" d="M13 30a11 11 0 0 1 0-22a1 1 0 0 1 1 1v9h9a1 1 0 0 1 1 1a11 11 0 0 1-11 11Zm-1-19.94A9 9 0 1 0 21.94 20H14a2 2 0 0 1-2-2Z"/><path fill="currentColor" d="M28 14h-9a2 2 0 0 1-2-2V3a1 1 0 0 1 1-1a11 11 0 0 1 11 11a1 1 0 0 1-1 1Zm-9-2h7.94A9 9 0 0 0 19 4.06Z"/>' }, "diagram-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4z"/><path fill="currentColor" d="M15 28v-2a9.013 9.013 0 0 0 8.945-8H16a2.002 2.002 0 0 1-2-2V8.055A9.013 9.013 0 0 0 6 17H4A11.012 11.012 0 0 1 15 6a1 1 0 0 1 1 1v9h9a1 1 0 0 1 1 1a11.012 11.012 0 0 1-11 11Z"/><path fill="currentColor" d="M29.006 14h-9.011A1.996 1.996 0 0 1 18 12V3a1.008 1.008 0 0 1 1.02-1A11.012 11.012 0 0 1 30 12.98a1.004 1.004 0 0 1-.994 1.02ZM20 12h7.945A9.018 9.018 0 0 0 20 4.055Z"/>' }, "dicom-6000": { "body": '<path d="M13 11H7a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3z" fill="currentColor"/><path d="M10 10a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z" fill="currentColor"/><path d="M20 4h10v2H20z" fill="currentColor"/><path d="M20 8h10v2H20z" fill="currentColor"/><path d="M20 12h6v2h-6z" fill="currentColor"/><path d="M5 30H3a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h3v2H3v2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2zm-2-4v2h2v-2z" fill="currentColor"/><path d="M13 30h-2a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2zm-2-8v6h2v-6z" fill="currentColor"/><path d="M21 30h-2a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2zm-2-8v6h2v-6z" fill="currentColor"/><path d="M29 30h-2a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2zm-2-8v6h2v-6z" fill="currentColor"/>', "hidden": true }, "dicom-overlay": { "body": '<path d="M28 6v20H4V6h24m0-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z" fill="currentColor"/><path d="M6 8h10v2H6z" fill="currentColor"/><path d="M6 12h10v2H6z" fill="currentColor"/><path d="M6 16h6v2H6z" fill="currentColor"/>', "hidden": true }, "direct-link": { "body": '<path fill="currentColor" d="m20.413 14.584l-7.997-7.997a2.002 2.002 0 0 0-2.832 0l-7.997 7.997a2.002 2.002 0 0 0 0 2.832l3.291 3.292L3 22.585L4.414 24l1.879-1.878l3.291 3.291a2.002 2.002 0 0 0 2.832 0l2.256-2.256l-1.416-1.415l-2.258 2.257l-7.997-7.997l7.997-8.001l8.001 8.001L17.5 17.5l1.415 1.415l1.498-1.499a2.002 2.002 0 0 0 0-2.832Z"/><path fill="currentColor" d="m30.413 14.584l-3.291-3.292L29 9.415L27.586 8l-1.878 1.878l-3.292-3.291a2.002 2.002 0 0 0-2.832 0l-2.256 2.256l1.415 1.414l2.255-2.256l8.001 8.001l-8.001 7.997l-7.997-7.997l1.5-1.501l-1.416-1.416l-1.498 1.499a2.002 2.002 0 0 0 0 2.832l7.997 7.997a2.002 2.002 0 0 0 2.832 0l7.997-7.997a2.002 2.002 0 0 0 0-2.832Z"/>' }, "direction-bear-right-01": { "body": '<path fill="currentColor" d="M12 4v2h6.586l-6.536 6.536a6.954 6.954 0 0 0-2.05 4.95V28h2V17.485a4.968 4.968 0 0 1 1.464-3.535L20 7.414V14h2V4Z"/>' }, "direction-bear-right-01-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-6 14h-2V9.414l-6.536 6.536A4.968 4.968 0 0 0 12 19.485V26h-2v-6.515a6.954 6.954 0 0 1 2.05-4.95L18.586 8H12V6h10Z"/><path fill="none" d="M22 16h-2V9.414l-6.536 6.536A4.968 4.968 0 0 0 12 19.485V26h-2v-6.515a6.954 6.954 0 0 1 2.05-4.95L18.586 8H12V6h10Z"/>' }, "direction-bear-right-02": { "body": '<path fill="currentColor" d="M16 4v2h6.586l-6.536 6.536a6.954 6.954 0 0 0-2.05 4.95V28h2V17.485a4.968 4.968 0 0 1 1.464-3.535L24 7.414V14h2V4ZM6 7.414L7.414 6L13 11.586L11.586 13z"/>' }, "direction-bear-right-02-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2ZM6 7.414L7.414 6L14 12.586L12.586 14ZM26 16h-2V9.414l-6.536 6.536A4.968 4.968 0 0 0 16 19.485V26h-2v-6.515a6.954 6.954 0 0 1 2.05-4.95L22.586 8H16V6h10Z"/><path fill="none" d="M26 6v10h-2V9.414l-6.536 6.536A4.968 4.968 0 0 0 16 19.485V26h-2v-6.515a6.954 6.954 0 0 1 2.05-4.95L22.586 8H16V6Zm-12 6.586L7.414 6L6 7.414L12.586 14Z"/>' }, "direction-curve": { "body": '<path fill="currentColor" d="m17 4l-7 7l1.414 1.414L16 7.828v6.769a3.01 3.01 0 0 1-.657 1.874l-2.247 2.808A5.02 5.02 0 0 0 12 22.403V28h2v-5.597a3.01 3.01 0 0 1 .657-1.874l2.247-2.808A5.02 5.02 0 0 0 18 14.597V7.828l4.586 4.586L24 11Z"/>' }, "direction-curve-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-5.414 11.414L18 8.828v5.769a5.02 5.02 0 0 1-1.096 3.124l-2.247 2.808A3.01 3.01 0 0 0 14 22.403V27h-2v-4.597a5.02 5.02 0 0 1 1.096-3.124l2.247-2.808A3.01 3.01 0 0 0 16 14.597V8.828l-4.586 4.586L10 12l7-7l7 7Z"/><path fill="none" d="M22.586 13.414L18 8.828v5.769a5.02 5.02 0 0 1-1.096 3.124l-2.247 2.808A3.01 3.01 0 0 0 14 22.403V27h-2v-4.597a5.02 5.02 0 0 1 1.096-3.124l2.247-2.808A3.01 3.01 0 0 0 16 14.597V8.828l-4.586 4.586L10 12l7-7l7 7Z"/>' }, "direction-fork": { "body": '<path fill="currentColor" d="M6 13V7.414l9 9V28h2V16.414l9-9V13h2V4h-9v2h5.586L16 14.586L7.414 6H13V4H4v9h2z"/>' }, "direction-fork-filled": { "body": '<path fill="none" d="M8 14V9.414l7 7V26h2v-9.586l7-7V14h2V6h-8v2h4.586L16 14.586L9.414 8H14V6H6v8h2z"/><path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-2 12h-2V9.414l-7 7V26h-2v-9.586l-7-7V14H6V6h8v2H9.414L16 14.586L22.586 8H18V6h8Z"/>' }, "direction-loop-left": { "body": '<path fill="currentColor" d="M16 20h2v8h-2z"/><path fill="currentColor" d="M23 4a7.008 7.008 0 0 0-7 7v3h2v-3a5 5 0 1 1 5 5H5.828l4.586-4.586L9 10l-7 7l7 7l1.414-1.414L5.828 18H23a7 7 0 0 0 0-14Z"/>' }, "direction-loop-left-filled": { "body": '<path fill="none" d="M16 18h2v8h-2ZM4 15l7 7l1.414-1.414L7.828 16H21a5 5 0 1 0-5-5v1h2v-1a3 3 0 1 1 3 3H7.828l4.586-4.586L11 8Z"/><path fill="currentColor" d="M2 4v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Zm14 14h2v8h-2ZM4 15l7-7l1.414 1.414L7.828 14H21a3 3 0 1 0-3-3v1h-2v-1a5 5 0 1 1 5 5H7.828l4.586 4.586L11 22Z"/>' }, "direction-loop-right": { "body": '<path fill="currentColor" d="M14 20h2v8h-2z"/><path fill="currentColor" d="M9 4a7.008 7.008 0 0 1 7 7v3h-2v-3a5 5 0 1 0-5 5h17.172l-4.586-4.586L23 10l7 7l-7 7l-1.414-1.414L26.172 18H9A7 7 0 0 1 9 4Z"/>' }, "direction-loop-right-filled": { "body": '<path fill="none" d="M16 26h-2v-8h2Zm5-18l-1.414 1.414L24.172 14H11a3 3 0 1 1 3-3v1h2v-1a5 5 0 1 0-5 5h13.172l-4.586 4.586L21 22l7-7Z"/><path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2ZM16 26h-2v-8h2Zm5-4l-1.414-1.414L24.172 16H11a5 5 0 1 1 5-5v1h-2v-1a3 3 0 1 0-3 3h13.172l-4.586-4.586L21 8l7 7Z"/>' }, "direction-merge": { "body": '<path fill="currentColor" d="M17.878 15.465A2.982 2.982 0 0 1 17 13.343V7.828l4.586 4.586L23 11l-7-7l-7 7l1.414 1.414L15 7.828v5.515a2.98 2.98 0 0 1-.878 2.121l-2.658 2.657A4.968 4.968 0 0 0 10 21.657V28h2v-6.343a2.98 2.98 0 0 1 .878-2.121l2.658-2.657a5.002 5.002 0 0 0 .464-.566a5.002 5.002 0 0 0 .464.566l2.658 2.656A2.982 2.982 0 0 1 20 21.657V28h2v-6.343a4.968 4.968 0 0 0-1.464-3.536Z"/>' }, "direction-merge-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2ZM17.878 15.465l2.658 2.656A4.968 4.968 0 0 1 22 21.657V26h-2v-4.343a2.982 2.982 0 0 0-.878-2.122l-2.658-2.656a5.002 5.002 0 0 1-.464-.566a5.002 5.002 0 0 1-.464.566l-2.658 2.657a2.98 2.98 0 0 0-.878 2.12V26h-2v-4.343a4.968 4.968 0 0 1 1.464-3.536l2.658-2.657a2.98 2.98 0 0 0 .878-2.12V8.827l-4.586 4.586L9 12l7-7l7 7l-1.414 1.414L17 8.828v4.515a2.982 2.982 0 0 0 .878 2.122Z"/><path fill="none" d="m17.878 15.465l2.658 2.656A4.968 4.968 0 0 1 22 21.657V26h-2v-4.343a2.982 2.982 0 0 0-.878-2.122l-2.658-2.656a5.002 5.002 0 0 1-.464-.566a5.002 5.002 0 0 1-.464.566l-2.658 2.657a2.98 2.98 0 0 0-.878 2.12V26h-2v-4.343a4.968 4.968 0 0 1 1.464-3.536l2.658-2.657a2.98 2.98 0 0 0 .878-2.12V8.827l-4.586 4.586L9 12l7-7l7 7l-1.414 1.414L17 8.828v4.515a2.982 2.982 0 0 0 .878 2.122Z"/>' }, "direction-right-01": { "body": '<path fill="currentColor" d="m19 4l-1.414 1.414L22.172 10H10a2 2 0 0 0-2 2v16h2V12h12.172l-4.586 4.586L19 18l7-7Z"/>' }, "direction-right-01-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-9 16l-1.414-1.414L22.172 12H10v14H8V12a2 2 0 0 1 2-2h12.172l-4.586-4.586L19 4l7 7Z"/><path fill="none" d="m19 18l-1.414-1.414L22.172 12H10v14H8V12a2 2 0 0 1 2-2h12.172l-4.586-4.586L19 4l7 7Z"/>' }, "direction-right-02": { "body": '<path fill="currentColor" d="m19 8l-1.414 1.414L22.172 14H10a2 2 0 0 0-2 2v12h2V16h12.172l-4.586 4.586L19 22l7-7zM8 4h2v8H8z"/>' }, "direction-right-02-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2ZM8 6h2v8H8Zm11 18l-1.414-1.414L22.172 18H10v8H8v-8a2 2 0 0 1 2-2h12.172l-4.586-4.586L19 10l7 7Z"/><path fill="none" d="M8 6h2v8H8Zm11 18l-1.414-1.414L22.172 18H10v8H8v-8a2 2 0 0 1 2-2h12.172l-4.586-4.586L19 10l7 7Z"/>' }, "direction-rotary-first-right": { "body": '<path fill="currentColor" d="M26 18v6.586L15.871 14.457A5.924 5.924 0 0 0 17 11a6 6 0 1 0-7 5.91V28h2V16.91a5.957 5.957 0 0 0 2.455-1.04L24.585 26H18v2h10V18Zm-15-3a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/>' }, "direction-rotary-first-right-filled": { "body": '<circle cx="11" cy="11" r="3" fill="currentColor"/><path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-2 24H16v-2h6.586l-8.833-8.833a4.968 4.968 0 0 1-1.753.732V26h-2V15.899a5.011 5.011 0 1 1 5.167-2.146L24 22.586V16h2Z"/><path fill="none" d="M11 14a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Zm13 2v6.586l-8.833-8.833A4.996 4.996 0 1 0 10 15.899V26h2V15.899a4.968 4.968 0 0 0 1.753-.732L22.586 24H16v2h10V16Z"/>' }, "direction-rotary-right": { "body": '<path fill="currentColor" d="m22 4l-1.414 1.414L25.172 10H16.91A5.997 5.997 0 1 0 10 16.91V28h2V16.91A6.006 6.006 0 0 0 16.91 12h8.262l-4.586 4.586L22 18l7-7ZM11 15a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/>' }, "direction-rotary-right-filled": { "body": '<circle cx="11" cy="11" r="3" fill="currentColor"/><path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-8 16l-1.414-1.414L23.172 12h-7.273A5.014 5.014 0 0 1 12 15.899V26h-2V15.899A5 5 0 1 1 15.899 10h7.273l-4.586-4.586L20 4l7 7Z"/><path fill="none" d="m20 4l-1.414 1.414L23.172 10h-7.273A5 5 0 1 0 10 15.899V26h2V15.899A5.014 5.014 0 0 0 15.899 12h7.273l-4.586 4.586L20 18l7-7Zm-9 10a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/>' }, "direction-rotary-straight": { "body": '<path fill="currentColor" d="M17 12.09V5.828l4.586 4.586L23 9l-7-7l-7 7l1.414 1.414L15 5.828v6.262a5.992 5.992 0 0 0 0 11.82V28h2v-4.09a5.992 5.992 0 0 0 0-11.82ZM16 22a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/>' }, "direction-rotary-straight-filled": { "body": '<circle cx="16" cy="19" r="3" fill="currentColor"/><path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-6.414 10.414L17 7.828v6.273a5 5 0 0 1 0 9.798V28h-2v-4.101a5 5 0 0 1 0-9.798V7.828l-4.586 4.586L9 11l7-7l7 7Z"/><path fill="none" d="M21.586 12.414L23 11l-7-7l-7 7l1.414 1.414L15 7.828v6.273a5 5 0 0 0 0 9.798V28h2v-4.101a5 5 0 0 0 0-9.798V7.828ZM19 19a3 3 0 1 1-3-3a3.003 3.003 0 0 1 3 3Z"/>' }, "direction-sharp-turn": { "body": '<path fill="currentColor" d="M26 18v6.586L7.707 6.293A1 1 0 0 0 6 7v21h2V9.414L24.586 26H18v2h10V18Z"/>' }, "direction-sharp-turn-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-2 24H16v-2h6.586L8 9.414V26H6V7a1 1 0 0 1 1.707-.707L24 22.586V16h2Z"/><path fill="none" d="M26 26H16v-2h6.586L8 9.414V26H6V7a1 1 0 0 1 1.707-.707L24 22.586V16h2Z"/>' }, "direction-straight": { "body": '<path fill="currentColor" d="m16 4l-7 7l1.414 1.414L15 7.828V28h2V7.828l4.586 4.586L23 11l-7-7z"/>' }, "direction-straight-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-6.414 11.414L17 8.828V26h-2V8.828l-4.586 4.586L9 12l7-7l7 7Z"/><path fill="none" d="M21.586 13.414L17 8.828V26h-2V8.828l-4.586 4.586L9 12l7-7l7 7Z"/>' }, "direction-straight-right": { "body": '<path fill="currentColor" d="m28 16l-7-7l-1.414 1.414L24.172 15H4v2h20.172l-4.586 4.586L21 23l7-7z"/>' }, "direction-straight-right-filled": { "body": '<path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-8 21l-1.414-1.414L23.172 17H6v-2h17.172l-4.586-4.586L20 9l7 7Z"/><path fill="none" d="m20 23l-1.414-1.414L23.172 17H6v-2h17.172l-4.586-4.586L20 9l7 7Z"/>' }, "direction-u-turn": { "body": '<path fill="currentColor" d="M26.586 19.586L22 24.172V12a8 8 0 0 0-16 0v16h2V12a6 6 0 0 1 12 0v12.172l-4.586-4.586L14 21l7 7l7-7Z"/>' }, "direction-u-turn-filled": { "body": '<path fill="none" d="M26.586 17.586L22 22.172V14a8 8 0 0 0-16 0v12h2V14a6 6 0 0 1 12 0v8.172l-4.586-4.586L14 19l7 7l7-7Z"/><path fill="currentColor" d="M28 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm-7 24l-7-7l1.414-1.414L20 22.172V14a6 6 0 0 0-12 0v12H6V14a8 8 0 0 1 16 0v8.172l4.586-4.586L28 19Z"/>' }, "directory-domain": { "body": '<path fill="currentColor" d="M28 26h-9.184A2.996 2.996 0 0 0 17 24.184V19h7a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2H8a2.002 2.002 0 0 0-2 2v13a2.002 2.002 0 0 0 2 2h7v5.184A2.996 2.996 0 0 0 13.184 26H4v2h9.184a2.982 2.982 0 0 0 5.632 0H28Zm-4-14H8V9h16Zm0-8v3H8V4ZM8 14h16v3H8Zm8 14a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "distribute-horizontal-center": { "body": '<path fill="currentColor" d="M24 10h-1V2h-2v8h-1a2.002 2.002 0 0 0-2 2v8a2.002 2.002 0 0 0 2 2h1v8h2v-8h1a2.002 2.002 0 0 0 2-2v-8a2.002 2.002 0 0 0-2-2zm0 10h-4v-8h4zM12 6h-1V2H9v4H8a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h1v4h2v-4h1a2.002 2.002 0 0 0 2-2V8a2.002 2.002 0 0 0-2-2zm0 18H8V8h4z"/>' }, "distribute-horizontal-left": { "body": '<path fill="currentColor" d="M28 22h-4a2.002 2.002 0 0 1-2-2v-8a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2zm-4-10v8h4v-8zM18 2h2v28h-2zm-6 24H8a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2zM8 8v16h4V8zM2 2h2v28H2z"/>' }, "distribute-horizontal-right": { "body": '<path fill="currentColor" d="M28 2h2v28h-2zm-4 20h-4a2.002 2.002 0 0 1-2-2v-8a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2zm-4-10h-.002L20 20h4v-8zM12 2h2v28h-2zM8 26H4a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2zM4 8h-.002L4 24h4V8z"/>' }, "distribute-vertical-bottom": { "body": '<path fill="currentColor" d="M2 28h28v2H2zm22-2H8a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm0-6.001L8 20v4h16zM2 12h28v2H2zm18-2h-8a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm0-6.001L12 4v4h8z"/>' }, "distribute-vertical-center": { "body": '<path fill="currentColor" d="M30 21h-4v-1a2.002 2.002 0 0 0-2-2H8a2.002 2.002 0 0 0-2 2v1H2v2h4v1a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2v-1h4zm-6 3H8v-4l16-.001zm6-15h-8V8a2.002 2.002 0 0 0-2-2h-8a2.002 2.002 0 0 0-2 2v1H2v2h8v1a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-1h8zm-10 3h-8V8l8-.001z"/>' }, "distribute-vertical-top": { "body": '<path fill="currentColor" d="M24 30H8a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM8 24v4h16v-4zm-6-6h28v2H2zm18-4h-8a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-8-6v4h8V8zM2 2h28v2H2z"/>' }, "dna": { "body": '<path d="M22 2V1h-2v1a7.04 7.04 0 0 1-.08 1h-7.84A7.04 7.04 0 0 1 12 2V1h-2v1c0 3.755 1.97 5.604 4.1 7c-2.13 1.396-4.1 3.245-4.1 7s1.97 5.604 4.1 7c-2.13 1.396-4.1 3.245-4.1 7v1h2v-1a7.04 7.04 0 0 1 .08-1h7.84a7.04 7.04 0 0 1 .08 1v1h2v-1c0-3.755-1.97-5.604-4.1-7c2.13-1.396 4.1-3.245 4.1-7s-1.97-5.604-4.1-7C20.03 7.604 22 5.755 22 2zm-2 14a7.04 7.04 0 0 1-.08 1h-7.84a6.321 6.321 0 0 1 0-2h7.84a7.04 7.04 0 0 1 .08 1zm-.756 11h-6.488A8.908 8.908 0 0 1 16 24.17A8.908 8.908 0 0 1 19.244 27zM16 21.83A8.908 8.908 0 0 1 12.756 19h6.488A8.908 8.908 0 0 1 16 21.83zM19.244 13h-6.488A8.908 8.908 0 0 1 16 10.17A8.908 8.908 0 0 1 19.244 13zM16 7.83A8.908 8.908 0 0 1 12.756 5h6.488A8.908 8.908 0 0 1 16 7.83z" fill="currentColor"/>', "hidden": true }, "dns-services": { "body": '<path fill="currentColor" d="M20 20h10v2H20zm0 4h6v2h-6z"/><path fill="currentColor" d="M30 17v-1a13.987 13.987 0 1 0-10.77 13.625l-.46-1.946A12.042 12.042 0 0 1 16 28c-.19 0-.375-.019-.563-.027A20.304 20.304 0 0 1 12.026 17Zm-2.042-2h-5.983a24.284 24.284 0 0 0-2.774-10.559A12.023 12.023 0 0 1 27.96 15ZM16.564 4.027A20.304 20.304 0 0 1 19.974 15h-7.948a20.304 20.304 0 0 1 3.411-10.973C15.625 4.02 15.81 4 16 4s.375.019.563.027Zm-3.764.414A24.284 24.284 0 0 0 10.025 15H4.04A12.023 12.023 0 0 1 12.8 4.441Zm0 23.118A12.023 12.023 0 0 1 4.042 17h5.983a24.284 24.284 0 0 0 2.774 10.559Z"/>' }, "doc": { "body": '<path fill="currentColor" d="M30 23h-6a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h6v2h-6v10h6zm-12 0h-4a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v10a2.002 2.002 0 0 1-2 2zm-4-12v10h4V11zM6 23H2V9h4a4.005 4.005 0 0 1 4 4v6a4.005 4.005 0 0 1-4 4zm-2-2h2a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2H4z"/>' }, "document": { "body": '<path fill="currentColor" d="m25.7 9.3l-7-7c-.2-.2-.4-.3-.7-.3H8c-1.1 0-2 .9-2 2v24c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V10c0-.3-.1-.5-.3-.7zM18 4.4l5.6 5.6H18V4.4zM24 28H8V4h8v6c0 1.1.9 2 2 2h6v16z"/><path fill="currentColor" d="M10 22h12v2H10zm0-6h12v2H10z"/>' }, "document-add": { "body": '<path fill="currentColor" d="M30 24h-4v-4h-2v4h-4v2h4v4h2v-4h4v-2z"/><path fill="currentColor" d="M16 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v4h2v-6a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8Zm2-23.6l5.6 5.6H18Z"/>' }, "document-attachment": { "body": '<path fill="currentColor" d="M26 30H11a2.002 2.002 0 0 1-2-2v-6h2v6h15V6h-9V4h9a2.002 2.002 0 0 1 2 2v22a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M17 10h7v2h-7zm-1 5h8v2h-8zm-1 5h9v2h-9zm-6-1a5.005 5.005 0 0 1-5-5V3h2v11a3 3 0 0 0 6 0V5a1 1 0 0 0-2 0v10H8V5a3 3 0 0 1 6 0v9a5.005 5.005 0 0 1-5 5z"/>' }, "document-audio": { "body": '<path fill="currentColor" d="M29 31a.999.999 0 0 1-.625-.22L23.65 27H20a1 1 0 0 1-1-1v-5a1 1 0 0 1 1-1h3.65l4.726-3.78A1 1 0 0 1 30 17v13a1 1 0 0 1-1 1Zm-8-6h3a1 1 0 0 1 .625.22L28 27.92v-8.84l-3.376 2.7A1 1 0 0 1 24 22h-3Z"/><path fill="currentColor" d="M16 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8Zm2-23.6l5.6 5.6H18Z"/>' }, "document-blank": { "body": '<path fill="currentColor" d="m25.7 9.3l-7-7A.908.908 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h16a2.006 2.006 0 0 0 2-2V10a.908.908 0 0 0-.3-.7ZM18 4.4l5.6 5.6H18ZM24 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6Z"/>' }, "document-download": { "body": '<path fill="currentColor" d="m30 25l-1.414-1.414L26 26.172V18h-2v8.172l-2.586-2.586L20 25l5 5l5-5z"/><path fill="currentColor" d="M18 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h10Zm0-23.6l5.6 5.6H18Z"/>' }, "document-epdf": { "body": '<path fill="currentColor" d="M28 26v-4a2.002 2.002 0 0 0-2-2h-4a2.002 2.002 0 0 0-2 2v6a2.008 2.008 0 0 0 2 2h5v-2h-5v-2Zm-6-4h4v2h-4Z"/><path fill="currentColor" d="m25.707 9.293l-7-7A1 1 0 0 0 18 2H8a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h8v-2H8V4h8v6a2.002 2.002 0 0 0 2 2h6v4h2v-6a1 1 0 0 0-.293-.707ZM18 4.414L23.586 10H18Z"/>' }, "document-export": { "body": '<path fill="currentColor" d="M13 21h13.17l-2.58 2.59L25 25l5-5l-5-5l-1.41 1.41L26.17 19H13v2z"/><path fill="currentColor" d="M22 14v-4a1 1 0 0 0-.29-.71l-7-7A1 1 0 0 0 14 2H4a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2h-2v2H4V4h8v6a2 2 0 0 0 2 2h6v2Zm-8-4V4.41L19.59 10Z"/>' }, "document-horizontal": { "body": '<path fill="currentColor" d="M28 6H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V8a2.002 2.002 0 0 0-2-2Zm-8 18h-8v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1Zm8 0h-6v-2a3 3 0 0 0-3-3h-6a3 3 0 0 0-3 3v2H4V8h24Z"/><path fill="currentColor" d="M16 18a4 4 0 1 0-4-4a4 4 0 0 0 4 4Zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2Z"/>' }, "document-import": { "body": '<path fill="currentColor" d="M28 19H14.83l2.58-2.59L16 15l-5 5l5 5l1.41-1.41L14.83 21H28v-2z"/><path fill="currentColor" d="M24 14v-4a1 1 0 0 0-.29-.71l-7-7A1 1 0 0 0 16 2H6a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2h-2v2H6V4h8v6a2 2 0 0 0 2 2h6v2Zm-8-4V4.41L21.59 10Z"/>' }, "document-multiple-01": { "body": '<path fill="currentColor" d="M2 6h2v20H2zm4-2h2v24H6zm8 18h12v2H14zm0-6h12v2H14z"/><path fill="currentColor" d="m29.7 9.3l-7-7c-.2-.2-.4-.3-.7-.3H12c-1.1 0-2 .9-2 2v24c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V10c0-.3-.1-.5-.3-.7zM22 4.4l5.6 5.6H22V4.4zM28 28H12V4h8v6c0 1.1.9 2 2 2h6v16z"/>' }, "document-multiple-02": { "body": '<path fill="currentColor" d="M18 31H6c-1.1 0-2-.9-2-2V12h2v17h12v2z"/><path fill="currentColor" d="M22 27H10c-1.1 0-2-.9-2-2V8h2v17h12v2z"/><path fill="currentColor" d="M16 16h8v2h-8z"/><path fill="currentColor" d="m27.7 9.3l-7-7c-.2-.2-.4-.3-.7-.3h-6c-1.1 0-2 .9-2 2v17c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-.3-.1-.5-.3-.7zM20 4.4l5.6 5.6H20V4.4zM26 21H14V4h4v6c0 1.1.9 2 2 2h6v9z"/>' }, "document-pdf": { "body": '<path fill="currentColor" d="M30 18v-2h-6v10h2v-4h3v-2h-3v-2h4zm-11 8h-4V16h4a3.003 3.003 0 0 1 3 3v4a3.003 3.003 0 0 1-3 3zm-2-2h2a1.001 1.001 0 0 0 1-1v-4a1.001 1.001 0 0 0-1-1h-2zm-6-8H6v10h2v-3h3a2.003 2.003 0 0 0 2-2v-3a2.002 2.002 0 0 0-2-2zm-3 5v-3h3l.001 3z"/><path fill="currentColor" d="M22 14v-4a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 14 2H4a2.006 2.006 0 0 0-2 2v24a2 2 0 0 0 2 2h16v-2H4V4h8v6a2.006 2.006 0 0 0 2 2h6v2Zm-8-4V4.4l5.6 5.6Z"/>' }, "document-preliminary": { "body": '<path fill="currentColor" d="M24 30a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4zM8 22h8v2H8zm0-6h10v2H8z"/><path fill="currentColor" d="M16 28H6V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 16 2H6a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h10Zm0-23.6l5.6 5.6H16Z"/>' }, "document-protected": { "body": '<path fill="currentColor" d="M28 21v-3a4 4 0 0 0-8 0v3a2.002 2.002 0 0 0-2 2v5a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-5a2.002 2.002 0 0 0-2-2Zm-6-3a2 2 0 0 1 4 0v3h-4Zm-2 10v-5h8v5Z"/><path fill="currentColor" d="m23.499 9.085l-6.792-6.792A1 1 0 0 0 16 2H6a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8v-2H6V4h8v6a2.002 2.002 0 0 0 2 2h6.292a1.708 1.708 0 0 0 1.207-2.915ZM16 10V4.414L21.585 10Z"/>' }, "document-security": { "body": '<path fill="currentColor" d="m23 30l-2.139-1.013A5.022 5.022 0 0 1 18 24.467V18h10v6.468a5.022 5.022 0 0 1-2.861 4.52Zm-3-10v4.468a3.012 3.012 0 0 0 1.717 2.71l1.283.608l1.283-.607A3.012 3.012 0 0 0 26 24.468V20Z"/><path fill="currentColor" d="M16 28H6V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 16 2H6a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h10Zm0-23.6l5.6 5.6H16Z"/>' }, "document-sentiment": { "body": '<path fill="currentColor" d="M18.303 16a2.662 2.662 0 0 0-1.908.806l-.393.405l-.397-.405a2.662 2.662 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L16.002 25l4.209-4.298a2.8 2.8 0 0 0 0-3.896A2.662 2.662 0 0 0 18.303 16Z"/><path fill="currentColor" d="m25.7 9.3l-7-7A.908.908 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h16a2.006 2.006 0 0 0 2-2V10a.908.908 0 0 0-.3-.7ZM18 4.4l5.6 5.6H18ZM24 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6Z"/>' }, "document-signed": { "body": '<path fill="currentColor" d="M19.414 30H15v-4.414l5.034-5.034A4.607 4.607 0 0 1 20 20a5 5 0 1 1 4.448 4.966ZM17 28h1.586l5.206-5.206l.54.124a3.035 3.035 0 1 0-2.25-2.25l.124.54L17 26.414Z"/><circle cx="25" cy="20" r="1" fill="currentColor"/><path fill="currentColor" d="M8 6h12v2H8zm0 4h12v2H8zm0 4h6v2H8zm0 10h4v2H8z"/><path fill="currentColor" d="M12 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v9h-2V4H6v24h6Z"/>' }, "document-sketch": { "body": '<path fill="currentColor" d="m26 20l1.427 1.903L23 26.963l-4.427-5.06L20 20h6m1-2h-8l-3 4l7 8l7-8l-3-4Z"/><path fill="currentColor" d="M16 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8Zm2-23.6l5.6 5.6H18Z"/>' }, "document-subtract": { "body": '<path fill="currentColor" d="M20 24h10v2H20z"/><path fill="currentColor" d="M16 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v8h2V10a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8Zm2-23.6l5.6 5.6H18Z"/>' }, "document-tasks": { "body": '<path fill="currentColor" d="m22 27.18l-2.59-2.59L18 26l4 4l8-8l-1.41-1.41L22 27.18z"/><path fill="currentColor" d="M15 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v6h2v-8a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h7Zm3-23.6l5.6 5.6H18Z"/>' }, "document-unknown": { "body": '<circle cx="9" cy="28.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M10 25H8v-4h2a2 2 0 0 0 0-4H8a2.002 2.002 0 0 0-2 2v.5H4V19a4.005 4.005 0 0 1 4-4h2a4 4 0 0 1 0 8Z"/><path fill="currentColor" d="m27.7 9.3l-7-7A.908.908 0 0 0 20 2H10a2.006 2.006 0 0 0-2 2v8h2V4h8v6a2.006 2.006 0 0 0 2 2h6v16H14v2h12a2.006 2.006 0 0 0 2-2V10a.91.91 0 0 0-.3-.7ZM20 10V4.4l5.6 5.6Z"/>' }, "document-unprotected": { "body": '<path fill="currentColor" d="m23.499 9.085l-6.792-6.792A1 1 0 0 0 16 2H6a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8v-2H6V4h8v6a2.002 2.002 0 0 0 2 2h6.292a1.708 1.708 0 0 0 1.207-2.915ZM16 10V4.414L21.585 10Z"/><path fill="currentColor" d="M28 21h-6v-3a2 2 0 0 1 4 0h2a4 4 0 0 0-8 0v3a2.002 2.002 0 0 0-2 2v5a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-5a2.002 2.002 0 0 0-2-2Zm-8 7v-5h8v5Z"/>' }, "document-vertical": { "body": '<path fill="currentColor" d="M16 14a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2Z"/><path fill="currentColor" d="M24 2H8a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2ZM12 24v-6a.945.945 0 0 1 1-1h6a.945.945 0 0 1 1 1v6h-2v4h-4v-4Zm8 4v-2a2.006 2.006 0 0 0 2-2v-6a2.946 2.946 0 0 0-3-3h-6a2.946 2.946 0 0 0-3 3v6a2.006 2.006 0 0 0 2 2v2H8V4h16v24Z"/>' }, "document-video": { "body": '<path fill="currentColor" d="m30 19l-4 3.2V20a2.002 2.002 0 0 0-2-2h-8a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-2.2l4 3.2Zm-14 7v-6h8l.002 6Z"/><path fill="currentColor" d="M12 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h4Zm6-23.6l5.6 5.6H18Z"/>' }, "document-view": { "body": '<circle cx="22" cy="24" r="2" fill="currentColor"/><path fill="none" d="M22 28a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.003 2.003 0 0 0-2-2Z"/><path fill="currentColor" d="M29.777 23.479A8.64 8.64 0 0 0 22 18a8.64 8.64 0 0 0-7.777 5.479L14 24l.223.521A8.64 8.64 0 0 0 22 30a8.64 8.64 0 0 0 7.777-5.479L30 24ZM22 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="M12 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v4h2v-6a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h4Zm6-23.6l5.6 5.6H18Z"/>' }, "document-word-processor": { "body": '<path fill="currentColor" d="m28.3 20l-.909 8.611L26 20h-2l-1.391 8.611L21.7 20H20l1.36 10h2.28L25 21.626L26.36 30h2.28L30 20h-1.7z"/><path fill="currentColor" d="m25.707 9.293l-7-7A1 1 0 0 0 18 2H8a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h8v-2H8V4h8v6a2.002 2.002 0 0 0 2 2h6v4h2v-6a1 1 0 0 0-.293-.707ZM18 4.414L23.586 10H18Z"/>' }, "document-word-processor-reference": { "body": '<path fill="currentColor" d="m28.3 20l-.909 8.611L26 20h-2l-1.391 8.611L21.7 20H20l1.36 10h2.28L25 21.626L26.36 30h2.28L30 20h-1.7zM4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zM25.707 9.293l-7-7A1 1 0 0 0 18 2H8a2.002 2.002 0 0 0-2 2v12h2V4h8v6a2.002 2.002 0 0 0 2 2h6v4h2v-6a1 1 0 0 0-.293-.707zM18 10V4.414L23.586 10z"/>' }, "dog-walker": { "body": '<path fill="currentColor" d="M20 20h2v10h-2zM4 23h2v7H4z"/><path fill="currentColor" d="M16 30h-2v-4a1.001 1.001 0 0 0-1-1h-2v5H9v-7h4a3.003 3.003 0 0 1 3 3zm-8.5-8A3.504 3.504 0 0 1 4 18.5V17H2v-2h4v3.5a1.5 1.5 0 0 0 3 0V15h4v2h-2v1.5A3.504 3.504 0 0 1 7.5 22zM27 10h-5.646a2.986 2.986 0 0 0-2.786 1.886l-1.442 3.605l-3.607 4.51l1.562 1.25l3.7-4.626l1.645-3.996a.995.995 0 0 1 .928-.629H27a1 1 0 0 1 1 1v7h-3v10h2v-8h1a2.002 2.002 0 0 0 2-2v-7a3.003 3.003 0 0 0-3-3zm-3-1a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/>' }, "dot-mark": { "body": '<circle cx="16" cy="16" r="8" fill="currentColor"/>' }, "double-integer": { "body": '<path fill="currentColor" d="M17 8V6h-4V2h-2v4H8V2H6v4H2v2h4v3H2v2h4v4h2v-4h3v4h2v-4h4v-2h-4V8zm-6 3H8V8h3zm19 10v-2h-4v-4h-2v4h-3v-4h-2v4h-4v2h4v3h-4v2h4v4h2v-4h3v4h2v-4h4v-2h-4v-3zm-6 3h-3v-3h3z"/>' }, "down-to-bottom": { "body": '<path fill="currentColor" d="M16 18L6 8l1.4-1.4l8.6 8.6l8.6-8.6L26 8zM4 22h24v2H4z"/>' }, "download": { "body": '<path fill="currentColor" d="M26 24v4H6v-4H4v4a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-4zm0-10l-1.41-1.41L17 20.17V2h-2v18.17l-7.59-7.58L6 14l10 10l10-10z"/>' }, "download-study": { "body": '<path d="M30 25l-1.414-1.414L26 26.172V18h-2v8.172l-2.586-2.586L20 25l5 5l5-5z" fill="currentColor"/><path d="M19 14h4v2h-4z" fill="currentColor"/><path d="M19 10h7v2h-7z" fill="currentColor"/><path d="M9 18h6a3 3 0 0 1 3 3v2h-2v-2a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v2H6v-2a3 3 0 0 1 3-3z" fill="currentColor"/><path d="M16 13a4 4 0 1 0-4 4a4 4 0 0 0 4-4zm-2 0a2 2 0 1 1-2-2a2 2 0 0 1 2 2z" fill="currentColor"/><path d="M18 26H4V6h24v10h2V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h14z" fill="currentColor"/>', "hidden": true }, "drag-horizontal": { "body": '<path fill="currentColor" d="M12 4v11H5.83l2.58-2.59L7 11l-5 5l5 5l1.41-1.41L5.83 17H12v11h2V4h-2zm13 7l-1.41 1.41L26.17 15H20V4h-2v24h2V17h6.17l-2.58 2.59L25 21l5-5l-5-5z"/>' }, "drag-vertical": { "body": '<path fill="currentColor" d="M4 20h11v6.17l-2.59-2.58L11 25l5 5l5-5l-1.41-1.41L17 26.17V20h11v-2H4v2zm7-13l1.41 1.41L15 5.83V12H4v2h24v-2H17V5.83l2.59 2.58L21 7l-5-5l-5 5z"/>' }, "draggable": { "body": '<path fill="currentColor" d="M10 6h4v4h-4zm8 0h4v4h-4zm-8 8h4v4h-4zm8 0h4v4h-4zm-8 8h4v4h-4zm8 0h4v4h-4z"/>' }, "draw": { "body": '<path fill="currentColor" d="M19.14 28a3.42 3.42 0 0 1-2.42-5.85L21.86 17a1.42 1.42 0 1 0-2-2L13 21.85a3.5 3.5 0 0 1-4.85 0a3.43 3.43 0 0 1 0-4.84l8.58-8.58a1.42 1.42 0 1 0-2-2L6.41 14.7L5 13.3L13.29 5a3.43 3.43 0 0 1 4.84 4.85l-8.57 8.57a1.42 1.42 0 0 0 0 2a1.45 1.45 0 0 0 2 0l6.86-6.86a3.43 3.43 0 1 1 4.85 4.84l-5.15 5.15a1.42 1.42 0 0 0 2 2l4.44-4.43L26 22.56L21.56 27a3.38 3.38 0 0 1-2.42 1Z"/>' }, "drill-back": { "body": '<path fill="currentColor" d="m6 22l1.414-1.414L3.828 17H12v-2H3.828l3.586-3.586L6 10l-6 6l6 6z"/><path fill="currentColor" d="M16 10a5.981 5.981 0 0 0-4.243 1.757L16 16l-4.243 4.243A6 6 0 1 0 16 10Z"/><path fill="currentColor" d="M16 2a13.958 13.958 0 0 0-9.895 4.105l1.414 1.414a12 12 0 1 1 0 16.962l-1.414 1.414A13.997 13.997 0 1 0 16 2Z"/>' }, "drill-down": { "body": '<path fill="currentColor" d="m10 6l1.414-1.414L15 8.172V0h2v8.172l3.586-3.586L22 6l-6 6l-6-6z"/><path fill="currentColor" d="M22 16a5.981 5.981 0 0 0-1.757-4.243L16 16l-4.243-4.243A6 6 0 1 0 22 16Z"/><path fill="currentColor" d="M30 16a13.958 13.958 0 0 0-4.105-9.895l-1.414 1.414a12 12 0 1 1-16.962 0L6.105 6.105A13.997 13.997 0 1 0 30 16Z"/>' }, "drill-through": { "body": '<path fill="currentColor" d="M16 30A14.016 14.016 0 0 1 2 16h2A12 12 0 1 0 16 4V2a14 14 0 0 1 0 28Z"/><path fill="currentColor" d="M4 12v-2h4.586L2 3.414L3.414 2L10 8.586V4h2v8H4zm12-2v6h-6a6 6 0 1 0 6-6z"/>' }, "drink-01": { "body": '<path fill="currentColor" d="m23 10.414l3-3L24.586 6l-3.293 3.293A1 1 0 0 0 21 10v4h-7.074l1.143 16h8.862l1.143-16H23v-3.586ZM22.07 28h-5.14l-.856-12h6.852l-.857 12Z"/><path fill="currentColor" d="M15 1h-5a1 1 0 0 0-1 1v7.37c-1.067.606-3 2.178-3 5.63v14a1 1 0 0 0 1 1h5v-2H8V15c0-3.754 3-4.28 3-4.28V3h3v7h2V2a1 1 0 0 0-1-1Z"/>' }, "drink-02": { "body": '<path fill="currentColor" d="m23 10.414l3-3L24.586 6l-3.293 3.293A1 1 0 0 0 21 10v4h-7.074l1.143 16h8.862l1.143-16H23v-3.586ZM22.07 28h-5.14l-.856-12h6.852l-.857 12Z"/><path fill="currentColor" d="M16 7.051V4a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3.051A5.93 5.93 0 0 0 6 11.5V29a1 1 0 0 0 1 1h5v-2H8V11.5c0-2.356 2-3.48 2-3.48V5h4v3.02s2 1.124 2 3.48v.5h2v-.5a5.93 5.93 0 0 0-2-4.449Z"/>' }, "driver-analysis": { "body": '<circle cx="22" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M30 15h-2.09A6.005 6.005 0 0 0 22 10l-.022.001A9.983 9.983 0 0 0 4.051 15H2v2h2.05a9.983 9.983 0 0 0 17.928 4.999L22 22a6.005 6.005 0 0 0 5.91-5H30ZM14 8a7.977 7.977 0 0 1 5.738 2.446A6.015 6.015 0 0 0 16.09 15H6.07A8.007 8.007 0 0 1 14 8Zm0 16a8.007 8.007 0 0 1-7.93-7h10.02a6.015 6.015 0 0 0 3.649 4.554A7.977 7.977 0 0 1 14 24Zm8-4a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/>' }, "drone": { "body": '<path fill="currentColor" d="M7 12a5 5 0 1 1 5-5h-2a3 3 0 1 0-3 3zm18 0v-2a3 3 0 1 0-3-3h-2a5 5 0 1 1 5 5zM7 30a5 5 0 0 1 0-10v2a3 3 0 1 0 3 3h2a5.005 5.005 0 0 1-5 5zm18 0a5.005 5.005 0 0 1-5-5h2a3 3 0 1 0 3-3v-2a5 5 0 0 1 0 10z"/><path fill="currentColor" d="M20 18.586v-5.172l5.707-5.707a1 1 0 1 0-1.414-1.414l-4.5 4.5a3.973 3.973 0 0 0-7.587 0l-4.499-4.5a1 1 0 0 0-1.414 0a1 1 0 0 0 0 1.414L12 13.414v5.172l-5.707 5.707a1 1 0 0 0 0 1.414a1 1 0 0 0 1.414 0l4.5-4.5a3.973 3.973 0 0 0 7.587 0l4.5 4.5a1 1 0 0 0 1.414-1.414ZM18 20a2 2 0 0 1-4 0v-8a2 2 0 0 1 4 0Z"/>' }, "drone-delivery": { "body": '<path fill="currentColor" d="M20 30h-8v-8h8Zm-6-2h4v-4h-4Z"/><path fill="currentColor" d="M32 11H22v2h4v3H6v-3h4v-2H0v2h4v5h5.132L6 22.697V27h2v-3.697L11.535 18h8.93L24 23.303V27h2v-4.303L22.868 18H28v-5h4v-2zM16 6a5.982 5.982 0 0 0-4.24 1.76l1.413 1.413a3.994 3.994 0 0 1 5.654 0l1.414-1.414A5.981 5.981 0 0 0 16 6z"/><path fill="currentColor" d="m8.932 4.932l1.414 1.414a7.988 7.988 0 0 1 11.308 0l1.414-1.414a9.984 9.984 0 0 0-14.136 0Z"/>' }, "drone-front": { "body": '<path fill="currentColor" d="M28 19v-4h-2v2H6v-2H4v4h7v4.412l-4 2.225V30h2v-3.188L12.26 25h7.481L23 26.813V30h2v-4.363l-4-2.225V19zm-9 4h-6v-4h6zM0 11h10v2H0zm22 0h10v2H22zm-6-5a5.982 5.982 0 0 0-4.24 1.76l1.413 1.413a3.994 3.994 0 0 1 5.654 0l1.414-1.414A5.981 5.981 0 0 0 16 6z"/><path fill="currentColor" d="m8.932 4.932l1.414 1.414a7.988 7.988 0 0 1 11.308 0l1.414-1.414a9.984 9.984 0 0 0-14.136 0Z"/>' }, "drone-video": { "body": '<circle cx="16" cy="21" r="1" fill="currentColor"/><path fill="currentColor" d="M28 19v-4h-2v2H6v-2H4v4h7v4.412l-4 2.225V30h2v-3.188L12.26 25h7.481L23 26.813V30h2v-4.363l-4-2.225V19zm-9 4h-6v-4h6zM0 11h10v2H0zm22 0h10v2H22zm-6-5a5.982 5.982 0 0 0-4.24 1.76l1.413 1.413a3.994 3.994 0 0 1 5.654 0l1.414-1.414A5.981 5.981 0 0 0 16 6z"/><path fill="currentColor" d="m8.932 4.932l1.414 1.414a7.988 7.988 0 0 1 11.308 0l1.414-1.414a9.984 9.984 0 0 0-14.136 0Z"/>' }, "drop-photo": { "body": '<path fill="currentColor" d="M19 26a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M27 29H11a2 2 0 0 1-2-2v-9a2 2 0 0 1 2-2h3.28l.543-1.632A2 2 0 0 1 16.721 13h4.558a2 2 0 0 1 1.898 1.368L23.72 16H27a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2zm-16-2h16v-9h-4.72l-1-3h-4.56l-1 3H11zm16-16h2v2h-2zm0-4h2v2h-2zm0-4h2v2h-2zm-4 0h2v2h-2zm-4 0h2v2h-2zm-4 0h2v2h-2zm-4 0h2v2h-2zM7 3h2v2H7zM3 3h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3z"/>' }, "drop-photo-filled": { "body": '<circle cx="19" cy="22" r="2" fill="currentColor"/><path fill="currentColor" d="M27 16h-3.28l-.543-1.633A1.998 1.998 0 0 0 21.279 13h-4.558a1.998 1.998 0 0 0-1.898 1.368L14.28 16H11a2.002 2.002 0 0 0-2 2v9a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2v-9a2.002 2.002 0 0 0-2-2Zm-8 10a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="none" d="M19 26a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M27 11h2v2h-2zm0-4h2v2h-2zm0-4h2v2h-2zm-4 0h2v2h-2zm-4 0h2v2h-2zm-4 0h2v2h-2zm-4 0h2v2h-2zM7 3h2v2H7zM3 3h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3zm0 4h2v2H3z"/>' }, "drought": { "body": '<path fill="currentColor" d="M27 18h3v-3a4.005 4.005 0 0 0-4-4h-1V9.5A3.504 3.504 0 0 0 21.5 6a3.456 3.456 0 0 0-1.5.351V5.41a3.41 3.41 0 0 0-6.545-1.343L11.341 9H9a5.006 5.006 0 0 0-5 5v4h4a5.006 5.006 0 0 0 5-5v-2.795l2.293-5.35A1.41 1.41 0 0 1 18 5.41V22h-3.388L11 25.294L7.388 22H2v2h4.612L11 28l4.388-4H30v-2H20V9.5a1.5 1.5 0 0 1 3 0V14a4.005 4.005 0 0 0 4 4Zm-2-5h1a2.002 2.002 0 0 1 2 2v1h-1a2.002 2.002 0 0 1-2-2Zm-14 0a3.003 3.003 0 0 1-3 3H6v-2a3.003 3.003 0 0 1 3-3h2Z"/>' }, "dvr": { "body": '<path fill="currentColor" d="M30 15v-4a2 2 0 0 0-2-2h-6v14h2v-6h1.48l2.34 6H30l-2.33-6H28a2 2 0 0 0 2-2zm-6-4h4v4h-4zm-6-2l-2 13l-2-13h-2l2.52 14h2.96L20 9h-2zM6 23H2V9h4a4 4 0 0 1 4 4v6a4 4 0 0 1-4 4zm-2-2h2a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2H4z"/>' }, "earth": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2Zm5 3.106a12.014 12.014 0 0 1 2.916 1.899L23.503 8H21Zm-7.622 22.597A11.976 11.976 0 0 1 8.116 6.976L9.465 9h3.342l-1.5 4H7.28l-1.382 4.148L8.465 21h5l1.432 2.147ZM16 28c-.203 0-.402-.02-.603-.03l1.397-4.19a1.988 1.988 0 0 0-.233-1.741l-1.432-2.148A1.996 1.996 0 0 0 13.465 19h-3.93l-1.432-2.148L8.721 15H11v2h2v-2.819l2.936-7.83l-1.872-.702L13.557 7h-3.022l-.807-1.21A11.794 11.794 0 0 1 19 4.394V8a2.002 2.002 0 0 0 2 2h2.586A1.986 1.986 0 0 0 25 9.414l.14-.14l.282-.68A11.981 11.981 0 0 1 27.3 12h-4.701a1.993 1.993 0 0 0-1.972 1.665l-.597 3.441a1.99 1.99 0 0 0 .991 2.086l2.165 1.464l1.458 3.646A11.958 11.958 0 0 1 16 28Zm8.815-8.656L22.1 17.509l-.1-.06l.599-3.449h5.22a11.743 11.743 0 0 1-1.744 8.495Z"/>' }, "earth-americas": { "body": '<path fill="currentColor" d="M30 16a14.031 14.031 0 1 0-7.14 12.191l.117.026l.024-.111A13.998 13.998 0 0 0 30 16ZM4 16a11.937 11.937 0 0 1 .395-3h4.243l4.992 4.16l-1.91 2.546a2.009 2.009 0 0 0 .186 2.614L14 24.414v3.405A12.01 12.01 0 0 1 4 16Zm9.32 4.906l3.05-4.066L9.362 11H5.106a11.962 11.962 0 0 1 17.778-4.814L22.279 8h-5.693l-3.043 3.043l9.354 8.313l-1.649 7.419A11.903 11.903 0 0 1 16 28v-4.414Zm10.315 4.344l1.213-5.46a2 2 0 0 0-.623-1.927l-7.768-6.906l.957-.957h4.865a1.998 1.998 0 0 0 1.898-1.368l.353-1.06a11.978 11.978 0 0 1-.895 17.678Z"/>' }, "earth-americas-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2ZM4 16a11.915 11.915 0 0 1 .7-4H10l5 4l-2.8 3.693A1 1 0 0 0 12.293 21L15 24v3.95A12.01 12.01 0 0 1 4 16Zm17.435 10.685l2.546-7.7a1 1 0 0 0-.367-.985L15 11l2-2h5.28a1 1 0 0 0 .948-.684l.495-1.486a11.974 11.974 0 0 1-2.288 19.855Z"/>' }, "earth-europe-africa": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2ZM4 16a11.96 11.96 0 0 1 4-8.919V9a2 2 0 0 0 2 2h3.382a2 2 0 0 0 1.79-1.106L15.617 9H18v4h-4.765a2 2 0 0 0-.893.21l-3.237 1.62A2 2 0 0 0 8 16.617v3.705a2 2 0 0 0 1.257 1.857l3.849 1.54l.678 4.066A12.014 12.014 0 0 1 4 16Zm11.846 11.992l-.952-5.712L10 20.323v-3.705L13.236 15H20V7h-5.618l-1 2H10V5.623A11.958 11.958 0 0 1 27.3 12H22v4l.922 3.813L21 22.698v4.197A11.908 11.908 0 0 1 16 28c-.052 0-.102-.007-.154-.008ZM23 25.727v-2.424l1.586-2.38a2.003 2.003 0 0 0 .277-1.595L24 15.877V14h3.82A11.84 11.84 0 0 1 23 25.727Z"/>' }, "earth-europe-africa-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2ZM4 16a11.981 11.981 0 0 1 5-9.727V9a1 1 0 0 0 1 1h3.382a1 1 0 0 0 .894-.553L15 8h4v6h-5.764a1 1 0 0 0-.447.105l-3.236 1.619a1 1 0 0 0-.553.894v3.705a1 1 0 0 0 .629.929L14 23l.824 4.94A12.015 12.015 0 0 1 4 16Zm18 10.376V23l1.755-2.632a1.001 1.001 0 0 0 .138-.797L23 16v-3h4.605A11.901 11.901 0 0 1 22 26.376Z"/>' }, "earth-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2ZM4.02 16.394l1.338.446L7 19.303v1.283a1 1 0 0 0 .293.707L10 24v2.377a11.994 11.994 0 0 1-5.98-9.983ZM16 28a11.968 11.968 0 0 1-2.572-.285L14 26l1.805-4.512a1 1 0 0 0-.097-.926l-1.411-2.117a1 1 0 0 0-.832-.445h-4.93l-1.248-1.873L9.414 14H11v2h2v-2.734l3.868-6.77l-1.736-.992L14.277 7h-2.742L10.45 5.371A11.861 11.861 0 0 1 20 4.7V8a1 1 0 0 0 1 1h1.465a1 1 0 0 0 .832-.445l.877-1.316A12.033 12.033 0 0 1 26.894 11H22.82a1 1 0 0 0-.98.804l-.723 4.47a1 1 0 0 0 .54 1.055L25 19l.685 4.056A11.98 11.98 0 0 1 16 28Z"/>' }, "earth-southeast-asia": { "body": '<path fill="currentColor" d="M14 24h3v2h-3zm3-2h2v2h-2zm0-4h2v2h-2z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2Zm-.603 2.03l2.507 5.016L16.323 13H10.27l-1.41 4.387l2.852 2.852l-1.007 1.512L6.286 19H4.395A11.936 11.936 0 0 1 15.397 4.03ZM5.106 21h.608l3.935 2.449a1.991 1.991 0 0 0 2.721-.589l1.008-1.512a2.005 2.005 0 0 0-.25-2.523l-1.989-1.989l.59-1.836h4.594a1.99 1.99 0 0 0 1.857-1.257l1.581-3.953a2.002 2.002 0 0 0-.067-1.638l-2.01-4.02A11.96 11.96 0 0 1 26.894 21H23a2.002 2.002 0 0 0-2 2v3.894A11.948 11.948 0 0 1 5.105 21ZM23 25.727V23h2.727A12.076 12.076 0 0 1 23 25.727Z"/>' }, "earth-southeast-asia-filled": { "body": '<path fill="currentColor" d="M17 22h2v2h-2zm0-4h2v2h-2zm-3 6h3v2h-3z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2ZM4.7 20H6l4.177 2.6a1 1 0 0 0 1.36-.294l1.008-1.512a1 1 0 0 0-.125-1.261L10 17.112L11 14h5.323a1 1 0 0 0 .928-.628l1.582-3.955a1 1 0 0 0-.034-.819l-2.286-4.572A11.965 11.965 0 0 1 26.376 22H23a1 1 0 0 0-1 1v3.377A11.958 11.958 0 0 1 4.7 20Z"/>' }, "earthquake": { "body": '<path fill="currentColor" d="M16.612 2.214a1.01 1.01 0 0 0-1.242 0L1 13.419l1.243 1.572L4 13.621V26a2.004 2.004 0 0 0 2 2h20a2.004 2.004 0 0 0 2-2V13.63L29.757 15L31 13.428ZM6 12.062l9-7.012v7.364l3.458 3.458l-6.734 4.81L14.382 26H6ZM26 26h-9.382l-2.342-4.683l7.266-5.19L17 11.587V5.052l9 7.02Z"/>' }, "edge-cluster": { "body": '<path fill="currentColor" d="M16 7a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm-5 27a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zM7 11a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm14 23a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm4-15a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zM4 21a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm24 4a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm-12 5a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4z"/>' }, "edge-device": { "body": '<path fill="currentColor" d="M9 21h14v2H9zm2-7a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2zm10 0a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2z"/><path fill="currentColor" d="M28 8h-9.586l2.072-2.072A2.04 2.04 0 0 0 21 6a2 2 0 1 0-2-2a2.041 2.041 0 0 0 .072.514L15.586 8H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V10a2.002 2.002 0 0 0-2-2ZM4 26V10h24v16Z"/>' }, "edge-enhancement": { "body": '<path d="M11.816 4.765l-.683-1.878a13.976 13.976 0 0 0-4.182 2.44L8.236 6.86a11.973 11.973 0 0 1 3.58-2.094z" fill="currentColor"/><path d="M5.591 10L3.86 9a14.14 14.14 0 0 0-1.638 4.587l1.968.347A12.152 12.152 0 0 1 5.59 10z" fill="currentColor"/><path d="M16 26a10 10 0 0 0 0-20z" fill="currentColor"/><path d="M30 16A14 14 0 0 0 16 2v2a11.993 11.993 0 0 1 4.05 23.285c-.169.06-.335.13-.505.182c-.251.077-.51.136-.768.197c-.127.03-.25.07-.378.095c-.29.06-.588.098-.886.135c-.1.013-.198.035-.299.044a12.002 12.002 0 0 1-11.798-6.283c-.066-.127-.133-.254-.195-.384c-.055-.113-.106-.227-.157-.342A13.12 13.12 0 0 1 4.19 18l-1.968.413A13.917 13.917 0 0 0 2.7 20.3l-.025.009A13.961 13.961 0 0 0 16 30q.713 0 1.415-.071c.135-.014.265-.042.4-.06c.328-.043.657-.084.98-.15c.18-.036.354-.09.532-.134c.268-.065.538-.125.802-.206c.247-.076.483-.172.724-.261c.18-.067.363-.121.541-.195v-.003A14.002 14.002 0 0 0 30 16z" fill="currentColor"/>', "hidden": true }, "edge-enhancement-01": { "body": '<path d="M26 28v-8h-2v1h-2v2h2v5h-2v2h6v-2h-2z" fill="currentColor"/><path d="M28 16h2A14 14 0 0 0 16 2v2a12 12 0 0 1 12 12z" fill="currentColor"/><path d="M26 16A10 10 0 0 0 16 6v10z" fill="currentColor"/><path d="M16 28a11.96 11.96 0 0 1-10.584-6.345c-.066-.127-.133-.254-.195-.384c-.055-.113-.106-.227-.157-.342A13.12 13.12 0 0 1 4.19 18l-1.968.413A13.917 13.917 0 0 0 2.7 20.3l-.025.009A13.961 13.961 0 0 0 16 30z" fill="currentColor"/><path d="M5.591 10L3.86 9a14.14 14.14 0 0 0-1.638 4.587l1.968.347A12.152 12.152 0 0 1 5.59 10z" fill="currentColor"/><path d="M11.816 4.765l-.683-1.878a13.976 13.976 0 0 0-4.182 2.44L8.236 6.86a11.973 11.973 0 0 1 3.58-2.094z" fill="currentColor"/>', "hidden": true }, "edge-enhancement-02": { "body": '<path d="M28 30h-6v-4a2.002 2.002 0 0 1 2-2h2v-2h-4v-2h4a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2h-2v2h4z" fill="currentColor"/><path d="M28 16h2A14 14 0 0 0 16 2v2a12 12 0 0 1 12 12z" fill="currentColor"/><path d="M26 16A10 10 0 0 0 16 6v10z" fill="currentColor"/><path d="M16 28a11.96 11.96 0 0 1-10.584-6.345c-.066-.127-.133-.254-.195-.384c-.055-.113-.106-.227-.157-.342A13.12 13.12 0 0 1 4.19 18l-1.968.413A13.917 13.917 0 0 0 2.7 20.3l-.025.009A13.961 13.961 0 0 0 16 30z" fill="currentColor"/><path d="M5.591 10L3.86 9a14.14 14.14 0 0 0-1.638 4.587l1.968.347A12.152 12.152 0 0 1 5.59 10z" fill="currentColor"/><path d="M11.816 4.765l-.683-1.878a13.976 13.976 0 0 0-4.182 2.44L8.236 6.86a11.973 11.973 0 0 1 3.58-2.094z" fill="currentColor"/>', "hidden": true }, "edge-enhancement-03": { "body": '<path d="M26 20h-4v2h4v2h-3v2h3v2h-4v2h4a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2z" fill="currentColor"/><path d="M28 16h2A14 14 0 0 0 16 2v2a12 12 0 0 1 12 12z" fill="currentColor"/><path d="M26 16A10 10 0 0 0 16 6v10z" fill="currentColor"/><path d="M16 28a11.96 11.96 0 0 1-10.584-6.345c-.066-.127-.133-.254-.195-.384c-.055-.113-.106-.227-.157-.342A13.12 13.12 0 0 1 4.19 18l-1.968.413A13.917 13.917 0 0 0 2.7 20.3l-.025.009A13.961 13.961 0 0 0 16 30z" fill="currentColor"/><path d="M5.591 10L3.86 9a14.14 14.14 0 0 0-1.638 4.587l1.968.347A12.152 12.152 0 0 1 5.59 10z" fill="currentColor"/><path d="M11.816 4.765l-.683-1.878a13.976 13.976 0 0 0-4.182 2.44L8.236 6.86a11.973 11.973 0 0 1 3.58-2.094z" fill="currentColor"/>', "hidden": true }, "edge-node": { "body": '<path fill="currentColor" d="M22 6h4v4h-4z"/><circle cx="7" cy="7" r="1" fill="currentColor"/><circle cx="25" cy="25" r="1" fill="currentColor"/><circle cx="25" cy="21" r="1" fill="currentColor"/><circle cx="25" cy="17" r="1" fill="currentColor"/><path fill="currentColor" d="M22 17v-2h-2v-1a2.002 2.002 0 0 0-2-2h-1v-2h-2v2h-2v-2h-2v2h-1a2.002 2.002 0 0 0-2 2v1H6v2h2v2H6v2h2v1a2.002 2.002 0 0 0 2 2h1v2h2v-2h2v2h2v-2h1a2.002 2.002 0 0 0 2-2v-1h2v-2h-2v-2Zm-4 5h-8v-8h8Z"/><path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM4 4v24h24V4Z"/>' }, "edge-node-alt": { "body": '<path fill="currentColor" d="M27 22a2.981 2.981 0 0 0-2.037.811l-4.004-2.402a2.043 2.043 0 0 0 0-.818l4.004-2.402A2.99 2.99 0 1 0 24 15a2.934 2.934 0 0 0 .042.41l-4.004 2.401a3 3 0 1 0 0 4.377l4.003 2.403A2.934 2.934 0 0 0 24 25a3 3 0 1 0 3-3Zm0-8a1 1 0 1 1-1 1a1 1 0 0 1 1-1Zm-9 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm9 5a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><circle cx="7" cy="8" r="1" fill="currentColor"/><circle cx="7" cy="16" r="1" fill="currentColor"/><circle cx="7" cy="24" r="1" fill="currentColor"/><path fill="currentColor" d="M22 13V5a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h16v-2H4v-6h8v-2H4v-6ZM4 5h16v6H4Z"/>' }, "edge-service": { "body": '<path fill="currentColor" d="M7 11h2v10H7zm4 0h2v10h-2zm4 0h2v10h-2zm4 0h2v10h-2zm4 0h2v10h-2z"/><path fill="currentColor" d="M28 26H4a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2ZM4 8v16h24V8Z"/>' }, "edit": { "body": '<path fill="currentColor" d="M2 26h28v2H2zM25.4 9c.8-.8.8-2 0-2.8l-3.6-3.6c-.8-.8-2-.8-2.8 0l-15 15V24h6.4l15-15zm-5-5L24 7.6l-3 3L17.4 7l3-3zM6 22v-3.6l10-10l3.6 3.6l-10 10H6z"/>' }, "edit-filter": { "body": '<path d="M26 6H4v3.17l7.41 7.42l.59.58V26h4v-2h2v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-8l-7.41-7.41A2 2 0 0 1 2 9.17V6a2 2 0 0 1 2-2h22z" fill="currentColor"/><path d="M29.71 11.29l-3-3a1 1 0 0 0-1.42 0L16 17.59V22h4.41l9.3-9.29a1 1 0 0 0 0-1.42zM19.59 20H18v-1.59l5-5L24.59 15zM26 13.59L24.41 12L26 10.41L27.59 12z" fill="currentColor"/>', "hidden": true }, "edit-off": { "body": '<path fill="currentColor" d="M30 28.6L3.4 2L2 3.4l10.1 10.1L4 21.6V28h6.4l8.1-8.1L28.6 30l1.4-1.4zM9.6 26H6v-3.6l7.5-7.5l3.6 3.6L9.6 26zM29.4 6.2l-3.6-3.6c-.8-.8-2-.8-2.8 0l-8 8l1.4 1.4L20 8.4l3.6 3.6l-3.6 3.6l1.4 1.4l8-8c.8-.8.8-2 0-2.8zM25 10.6L21.4 7l3-3L28 7.6l-3 3z"/>' }, "edt-loop": { "body": '<path fill="currentColor" d="M23.625 22.587a6.129 6.129 0 0 1-4.5-1.9l-3.1-3.2l-3.1 3.2a6.458 6.458 0 0 1-9.1 0a7.028 7.028 0 0 1-1.8-4.7a6.655 6.655 0 0 1 1.9-4.7a6.338 6.338 0 0 1 9 0l3.1 3.2l3.1-3.2a6.338 6.338 0 0 1 9 0a6.828 6.828 0 0 1 0 9.4a6.542 6.542 0 0 1-4.5 1.9Zm-6.2-6.6l3.1 3.3a4.406 4.406 0 0 0 6.2 0a4.908 4.908 0 0 0 0-6.6a4.406 4.406 0 0 0-6.2 0Zm-9-4.6a4.158 4.158 0 0 0-3.1 1.3a4.838 4.838 0 0 0 0 6.6a4.406 4.406 0 0 0 6.2 0l3.1-3.3l-3.1-3.3a4.77 4.77 0 0 0-3.1-1.3Z"/>' }, "education": { "body": '<path fill="currentColor" d="M26 30h-2v-3a5.006 5.006 0 0 0-5-5h-6a5.006 5.006 0 0 0-5 5v3H6v-3a7.008 7.008 0 0 1 7-7h6a7.008 7.008 0 0 1 7 7zM5 6a1 1 0 0 0-1 1v9h2V7a1 1 0 0 0-1-1z"/><path fill="currentColor" d="M4 2v2h5v7a7 7 0 0 0 14 0V4h5V2Zm7 2h10v3H11Zm5 12a5 5 0 0 1-5-5V9h10v2a5 5 0 0 1-5 5Z"/>' }, "email": { "body": '<path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Zm-2.2 2L16 14.78L6.2 8ZM4 24V8.91l11.43 7.91a1 1 0 0 0 1.14 0L28 8.91V24Z"/>' }, "email-new": { "body": '<path fill="currentColor" d="M19 24H4L3.997 8.906l11.434 7.916a1 1 0 0 0 1.138 0L28 8.91V18h2V8a2.003 2.003 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v16a2.003 2.003 0 0 0 2 2h15Zm6.799-16L16 14.784L6.201 8Z"/><circle cx="26" cy="24" r="4" fill="currentColor"/>' }, "encryption": { "body": '<path fill="currentColor" d="M29 21.278V19a4 4 0 0 0-8 0v2.278A1.994 1.994 0 0 0 20 23v5a2.002 2.002 0 0 0 2 2h6a2.002 2.002 0 0 0 2-2v-5a1.994 1.994 0 0 0-1-1.722zM25 17a2.002 2.002 0 0 1 2 2v2h-4v-2a2.002 2.002 0 0 1 2-2zm-3 11v-5h6v5zM2 2h2v4H2zm12 0h2v4h-2zm4 0h2v4h-2zM2 8h2v8H2zm0 10h2v8H2zm12 0h2v8h-2zM6 8h2v8H6zm12 0h2v6h-2zm-8 18H8a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-2-6v4h2v-4zm6-4h-2a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-2-6v4h2v-4zm-2-4H8a2.002 2.002 0 0 1-2-2V2h2v2h2V2h2v2a2.002 2.002 0 0 1-2 2z"/>' }, "energy-renewable": { "body": '<path fill="currentColor" d="M29 14h-1v-4h-2v4h-2v-4h-2v4h-1a1 1 0 0 0-1 1v4a5.008 5.008 0 0 0 4 4.899V27a1 1 0 0 1-1 1H5a1 1 0 0 1 0-2h5a3 3 0 0 0 0-6H5a1 1 0 0 1 0-2h5a3.003 3.003 0 0 0 3-3v-4h1a4.005 4.005 0 0 0 4-4V4h-3a3.979 3.979 0 0 0-2.747 1.106A6.004 6.004 0 0 0 7 2H4v3a6.007 6.007 0 0 0 6 6h1v4a1 1 0 0 1-1 1H5a3 3 0 0 0 0 6h5a1 1 0 0 1 0 2H5a3 3 0 0 0 0 6h18a3.003 3.003 0 0 0 3-3v-3.101A5.008 5.008 0 0 0 30 19v-4a1 1 0 0 0-1-1ZM13 8a2.002 2.002 0 0 1 2-2h1v1a2.002 2.002 0 0 1-2 2h-1Zm-3 1a4.005 4.005 0 0 1-4-4V4h1a4.005 4.005 0 0 1 4 4v1Zm18 10a3 3 0 0 1-6 0v-3h6Z"/>' }, "enterprise": { "body": '<path fill="currentColor" d="M8 8h2v4H8zm0 6h2v4H8zm6-6h2v4h-2zm0 6h2v4h-2zm-6 6h2v4H8zm6 0h2v4h-2z"/><path fill="currentColor" d="M30 14a2 2 0 0 0-2-2h-6V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v26h28ZM4 4h16v24H4Zm18 24V14h6v14Z"/>' }, "equalizer": { "body": '<path fill="currentColor" d="M2 28h8v2H2zm0-4h8v2H2zm10 4h8v2h-8zm0-4h8v2h-8zM2 20h8v2H2zm10 0h8v2h-8zM2 16h8v2H2zm10 0h8v2h-8zm0-4h8v2h-8zm0-4h8v2h-8zm0-4h8v2h-8zm10 24h8v2h-8zm0-4h8v2h-8z"/>' }, "erase": { "body": '<path fill="currentColor" d="M7 27h23v2H7zm20.38-16.49l-7.93-7.92a2 2 0 0 0-2.83 0l-14 14a2 2 0 0 0 0 2.83L7.13 24h9.59l10.66-10.66a2 2 0 0 0 0-2.83zM15.89 22H8l-4-4l6.31-6.31l7.93 7.92zm3.76-3.76l-7.92-7.93L18 4l8 7.93z"/>' }, "erase-3d": { "body": '<path d="M30.415 16.513l-7.927-7.927a2.001 2.001 0 0 0-2.83 0L5.622 22.624a2.002 2.002 0 0 0 0 2.83L10.166 30h9.591l10.658-10.659a2.001 2.001 0 0 0 0-2.828zM18.929 28h-7.934l-3.96-3.962l6.312-6.312l7.928 7.928zm3.76-3.76l-7.928-7.928L21.074 10l7.927 7.927z" fill="currentColor"/><path d="M11 12H8V2h3a3.003 3.003 0 0 1 3 3v4a3.003 3.003 0 0 1-3 3zm-1-2h1a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1h-1z" fill="currentColor"/><path d="M4 2H0v2h4v2H1v2h3v2H0v2h4a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2z" fill="currentColor"/>', "hidden": true }, "error": { "body": '<path fill="currentColor" d="M2 16A14 14 0 1 0 16 2A14 14 0 0 0 2 16Zm23.15 7.75L8.25 6.85a12 12 0 0 1 16.9 16.9ZM8.24 25.16a12 12 0 0 1-1.4-16.89l16.89 16.89a12 12 0 0 1-15.49 0Z"/>' }, "error-filled": { "body": '<path fill="none" d="M9 10.555L10.555 9L23 21.444L21.444 23z"/><path fill="currentColor" d="M16 2A13.914 13.914 0 0 0 2 16a13.914 13.914 0 0 0 14 14a13.914 13.914 0 0 0 14-14A13.914 13.914 0 0 0 16 2Zm5.445 21L9 10.556L10.556 9L23 21.445Z"/>' }, "error-outline": { "body": '<path fill="currentColor" d="M9 10.555L10.555 9L23 21.444L21.444 23z"/><path fill="currentColor" d="M16 2A13.914 13.914 0 0 0 2 16a13.914 13.914 0 0 0 14 14a13.914 13.914 0 0 0 14-14A13.914 13.914 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12.035 12.035 0 0 1-12 12Z"/>' }, "event": { "body": '<path fill="currentColor" d="M28 6a2 2 0 0 0-2-2h-4V2h-2v2h-8V2h-2v2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h4v-2H6V6h4v2h2V6h8v2h2V6h4v6h2Z"/><path fill="currentColor" d="m21 15l2.549 4.938l5.451.791l-4 3.844L26 30l-5-2.562L16 30l1-5.427l-4-3.844l5.6-.791L21 15z"/>' }, "event-schedule": { "body": '<path fill="currentColor" d="M21 30a8 8 0 1 1 8-8a8 8 0 0 1-8 8Zm0-14a6 6 0 1 0 6 6a6 6 0 0 0-6-6Z"/><path fill="currentColor" d="M22.59 25L20 22.41V18h2v3.59l2 2L22.59 25z"/><path fill="currentColor" d="M28 6a2 2 0 0 0-2-2h-4V2h-2v2h-8V2h-2v2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h4v-2H6V6h4v2h2V6h8v2h2V6h4v6h2Z"/>' }, "events": { "body": '<path fill="currentColor" d="M26 14h-2v2h2a3.003 3.003 0 0 1 3 3v4h2v-4a5.006 5.006 0 0 0-5-5zM24 4a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zm-1 28h-2v-2a3.003 3.003 0 0 0-3-3h-4a3.003 3.003 0 0 0-3 3v2H9v-2a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zm-7-17a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zm-8 3H6a5.006 5.006 0 0 0-5 5v4h2v-4a3.003 3.003 0 0 1 3-3h2zM8 4a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "events-alt": { "body": '<path fill="currentColor" d="M18 31h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3.003 3.003 0 0 0-3-3h-6a3.003 3.003 0 0 0-3 3zm6-6a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.003 2.003 0 0 0-2-2zM2 31h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3.003 3.003 0 0 0-3-3H5a3.003 3.003 0 0 0-3 3zm6-6a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm10-3h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3.003 3.003 0 0 0-3-3h-6a3.003 3.003 0 0 0-3 3zm6-6a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zM2 16h2v-2a1.001 1.001 0 0 1 1-1h6a1.001 1.001 0 0 1 1 1v2h2v-2a3.003 3.003 0 0 0-3-3H5a3.003 3.003 0 0 0-3 3zm6-6a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/>' }, "exam-mode": { "body": '<path fill="currentColor" d="M25 23v3H7v-9.17l3.59 3.58L12 19l-6-6l-6 6l1.41 1.41L5 16.83V26a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2v-3zm2-16v9.17l3.59-3.58L32 14l-6 6l-6-6l1.41-1.41L25 16.17V7H13V5h12a2 2 0 0 1 2 2zM8 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zM4 4v4h4V4z"/>' }, "executable-program": { "body": '<path fill="currentColor" fill-rule="evenodd" d="m25 21l7 5l-7 5V21z"/><path fill="currentColor" d="m20.17 19l-2.59 2.59L19 23l4-4l-4-4l-1.42 1.41L20.17 19zm-8.34 0l2.59-2.59L13 15l-4 4l4 4l1.42-1.41L11.83 19z"/><circle cx="9" cy="8" r="1" fill="currentColor"/><circle cx="6" cy="8" r="1" fill="currentColor"/><path fill="currentColor" d="M21 26H4V12h24v7h2V6c0-1.103-.897-2-2-2H4c-1.103 0-2 .897-2 2v20c0 1.103.897 2 2 2h17v-2ZM4 6h24v4H4V6Z"/>' }, "exit": { "body": '<path fill="currentColor" d="M26 4h2v24h-2zM11.414 20.586L7.828 17H22v-2H7.828l3.586-3.586L10 10l-6 6l6 6l1.414-1.414z"/>' }, "expand-all": { "body": '<path fill="currentColor" d="M12 10h14a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2H12a2.002 2.002 0 0 0-2 2v1H6V2H4v23a2.002 2.002 0 0 0 2 2h4v1a2.002 2.002 0 0 0 2 2h14a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2H12a2.002 2.002 0 0 0-2 2v1H6v-8h4v1a2.002 2.002 0 0 0 2 2h14a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2H12a2.002 2.002 0 0 0-2 2v1H6V7h4v1a2.002 2.002 0 0 0 2 2Zm0-6h14l.001 4H12Zm0 20h14l.001 4H12Zm0-10h14l.001 4H12Z"/>' }, "expand-categories": { "body": '<path fill="currentColor" d="M20 26h6v2h-6zm0-8h8v2h-8zm0-8h10v2H20zm-5-6h2v24h-2zm-4.414-.041L7 7.249L3.412 3.958L2 5.373L7 10l5-4.627l-1.414-1.414z"/>' }, "explore": { "body": '<path fill="currentColor" d="M22.707 9.293a1 1 0 0 0-1.023-.242l-9 3a1.001 1.001 0 0 0-.633.633l-3 9a1 1 0 0 0 1.265 1.265l9-3a1.001 1.001 0 0 0 .633-.633l3-9a1 1 0 0 0-.242-1.023ZM11.581 20.42l2.21-6.628l4.419 4.419Z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "export": { "body": '<path fill="currentColor" d="M26 24v4H6v-4H4v4l.008-.005A1.998 1.998 0 0 0 6 30h20a2 2 0 0 0 2-2v-4zM6 12l1.411 1.405L15 5.825V24h2V5.825l7.591 7.58L26 12L16 2L6 12z"/>' }, "eyedropper": { "body": '<path fill="currentColor" d="M2 27h3v3H2zM29.71 7.29l-5-5a1 1 0 0 0-1.41 0L20 5.59l-1.29-1.3l-1.42 1.42L18.59 7L8.29 17.29A1 1 0 0 0 8 18v1.59l-2.71 2.7a1 1 0 0 0 0 1.41l3 3a1 1 0 0 0 1.41 0l2.71-2.7H14a1 1 0 0 0 .71-.29L25 13.41l1.29 1.3l1.42-1.42l-1.3-1.29l3.3-3.29a1 1 0 0 0 0-1.41zM13.59 22h-2L9 24.59L7.41 23L10 20.41v-2l10-10L23.59 12zM25 10.59L21.41 7L24 4.41L27.59 8z"/>' }, "face-activated": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M11.5 11a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zM9 20a8.13 8.13 0 0 0 14 0z"/>' }, "face-activated-add": { "body": '<path fill="currentColor" d="M30 4h-4V0h-2v4h-4v2h4v4h2V6h4V4zm-18.5 7a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zM9 20a8.13 8.13 0 0 0 14 0z"/><path fill="currentColor" d="M27.82 14A12 12 0 1 1 16 4V2a14 14 0 1 0 14 14a14.71 14.71 0 0 0-.16-2Z"/>' }, "face-activated-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-4.5 9A2.5 2.5 0 1 1 9 13.5a2.48 2.48 0 0 1 2.5-2.5ZM16 24a8.11 8.11 0 0 1-7-4h14a8.11 8.11 0 0 1-7 4Zm4.5-8a2.5 2.5 0 1 1 2.5-2.5a2.48 2.48 0 0 1-2.5 2.5Z"/>' }, "face-add": { "body": '<path fill="currentColor" d="M16 22a6 6 0 0 1-5.14-2.92l-1.71 1a8 8 0 0 0 13.7 0l-1.71-1A6 6 0 0 1 16 22zM30 4h-4V0h-2v4h-4v2h4v4h2V6h4V4zm-18.5 7a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5z"/><path fill="currentColor" d="M27.61 13a12.33 12.33 0 0 1 .39 3A12 12 0 1 1 16 4V2a14 14 0 1 0 13.67 11Z"/>' }, "face-cool": { "body": '<path fill="currentColor" d="M16 24a8 8 0 0 0 6.85-3.89l-1.71-1a6 6 0 0 1-10.28 0l-1.71 1A8 8 0 0 0 16 24Z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 2a12 12 0 0 1 10.89 7H25a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1H5.11A12 12 0 0 1 16 4Zm0 24A12 12 0 0 1 4 16a11.86 11.86 0 0 1 .4-3H7v2a2 2 0 0 0 2 2h3.31a2 2 0 0 0 2-1.67l.52-3.33h2.34l.55 3.33a2 2 0 0 0 2 1.67H23a2 2 0 0 0 2-2v-2h2.6a11.86 11.86 0 0 1 .4 3a12 12 0 0 1-12 12Z"/>' }, "face-dissatisfied": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M11.5 11a2.5 2.5 0 1 0 2.5 2.5a2.5 2.5 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.5 2.5 0 0 0-2.5-2.5zM16 19a8 8 0 0 0-6.85 3.89l1.71 1a6 6 0 0 1 10.28 0l1.71-1A8 8 0 0 0 16 19z"/>' }, "face-dissatisfied-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-4.5 9A2.5 2.5 0 1 1 9 13.5a2.48 2.48 0 0 1 2.54-2.5Zm9.64 12.92a6 6 0 0 0-10.28 0l-1.71-1a8 8 0 0 1 13.7 0ZM20.5 16a2.5 2.5 0 0 1 0-5a2.5 2.5 0 0 1 0 5Z"/>' }, "face-dizzy": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M24.41 11L23 9.59l-2 2l-2-2L17.59 11l2 2l-2 2L19 16.41l2-2l2 2L24.41 15l-2-2l2-2zm-10 0L13 9.59l-2 2l-2-2L7.59 11l2 2l-2 2L9 16.41l2-2l2 2L14.41 15l-2-2l2-2zM16 19a3 3 0 1 0 3 3a3 3 0 0 0-3-3z"/>' }, "face-dizzy-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2ZM9 16.41L7.59 15l2-2l-2-2L9 9.59l2 2l2-2L14.41 11l-2 2l2 2L13 16.41l-2-2ZM16 25a3 3 0 1 1 3-3a3 3 0 0 1-3 3Zm8.41-10L23 16.41l-2-2l-2 2L17.59 15l2-2l-2-2L19 9.59l2 2l2-2L24.41 11l-2 2Z"/>' }, "face-mask": { "body": '<path fill="currentColor" d="M11.5 11a2.5 2.5 0 1 0 2.5 2.5a2.5 2.5 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.5 2.5 0 0 0-2.5-2.5z"/><path fill="currentColor" d="M30 16A14 14 0 1 0 8.9 28.042l.015.156A1.993 1.993 0 0 0 10.905 30h10.19a1.993 1.993 0 0 0 1.99-1.8l.015-.158A13.967 13.967 0 0 0 30 16ZM16 4a11.99 11.99 0 0 1 11.97 11.397L22.764 18H9.236L4.03 15.397A11.99 11.99 0 0 1 16 4ZM4.12 17.678l3.94 1.97l.581 5.81a11.97 11.97 0 0 1-4.521-7.78ZM21.095 28h-10.19l-.8-8h11.79Zm2.264-2.542l.581-5.81l3.94-1.97a11.971 11.971 0 0 1-4.52 7.78Z"/>' }, "face-neutral": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M11.5 11a2.5 2.5 0 1 0 2.5 2.5a2.5 2.5 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.5 2.5 0 0 0-2.5-2.5zM10 20h12v2H10z"/>' }, "face-neutral-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2ZM9 13.5a2.5 2.5 0 1 1 2.5 2.5A2.5 2.5 0 0 1 9 13.5ZM22 22H10v-2h12Zm-1.5-6a2.5 2.5 0 1 1 2.5-2.5a2.5 2.5 0 0 1-2.5 2.5Z"/>' }, "face-pending": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M11.5 11a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5z"/>' }, "face-pending-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-4.5 14a2.5 2.5 0 1 1 2.5-2.5a2.48 2.48 0 0 1-2.5 2.5Zm9 0a2.5 2.5 0 1 1 2.5-2.5a2.48 2.48 0 0 1-2.5 2.5Z"/>' }, "face-satisfied": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M11.5 11a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zm9 0a2.5 2.5 0 1 0 2.5 2.5a2.48 2.48 0 0 0-2.5-2.5zM16 24a8 8 0 0 0 6.85-3.89l-1.71-1a6 6 0 0 1-10.28 0l-1.71 1A8 8 0 0 0 16 24z"/>' }, "face-satisfied-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-4.5 9A2.5 2.5 0 1 1 9 13.5a2.48 2.48 0 0 1 2.5-2.5ZM16 24a8 8 0 0 1-6.85-3.89l1.71-1a6 6 0 0 0 10.28 0l1.71 1A8 8 0 0 1 16 24Zm4.5-8a2.5 2.5 0 1 1 2.5-2.5a2.48 2.48 0 0 1-2.5 2.5Z"/>' }, "face-wink": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M20.5 11a2.5 2.5 0 1 0 2.5 2.5a2.5 2.5 0 0 0-2.5-2.5zM8 13h6v2H8zm8 11a8 8 0 0 0 6.85-3.89l-1.71-1a6 6 0 0 1-10.28 0l-1.71 1A8 8 0 0 0 16 24z"/>' }, "face-wink-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2ZM8 13h6v2H8Zm8 11a8 8 0 0 1-6.85-3.89l1.71-1a6 6 0 0 0 10.28 0l1.71 1A8 8 0 0 1 16 24Zm4.5-8a2.5 2.5 0 0 1 0-5a2.5 2.5 0 0 1 0 5Z"/>' }, "factor": { "body": '<path fill="currentColor" d="M27 28V9h-3V4h2V2h-6v2h2v5h-3v19h-4V16h-3v-5h2V9H8v2h2v5H7v12H4V2H2v26a2 2 0 0 0 2 2h26v-2Zm-14 0H9V18h4Zm8-17h4v17h-4Z"/>' }, "fade": { "body": '<path fill="currentColor" d="M8.24 25.14L7 26.67a13.79 13.79 0 0 0 4.18 2.44l.69-1.87a12 12 0 0 1-3.63-2.1zM4.19 18l-2 .41A14.09 14.09 0 0 0 3.86 23l1.73-1a12.44 12.44 0 0 1-1.4-4zm7.63-13.24l-.69-1.87A13.79 13.79 0 0 0 7 5.33l1.24 1.53a12 12 0 0 1 3.58-2.1zM5.59 10L3.86 9a14.37 14.37 0 0 0-1.64 4.59l2 .34A12.05 12.05 0 0 1 5.59 10zM16 2v2a12 12 0 0 1 0 24v2a14 14 0 0 0 0-28z"/>' }, "favorite": { "body": '<path fill="currentColor" d="M22.45 6a5.47 5.47 0 0 1 3.91 1.64a5.7 5.7 0 0 1 0 8L16 26.13L5.64 15.64a5.7 5.7 0 0 1 0-8a5.48 5.48 0 0 1 7.82 0l2.54 2.6l2.53-2.58A5.44 5.44 0 0 1 22.45 6m0-2a7.47 7.47 0 0 0-5.34 2.24L16 7.36l-1.11-1.12a7.49 7.49 0 0 0-10.68 0a7.72 7.72 0 0 0 0 10.82L16 29l11.79-11.94a7.72 7.72 0 0 0 0-10.82A7.49 7.49 0 0 0 22.45 4Z"/>' }, "favorite-filled": { "body": '<path fill="currentColor" d="M22.5 4c-2 0-3.9.8-5.3 2.2L16 7.4l-1.1-1.1c-2.9-3-7.7-3-10.6-.1l-.1.1c-3 3-3 7.8 0 10.8L16 29l11.8-11.9c3-3 3-7.8 0-10.8C26.4 4.8 24.5 4 22.5 4z"/>' }, "favorite-half": { "body": '<path fill="currentColor" d="M4.21 17.061L16 29l11.79-11.939a7.731 7.731 0 0 0 0-10.823a7.494 7.494 0 0 0-10.684 0L16 7.364l-1.106-1.126a7.494 7.494 0 0 0-10.684 0a7.731 7.731 0 0 0 0 10.823Zm22.145-1.416L16 26.125V10.23q1.27-1.288 2.541-2.574a5.477 5.477 0 0 1 7.814 0a5.708 5.708 0 0 1 0 7.989Z"/>' }, "fetch-upload": { "body": '<path fill="currentColor" d="M16 7L6 17l1.41 1.41L15 10.83V28H2v2h13a2 2 0 0 0 2-2V10.83l7.59 7.58L26 17Z"/><path fill="currentColor" d="M6 8V4h20v4h2V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4Z"/>' }, "fetch-upload-cloud": { "body": '<path fill="currentColor" d="m16 13l-5 5l1.41 1.41L15 16.83V28H6v2h9a2 2 0 0 0 2-2V16.83l2.59 2.58L21 18Z"/><path fill="currentColor" d="M23.5 22H23v-2h.5a4.497 4.497 0 0 0 .356-8.981l-.815-.064l-.099-.812a6.994 6.994 0 0 0-13.883 0l-.1.812l-.815.064A4.497 4.497 0 0 0 8.5 20H9v2h-.5A6.497 6.497 0 0 1 7.2 9.136a8.994 8.994 0 0 1 17.6 0A6.497 6.497 0 0 1 23.5 22Z"/>' }, "file-storage": { "body": '<path fill="currentColor" d="M28 20h-2v2h2v6H4v-6h2v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="m22.707 7.293l-5-5A1 1 0 0 0 17 2h-6a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h10a2.002 2.002 0 0 0 2-2V8a1 1 0 0 0-.293-.707ZM20.586 8H17V4.414ZM11 20V4h4v4a2.002 2.002 0 0 0 2 2h4v10Z"/>' }, "filter": { "body": '<path fill="currentColor" d="M18 28h-4a2 2 0 0 1-2-2v-7.59L4.59 11A2 2 0 0 1 4 9.59V6a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v3.59a2 2 0 0 1-.59 1.41L20 18.41V26a2 2 0 0 1-2 2ZM6 6v3.59l8 8V26h4v-8.41l8-8V6Z"/>' }, "filter-edit": { "body": '<path fill="currentColor" d="M26 6H4v3.17l7.41 7.42l.59.58V26h4v-2h2v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-8l-7.41-7.41A2 2 0 0 1 2 9.17V6a2 2 0 0 1 2-2h22Z"/><path fill="currentColor" d="m29.71 11.29l-3-3a1 1 0 0 0-1.42 0L16 17.59V22h4.41l9.3-9.29a1 1 0 0 0 0-1.42ZM19.59 20H18v-1.59l5-5L24.59 15ZM26 13.59L24.41 12L26 10.41L27.59 12Z"/>' }, "filter-remove": { "body": '<path fill="currentColor" d="M30 11.414L28.586 10L24 14.586L19.414 10L18 11.414L22.586 16L18 20.585L19.415 22L24 17.414L28.587 22L30 20.587L25.414 16L30 11.414z"/><path fill="currentColor" d="M4 4a2 2 0 0 0-2 2v3.17a2 2 0 0 0 .586 1.415L10 18v8a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-2h-2v2h-4v-8.83l-.586-.585L4 9.171V6h20v2h2V6a2 2 0 0 0-2-2Z"/>' }, "filter-reset": { "body": '<path fill="currentColor" d="M22.5 9a7.452 7.452 0 0 0-6.5 3.792V8h-2v8h8v-2h-4.383a5.494 5.494 0 1 1 4.883 8H22v2h.5a7.5 7.5 0 0 0 0-15Z"/><path fill="currentColor" d="M26 6H4v3.171l7.414 7.414l.586.586V26h4v-2h2v2a2 2 0 0 1-2 2h-4a2 2 0 0 1-2-2v-8l-7.414-7.415A2 2 0 0 1 2 9.171V6a2 2 0 0 1 2-2h22Z"/>' }, "finance": { "body": '<path fill="currentColor" d="M2 28h28v2H2zm25-17a1 1 0 0 0 1-1V7a1 1 0 0 0-.66-.94l-11-4a1 1 0 0 0-.68 0l-11 4A1 1 0 0 0 4 7v3a1 1 0 0 0 1 1h1v13H4v2h24v-2h-2V11zM6 7.7l10-3.64L26 7.7V9H6zM18 24h-4V11h4zM8 11h4v13H8zm16 13h-4V11h4z"/>' }, "fingerprint-recognition": { "body": '<path fill="currentColor" d="M7 5.21a.77.77 0 0 1-.46-1.38A15.46 15.46 0 0 1 16 1c2.66 0 6.48.45 9.5 2.62a.77.77 0 0 1 .18 1.07a.78.78 0 0 1-1.08.17A15 15 0 0 0 16 2.53a14 14 0 0 0-8.5 2.52a.74.74 0 0 1-.5.16Z"/><path fill="currentColor" d="M28.23 12.26a.78.78 0 0 1-.63-.33C25.87 9.49 22.78 6.24 16 6.24a14 14 0 0 0-11.63 5.7a.77.77 0 0 1-1.07.17a.76.76 0 0 1-.15-1.11A15.54 15.54 0 0 1 16 4.71c5.61 0 9.81 2.08 12.84 6.34a.77.77 0 0 1-.19 1.07a.79.79 0 0 1-.42.14Z"/><path fill="currentColor" d="M12.28 31a.78.78 0 0 1-.72-.49a.75.75 0 0 1 .44-1c4.37-1.68 7-5.12 7-9.21a2.8 2.8 0 0 0-3-3c-1.86 0-2.76 1-3 3.35a4.27 4.27 0 0 1-4.52 3.83a4.27 4.27 0 0 1-4.32-4.59A11.71 11.71 0 0 1 16 8.39a12 12 0 0 1 12 11.93a18.66 18.66 0 0 1-1.39 6.5a.78.78 0 0 1-1 .41a.76.76 0 0 1-.41-1a17.25 17.25 0 0 0 1.27-5.91A10.45 10.45 0 0 0 16 9.92a10.18 10.18 0 0 0-10.38 10a2.77 2.77 0 0 0 2.79 3.06a2.74 2.74 0 0 0 3-2.48c.36-3.11 1.89-4.69 4.56-4.69a4.31 4.31 0 0 1 4.52 4.56c0 4.74-3 8.72-8 10.63a.92.92 0 0 1-.21 0Z"/><path fill="currentColor" d="M19.77 30.28a.81.81 0 0 1-.52-.2a.76.76 0 0 1 0-1.08a12.63 12.63 0 0 0 3.54-8.68c0-1.56-.48-6.65-6.7-6.65a6.83 6.83 0 0 0-4.94 1.87A6.17 6.17 0 0 0 9.32 20a.77.77 0 0 1-.77.76a.76.76 0 0 1-.77-.76A7.73 7.73 0 0 1 10 14.46a8.34 8.34 0 0 1 6-2.32c6.08 0 8.24 4.4 8.24 8.18a14.09 14.09 0 0 1-3.9 9.68a.75.75 0 0 1-.57.28Z"/><path fill="currentColor" d="M8.66 27.74a14.14 14.14 0 0 1-1.56-.09a.76.76 0 1 1 .17-1.52c2.49.28 4.45-.16 5.84-1.32a6.37 6.37 0 0 0 2.12-4.53a.75.75 0 0 1 .82-.71a.78.78 0 0 1 .72.81A7.89 7.89 0 0 1 14.09 26a8.2 8.2 0 0 1-5.43 1.74Z"/>' }, "fire": { "body": '<path fill="currentColor" d="M24.832 16.969c-.272-.647-.582-1.38-.883-2.285c-.79-2.369 1.734-4.953 1.758-4.977l-1.414-1.414c-.14.14-3.423 3.478-2.242 7.023c.326.978.652 1.75.938 2.43A9.381 9.381 0 0 1 24 22a6.24 6.24 0 0 1-4.19 5.293a8.52 8.52 0 0 0-2.103-8l-1.044-1.044l-.582 1.357c-1.836 4.284-4.021 6.154-5.306 6.934A5.844 5.844 0 0 1 8 22a9.624 9.624 0 0 1 .929-3.629A11.333 11.333 0 0 0 10 14v-1.778c.874.36 2 1.303 2 3.778v2.603l1.743-1.934c3.112-3.454 2.463-7.567 1.206-10.308A4.486 4.486 0 0 1 18 11h2c0-5.537-4.579-7-7-7h-2l1.2 1.599c.137.185 2.862 3.927 1.353 7.688A4.943 4.943 0 0 0 9 10H8v4a9.624 9.624 0 0 1-.929 3.629A11.333 11.333 0 0 0 6 22c0 3.848 3.823 8 10 8s10-4.152 10-8a11.377 11.377 0 0 0-1.168-5.031ZM12.835 27.526a16.499 16.499 0 0 0 4.367-5.598a6.105 6.105 0 0 1 .257 5.971A11.321 11.321 0 0 1 16 28a10.328 10.328 0 0 1-3.165-.474Z"/>' }, "firewall": { "body": '<path fill="currentColor" d="M27 20.397v3c-1 0-2-1.5-2-4v-3c-4 5-5 7-5 9A5 5 0 0 0 23.046 30A7.528 7.528 0 0 1 25 26.397A7.528 7.528 0 0 1 26.954 30A5 5 0 0 0 30 25.397c0-2-1.125-3.571-3-5zM17 28H4v-4h13v-2H4a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h13z"/><path fill="currentColor" d="M28 12H7a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h10v-2H7v-4h21l.001 2H30v-2a2.002 2.002 0 0 0-2-2zm-3-2H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h21a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 4v4h21V4z"/>' }, "firewall-classic": { "body": '<path fill="currentColor" d="M28 20v-3a4 4 0 0 0-8 0v3a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-6-3a2 2 0 0 1 4 0v3h-4zm6 11h-8v-6h8zm-13-1H4a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h11v2H4v3h11zm2-9H8a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h11v2H8v3h9zm5-9H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h18a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2zM4 7h18V4H4z"/>' }, "fish": { "body": '<circle cx="24" cy="7" r="1" fill="currentColor"/><path fill="currentColor" d="M26 2a16.018 16.018 0 0 0-16 16v2H3a1 1 0 0 0-.707 1.707l8 8A1 1 0 0 0 12 29v-7h2A16.018 16.018 0 0 0 30 6V2ZM10 26.586L5.414 22H10ZM12 20v-2a13.94 13.94 0 0 1 3.908-9.678l7.77 7.77A13.94 13.94 0 0 1 14 20ZM28 6a13.916 13.916 0 0 1-2.98 8.605L17.395 6.98A13.916 13.916 0 0 1 26 4h2Z"/>' }, "fish-multiple": { "body": '<path fill="currentColor" d="M30 14a12.985 12.985 0 0 0-3.829-9.243L24.414 3L23 4.414l1.757 1.757a11.071 11.071 0 0 1 0 15.657L22 24.586L23.414 26l2.757-2.757A12.985 12.985 0 0 0 30 14Z"/><circle cx="17" cy="11" r="1" fill="currentColor"/><path fill="currentColor" d="M22 14a12.985 12.985 0 0 0-3.829-9.243L16.414 3L15 4.414l1.757 1.757a11.071 11.071 0 0 1 0 15.657L14 24.586L15.414 26l2.757-2.757A12.985 12.985 0 0 0 22 14Z"/><circle cx="25" cy="11" r="1" fill="currentColor"/><circle cx="9" cy="11" r="1" fill="currentColor"/><path fill="currentColor" d="m9.414 24l.757-.757a13.07 13.07 0 0 0 0-18.486L8 2.586L5.829 4.757a13.07 13.07 0 0 0 0 18.485l.757.758l-4.293 4.293A1 1 0 0 0 3 30h10a1 1 0 0 0 .707-1.707ZM4 14a10.999 10.999 0 0 1 3.243-7.829L8 5.414l.757.757a11.071 11.071 0 0 1 0 15.657L8 22.586l-.757-.758A10.999 10.999 0 0 1 4 14Zm1.414 14L8 25.414L10.586 28Z"/>' }, "fit-to-height": { "body": '<path fill="currentColor" d="m11 10l1.41 1.41L15 8.83v14.34l-2.59-2.58L11 22l5 5l5-5l-1.41-1.41L17 23.17V8.83l2.59 2.58L21 10l-5-5l-5 5z"/><path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM4 4v24h24V4Z"/>' }, "fit-to-screen": { "body": '<path fill="currentColor" d="M22 16h2V8h-8v2h6v6zM8 24h8v-2h-6v-6H8v8z"/><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2ZM6 6v20h20.001L26 6Z"/>' }, "fit-to-width": { "body": '<path fill="currentColor" d="m22 11l-1.41 1.41L23.17 15H8.83l2.58-2.59L10 11l-5 5l5 5l1.41-1.41L8.83 17h14.34l-2.58 2.59L22 21l5-5l-5-5z"/><path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM4 4v24h24V4Z"/>' }, "flag": { "body": '<path fill="currentColor" d="M6 30H4V2h24l-5.8 9l5.8 9H6Zm0-12h18.33l-4.53-7l4.53-7H6Z"/>' }, "flag-filled": { "body": '<path fill="currentColor" d="M6 30H4V2h24l-5.8 9l5.8 9H6Z"/>' }, "flagging-taxi": { "body": '<path fill="currentColor" d="m24.798 2l-4.442 6.664A2.994 2.994 0 0 1 17.858 10H12a3.003 3.003 0 0 0-3 3v6a2.002 2.002 0 0 0 2 2v7a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2V16h-2v12h-4v-9h-2v-6a1 1 0 0 1 1-1h5.86a4.988 4.988 0 0 0 4.16-2.227l4.442-6.664Z"/><path fill="currentColor" d="M11 5a4 4 0 1 1 4 4a4.004 4.004 0 0 1-4-4Zm2 0a2 2 0 1 0 2-2a2.002 2.002 0 0 0-2 2Z"/>' }, "flash": { "body": '<path fill="currentColor" d="M11.61 29.92a1 1 0 0 1-.6-1.07L12.83 17H8a1 1 0 0 1-1-1.23l3-13A1 1 0 0 1 11 2h10a1 1 0 0 1 .78.37a1 1 0 0 1 .2.85L20.25 11H25a1 1 0 0 1 .9.56a1 1 0 0 1-.11 1l-13 17A1 1 0 0 1 12 30a1.09 1.09 0 0 1-.39-.08ZM17.75 13l2-9H11.8L9.26 15h5.91l-1.59 10.28L23 13Z"/>' }, "flash-filled": { "body": '<path fill="currentColor" d="M11.61 29.92a1 1 0 0 1-.6-1.07L12.83 17H8a1 1 0 0 1-1-1.23l3-13A1 1 0 0 1 11 2h10a1 1 0 0 1 .78.37a1 1 0 0 1 .2.85L20.25 11H25a1 1 0 0 1 .9.56a1 1 0 0 1-.11 1l-13 17A1 1 0 0 1 12 30a1.09 1.09 0 0 1-.39-.08Z"/>' }, "flash-off": { "body": '<path fill="currentColor" d="M11.13 6.89L11.8 4h8l-2 9H23l-2.49 3.25l1.43 1.43l3.87-5.07a1 1 0 0 0 .11-1A1 1 0 0 0 25 11h-4.75L22 3.22a1 1 0 0 0-.2-.85A1 1 0 0 0 21 2H11a1 1 0 0 0-1 .77l-.54 2.45zM30 28.59l-9.31-9.31l-1.42-1.43l-8.67-8.66l-1.67-1.67L3.41 2L2 3.41l6.4 6.41L7 15.77A1 1 0 0 0 8 17h4.83L11 28.85a1 1 0 0 0 .6 1.07a1.09 1.09 0 0 0 .4.08a1 1 0 0 0 .79-.39l6.68-8.73L28.59 30zM9.26 15l.81-3.52L13.59 15zm4.32 10.28L15 16.37l3 3.08z"/>' }, "flash-off-filled": { "body": '<path fill="currentColor" d="M30 28.59L3.41 2L2 3.41l6.4 6.41L7 15.77A1 1 0 0 0 8 17h4.83L11 28.85a1 1 0 0 0 .6 1.07a1.09 1.09 0 0 0 .4.08a1 1 0 0 0 .79-.39l6.68-8.73L28.59 30zm-7.47-11.72l3.26-4.26a1 1 0 0 0 .11-1A1 1 0 0 0 25 11h-4.75L22 3.22a1 1 0 0 0-.2-.85A1 1 0 0 0 21 2H11a1 1 0 0 0-1 .77l-.3 1.3z"/>' }, "flight-international": { "body": '<path fill="currentColor" d="M16 28a5.326 5.326 0 0 1-.671-.044A21.785 21.785 0 0 1 12.033 17H29.95c.024-.332.05-.663.05-1a14 14 0 1 0-14 14Zm11.95-13h-5.987A24.325 24.325 0 0 0 19.21 4.45A12.012 12.012 0 0 1 27.95 15ZM16.67 4.044A21.785 21.785 0 0 1 19.967 15h-7.934A21.785 21.785 0 0 1 15.33 4.044a5.159 5.159 0 0 1 1.342 0Zm-3.881.405A24.328 24.328 0 0 0 10.037 15H4.05a12.013 12.013 0 0 1 8.74-10.55ZM4.05 17h5.987a24.328 24.328 0 0 0 2.753 10.55A12.013 12.013 0 0 1 4.05 17Z"/><path fill="currentColor" fill-rule="evenodd" d="m25 25l5 2v-2l-5-2.5V20a1 1 0 0 0-2 0v2.5L18 25v2l5-2v3.5L21 30v1l3-1l3 1v-1l-2-1.5Z"/>' }, "flight-roster": { "body": '<path fill="currentColor" fill-rule="evenodd" d="M26 6a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h8v-2H8V6h16v6h2Z"/><path fill="currentColor" d="M10 18h6v2h-6zm0-4h12v2H10z"/><path fill="currentColor" fill-rule="evenodd" d="M22 10v2H10v-2zm3 13l5 2v-2l-5-2.5V18a1 1 0 0 0-2 0v2.5L18 23v2l5-2v3.5L21 28v1l3-1l3 1v-1l-2-1.5z"/>' }, "flight-schedule": { "body": '<path fill="currentColor" fill-rule="evenodd" d="m25 23l5 2v-2l-5-2.5V18a1 1 0 0 0-2 0v2.5L18 23v2l5-2v3.5L21 28v1l3-1l3 1v-1l-2-1.5Z"/><path fill="currentColor" fill-rule="evenodd" d="M26 4h-4V2h-2v2h-8V2h-2v2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10v-2H6V6h4v2h2V6h8v2h2V6h4v7h2V6a2 2 0 0 0-2-2Z"/>' }, "floating-ip": { "body": '<path fill="currentColor" d="M25 11a5.008 5.008 0 0 0-4.899 4H11.9a5 5 0 1 0 0 2h8.2a5 5 0 1 0 4.9-6Zm0 8a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/>' }, "flood": { "body": '<path fill="currentColor" d="M29 28a2.883 2.883 0 0 1-1-.182v-.006a3.766 3.766 0 0 1-2.053-2.133A.971.971 0 0 0 25 25a1.007 1.007 0 0 0-.949.684A3.438 3.438 0 0 1 21 28a3.44 3.44 0 0 1-3.053-2.321A.99.99 0 0 0 17 25a1.007 1.007 0 0 0-.949.684A3.438 3.438 0 0 1 13 28a3.44 3.44 0 0 1-3.053-2.321a1 1 0 0 0-1.896.005A3.438 3.438 0 0 1 5 28H2v2h3a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0a5.02 5.02 0 0 0 8 0a5.143 5.143 0 0 0 2.138 1.62A4.837 4.837 0 0 0 29 30h1v-2zm-1-14.37L29.757 15L31 13.428L16.612 2.214a1.01 1.01 0 0 0-1.242 0L1 13.419l1.243 1.572L4 13.621v5.188a3.69 3.69 0 0 1-2 2.003v2.084a4.996 4.996 0 0 0 3-1.883a5.02 5.02 0 0 0 8 0a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 25 23h5v-2h-2zm-6.051 5.053a1 1 0 0 0-1.896-.005A3.44 3.44 0 0 1 17 21a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 13 18a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 9 21a3.37 3.37 0 0 1-3.002-2.19L6 12.062l9.991-7.79L26 12.072L26.002 21H25a3.438 3.438 0 0 1-3.051-2.316z"/>' }, "flood-warning": { "body": '<path fill="currentColor" d="M29 28a2.883 2.883 0 0 1-1-.182v-.006a3.766 3.766 0 0 1-2.053-2.133A.971.971 0 0 0 25 25a1.007 1.007 0 0 0-.949.684A3.438 3.438 0 0 1 21 28a3.44 3.44 0 0 1-3.053-2.321A.99.99 0 0 0 17 25a1.007 1.007 0 0 0-.949.684A3.438 3.438 0 0 1 13 28a3.44 3.44 0 0 1-3.053-2.321a1 1 0 0 0-1.896.005A3.438 3.438 0 0 1 5 28H2v2h3a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0a5.02 5.02 0 0 0 8 0a5.143 5.143 0 0 0 2.138 1.62A4.837 4.837 0 0 0 29 30h1v-2Z"/><path fill="none" d="M23.75 11h-1.5V7h1.5ZM23 12a1 1 0 1 0 1 1a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M29.912 14.935L23.628 3.371a.718.718 0 0 0-1.256 0l-6.284 11.564A.72.72 0 0 0 16.72 16h12.56a.72.72 0 0 0 .631-1.065ZM22.25 7h1.5v4h-1.5Zm.75 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M28 21v-3h-2v3h-1a3.438 3.438 0 0 1-3.051-2.316a1 1 0 0 0-1.896-.005A3.44 3.44 0 0 1 17 21a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 13 18a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 9 21a3.366 3.366 0 0 1-3-2.186v-6.753l10-7.79l2.533 1.976l.968-1.782l-2.889-2.251a1.01 1.01 0 0 0-1.242 0L1 13.419l1.243 1.572L4 13.621v5.188a3.69 3.69 0 0 1-2 2.003v2.084a4.996 4.996 0 0 0 3-1.883a5.02 5.02 0 0 0 8 0a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 25 23h5v-2Z"/>' }, "floorplan": { "body": '<path fill="currentColor" d="M28 2H4c-1.1 0-2 .9-2 2v24c0 1.1.9 2 2 2h15v-2c0-2.8 2.2-5 5-5v-2c-3.9 0-7 3.1-7 7h-3v-4h-2v4H4V4h8v14h2v-5h4v-2h-4V4h14v7h-4v2h4v15h-4v2h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"/>' }, "flow": { "body": '<path fill="currentColor" d="M27 22.14V17a2 2 0 0 0-2-2h-8V9.86a4 4 0 1 0-2 0V15H7a2 2 0 0 0-2 2v5.14a4 4 0 1 0 2 0V17h18v5.14a4 4 0 1 0 2 0ZM8 26a2 2 0 1 1-2-2a2 2 0 0 1 2 2Zm6-20a2 2 0 1 1 2 2a2 2 0 0 1-2-2Zm12 22a2 2 0 1 1 2-2a2 2 0 0 1-2 2Z"/>' }, "flow-connection": { "body": '<path fill="currentColor" d="M28 18h-6a2.002 2.002 0 0 0-2 2v2h-5.586L10 17.586V12h2a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2H6a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h2v5.586l-4.707 4.707a1 1 0 0 0 0 1.414l5 5a1 1 0 0 0 1.414 0L14.414 24H20v2a2.002 2.002 0 0 0 2 2h6a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2ZM6 4h6v6H6Zm3 22.586L5.414 23L9 19.414L12.586 23ZM22 26v-6h6v6Z"/>' }, "flow-data": { "body": '<path fill="currentColor" d="M20 23h-8.14a4.17 4.17 0 0 0-.43-1L22 11.43a3.86 3.86 0 0 0 2 .57a4 4 0 1 0-3.86-5h-8.28a4 4 0 1 0 0 2h8.28a4.17 4.17 0 0 0 .43 1L10 20.57A3.86 3.86 0 0 0 8 20a4 4 0 1 0 3.86 5H20v3h8v-8h-8ZM8 10a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm16-4a2 2 0 1 1-2 2a2 2 0 0 1 2-2ZM8 26a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm14-4h4v4h-4Z"/>' }, "flow-logs-vpc": { "body": '<path fill="currentColor" d="M18 19h12v2H18zm0 4h12v2H18zm0 4h8v2h-8z"/><path fill="currentColor" d="M24 4a3.996 3.996 0 0 0-3.858 3H12V4H4v8h8V9h8.142a3.94 3.94 0 0 0 .425 1.019L10.019 20.567A3.952 3.952 0 0 0 8 20a4 4 0 1 0 3.858 5H16v-2h-4.142a3.94 3.94 0 0 0-.425-1.019l10.548-10.548A3.952 3.952 0 0 0 24 12a4 4 0 0 0 0-8Zm-14 6H6V6h4ZM8 26a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm16-16a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "flow-modeler": { "body": '<path fill="currentColor" d="M10 10H2V2h8zM4 8h4V4H4zm26 22h-8v-8h8zm-6-2h4v-4h-4zm-4-1H8a6 6 0 0 1 0-12v2a4 4 0 0 0 0 8h12zm4-10v-2a4 4 0 0 0 0-8H12V5h12a6 6 0 0 1 0 12z"/><path fill="currentColor" d="M19 11h-6l-3 4l6 6l6-6Z"/>' }, "flow-modeler-reference": { "body": '<path fill="currentColor" d="M30 30h-8v-8h8zm-6-2h4v-4h-4zM4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm15-9h-6l-3 4l6 6l6-6z"/><path fill="currentColor" d="M24 17v-2a4 4 0 0 0 0-8H12V5h12a6 6 0 0 1 0 12zm-14-7H2V2h8zM4 8h4V4H4z"/>' }, "flow-stream": { "body": '<path fill="currentColor" d="M20 24h-8.137a4.13 4.13 0 0 0-.429-1.02L21.98 12.434A3.994 3.994 0 1 0 20.141 8H14v2h6.141a3.96 3.96 0 0 0 .425 1.02L10.02 21.566A3.994 3.994 0 1 0 11.859 26H20v3h8v-8h-8zm4-17a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2zM8 27a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm14-4h4v4h-4zM9.693 12.75a5 5 0 0 1 0-7.5l1.324 1.5a3 3 0 0 0 0 4.501z"/><path fill="currentColor" d="M7.047 15.751a9 9 0 0 1 0-13.501l1.324 1.5a7 7 0 0 0 0 10.501Z"/>' }, "flow-stream-reference": { "body": '<path fill="currentColor" d="M20 24h-4v2h4v3h8v-8h-8zm2-1h4v4h-4zM4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zM24 5a3.996 3.996 0 0 0-3.858 3H14v2h6.142a3.94 3.94 0 0 0 .425 1.019L14 17.586L15.414 19l6.567-6.567A3.952 3.952 0 0 0 24 13a4 4 0 0 0 0-8zm0 6a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zM9.693 12.75a5 5 0 0 1 0-7.5l1.324 1.5a3 3 0 0 0 0 4.501z"/><path fill="currentColor" d="M7.047 15.751a9 9 0 0 1 0-13.501l1.324 1.5a7 7 0 0 0 0 10.501Z"/>' }, "fog": { "body": '<path fill="currentColor" d="M24.8 11.138a8.994 8.994 0 0 0-17.6 0A6.533 6.533 0 0 0 2 17.5V19a1 1 0 0 0 1 1h12a1 1 0 0 0 0-2H4v-.497a4.518 4.518 0 0 1 4.144-4.482l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.813l.815.063A4.496 4.496 0 0 1 23.5 22H7a1 1 0 0 0 0 2h16.5a6.496 6.496 0 0 0 1.3-12.862Z"/><rect width="18" height="2" x="2" y="26" fill="currentColor" rx="1"/>' }, "folder": { "body": '<path fill="currentColor" d="m11.17 6l3.42 3.41l.58.59H28v16H4V6h7.17m0-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2H16l-3.41-3.41A2 2 0 0 0 11.17 4Z"/>' }, "folder-add": { "body": '<path fill="currentColor" d="M26 20h-2v4h-4v2h4v4h2v-4h4v-2h-4z"/><path fill="currentColor" d="M28 8H16l-3.4-3.4c-.4-.4-.9-.6-1.4-.6H4c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h14v-2H4V6h7.2l3.4 3.4l.6.6H28v8h2v-8c0-1.1-.9-2-2-2z"/>' }, "folder-details": { "body": '<path fill="currentColor" d="M16 20h14v2H16zm0 4h14v2H16zm0 4h7v2h-7z"/><path fill="currentColor" d="M14 26H4V6h7.17l3.42 3.41l.58.59H28v8h2v-8a2 2 0 0 0-2-2H16l-3.41-3.41A2 2 0 0 0 11.17 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10Z"/>' }, "folder-details-reference": { "body": '<path fill="currentColor" d="M16 28h7v2h-7zm0-4h14v2H16zm0-4h14v2H16zM4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zM28 8H16l-3.414-3.414A2 2 0 0 0 11.172 4H4a2 2 0 0 0-2 2v12h2V6h7.172l3.414 3.414l.586.586H28v8h2v-8a2 2 0 0 0-2-2z"/>' }, "folder-move-to": { "body": '<path fill="currentColor" d="m18 13l-1.41 1.41L19.17 17H10v2h9.17l-2.58 2.59L18 23l5-5l-5-5z"/><path fill="currentColor" d="m11.172 6l3.414 3.414l.586.586H28v16H4V6h7.172m0-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2H16l-3.414-3.414A2 2 0 0 0 11.172 4Z"/>' }, "folder-off": { "body": '<path fill="currentColor" d="M28 8h-2.586L30 3.414L28.586 2L2 28.586L3.414 30l2-2H28a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2zm0 18H7.414l16-16H28zM4 6h7.172l3.414 3.414l.586.586H18V8h-2l-3.414-3.414A2 2 0 0 0 11.172 4H4a2 2 0 0 0-2 2v18h2z"/>' }, "folder-open": { "body": '<path fill="currentColor" d="M28 8h-7.172l-3.414-3.414A2 2 0 0 0 16 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2ZM8 26V14h8v6.17l-2.59-2.58L12 19l5 5l5-5l-1.41-1.41L18 20.17V14a2.002 2.002 0 0 0-2-2H8a2.002 2.002 0 0 0-2 2v12H4V6h12l4 4h8v2h-6v2h6v12Z"/>' }, "folder-parent": { "body": '<path fill="currentColor" d="M28 8H16l-3.414-3.414A2 2 0 0 0 11.172 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-9.17l2.59 2.58L22 18l-5-5l-5 5l1.41 1.41L16 16.83V26H4V6h7.172l4 4H28v16h-6v2h6a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z"/>' }, "folder-shared": { "body": '<path fill="currentColor" d="M28 8H16l-3.41-3.41A2 2 0 0 0 11.17 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Zm-6 18h-8v-1a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1Zm6 0h-4v-1a3 3 0 0 0-3-3h-6a3 3 0 0 0-3 3v1H4V6h7.17l3.42 3.41l.58.59H28Z"/><path fill="currentColor" d="M14 17a4 4 0 1 0 4-4a4 4 0 0 0-4 4Zm4-2a2 2 0 1 1-2 2a2 2 0 0 1 2-2Z"/>' }, "folders": { "body": '<path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h5.667a2.012 2.012 0 0 1 1.2.4l3.466 2.6H26a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zM11.666 11H5.998L6 26h20V14H15.666zM28 9H17.666l-4-3H6V4h7.667a2.012 2.012 0 0 1 1.2.4L18.333 7H28z"/>' }, "forecast-hail": { "body": '<path fill="currentColor" d="M26 18A10 10 0 1 1 16 8h4v5l6-6l-6-6v5h-4a12 12 0 1 0 12 12Z"/><circle cx="14.5" cy="23.5" r="1.5" fill="currentColor"/><circle cx="11.5" cy="19.5" r="1.5" fill="currentColor"/><circle cx="17.5" cy="19.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M13 16.586L16.586 13L18 14.413L14.413 18zm6 0L22.586 13L24 14.413L20.413 18z"/>' }, "forecast-hail-30": { "body": '<path fill="currentColor" d="M9 15.586L12.586 12L14 13.413L10.413 17zm6-.001L16.586 14L18 15.413L16.414 17z"/><circle cx="10.5" cy="22.5" r="1.5" fill="currentColor"/><circle cx="7.5" cy="18.5" r="1.5" fill="currentColor"/><circle cx="13.5" cy="18.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M14 28a10 10 0 0 1 0-20h4v5l6-6l-6-6v5h-4a12 12 0 0 0 0 24Z"/><path fill="currentColor" d="M20 20h-4v2h4v2h-3v2h3v2h-4v2h4a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm8 10h-2a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-2-8v6h2v-6z"/>' }, "forecast-lightning": { "body": '<path fill="currentColor" d="m15.67 24l-1.736-1l2.287-4h-3.889l3.993-7l1.737 1l-2.284 4h3.89l-3.998 7z"/><path fill="currentColor" d="M26 18A10 10 0 1 1 16 8h4v5l6-6l-6-6v5h-4a12 12 0 1 0 12 12Z"/>' }, "forecast-lightning-30": { "body": '<path fill="currentColor" d="M14 28a10 10 0 0 1 0-20h4v5l6-6l-6-6v5h-4a12 12 0 0 0 0 24Z"/><path fill="currentColor" d="m11.67 24l-1.736-1l2.287-4H8.332l3.993-7l1.737 1l-2.284 4h3.89l-3.998 7zM20 20h-4v2h4v2h-3v2h3v2h-4v2h4a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm8 10h-2a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-2-8v6h2v-6z"/>' }, "fork": { "body": '<path fill="currentColor" d="M26 18a3.996 3.996 0 0 0-3.858 3H17V11h5.142a4 4 0 1 0 0-2H17a2.002 2.002 0 0 0-2 2v4H9.858a4 4 0 1 0 0 2H15v4a2.002 2.002 0 0 0 2 2h5.142A3.993 3.993 0 1 0 26 18Zm0-10a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM6 18a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm20 6a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "forum": { "body": '<path fill="currentColor" d="M28 6H8c-1.2 0-2 .8-2 2v14c0 1.2.8 2 2 2h8v-2H8V8h20v14h-7.2L16 28.8l1.6 1.2l4.2-6H28c1.2 0 2-.8 2-2V8c0-1.2-.8-2-2-2z"/><path fill="currentColor" d="M4 18H2V5c0-1.7 1.3-3 3-3h13v2H5c-.6 0-1 .4-1 1v13z"/>' }, "forward-10": { "body": '<path fill="currentColor" d="M26 18A10 10 0 1 1 16 8h4v5l6-6l-6-6v5h-4a12 12 0 1 0 12 12Z"/><path fill="currentColor" d="M19.63 22.13a2.84 2.84 0 0 1-1.28-.27a2.44 2.44 0 0 1-.89-.77a3.57 3.57 0 0 1-.52-1.25a7.69 7.69 0 0 1-.17-1.68a7.83 7.83 0 0 1 .17-1.68a3.65 3.65 0 0 1 .52-1.25a2.44 2.44 0 0 1 .89-.77a2.84 2.84 0 0 1 1.28-.27a2.44 2.44 0 0 1 2.16 1a5.23 5.23 0 0 1 .7 2.93a5.23 5.23 0 0 1-.7 2.93a2.44 2.44 0 0 1-2.16 1.08zm0-1.22a1.07 1.07 0 0 0 1-.55a3.38 3.38 0 0 0 .37-1.51v-1.38a3.31 3.31 0 0 0-.29-1.5a1.23 1.23 0 0 0-2.06 0a3.31 3.31 0 0 0-.29 1.5v1.38a3.38 3.38 0 0 0 .29 1.51a1.06 1.06 0 0 0 .98.55zm-9 1.09v-1.18h2v-5.19l-1.86 1l-.55-1.06l2.32-1.3H14v6.5h1.78V22z"/>' }, "forward-30": { "body": '<path fill="currentColor" d="M26 18A10 10 0 1 1 16 8h4v5l6-6l-6-6v5h-4a12 12 0 1 0 12 12Z"/><path fill="currentColor" d="M19.64 22.13a2.81 2.81 0 0 1-1.28-.27a2.36 2.36 0 0 1-.89-.77a3.39 3.39 0 0 1-.47-1.25a7.12 7.12 0 0 1-.17-1.68a7.24 7.24 0 0 1 .17-1.68a3.46 3.46 0 0 1 .52-1.25a2.36 2.36 0 0 1 .89-.77a2.81 2.81 0 0 1 1.28-.27a2.44 2.44 0 0 1 2.16 1a5.31 5.31 0 0 1 .7 2.93a5.31 5.31 0 0 1-.7 2.93a2.44 2.44 0 0 1-2.21 1.08zm0-1.22a1 1 0 0 0 1-.55a3.24 3.24 0 0 0 .3-1.51v-1.38a3.17 3.17 0 0 0-.3-1.5a1.22 1.22 0 0 0-2.05 0a3.18 3.18 0 0 0-.29 1.5v1.38a3.25 3.25 0 0 0 .29 1.51a1 1 0 0 0 1.05.55zm-7.02-3.49a1.46 1.46 0 0 0 1-.27a.84.84 0 0 0 .31-.68v-.08a.94.94 0 0 0-.3-.74a1.2 1.2 0 0 0-.83-.27a1.65 1.65 0 0 0-.89.24a2.1 2.1 0 0 0-.68.68l-.93-.83a5.37 5.37 0 0 1 .44-.51a2.7 2.7 0 0 1 .54-.4a2.55 2.55 0 0 1 .7-.27a3.25 3.25 0 0 1 .87-.1a3.94 3.94 0 0 1 1.06.14a2.33 2.33 0 0 1 .82.4a1.91 1.91 0 0 1 .54.63a1.87 1.87 0 0 1 .18.83a2 2 0 0 1-.11.67a1.82 1.82 0 0 1-.32.52a1.79 1.79 0 0 1-.47.36a2.27 2.27 0 0 1-.57.2V18a2.34 2.34 0 0 1 .63.21a1.7 1.7 0 0 1 .51.38a1.89 1.89 0 0 1 .34.55a2.07 2.07 0 0 1 .12.73a2 2 0 0 1-.2.92a2 2 0 0 1-.58.72a2.66 2.66 0 0 1-.89.45a3.76 3.76 0 0 1-1.15.16a4.1 4.1 0 0 1-1-.11a3.1 3.1 0 0 1-.76-.31a2.76 2.76 0 0 1-.56-.45a4.22 4.22 0 0 1-.44-.55l1.07-.81a3.07 3.07 0 0 0 .28.42a1.94 1.94 0 0 0 .36.34a1.57 1.57 0 0 0 .45.22a2 2 0 0 0 .57.07a1.45 1.45 0 0 0 1-.3a1.12 1.12 0 0 0 .34-.85v-.08a1 1 0 0 0-.37-.8a1.78 1.78 0 0 0-1.06-.28h-.76v-1.21z"/>' }, "forward-5": { "body": '<path fill="currentColor" d="M26 18A10 10 0 1 1 16 8h4v5l6-6l-6-6v5h-4a12 12 0 1 0 12 12Z"/><path fill="currentColor" d="M18.58 15.58h-3.45L15 18.15a4.83 4.83 0 0 1 .26-.45a1.59 1.59 0 0 1 .33-.35a1.53 1.53 0 0 1 .44-.23a2 2 0 0 1 .6-.08a2.54 2.54 0 0 1 .92.16a2.06 2.06 0 0 1 .74.48a2.28 2.28 0 0 1 .5.77a2.73 2.73 0 0 1 .18 1a2.87 2.87 0 0 1-.19 1.07a2.36 2.36 0 0 1-.55.84a2.44 2.44 0 0 1-.89.55a3.23 3.23 0 0 1-1.21.2a3.79 3.79 0 0 1-.94-.11a3 3 0 0 1-.74-.32a2.45 2.45 0 0 1-.55-.45a4.13 4.13 0 0 1-.41-.55l1.06-.81l.27.41a1.82 1.82 0 0 0 .34.34a1.59 1.59 0 0 0 .43.22a1.52 1.52 0 0 0 .55.08a1.29 1.29 0 0 0 1-.36a1.41 1.41 0 0 0 .33-1v-.06a1.18 1.18 0 0 0-1.28-1.27a1.44 1.44 0 0 0-.77.18a1.94 1.94 0 0 0-.48.39l-1.19-.17l.29-4.31h4.52Z"/>' }, "fragile": { "body": '<path fill="currentColor" d="M23 12V6h-2v6a5 5 0 0 1-10 0V4h5.586l-2.293 2.293a1 1 0 0 0 0 1.414L15.586 9l-2.293 2.293l1.414 1.414l3-3a1 1 0 0 0 0-1.414L16.414 7l3.293-3.293A1 1 0 0 0 19 2h-9a1 1 0 0 0-1 1v9a7.005 7.005 0 0 0 6 6.92V28h-5v2h12v-2h-5v-9.08A7.005 7.005 0 0 0 23 12Z"/>' }, "friendship": { "body": '<path fill="currentColor" d="M25 10H7a3.003 3.003 0 0 0-3 3v6a2.002 2.002 0 0 0 2 2v7a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2V16h-2v12H8v-9H6v-6a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v6h-2v9h-4V16h-2v12a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2v-7a2.002 2.002 0 0 0 2-2v-6a3.003 3.003 0 0 0-3-3zM10 9a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm12 6a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/>' }, "fruit-bowl": { "body": '<path fill="currentColor" d="M26 15a6.003 6.003 0 0 0-3.107-5.253A3.98 3.98 0 0 0 24 7h-2a2.002 2.002 0 0 1-2 2a6.004 6.004 0 0 0-5.995 5.892A7 7 0 0 1 12 10a3.996 3.996 0 0 0-3-3.858V4H7v2.142A3.996 3.996 0 0 0 4 10v5H2v1a14 14 0 0 0 28 0v-1Zm-6-4a4.005 4.005 0 0 1 4 4h-8a4.005 4.005 0 0 1 4-4ZM6 10a2 2 0 1 1 4 0a8.991 8.991 0 0 0 1.532 5H6Zm10 18A12.017 12.017 0 0 1 4.041 17H27.96A12.017 12.017 0 0 1 16 28Z"/>' }, "function": { "body": '<path fill="currentColor" d="m19.626 29.526l-.516-1.933a12.004 12.004 0 0 0 6.121-19.26l1.538-1.28a14.003 14.003 0 0 1-7.143 22.473Z"/><path fill="currentColor" d="M10 29H8v-3.82l.804-.16C10.262 24.727 12 23.62 12 20v-1.382l-4-2v-2.236l4-2V12c0-5.467 3.925-9 10-9h2v3.82l-.804.16C21.738 7.273 20 8.38 20 12v.382l4 2v2.236l-4 2V20c0 5.467-3.925 9-10 9Zm0-2c4.935 0 8-2.682 8-7v-2.618l3.764-1.882L18 13.618V12c0-4.578 2.385-6.192 4-6.76V5c-4.935 0-8 2.682-8 7v1.618L10.236 15.5L14 17.382V20c0 4.578-2.385 6.192-4 6.76Z"/><path fill="currentColor" d="M5.231 24.947a14.003 14.003 0 0 1 7.147-22.474l.516 1.932a12.004 12.004 0 0 0-6.125 19.263Z"/>' }, "function-math": { "body": '<path fill="currentColor" d="M26 18h-2l-2 3.897L20 18h-2l2.905 5L18 28h2l2-3.799L24 28h2l-2.902-5L26 18zM19 6V4h-5.087a1.99 1.99 0 0 0-1.992 1.819L11.27 13H7v2h4.087l-1 11H5v2h5.087a1.99 1.99 0 0 0 1.992-1.819L13.095 15H18v-2h-4.723l.636-7z"/>' }, "fusion-blender": { "body": '<path d="M20 12h-3V4h3V2h-8v2h3v8h-3a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h3v8h-3v2h8v-2h-3v-8h3a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm-8 6v-4h8v4z" fill="currentColor"/>', "hidden": true }, "game-console": { "body": '<path fill="currentColor" d="M7.51 26a5.48 5.48 0 0 1-1.44-.19A5.6 5.6 0 0 1 2.19 19l2.33-8.84a5.54 5.54 0 0 1 2.59-3.43a5.43 5.43 0 0 1 4.15-.54A5.52 5.52 0 0 1 14.7 9h2.6a5.49 5.49 0 0 1 3.44-2.81a5.43 5.43 0 0 1 4.15.54a5.57 5.57 0 0 1 2.59 3.41L29.81 19a5.6 5.6 0 0 1-3.89 6.83a5.43 5.43 0 0 1-4.15-.54a5.54 5.54 0 0 1-2.59-3.41L19 21h-6l-.23.86a5.54 5.54 0 0 1-2.59 3.41a5.46 5.46 0 0 1-2.67.73ZM9.83 8a3.49 3.49 0 0 0-1.72.46a3.6 3.6 0 0 0-1.66 2.19l-2.33 8.84a3.6 3.6 0 0 0 2.48 4.39a3.43 3.43 0 0 0 2.62-.34a3.54 3.54 0 0 0 1.66-2.19L11.5 19h9l.61 2.35a3.58 3.58 0 0 0 1.66 2.19a3.46 3.46 0 0 0 2.63.34a3.58 3.58 0 0 0 2.47-4.39l-2.33-8.84a3.55 3.55 0 0 0-1.65-2.19a3.46 3.46 0 0 0-2.63-.34a3.55 3.55 0 0 0-2.37 2.22l-.24.66h-5.3l-.24-.66a3.56 3.56 0 0 0-2.38-2.22a3.48 3.48 0 0 0-.9-.12Z"/><path fill="currentColor" d="M10 16a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm0-2Z"/><circle cx="22" cy="12" r="1" fill="currentColor"/><circle cx="22" cy="16" r="1" fill="currentColor"/><circle cx="20" cy="14" r="1" fill="currentColor"/><circle cx="24" cy="14" r="1" fill="currentColor"/>' }, "game-wireless": { "body": '<path fill="currentColor" d="M7.51 30a5.48 5.48 0 0 1-1.44-.19A5.6 5.6 0 0 1 2.19 23l2.33-8.84a5.54 5.54 0 0 1 2.59-3.41a5.43 5.43 0 0 1 4.15-.54A5.52 5.52 0 0 1 14.7 13h2.6a5.49 5.49 0 0 1 3.44-2.81a5.43 5.43 0 0 1 4.15.54a5.55 5.55 0 0 1 2.59 3.41L29.81 23a5.6 5.6 0 0 1-3.89 6.83a5.43 5.43 0 0 1-4.15-.54a5.54 5.54 0 0 1-2.59-3.41L19 25h-6l-.23.86a5.54 5.54 0 0 1-2.59 3.41a5.46 5.46 0 0 1-2.67.73Zm2.32-18a3.49 3.49 0 0 0-1.72.46a3.58 3.58 0 0 0-1.66 2.19l-2.33 8.84a3.6 3.6 0 0 0 2.48 4.39a3.43 3.43 0 0 0 2.62-.34a3.57 3.57 0 0 0 1.66-2.19L11.5 23h9l.61 2.35a3.6 3.6 0 0 0 1.66 2.19a3.46 3.46 0 0 0 2.63.34a3.58 3.58 0 0 0 2.47-4.39l-2.33-8.84a3.53 3.53 0 0 0-1.65-2.19a3.46 3.46 0 0 0-2.63-.34a3.55 3.55 0 0 0-2.37 2.22l-.24.66h-5.3l-.24-.66a3.56 3.56 0 0 0-2.38-2.22a3.48 3.48 0 0 0-.9-.12Z"/><path fill="currentColor" d="M10 20a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm0-2Z"/><circle cx="22" cy="16" r="1" fill="currentColor"/><circle cx="22" cy="20" r="1" fill="currentColor"/><circle cx="20" cy="18" r="1" fill="currentColor"/><circle cx="24" cy="18" r="1" fill="currentColor"/><path fill="currentColor" d="m13.75 9l-1.5-1.33a5 5 0 0 1 7.5 0L18.25 9a3 3 0 0 0-4.5 0Z"/><path fill="currentColor" d="M21.25 6.37a7 7 0 0 0-10.5 0l-1.5-1.32a9 9 0 0 1 13.5 0Z"/>' }, "gamification": { "body": '<path fill="currentColor" d="M23 23h-.132l.964-1.445A1 1 0 0 0 24 21v-9c0-9.885-7.92-10-8-10a1 1 0 0 0-1 1v2h-1a.996.996 0 0 0-.581.186l-7 5a1 1 0 0 0-.368 1.13l1 3a.998.998 0 0 0 1.09.674l4.87-.696l-3.86 6.176a1 1 0 0 0 .017 1.085L10.132 23H10a3.003 3.003 0 0 0-3 3v4h19v-4a3.003 3.003 0 0 0-3-3Zm-7.152-9.47a1 1 0 0 0-.99-1.52l-6.174.882l-.502-1.508L14.32 7h1.679a1 1 0 0 0 1-.999L17 4.129c1.501.335 4.217 1.541 4.86 5.871H19v2h3v2h-3v2h3v2h-3v2h3v.697L20.465 23h-7.93l-1.345-2.018ZM24 28H9v-2a1 1 0 0 1 1-1h13a1 1 0 0 1 1 1Z"/>' }, "gas-station": { "body": '<path fill="currentColor" d="M8 10h7v2H8z"/><path fill="currentColor" d="m28.414 8l-5-5L22 4.414l3 3V12a2.002 2.002 0 0 0 2 2v10.5a1.5 1.5 0 0 1-3 0V16a1 1 0 0 0-1-1h-4V5a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v21H2v2h19v-2h-2v-9h3v7.4a3.564 3.564 0 0 0 2.765 3.525A3.506 3.506 0 0 0 29 24.5V9.414A2 2 0 0 0 28.414 8ZM17 26H6V6h11Z"/>' }, "gas-station-filled": { "body": '<path fill="none" d="M8 10h7v2H8z"/><path fill="currentColor" d="m28.414 8l-5-5L22 4.414l3 3V12a2.002 2.002 0 0 0 2 2v10.5a1.5 1.5 0 0 1-3 0V16a1 1 0 0 0-1-1h-4V5a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v21H2v2h19v-2h-2v-9h3v7.4a3.564 3.564 0 0 0 2.765 3.525A3.506 3.506 0 0 0 29 24.5V9.415A2 2 0 0 0 28.414 8ZM15 12H8v-2h7Z"/>' }, "gateway": { "body": '<path fill="currentColor" d="M31 16a1.986 1.986 0 0 0-.586-1.414l-5.793-5.793l2.868-2.868a2 2 0 1 0-1.414-1.414L23.207 7.38l-5.793-5.793a2 2 0 0 0-2.828 0L8.793 7.379L5.925 4.51a2 2 0 1 0-1.414 1.414l2.868 2.868l-5.793 5.793a2 2 0 0 0 0 2.828l5.793 5.793l-2.868 2.868a2 2 0 1 0 1.414 1.414l2.868-2.868l5.793 5.793a2 2 0 0 0 2.828 0l5.793-5.793l2.868 2.868a2 2 0 1 0 1.414-1.414l-2.868-2.868l5.793-5.793A1.987 1.987 0 0 0 31 16Zm-7.793 5.793L20.414 19L19 20.414l2.793 2.793L16 29l-5.793-5.793L13 20.414L11.586 19l-2.793 2.793L3 16l5.793-5.793L11.585 13L13 11.586l-2.793-2.793L16 3l5.793 5.793L19 11.585L20.414 13l2.793-2.793L29 16Z"/>' }, "gateway-api": { "body": '<path fill="currentColor" d="M17 18.184v-4.368a3 3 0 1 0-2 0v4.369a3 3 0 1 0 2 0ZM16 10a1 1 0 1 1-1 1a1 1 0 0 1 1-1Zm0 12a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "gateway-mail": { "body": '<path fill="currentColor" d="M19.878 12.122a.419.419 0 0 0-.437-.097l-9.167 3.333a.417.417 0 0 0-.012.779l4 1.6l1.6 4a.417.417 0 0 0 .388.263h.007a.417.417 0 0 0 .385-.274l3.333-9.167a.416.416 0 0 0-.097-.437Z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "gateway-public": { "body": '<path fill="currentColor" d="M19 14h-5v-2a2 2 0 0 1 4 0h2a4 4 0 0 0-8 0v2.278A1.993 1.993 0 0 0 11 16v5a2.002 2.002 0 0 0 2 2h6a2.002 2.002 0 0 0 2-2v-5a2.002 2.002 0 0 0-2-2Zm0 7h-6v-5h6Z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "gateway-security": { "body": '<path fill="currentColor" d="M11 11v6.468a5.022 5.022 0 0 0 2.861 4.52L16 23l2.139-1.013A5.022 5.022 0 0 0 21 17.467V11Zm8 6.468a3.012 3.012 0 0 1-1.717 2.71L16 20.787l-1.283-.607A3.012 3.012 0 0 1 13 17.468V13h6Z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "gateway-user-access": { "body": '<path fill="currentColor" d="M21 22h-2v-2a1.001 1.001 0 0 0-1-1h-4a1.001 1.001 0 0 0-1 1v2h-2v-2a3.003 3.003 0 0 1 3-3h4a3.003 3.003 0 0 1 3 3zm-5-6a3.5 3.5 0 1 1 3.5-3.5A3.504 3.504 0 0 1 16 16zm0-5a1.5 1.5 0 1 0 1.5 1.5A1.502 1.502 0 0 0 16 11z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "gateway-vpn": { "body": '<path fill="currentColor" d="M20 14.278V12a4 4 0 0 0-8 0v2.278A1.993 1.993 0 0 0 11 16v5a2.002 2.002 0 0 0 2 2h6a2.002 2.002 0 0 0 2-2v-5a1.993 1.993 0 0 0-1-1.722ZM16 10a2.002 2.002 0 0 1 2 2v2h-4v-2a2.002 2.002 0 0 1 2-2Zm3 11h-6v-5h6Z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "gender-female": { "body": '<path fill="currentColor" d="M17 19.93a8 8 0 1 0-2 0V22h-5v2h5v4h2v-4h5v-2h-5ZM10 12a6 6 0 1 1 6 6a6.007 6.007 0 0 1-6-6Z"/>' }, "gender-male": { "body": '<path fill="currentColor" d="M18 4v2h6.586l-7.688 7.689a8.028 8.028 0 1 0 1.414 1.414L26 7.414V14h2V4Zm-6 22a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Z"/>' }, "generate-pdf": { "body": '<path fill="currentColor" d="M24 24v4H8v-4H6v4a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-4Z"/><path fill="currentColor" d="m21 21l-1.414-1.414L17 22.172V14h-2v8.172l-2.586-2.586L11 21l5 5l5-5zm7-17V2h-6v10h2V8h3V6h-3V4h4zm-11 8h-4V2h4a3.003 3.003 0 0 1 3 3v4a3.003 3.003 0 0 1-3 3zm-2-2h2a1.001 1.001 0 0 0 1-1V5a1.001 1.001 0 0 0-1-1h-2zM9 2H4v10h2V9h3a2.003 2.003 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2zM6 7V4h3l.001 3z"/>' }, "gif": { "body": '<path fill="currentColor" d="M2 12v8a3 3 0 0 0 3 3h5v-8H6v2h2v4H5a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h5V9H5a3 3 0 0 0-3 3zm28-1V9h-8v14h2v-6h5v-2h-5v-4h6zM12 9v2h3v10h-3v2h8v-2h-3V11h3V9h-8z"/>' }, "gift": { "body": '<path fill="currentColor" d="M26 10h-2.762A4.487 4.487 0 0 0 16 4.707A4.487 4.487 0 0 0 8.762 10H6a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2v10a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2V18a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2Zm-9-2.5a2.5 2.5 0 1 1 2.5 2.5H17ZM12.5 5A2.503 2.503 0 0 1 15 7.5V10h-2.5a2.5 2.5 0 0 1 0-5ZM6 12h9v4H6Zm2 6h7v10H8Zm16.001 10H17V18h7ZM17 16v-4h9l.001 4Z"/>' }, "globe": { "body": '<path fill="currentColor" d="M14 4a7 7 0 1 1-7 7a7 7 0 0 1 7-7m0-2a9 9 0 1 0 9 9a9 9 0 0 0-9-9Z"/><path fill="currentColor" d="M28 11a13.956 13.956 0 0 0-4.105-9.895L22.48 2.52a11.994 11.994 0 0 1-16.924 17l-.038-.038l-1.414 1.414A13.956 13.956 0 0 0 14 25v3h-4v2h10v-2h-4v-3.16A14.01 14.01 0 0 0 28 11Z"/>' }, "gradient": { "body": '<path fill="currentColor" d="M26 4H6a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2Zm-4 22v-4h-4v4h-4v-4h-4v-4h4v-4h-4v-4h4V6h4v4h4V6h4v20Z"/><path fill="currentColor" d="M14 10h4v4h-4zm0 8h4v4h-4zm4-4h4v4h-4z"/>' }, "graphical-data-flow": { "body": '<path fill="currentColor" d="M28 30h-6a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-6-8h-.001L22 28h6v-6zm-4 4h-6a3.003 3.003 0 0 1-3-3v-4h2v4a1.001 1.001 0 0 0 1 1h6zm8-8h-2v-3a1.001 1.001 0 0 0-1-1h-5v-2h5a3.003 3.003 0 0 1 3 3zm-11 0a.999.999 0 0 1-.497-.132L10 15.288l-4.503 2.58a1 1 0 0 1-1.471-1.094l1.061-4.572l-2.818-3.02a1 1 0 0 1 .566-1.668l4.2-.702l2.066-4.25a1 1 0 0 1 1.788-.02l2.204 4.27l4.077.702a1 1 0 0 1 .561 1.668l-2.818 3.02l1.06 4.572A1 1 0 0 1 15 18zm-5-5s.343.18.497.269l3.01 1.724l-.784-3.377l2.282-2.445l-3.233-.557l-1.745-3.382l-1.644 3.382l-3.381.565l2.274 2.437l-.784 3.377l3.01-1.724C9.658 13.18 10 13 10 13z"/>' }, "grid": { "body": '<path fill="currentColor" d="M12 4H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 8H6V6h6zm14-8h-6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 8h-6V6h6zm-14 6H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zm0 8H6v-6h6zm14-8h-6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zm0 8h-6v-6h6z"/>' }, "group": { "body": '<path fill="currentColor" d="M31 30h-2v-3a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3v3h-2v-3a5 5 0 0 1 5-5h4a5 5 0 0 1 5 5zm-7-18a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zm-9 12h-2v-3a3 3 0 0 0-3-3H6a3 3 0 0 0-3 3v3H1v-3a5 5 0 0 1 5-5h4a5 5 0 0 1 5 5zM8 4a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "group-access": { "body": '<path fill="currentColor" d="M8 19H6v-2a3.003 3.003 0 0 1 3-3h5v2H9a1.001 1.001 0 0 0-1 1zm4-6a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm8 13a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm6 12h-2v-2a1.001 1.001 0 0 0-1-1h-6a1.001 1.001 0 0 0-1 1v2h-2v-2a3.003 3.003 0 0 1 3-3h6a3.003 3.003 0 0 1 3 3z"/><path fill="currentColor" d="M8 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h4v2H4v24h4zm20 0h-4v-2h4V4h-4V2h4a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2z"/>' }, "group-account": { "body": '<path fill="currentColor" d="M17 11h-6a3 3 0 0 0-3 3v4h2v-4a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v1h2v-1a3 3 0 0 0-3-3zm-7-5a4 4 0 1 0 4-4a4 4 0 0 0-4 4zm6 0a2 2 0 1 1-2-2a2 2 0 0 1 2 2zm6 21h-6a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-6-8v6h6v-6zM8 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h4v2H4v24h4zm20 0h-4v-2h4V4h-4V2h4a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2z"/>' }, "group-objects": { "body": '<path fill="currentColor" d="M19 13V9H9v10h4v4h10V13Zm-8-2h6v6h-6Zm10 10h-6v-2h4v-4h2Z"/><path fill="currentColor" d="M30 8V2h-6v2H8V2H2v6h2v16H2v6h6v-2h16v2h6v-6h-2V8Zm-4-4h2v2h-2ZM4 4h2v2H4Zm2 24H4v-2h2Zm22 0h-2v-2h2Zm-2-4h-2v2H8v-2H6V8h2V6h16v2h2Z"/>' }, "group-objects-new": { "body": '<path fill="currentColor" d="M17 10h-2v5h-5v2h5v5h2v-5h5v-2h-5v-5z"/><path fill="currentColor" d="M30 8V2h-6v2H8V2H2v6h2v16H2v6h6v-2h16v2h6v-6h-2V8Zm-4-4h2v2h-2ZM4 4h2v2H4Zm2 24H4v-2h2Zm22 0h-2v-2h2Zm-2-4h-2v2H8v-2H6V8h2V6h16v2h2Z"/>' }, "group-objects-save": { "body": '<path fill="currentColor" d="m14 18.18l-3.59-3.59L9 16l5 5l9-9l-1.41-1.419L14 18.18z"/><path fill="currentColor" d="M30 8V2h-6v2H8V2H2v6h2v16H2v6h6v-2h16v2h6v-6h-2V8Zm-4-4h2v2h-2ZM4 4h2v2H4Zm2 24H4v-2h2Zm22 0h-2v-2h2Zm-2-4h-2v2H8v-2H6V8h2V6h16v2h2Z"/>' }, "group-presentation": { "body": '<path fill="currentColor" d="M10 30H8v-3H4v3H2v-3a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2zm20 0h-2v-3h-4v3h-2v-3a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2zm-10 0h-2v-3h-4v3h-2v-3a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2z"/><circle cx="16" cy="22" r="2" fill="currentColor"/><circle cx="6" cy="22" r="2" fill="currentColor"/><circle cx="26" cy="22" r="2" fill="currentColor"/><circle cx="21" cy="18" r="2" fill="currentColor"/><circle cx="11" cy="18" r="2" fill="currentColor"/><path fill="currentColor" d="M26 14H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2ZM6 4v8h20V4Z"/>' }, "group-resource": { "body": '<path fill="currentColor" d="M22 24H10a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zM10 10v12h12V10zM8 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h4v2H4v24h4zm20 0h-4v-2h4V4h-4V2h4a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2z"/>' }, "group-security": { "body": '<path fill="currentColor" d="M11 21H9v-2a3.003 3.003 0 0 1 3-3h6v2h-6a1.001 1.001 0 0 0-1 1zm4-6a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm9 13a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm6 12h-2v-2a1.001 1.001 0 0 0-1-1h-6a1.001 1.001 0 0 0-1 1v2h-2v-2a3.003 3.003 0 0 1 3-3h6a3.003 3.003 0 0 1 3 3z"/><path fill="currentColor" d="m14 27.733l-5.234-2.79A8.986 8.986 0 0 1 4 17V4h20v6h2V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v13a10.981 10.981 0 0 0 5.824 9.707L14 30Z"/>' }, "growth": { "body": '<path fill="currentColor" d="M20 8v2h6.586L18 18.586l-4.293-4.293a1 1 0 0 0-1.414 0L2 24.586L3.414 26L13 16.414l4.293 4.293a1 1 0 0 0 1.414 0L28 11.414V18h2V8Z"/>' }, "gui": { "body": '<circle cx="20" cy="8" r="1" fill="currentColor"/><circle cx="23" cy="8" r="1" fill="currentColor"/><circle cx="26" cy="8" r="1" fill="currentColor"/><path fill="currentColor" d="M28 4H4a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2Zm0 2v4H4V6ZM4 12h6v14H4Zm8 14V12h16v14Z"/>' }, "gui-management": { "body": '<path fill="currentColor" d="M30 24v-2h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 24 18.101V16h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 18.101 22H16v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V30h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 27.899 24Zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/><path fill="currentColor" d="M28 4H4a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h10v-2H4V12h24v3h2V6a2.002 2.002 0 0 0-2-2Zm0 6H4V6h24Z"/><circle cx="20" cy="8" r="1" fill="currentColor"/><circle cx="23" cy="8" r="1" fill="currentColor"/><circle cx="26" cy="8" r="1" fill="currentColor"/>' }, "h": { "body": '<path d="M18 9v6h-4V9h-2v14h2v-6h4v6h2V9h-2z" fill="currentColor"/>', "hidden": true }, "hail": { "body": '<circle cx="21.5" cy="29.5" r="1.5" fill="currentColor"/><circle cx="24.5" cy="25.5" r="1.5" fill="currentColor"/><circle cx="7.5" cy="25.5" r="1.5" fill="currentColor"/><circle cx="4.5" cy="29.5" r="1.5" fill="currentColor"/><circle cx="10.499" cy="29.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="m15.868 30.496l-1.736-.992L17.276 24h-5.999l4.855-8.496l1.736.992L14.723 22h6.001l-4.856 8.496z"/><path fill="currentColor" d="M23.5 22H23v-2h.5a4.497 4.497 0 0 0 .356-8.981l-.815-.064l-.099-.812a6.994 6.994 0 0 0-13.883 0l-.1.812l-.815.064A4.497 4.497 0 0 0 8.5 20H9v2h-.5A6.497 6.497 0 0 1 7.2 9.136a8.994 8.994 0 0 1 17.6 0A6.497 6.497 0 0 1 23.5 22Z"/>' }, "hanging-protocol": { "body": '<path d="M26.37 20.52L17 15.41v-1.55A4 4 0 1 0 12 10h2a2 2 0 1 1 4 .34A2.08 2.08 0 0 1 15.89 12a.89.89 0 0 0-.89.89v2.52l-9.37 5.11A3.1 3.1 0 0 0 4.25 22a2.83 2.83 0 0 0 2.56 4h18.38a2.83 2.83 0 0 0 2.56-4a3.1 3.1 0 0 0-1.38-1.48zM25.19 24H6.81a.81.81 0 0 1-.81-.81a1 1 0 0 1 .52-.88L16 17.14l9.48 5.17a1 1 0 0 1 .52.88a.81.81 0 0 1-.81.81z" fill="currentColor"/>', "hidden": true }, "harbor": { "body": '<path fill="currentColor" d="M27 17a11.01 11.01 0 0 1-10 10.95V14h6v-2h-6V9.858a4 4 0 1 0-2 0V12H9v2h6v13.95A11.01 11.01 0 0 1 5 17H3a13 13 0 0 0 26 0ZM14 6a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Z"/>' }, "hardware-security-module": { "body": '<circle cx="21.5" cy="7.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M14.414 20H9v-5.414l6.03-6.03A5.352 5.352 0 0 1 15 8a6 6 0 1 1 6 6a5.358 5.358 0 0 1-.556-.03zM11 18h2.586l6.17-6.17l.518.095A3.935 3.935 0 0 0 21 12a4.05 4.05 0 1 0-3.925-3.273l.095.517l-6.17 6.17zm17 2h-9v2h9v6H4v-6h2v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2z"/><circle cx="7" cy="25" r="1" fill="currentColor"/>' }, "hashtag": { "body": '<path fill="currentColor" d="M28 12v-2h-6V4h-2v6h-8V4h-2v6H4v2h6v8H4v2h6v6h2v-6h8v6h2v-6h6v-2h-6v-8Zm-8 8h-8v-8h8Z"/>' }, "haze": { "body": '<path fill="currentColor" d="M19 28H3a1 1 0 0 1 0-2h16a1 1 0 0 1 0 2zm-4-8H3a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2zm10.793 2.379l2.828 2.828l-1.414 1.414l-2.828-2.828zM28 15h4v2h-4zm-3.621-6.793l2.828-2.828l1.414 1.414l-2.828 2.828zM17 2h2v4h-2zm-6.793 7.621L7.38 6.793l1.414-1.414l2.828 2.828z"/><path fill="currentColor" d="M18 8a8.01 8.01 0 0 0-8 8h2a6 6 0 1 1 6 6H7a1 1 0 0 0 0 2h11a8 8 0 0 0 0-16Z"/>' }, "haze-night": { "body": '<path fill="currentColor" d="M29 22H13a1 1 0 0 0 0 2h9.677a11.1 11.1 0 0 1-7.556 2.998c-.138 0-.278.004-.418 0a11.095 11.095 0 0 1-3.2-21.584a15.153 15.153 0 0 0-.05 6.586H13.5a13.15 13.15 0 0 1 .39-7.62A1.015 1.015 0 0 0 12.98 3a.983.983 0 0 0-.175.016a13.096 13.096 0 0 0 1.825 25.981c.164.006.328 0 .49 0A13.04 13.04 0 0 0 25.379 24H29a1 1 0 0 0 0-2Z"/><path fill="currentColor" d="M27 20H17a1 1 0 0 1 0-2h10a1 1 0 0 1 0 2zm-2-4H13a1 1 0 0 1 0-2h12a1 1 0 0 1 0 2z"/>' }, "hd": { "body": '<path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2ZM4 24V8h24v16Z"/><path fill="currentColor" d="M22 11h-4v10h4a3 3 0 0 0 3-3v-4a3 3 0 0 0-3-3zm1 7a1 1 0 0 1-1 1h-2v-6h2a1 1 0 0 1 1 1zm-10-7v4h-3v-4H8v10h2v-4h3v4h2V11h-2z"/>' }, "hd-filled": { "body": '<path fill="currentColor" d="M22 13h-2v6h2a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2ZM15 21h-2v-4h-3v4H8V11h2v4h3v-4h2Zm10-3a3 3 0 0 1-3 3h-4V11h4a3 3 0 0 1 3 3Z"/>' }, "hdr": { "body": '<path fill="currentColor" d="M30 15v-4a2 2 0 0 0-2-2h-6v14h2v-6h1.48l2.34 6H30l-2.33-6H28a2 2 0 0 0 2-2zm-6-4h4v4h-4zm-8 12h-4V9h4a4 4 0 0 1 4 4v6a4 4 0 0 1-4 4zm-2-2h2a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2h-2zM8 9v6H4V9H2v14h2v-6h4v6h2V9H8z"/>' }, "headphones": { "body": '<path fill="currentColor" d="M25 16v-1a9 9 0 0 0-18 0v1a5 5 0 0 0 0 10h2V15a7 7 0 0 1 14 0v11h2a5 5 0 0 0 0-10ZM4 21a3 3 0 0 1 3-3v6a3 3 0 0 1-3-3Zm21 3v-6a3 3 0 0 1 0 6Z"/>' }, "headset": { "body": '<path fill="currentColor" d="M25 10h-.06a9 9 0 0 0-17.88 0H7a5 5 0 0 0 0 10h2v-9a7 7 0 0 1 14 0v10a4 4 0 0 1-3.17 3.91a4 4 0 1 0 .05 2A6 6 0 0 0 25 21v-1a5 5 0 0 0 0-10ZM4 15a3 3 0 0 1 3-3v6a3 3 0 0 1-3-3Zm12 13a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm9-10v-6a3 3 0 0 1 0 6Z"/>' }, "health-cross": { "body": '<path fill="currentColor" d="M19 28h-6a2.002 2.002 0 0 1-2-2v-5H6a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h5V6a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v5h5a2.002 2.002 0 0 1 2 2v6a2.003 2.003 0 0 1-2 2h-5v5a2.003 2.003 0 0 1-2 2ZM6 13v6h7v7h6v-7h7v-6h-7V6h-6v7Z"/>' }, "hearing": { "body": '<path fill="currentColor" d="M18 30v-2a10.011 10.011 0 0 0 10-10h2a12.013 12.013 0 0 1-12 12Z"/><path fill="currentColor" d="M18 26v-2a6.007 6.007 0 0 0 6-6h2a8.01 8.01 0 0 1-8 8Z"/><path fill="currentColor" d="M18 22v-2a2.002 2.002 0 0 0 2-2h2a4.004 4.004 0 0 1-4 4zM10 2a9.01 9.01 0 0 0-9 9h2a7 7 0 0 1 14 0a7.09 7.09 0 0 1-3.501 6.135l-.499.288v3.073a2.935 2.935 0 0 1-.9 2.151a4.182 4.182 0 0 1-4.633 1.03A4.092 4.092 0 0 1 5 20H3a6.116 6.116 0 0 0 3.67 5.512a5.782 5.782 0 0 0 2.314.486a6.585 6.585 0 0 0 4.478-1.888A4.94 4.94 0 0 0 15 20.496v-1.942A9.108 9.108 0 0 0 19 11a9.01 9.01 0 0 0-9-9z"/><path fill="currentColor" d="M9.28 8.082A3.006 3.006 0 0 1 13 11h2a4.979 4.979 0 0 0-1.884-3.911a5.041 5.041 0 0 0-4.281-.957a4.95 4.95 0 0 0-3.703 3.703a5.032 5.032 0 0 0 2.304 5.458A3.078 3.078 0 0 1 9 17.924V20h2v-2.077a5.06 5.06 0 0 0-2.537-4.346a3.002 3.002 0 0 1 .817-5.495Z"/>' }, "heat-map": { "body": '<path fill="currentColor" d="M20 18h2v2h-2zm8-2h2v2h-2zM14 6h2v2h-2zm2 16h-4v-6a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h6v4a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2zM4 22v-6h6v6zm8 6v-4h4v4zm16 2h-4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-4-6v4h4v-4zm4-22h-6a2.002 2.002 0 0 0-2 2v6h-2a2.002 2.002 0 0 0-2 2v2a2.002 2.002 0 0 0 2 2h2a2.002 2.002 0 0 0 2-2v-2h6a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2zM18 14v-2h2v2zm4-4V4h6v6zM8 10H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 4v4h4V4z"/>' }, "heat-map-02": { "body": '<circle cx="21" cy="20" r="2" fill="currentColor"/><circle cx="14" cy="12" r="2" fill="currentColor"/><circle cx="29" cy="19" r="1" fill="currentColor"/><path fill="currentColor" d="M26.5 30a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5zm0-5a1.5 1.5 0 1 0 1.5 1.5a1.502 1.502 0 0 0-1.5-1.5zM14 30a3.958 3.958 0 0 1-2.126-.621a6.998 6.998 0 1 1 4.11-6.838A3.992 3.992 0 0 1 14 30zm-1.884-3.028l.539.495a1.992 1.992 0 1 0 2.004-3.343l-.691-.243l.03-.847a5.008 5.008 0 1 0-2.517 4.302zM24 16a6.007 6.007 0 0 1-6-6a5.325 5.325 0 0 1 .027-.533A3.956 3.956 0 0 1 16 6a4.005 4.005 0 0 1 4-4a3.956 3.956 0 0 1 3.467 2.027C23.648 4.01 23.825 4 24 4a6 6 0 0 1 0 12zM20 4a2.002 2.002 0 0 0-2 2a1.98 1.98 0 0 0 1.43 1.902l.902.27l-.215.917A3.994 3.994 0 1 0 24 6a4.006 4.006 0 0 0-.912.116l-.916.214l-.27-.9A1.98 1.98 0 0 0 20 4zM6.5 11A4.5 4.5 0 1 1 11 6.5A4.505 4.505 0 0 1 6.5 11zm0-7A2.5 2.5 0 1 0 9 6.5A2.503 2.503 0 0 0 6.5 4z"/>' }, "heat-map-03": { "body": '<path fill="currentColor" d="M27 3H5a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h22a2.002 2.002 0 0 0 2-2V5a2.002 2.002 0 0 0-2-2Zm-8 6h-6V5h6Zm0 2v4h-6v-4Zm-8 0v4H5v-4Zm0 6v4H5v-4Zm2 0h6v4h-6Zm8-2v-4h6v4ZM5 23h6v4H5Zm16 4v-4h6v4Z"/>' }, "heat-map-stocks": { "body": '<path fill="currentColor" d="M27 3H5a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h22a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2ZM9 21H5v-4h4Zm2 2h4v4h-4Zm6 0h4v4h-4Zm0-8v-4h4v4Zm4-6h-4V5h4Zm2 2h4v4h-4Zm-8-6v10H5V5Zm8 22V17h4v10Z"/>' }, "helicopter": { "body": '<path fill="currentColor" d="M30 8V6H8v2h10v4H4V8H2v8h2v-2h6.22l2.053 8.213A4.992 4.992 0 0 0 17.123 26H26a4.005 4.005 0 0 0 4-4v-2.638a2 2 0 0 0-.464-1.28l-4.468-5.362a1.997 1.997 0 0 0-1.536-.72H20V8Zm-4 16h-8.877a2.995 2.995 0 0 1-2.91-2.272L12.281 14H18v6h10v2a2.002 2.002 0 0 1-2 2Zm-2.468-10l3.333 4H20v-4Z"/>' }, "help": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><circle cx="16" cy="23.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M17 8h-1.5a4.49 4.49 0 0 0-4.5 4.5v.5h2v-.5a2.5 2.5 0 0 1 2.5-2.5H17a2.5 2.5 0 0 1 0 5h-2v4.5h2V17a4.5 4.5 0 0 0 0-9Z"/>' }, "help-desk": { "body": '<path fill="currentColor" d="M27 10h-6a3.003 3.003 0 0 0-3 3v6a2.002 2.002 0 0 0 2 2v7a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2v-7a2.002 2.002 0 0 0 2-2v-6a3.003 3.003 0 0 0-3-3zm1 9h-2v9h-4v-9h-2v-6a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1zM20 5a4 4 0 1 1 4 4a4.004 4.004 0 0 1-4-4zm2 0a2 2 0 1 0 2-2a2.002 2.002 0 0 0-2 2zm-8 11v-3a3.003 3.003 0 0 0-3-3H5a3.003 3.003 0 0 0-3 3v3H0v2h16v-2zM4 13a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v3H4zm0-8a4 4 0 1 1 4 4a4.004 4.004 0 0 1-4-4zm2 0a2 2 0 1 0 2-2a2.002 2.002 0 0 0-2 2z"/>' }, "help-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 23a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 25Zm1.142-7.754v2.501h-2.25V15h2.125a2.376 2.376 0 0 0 0-4.753h-1.5a2.378 2.378 0 0 0-2.375 2.375v.638h-2.25v-.638A4.628 4.628 0 0 1 15.517 8h1.5a4.624 4.624 0 0 1 .125 9.246Z"/><path fill="none" d="M16 25a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 25Zm1.142-7.754v2.501h-2.25V15h2.125a2.376 2.376 0 0 0 0-4.753h-1.5a2.378 2.378 0 0 0-2.375 2.375v.638h-2.25v-.638A4.628 4.628 0 0 1 15.517 8h1.5a4.624 4.624 0 0 1 .125 9.246Z"/>' }, "hinton-plot": { "body": '<path d="M2 2h4v4H2z" fill="currentColor"/><path d="M10 2h4v4h-4z" fill="currentColor"/><path d="M18 2h4v4h-4z" fill="currentColor"/><path d="M26 2h4v4h-4z" fill="currentColor"/><path d="M2 10h4v4H2z" fill="currentColor"/><path d="M10 10h4v4h-4z" fill="currentColor"/><path d="M18 10h4v4h-4z" fill="currentColor"/><path d="M26 10h4v4h-4z" fill="currentColor"/><path d="M2 18h4v4H2z" fill="currentColor"/><path d="M10 18h4v4h-4z" fill="currentColor"/><path d="M18 18h4v4h-4z" fill="currentColor"/><path d="M26 18h4v4h-4z" fill="currentColor"/><path d="M2 26h4v4H2z" fill="currentColor"/><path d="M10 26h4v4h-4z" fill="currentColor"/><path d="M18 26h4v4h-4z" fill="currentColor"/><path d="M26 26h4v4h-4z" fill="currentColor"/>', "hidden": true }, "hl7-attributes": { "body": '<path d="M29 9h-8v4h2v-2h3.847L22 23h2.157L29 11V9z" fill="currentColor"/><path d="M14 21V9h-2v14h8v-2h-6z" fill="currentColor"/><path d="M8 9v6H4V9H2v14h2v-6h4v6h2V9H8z" fill="currentColor"/>', "hidden": true }, "hole-filling": { "body": '<circle cx="16" cy="16" r="5" fill="currentColor"/><path d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2zM6 6v20h20.001L26 6z" fill="currentColor"/>', "hidden": true }, "hole-filling-cursor": { "body": '<circle cx="19" cy="19" r="4" fill="currentColor"/><path d="M28 30H10a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h18a2.002 2.002 0 0 1 2 2v18a2.002 2.002 0 0 1-2 2zM10 10v18h18V10z" fill="currentColor"/><path d="M11 2H2v9h2V4h7V2z" fill="currentColor"/>', "hidden": true }, "home": { "body": '<path fill="currentColor" d="M16.612 2.214a1.01 1.01 0 0 0-1.242 0L1 13.419l1.243 1.572L4 13.621V26a2.004 2.004 0 0 0 2 2h20a2.004 2.004 0 0 0 2-2V13.63L29.757 15L31 13.428ZM18 26h-4v-8h4Zm2 0v-8a2.002 2.002 0 0 0-2-2h-4a2.002 2.002 0 0 0-2 2v8H6V12.062l10-7.79l10 7.8V26Z"/>' }, "horizontal-view": { "body": '<path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2v-8a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2zM4 20h-.002L4 28h24v-8zm24-6H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v8a2.002 2.002 0 0 1-2 2zM4 4h-.002L4 12h24V4z"/>' }, "hospital": { "body": '<path fill="currentColor" d="M21 10h-4V6h-2v4h-4v2h4v4h2v-4h4v-2z"/><path fill="currentColor" d="M28 10h-2V4a2.002 2.002 0 0 0-2-2H8a2.002 2.002 0 0 0-2 2v6H4a2.002 2.002 0 0 0-2 2v18h28V12a2.002 2.002 0 0 0-2-2ZM14 28v-6h4v6Zm6 0v-7a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v7H4V12h4V4h16v8h4v16Z"/>' }, "hospital-bed": { "body": '<path fill="currentColor" d="M25 16h-8a2.002 2.002 0 0 0-2 2v6H4V14H2v16h2v-4h24v4h2v-9a5.006 5.006 0 0 0-5-5Zm3 8H17v-6h8a3.003 3.003 0 0 1 3 3Z"/><path fill="currentColor" d="M9.5 17A1.5 1.5 0 1 1 8 18.5A1.502 1.502 0 0 1 9.5 17m0-2a3.5 3.5 0 1 0 3.5 3.5A3.5 3.5 0 0 0 9.5 15zM21 6h-4V2h-2v4h-4v2h4v4h2V8h4V6z"/>' }, "hotel": { "body": '<path fill="currentColor" d="M9.5 15A1.5 1.5 0 1 1 8 16.5A1.5 1.5 0 0 1 9.5 15m0-2a3.5 3.5 0 1 0 3.5 3.5A3.5 3.5 0 0 0 9.5 13Z"/><path fill="currentColor" d="M25 14h-8a2 2 0 0 0-2 2v6H4V10.6l12-6.46l12.53 6.74l.94-1.76l-13-7a1 1 0 0 0-.94 0l-13 7A1 1 0 0 0 2 10v20h2v-6h24v6h2V19a5 5 0 0 0-5-5Zm-8 8v-6h8a3 3 0 0 1 3 3v3Z"/>' }, "hourglass": { "body": '<path fill="currentColor" d="M15 19h2v2h-2zm0 4h2v2h-2z"/><path fill="currentColor" d="M23 11.67V4h3V2H6v2h3v7.67a2 2 0 0 0 .4 1.2L11.75 16L9.4 19.13a2 2 0 0 0-.4 1.2V28H6v2h20v-2h-3v-7.67a2 2 0 0 0-.4-1.2L20.25 16l2.35-3.13a2 2 0 0 0 .4-1.2ZM21 4v7H11V4Zm0 16.33V28H11v-7.67L14.25 16L12 13h8l-2.25 3Z"/>' }, "html": { "body": '<path fill="currentColor" d="M28 19v-8h-2v10h6v-2h-4zm-4-8h-2l-1.5 4l-1.5-4h-2v10h2v-7l1.5 4l1.5-4v7h2V11zM9 13h2v8h2v-8h2v-2H9v2zm-4-2v4H2v-4H0v10h2v-4h3v4h2V11H5z"/>' }, "html-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm24-6V6h-2v10h6v-2h-4zm-4-8h-2l-1.5 4L19 6h-2v10h2V9l1.5 4L22 9v7h2V6zM9 8h2v8h2V8h2V6H9v2zM5 6v4H2V6H0v10h2v-4h3v4h2V6H5z"/>' }, "http": { "body": '<path fill="currentColor" d="M30 11h-5v10h2v-3h3a2.003 2.003 0 0 0 2-2v-3a2.002 2.002 0 0 0-2-2zm-3 5v-3h3l.001 3zm-17-3h2v8h2v-8h2v-2h-6v2zm13-2h-6v2h2v8h2v-8h2v-2zM6 11v4H3v-4H1v10h2v-4h3v4h2V11H6z"/>' }, "humidity": { "body": '<path fill="currentColor" d="M23.476 13.993L16.847 3.437a1.04 1.04 0 0 0-1.694 0L8.494 14.043A9.986 9.986 0 0 0 7 19a9 9 0 0 0 18 0a10.063 10.063 0 0 0-1.524-5.007ZM16 26a7.009 7.009 0 0 1-7-7a7.978 7.978 0 0 1 1.218-3.943l.935-1.49l10.074 10.074A6.977 6.977 0 0 1 16 26.001Z"/>' }, "humidity-alt": { "body": '<path fill="currentColor" d="M26 12a3.898 3.898 0 0 1-4-3.777a3.902 3.902 0 0 1 .653-2.064l2.517-3.745a1.038 1.038 0 0 1 1.66 0l2.485 3.696A3.97 3.97 0 0 1 30 8.223A3.898 3.898 0 0 1 26 12zm0-7.237l-1.656 2.463a1.89 1.89 0 0 0-.344.997a2.014 2.014 0 0 0 4 0a1.98 1.98 0 0 0-.375-1.047zM23.5 30h-15a6.496 6.496 0 0 1-1.3-12.862a8.994 8.994 0 0 1 17.6 0A6.496 6.496 0 0 1 23.5 30zM16 12a7 7 0 0 0-6.941 6.145l-.1.812l-.815.064A4.496 4.496 0 0 0 8.5 28h15a4.496 4.496 0 0 0 .356-8.979l-.815-.064l-.099-.812A7.002 7.002 0 0 0 16 12z"/>' }, "hurricane": { "body": '<path fill="currentColor" d="m22.652 4.182l-2.177 2.514l-1.404 1.621l1.715 1.288A7.936 7.936 0 0 1 23.996 16l.001.058l.002.041c.018.432.241 10.111-14.654 11.722l2.18-2.517l1.404-1.621l-1.715-1.288A7.936 7.936 0 0 1 8.004 16l-.001-.058L8 15.901c-.018-.431-.24-10.094 14.651-11.719M24.998 2l-.05.001C5.254 2.915 6.005 16 6.005 16a9.975 9.975 0 0 0 4.01 7.995l-3.777 4.36A1.004 1.004 0 0 0 7.002 30l.05-.001C26.747 29.085 25.995 16 25.995 16a9.976 9.976 0 0 0-4.009-7.995l3.776-4.36A1.004 1.004 0 0 0 24.998 2Z"/>' }, "hybrid-networking": { "body": '<path fill="currentColor" d="M17 24.184V20h-2v4.184a3 3 0 1 0 2 0Z"/><path fill="currentColor" d="M26 12a3.996 3.996 0 0 0-3.858 3H9.858a4 4 0 1 0 0 2h12.284A3.993 3.993 0 1 0 26 12ZM6 18a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm20 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M19 5a3 3 0 1 0-4 2.816V12h2V7.816A2.992 2.992 0 0 0 19 5Z"/>' }, "hybrid-networking-alt": { "body": '<path fill="currentColor" d="M26 22a3.958 3.958 0 0 0-2.02.566L17.414 16l6.567-6.567A3.952 3.952 0 0 0 26 10a4 4 0 1 0-4-4a3.951 3.951 0 0 0 .567 2.019L16 14.586L9.434 8.02A3.958 3.958 0 0 0 10 6a4 4 0 1 0-4 4a3.958 3.958 0 0 0 2.02-.566L14.586 16l-6.567 6.567A3.952 3.952 0 0 0 6 22a4 4 0 1 0 4 4a3.951 3.951 0 0 0-.567-2.019L16 17.414l6.566 6.566A3.958 3.958 0 0 0 22 26a4 4 0 1 0 4-4Zm0-18a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM6 28a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "ibm-bluepay": { "body": '<path fill="currentColor" d="M5 26V15.828l-3.586 3.586L0 18l6-6l6 6l-1.414 1.414L7 15.828V26h12v2H7a2.002 2.002 0 0 1-2-2zm26-8h-3v-2h-2v2h-1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h4v2h-6v2h3v2h2v-2h1a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2h-4v-2h6v-2zm-3-6V6a2.002 2.002 0 0 0-2-2H12v2h14v6M2 6h5v2H2zm0-4h8v2H2z"/>' }, "ibm-cloud": { "body": '<path fill="currentColor" d="M24.58 13.65a9.733 9.733 0 0 0-18.294 3.889A6.75 6.75 0 0 0 7 31h16a8.746 8.746 0 0 0 1.58-17.35zM23 29.5H7a5.237 5.237 0 0 1-.7-10.43a9.726 9.726 0 0 0 1.104 3.785a.75.75 0 1 0 1.322-.71a8.25 8.25 0 0 1 14.026-8.632a8.754 8.754 0 0 0-6.315 2.95a.75.75 0 1 0 1.124.992A7.25 7.25 0 1 1 23 29.5zm8.898-19.245a.758.758 0 0 0-1.036-.278l-3.02 1.744a.759.759 0 1 0 .758 1.314l3.02-1.744a.759.759 0 0 0 .278-1.036zM22.676 7.87a.758.758 0 0 0 1.037-.278l1.744-3.02a.759.759 0 0 0-1.314-.758l-1.744 3.02a.759.759 0 0 0 .277 1.036zM16 6.081a.759.759 0 0 0 .759-.759V1.835a.759.759 0 1 0-1.518 0v3.487a.759.759 0 0 0 .759.76zM8.287 7.592a.759.759 0 0 0 1.314-.759l-1.744-3.02a.759.759 0 1 0-1.314.76zm-4.129 4.129l-3.02-1.744a.759.759 0 1 0-.758 1.314l3.02 1.744a.759.759 0 1 0 .759-1.314z"/>' }, "ibm-cloud-app-id": { "body": '<path fill="currentColor" d="M20 18h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0 0-8a4 4 0 0 0 0 8zm0-6a2 2 0 1 1 0 4a2 2 0 0 1 0-4z"/><path fill="currentColor" d="M17 30C9.28 30 3 23.72 3 16h2c0 6.617 5.383 12 12 12c5.226 0 9.816-3.338 11.421-8.307l1.904.614A13.961 13.961 0 0 1 17 30zm14-14h-2c0-6.617-5.383-12-12-12V2c7.72 0 14 6.28 14 14zM6 14l-2.139-1.013A5.022 5.022 0 0 1 1 8.467V2h10v6.468a5.021 5.021 0 0 1-2.861 4.52L6 14zM3 4v4.468a3.01 3.01 0 0 0 1.717 2.71L6 11.787l1.283-.607A3.012 3.012 0 0 0 9 8.468V4H3z"/>' }, "ibm-cloud-citrix-daas": { "body": '<path fill="currentColor" d="M19 23h4v4h-4zm7 0h4v4h-4zm-7-7h4v4h-4zm7 0h4v4h-4z"/><path fill="currentColor" d="M16 4c-4.3 0-7.9 3-8.8 7.1c-3 .6-5.2 3.3-5.2 6.4C2 21.1 4.9 24 8.5 24H16v-2H8.5C6 22 4 20 4 17.5c0-2.3 1.8-4.3 4.1-4.5H9l.1-.8C9.5 8.6 12.5 6 16 6c3.9 0 7 3.1 7 7h2c0-5-4-9-9-9z"/>' }, "ibm-cloud-continuous-delivery": { "body": '<path fill="currentColor" d="m23 1l-6 6l1.415 1.402L22 4.818V21H10V10H8v11c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2V4.815l3.586 3.587L29 7l-6-6Z"/><path fill="currentColor" d="M18.5 19h-5c-.827 0-1.5-.673-1.5-1.5v-5c0-.827.673-1.5 1.5-1.5h5c.827 0 1.5.673 1.5 1.5v5c0 .827-.673 1.5-1.5 1.5zM14 17h4v-4h-4v4zm2 14v-2c7.168 0 13-5.832 13-13c0-1.265-.181-2.514-.538-3.715l1.917-.57C30.79 13.1 31 14.542 31 16c0 8.271-6.729 15-15 15zM1.621 20.285A15.011 15.011 0 0 1 1 16C1 7.729 7.729 1 16 1v2C8.832 3 3 8.832 3 16c0 1.265.181 2.514.538 3.715l-1.917.57z"/>' }, "ibm-cloud-dedicated-host": { "body": '<circle cx="9" cy="6" r="1" fill="currentColor"/><path fill="currentColor" d="M26 2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h9v4h2v-4h9a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zm0 6H6V4h20zm-9 20v-2h-2v2H4v2h24v-2H17z"/><circle cx="9" cy="20" r="1" fill="currentColor"/><path fill="currentColor" d="M6 24h20a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2Zm0-6h20v4H6Z"/>' }, "ibm-cloud-direct-link-1-connect": { "body": '<path fill="currentColor" d="M27 29H13c-1.1 0-2-.9-2-2v-4h2v4h14V13h-4v-2h4c1.1 0 2 .9 2 2v14c0 1.1-.9 2-2 2z"/><path fill="currentColor" d="M20 17c-.5 0-.9.1-1.3.3l-4-4c.2-.4.3-.8.3-1.3c0-1.7-1.3-3-3-3s-3 1.3-3 3s1.3 3 3 3c.5 0 .9-.1 1.3-.3l4 4c-.2.4-.3.8-.3 1.3c0 1.7 1.3 3 3 3s3-1.3 3-3s-1.3-3-3-3zm-9-5c0-.6.4-1 1-1s1 .4 1 1s-.4 1-1 1s-1-.4-1-1zm9 9c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/><path fill="currentColor" d="M5 3h14c1.1 0 2 .9 2 2v4h-2V5H5v14h4v2H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z"/>' }, "ibm-cloud-direct-link-1-dedicated": { "body": '<path fill="currentColor" d="M27 29H13c-1.1 0-2-.9-2-2v-4h2v4h14V13h-4v-2h4c1.1 0 2 .9 2 2v14c0 1.1-.9 2-2 2z"/><path fill="currentColor" d="M19 21h-6c-1.1 0-2-.9-2-2v-6c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2v6c0 1.1-.9 2-2 2zm-6-8v6h6v-6h-6z"/><path fill="currentColor" d="M5 3h14c1.1 0 2 .9 2 2v4h-2V5H5v14h4v2H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z"/>' }, "ibm-cloud-direct-link-1-dedicated-hosting": { "body": '<path fill="currentColor" d="M27 29H13c-1.1 0-2-.9-2-2v-4h2v4h14V13h-4v-2h4c1.1 0 2 .9 2 2v14c0 1.1-.9 2-2 2z"/><path fill="currentColor" d="M11 19h10v2H11zm0-4h10v2H11zm0-4h10v2H11z"/><path fill="currentColor" d="M5 3h14c1.1 0 2 .9 2 2v4h-2V5H5v14h4v2H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z"/>' }, "ibm-cloud-direct-link-1-exchange": { "body": '<path fill="currentColor" d="M27 29H13c-1.1 0-2-.9-2-2v-4h2v4h14V13h-4v-2h4c1.1 0 2 .9 2 2v14c0 1.1-.9 2-2 2z"/><path fill="currentColor" d="M19 15v4h-4v2h6v-6zm-2-4h-6v6h2v-4h4z"/><path fill="currentColor" d="M5 3h14c1.1 0 2 .9 2 2v4h-2V5H5v14h4v2H5c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z"/>' }, "ibm-cloud-direct-link-2-connect": { "body": '<path fill="currentColor" d="M17.2 13c.4 1.2 1.5 2 2.8 2c1.7 0 3-1.3 3-3s-1.3-3-3-3c-1.3 0-2.4.8-2.8 2H5c-1.1 0-2 .9-2 2v6H0v2h3v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4h-2v4H5V13h12.2zm2.8-2c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1z"/><path fill="currentColor" d="M29 11V5c0-1.1-.9-2-2-2H13c-1.1 0-2 .9-2 2v4h2V5h14v14H14.8c-.4-1.2-1.5-2-2.8-2c-1.7 0-3 1.3-3 3s1.3 3 3 3c1.3 0 2.4-.8 2.8-2H27c1.1 0 2-.9 2-2v-6h3v-2h-3zM12 21c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>' }, "ibm-cloud-direct-link-2-dedicated": { "body": '<path fill="currentColor" d="M32 11h-3V5c0-1.1-.9-2-2-2H13c-1.1 0-2 .9-2 2v4h2V5h14v14H13v-4h-2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6h3v-2z"/><path fill="currentColor" d="M21 17v-4c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v6H0v2h3v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4h-2v4H5V13h14v4h2z"/>' }, "ibm-cloud-direct-link-2-dedicated-hosting": { "body": '<path fill="currentColor" d="M19 27H5V13h4v-2H5c-1.1 0-2 .9-2 2v6H0v2h3v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4h-2v4z"/><path fill="currentColor" d="M11 19h10v2H11zm0-4h10v2H11zm0-4h10v2H11z"/><path fill="currentColor" d="M29 11V5c0-1.1-.9-2-2-2H13c-1.1 0-2 .9-2 2v4h2V5h14v14h-4v2h4c1.1 0 2-.9 2-2v-6h3v-2h-3z"/>' }, "ibm-cloud-event-notification": { "body": '<path fill="currentColor" d="M26 19c-.7 0-1.4.3-1.9.7l-4.3-2.6c.1-.4.2-.7.2-1.1c0-.4-.1-.8-.2-1.1l4.3-2.6c.5.4 1.2.7 1.9.7c1.7 0 3-1.3 3-3s-1.3-3-3-3s-3 1.3-3 3c0 .2 0 .4.1.6l-4.3 2.6c-.7-.8-1.7-1.2-2.8-1.2c-.6 0-1.1.1-1.6.4l-3.8-4.8c.2-.5.4-1 .4-1.6c0-1.7-1.3-3-3-3S5 4.3 5 6s1.3 3 3 3c.3 0 .7-.1 1-.2l3.8 4.8c-.3.4-.5.9-.7 1.4H7.8c-.4-1.2-1.5-2-2.8-2c-1.7 0-3 1.3-3 3s1.3 3 3 3c1.3 0 2.4-.8 2.8-2h4.3c.1.5.4 1 .7 1.4L9 23.2c-.3-.1-.7-.2-1-.2c-1.7 0-3 1.3-3 3s1.3 3 3 3s3-1.3 3-3c0-.6-.2-1.1-.5-1.6l3.8-4.8c.5.2 1.1.4 1.6.4c1.1 0 2.1-.4 2.8-1.2l4.3 2.6c0 .2-.1.4-.1.6c0 1.7 1.3 3 3 3s3-1.3 3-3s-1.2-3-2.9-3zm0-10c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zM7 6c0-.6.4-1 1-1s1 .4 1 1s-.4 1-1 1s-1-.4-1-1zM5 17c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm3 10c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm8-9c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2zm10 5c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>' }, "ibm-cloud-event-streams": { "body": '<path fill="currentColor" d="m23.5 9.2l-1 1.7c2.2 1.2 3.5 3.6 3.5 6.1c0 5.2-3.8 8.7-6 10.2V24h-1c-2.5 0-4.9-1.4-6.1-3.6l-1.7 1c1.4 2.6 4 4.2 6.9 4.6v3c0 .3.2.7.5.9c0 .1.2.1.4.1s.3 0 .4-.1c.4-.2 8.6-4.4 8.6-12.9c0-3.2-1.7-6.2-4.5-7.8z"/><path fill="currentColor" d="M20 13.1V7.8c1.2-.4 2-1.5 2-2.8c0-1.7-1.3-3-3-3s-3 1.3-3 3c0 1.3.8 2.4 2 2.8v5.3c-.4.1-.7.2-1 .4l-5.3-5.3c.2-.3.3-.7.3-1.2c0-1.7-1.3-3-3-3S6 5.3 6 7s1.3 3 3 3c.5 0 .9-.1 1.3-.3l5.3 5.3c-.2.3-.3.7-.4 1H9.8c-.4-1.2-1.5-2-2.8-2c-1.7 0-3 1.3-3 3s1.3 3 3 3c1.3 0 2.4-.8 2.8-2h5.3c.4 1.7 2 3 3.9 3c2.2 0 4-1.8 4-4c0-1.9-1.3-3.4-3-3.9zM19 4c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zM9 8c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zM7 18c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm12 1c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2z"/>' }, "ibm-cloud-for-education": { "body": '<path fill="currentColor" d="M30 30h-2c0-1.654-1.346-3-3-3h-4c-1.654 0-3 1.346-3 3h-2c0-2.757 2.243-5 5-5h4c2.757 0 5 2.243 5 5zM15 16a1 1 0 0 0-1 1v6h2v-6a1 1 0 0 0-1-1z"/><path fill="currentColor" d="M32 12H14v2h4v5c0 2.757 2.243 5 5 5s5-2.243 5-5v-5h4v-2Zm-9 10c-1.654 0-3-1.346-3-3v-1h6v1c0 1.654-1.346 3-3 3Zm3-6h-6v-2h6v2Z"/><path fill="currentColor" d="M25.798 10C24.87 5.441 20.83 2 16 2a9.977 9.977 0 0 0-9.822 8.124C2.655 10.754 0 13.849 0 17.5C0 21.636 3.365 25 7.5 25H12v-2H7.5A5.506 5.506 0 0 1 2 17.5a5.51 5.51 0 0 1 5.123-5.48l.836-.057l.09-.833A7.98 7.98 0 0 1 16 4c3.72 0 6.845 2.555 7.737 6h2.061Z"/>' }, "ibm-cloud-hsm": { "body": '<path fill="currentColor" d="M28 21.142V10h-5v2h3v2h-3v2h3v5.142c-1.72.447-3 2-3 3.858c0 2.206 1.794 4 4 4s4-1.794 4-4c0-1.859-1.28-3.41-3-3.858ZM27 27c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2Z"/><circle cx="9" cy="24" r="1" fill="currentColor"/><circle cx="9" cy="8" r="1" fill="currentColor"/><path fill="currentColor" d="M26 6v2h2V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v8H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h14v-2H6v-4h14v-2h-8v-8h8v-2H6V6h20Z"/>' }, "ibm-cloud-hyper-protect-crypto-services": { "body": '<path fill="currentColor" d="m25 30l-2.1-1c-1.7-.8-2.9-2.6-2.9-4.5V18h10v6.5c0 1.9-1.1 3.7-2.9 4.5L25 30zm-3-10v4.5c0 1.2.7 2.2 1.7 2.7l1.3.6l1.3-.6c1-.5 1.7-1.6 1.7-2.7V20h-6z"/><circle cx="22" cy="10" r="2" fill="currentColor"/><path fill="currentColor" d="M21 2c-5 0-9 4-9 9c0 .9.1 1.8.4 2.6L2 24v6h6l10-10l-1.4-1.4l-2.8 2.8l-1.4-1.4l-1.4 1.4l1.4 1.4l-1.6 1.6L9.4 23L8 24.4l1.4 1.4L7.2 28H4v-3.2l9.8-9.8l.8-.8l-.3-1.2c-.2-.7-.3-1.3-.3-2c0-3.9 3.1-7 7-7s7 3.1 7 7c0 1.5-.5 2.9-1.3 4H29c.6-1.2.9-2.6.9-4C30 6 26 2 21 2z"/>' }, "ibm-cloud-hyper-protect-dbaas": { "body": '<path fill="currentColor" d="m24 30l-2.1-1c-1.7-.8-2.9-2.6-2.9-4.5V18h10v6.5c0 1.9-1.1 3.7-2.9 4.5L24 30zm-3-10v4.5c0 1.2.7 2.2 1.7 2.7l1.3.6l1.3-.6c1-.5 1.7-1.6 1.7-2.7V20h-6z"/><circle cx="10" cy="23" r="1" fill="currentColor"/><circle cx="10" cy="15" r="1" fill="currentColor"/><circle cx="10" cy="7" r="1" fill="currentColor"/><path fill="currentColor" d="M23 2H7c-1.1 0-2 .9-2 2v22c0 1.1.9 2 2 2h9v-2H7v-6h9v-2H7v-6h16v3h2V4c0-1.1-.9-2-2-2zM7 10V4h16v6H7z"/>' }, "ibm-cloud-hyper-protect-vs": { "body": '<path fill="currentColor" d="M20 18v6.5c0 1.9 1.1 3.7 2.9 4.5l2.1 1l2.1-1c1.7-.8 2.9-2.6 2.9-4.5V18H20zm8 6.5c0 1.2-.7 2.2-1.7 2.7l-1.3.6l-1.3-.6c-1-.5-1.7-1.6-1.7-2.7V20h6v4.5z"/><path fill="currentColor" d="M25 2H5c-1.1 0-2 .9-2 2v22c0 1.1.9 2 2 2h11V4h9v11h2V4c0-1.1-.9-2-2-2zM13.6 12.2L5 23.9V5.1l8.6 7.1zM6 26l8-10.9V26H6zm8-16.1L6.8 4H14v5.9z"/>' }, "ibm-cloud-internet-services": { "body": '<path fill="currentColor" d="M27 22c-.7 0-1.4.3-1.9.7l-5.2-3.1c0-.2.1-.4.1-.6s0-.4-.1-.6l5.2-3.1c.5.4 1.2.7 1.9.7c1.7 0 3-1.3 3-3s-1.3-3-3-3s-3 1.3-3 3c0 .2 0 .4.1.6l-5.2 3.1c-.5-.4-1.2-.7-1.9-.7c-1.7 0-3 1.3-3 3s1.3 3 3 3c.7 0 1.4-.3 1.9-.7l5.2 3.1c0 .2-.1.4-.1.6c0 1.7 1.3 3 3 3s3-1.3 3-3s-1.3-3-3-3zm0-10c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm-10 8c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm10 6c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/><path fill="currentColor" d="M19 25H8.5c-3 0-5.5-2.5-5.5-5.5c0-2.7 1.9-4.9 4.5-5.4l1.3-.2l.3-1.3C9.9 8.7 13.2 6 17 6c.5 0 1 0 1.5.1c1.6.3 3 1.1 4.2 2.2l1.4-1.4c-1.4-1.4-3.2-2.4-5.2-2.7c-.6-.1-1.3-.2-1.9-.2c-4.7 0-8.9 3.3-9.8 8.1c-3.6.7-6.2 3.8-6.2 7.4C1 23.6 4.3 27 8.5 27H19v-2z"/>' }, "ibm-cloud-ipsec-vpn": { "body": '<path fill="currentColor" d="M16 29a1 1 0 0 1-.887-.539l-2.08-4l1.774-.922L16 25.832l4.313-8.293l1.774.922l-5.2 10A1 1 0 0 1 16 29zm-5-13.722V13c0-2.206-1.794-4-4-4s-4 1.794-4 4v2.278c-.595.347-1 .985-1 1.722v5c0 1.103.897 2 2 2h6c1.103 0 2-.897 2-2v-5c0-.737-.405-1.375-1-1.722zM7 11c1.103 0 2 .897 2 2v2H5v-2c0-1.103.897-2 2-2zm3 11H4v-5h6v5zM29 2h-9.277c-.347-.595-.984-1-1.723-1a2 2 0 0 0 0 4c.739 0 1.376-.405 1.723-1h7.63l-4.17 8.019c-.06-.006-.12-.019-.183-.019a2 2 0 1 0 2 2c0-.288-.063-.56-.173-.808l5.06-9.73C29.907 3.416 30 3.25 30 3a1 1 0 0 0-1-1zM3 2a1 1 0 0 0-1 1c0 .25.093.418.113.461L3.953 7h2.254l-1.56-3H14V2H3z"/>' }, "ibm-cloud-key-protect": { "body": '<path fill="currentColor" d="M26 14.1V2h-5v2h3v2h-3v2h3v6.1c-1.7.4-3 2-3 3.9c0 2.2 1.8 4 4 4s4-1.8 4-4c0-1.9-1.3-3.4-3-3.9zM25 20c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2z"/><path fill="currentColor" d="m15 31l-5.5-3.2c-3.4-2-5.5-5.6-5.5-9.5V4c0-1.1.9-2 2-2h12v2H6v14.3c0 3.2 1.7 6.2 4.5 7.8l4.5 2.7l4.5-2.7c1.1-.7 2.1-1.5 2.8-2.6l1.6 1.1c-.9 1.3-2.1 2.4-3.5 3.2L15 31z"/>' }, "ibm-cloud-kubernetes-service": { "body": '<path fill="currentColor" d="M16 23c-.2 0-.4 0-.5-.1l-5-3c-.3-.2-.5-.5-.5-.9v-6c0-.4.2-.7.5-.9l5-3c.1-.1.3-.1.5-.1s.4 0 .5.1l5 3c.3.2.5.5.5.9v6c0 .4-.2.7-.5.9l-5 3c-.1.1-.3.1-.5.1zm-4-4.6l4 2.4l4-2.4v-4.9l-4-2.4l-4 2.4v4.9z"/><path fill="currentColor" d="M16 31c-.2 0-.3 0-.5-.1l-12-7c-.3-.2-.5-.5-.5-.9V9c0-.4.2-.7.5-.9l12-7c.2-.1.3-.1.5-.1s.3 0 .5.1l12 7l-1 1.7L16 3.2L5 9.6v12.9l11 6.4l11-6.4V15h2v8c0 .4-.2.7-.5.9l-12 7c-.2.1-.3.1-.5.1z"/>' }, "ibm-cloud-logging": { "body": '<path fill="currentColor" d="M24.4 10c.3.5.7.9 1.3 1.2l1.3.6l1.3-.6c1-.5 1.7-1.6 1.7-2.7V4h-3V2h5v6.5c0 1.9-1.1 3.7-2.9 4.5l-2.2 1l-2.1-1c-1.3-.6-2.2-1.7-2.6-3h2.2z"/><path fill="currentColor" d="M16 6h8v2h-8zm0-4h8v2h-8z"/><path fill="currentColor" d="M28 16v6H4V6h10V4H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h8v4H8v2h16v-2h-4v-4h8c1.1 0 2-.9 2-2v-6h-2zM18 28h-4v-4h4v4z"/>' }, "ibm-cloud-mass-data-migration": { "body": '<path fill="currentColor" d="M22 30H10c-1.1 0-2-.9-2-2v-3h2v3h12v-3h2v3c0 1.1-.9 2-2 2zm-7-15.2V25h2V14.8l2.6 2.6L21 16l-5-5l-5 5l1.4 1.4z"/><path fill="currentColor" d="M24.8 9.1C23.9 5 20.3 2 16 2S8.1 5 7.2 9.1c-3 .6-5.2 3.3-5.2 6.4C2 19.1 4.9 22 8.5 22H12v-2H8.5C6 20 4 18 4 15.5c0-2.3 1.8-4.3 4.1-4.5H9l.1-.8C9.5 6.6 12.5 4 16 4c3.5 0 6.5 2.6 6.9 6.1l.1.9l.8.1c2.3.2 4.1 2.2 4.1 4.5c0 2.5-2 4.5-4.5 4.5H20v2h3.5c3.6 0 6.5-2.9 6.5-6.5c0-3.2-2.2-5.9-5.2-6.5z"/>' }, "ibm-cloud-pak-applications": { "body": '<path fill="currentColor" d="M21 22h-6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2Zm-6-6v4h6v-4Z"/><path fill="currentColor" d="M11 17H9v-5a2.002 2.002 0 0 1 2-2h6v2h-6Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pak-business-automation": { "body": '<path fill="currentColor" d="M25 16c0-1.5-1.2-2.8-2.7-3c-1.1-2.4-3.5-4-6.3-4c-.2 0-.5 0-.7.1C14.7 8.4 13.9 8 13 8c-1.7 0-3 1.3-3 3c0 .4.1.7.2 1.1C9.4 13.2 9 14.5 9 16s.4 2.8 1.2 3.9c-.1.4-.2.7-.2 1.1c0 1.7 1.3 3 3 3c.9 0 1.7-.4 2.3-1.1c.2 0 .5.1.7.1c2.8 0 5.2-1.7 6.3-4c1.5-.2 2.7-1.5 2.7-3zm-12-6c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm0 12c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm3-1c0-1.7-1.3-3-3-3c-.5 0-1 .1-1.4.4c-.4-.7-.6-1.5-.6-2.4s.2-1.7.6-2.4c.4.3.9.4 1.4.4c1.7 0 3-1.3 3-3c1.9 0 3.4 1 4.3 2.5c-.8.6-1.3 1.5-1.3 2.5s.5 1.9 1.3 2.5C19.4 20 17.9 21 16 21zm6-4c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/><path fill="currentColor" d="M16 31c-.2 0-.3 0-.5-.1l-12-7c-.3-.2-.5-.5-.5-.9V9c0-.4.2-.7.5-.9l12-7c.3-.2.7-.2 1 0l12 7l-1 1.7L16 3.2L5 9.6v12.9l11 6.4l11-6.4V15h2v8c0 .4-.2.7-.5.9l-12 7c-.2.1-.3.1-.5.1z"/>' }, "ibm-cloud-pak-data": { "body": '<circle cx="23" cy="15" r="1" fill="currentColor"/><circle cx="8" cy="15" r="1" fill="currentColor"/><circle cx="21" cy="10" r="1" fill="currentColor"/><circle cx="15" cy="23" r="1" fill="currentColor"/><path fill="currentColor" d="M21 19a1.982 1.982 0 0 0-.512.074l-1.781-1.781l-.026.026A2.964 2.964 0 0 0 19 16a3.003 3.003 0 0 0-3-3a2.964 2.964 0 0 0-1.319.319l.026-.026l-1.781-1.781a2.034 2.034 0 1 0-1.414 1.414l1.781 1.781l.026-.026A2.963 2.963 0 0 0 13 16a3.003 3.003 0 0 0 3 3a2.963 2.963 0 0 0 1.319-.319l-.026.026l1.781 1.781A1.996 1.996 0 1 0 21 19Zm-5-2a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pak-integration": { "body": '<path fill="currentColor" d="M22.121 9.879a3 3 0 0 0-4.242 0l-.465.464l1.414 1.414l.465-.464a1 1 0 0 1 1.414 1.414L17.414 16l1.414 1.414l3.293-3.293a3 3 0 0 0 0-4.242zm-9.414 10.828a1 1 0 0 1-1.414-1.414L14.586 16l-1.414-1.414l-3.293 3.293a3 3 0 1 0 4.242 4.242l.465-.464l-1.414-1.414zM14.121 9.88a3 3 0 0 0-4.241 4.24l.464.465l1.414-1.414l-.464-.465a1 1 0 0 1 1.414-1.414L16 14.586l1.414-1.414z"/><path fill="currentColor" d="m22.121 17.879l-.464-.465l-1.414 1.414l.464.465a1 1 0 0 1-1.414 1.414L16 17.414l-1.414 1.414l3.293 3.293a3 3 0 0 0 4.242-4.242Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pak-manta-automated-data-lineage": { "body": '<path fill="currentColor" d="M30 11V5h-6v2H14V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v8a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2V9a3.003 3.003 0 0 1 3 3v9h-6v-2H5v6h6v-2h6v2a2.002 2.002 0 0 0 2 2h5v2h6v-6h-6v2h-5v-7h5v2h6v-6h-6v2h-5v-4a4.952 4.952 0 0 0-1.025-3H24v2ZM4 12V4h8v8Zm5 11H7v-2h2Zm17 2h2v2h-2Zm0-9h2v2h-2Zm0-9h2v2h-2Z"/>' }, "ibm-cloud-pak-multicloud-mgmt": { "body": '<path fill="currentColor" d="M21 19a1.982 1.982 0 0 0-.512.074l-1.781-1.781l-.026.026a2.888 2.888 0 0 0 0-2.638l.026.026l1.781-1.781a2.034 2.034 0 1 0-1.414-1.414l-1.781 1.781l.026.026a2.888 2.888 0 0 0-2.638 0l.026-.026l-1.781-1.781a2.034 2.034 0 1 0-1.414 1.414l1.781 1.781l.026-.026a2.887 2.887 0 0 0 0 2.638l-.026-.026l-1.781 1.781a2.034 2.034 0 1 0 1.414 1.414l1.781-1.781l-.026-.026a2.887 2.887 0 0 0 2.638 0l-.026.026l1.781 1.781A1.996 1.996 0 1 0 21 19Zm-5-2a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pak-netezza": { "body": '<path fill="currentColor" d="M19 10v9.2L13.5 10H11v12h2v-9.2l5.5 9.2H21V10z"/><path fill="currentColor" d="M16 30C8.3 30 2 23.7 2 16S8.3 2 16 2s14 6.3 14 14s-6.3 14-14 14zm0-26C9.4 4 4 9.4 4 16s5.4 12 12 12s12-5.4 12-12S22.6 4 16 4z"/>' }, "ibm-cloud-pak-network-automation": { "body": '<path fill="currentColor" d="M22.364 21.364L20.95 19.95a7 7 0 0 0 0-9.899l1.414-1.415a9 9 0 0 1 0 12.728Z"/><path fill="currentColor" d="m19.536 18.535l-1.414-1.414a3.004 3.004 0 0 0 0-4.242l1.414-1.414a5.005 5.005 0 0 1 0 7.07zM17 26h-2V15a1 1 0 0 1 1-1a1 1 0 0 1 1 1zm-4.536-7.465a5.005 5.005 0 0 1 0-7.07l1.414 1.414a3.004 3.004 0 0 0 0 4.242z"/><path fill="currentColor" d="M9.636 21.364a9 9 0 0 1 0-12.728l1.414 1.415a7 7 0 0 0 0 9.898Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pak-security": { "body": '<path fill="currentColor" d="M16 23.729a6.007 6.007 0 0 1-6-6v-6.457l6-3l6 3v6.456a6.007 6.007 0 0 1-6 6Zm-4-11.222v5.222a4 4 0 0 0 8 0v-5.222l-4-2Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pak-system": { "body": '<path fill="currentColor" d="m14 12.914l1.414-1.414L18 14.085L16.585 15.5zm0 5.001l1.415-1.415L18 19.086L16.586 20.5z"/><path fill="currentColor" d="M19 24h-6a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2Zm-6-14v12h6.001L19 10Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pak-watson-aiops": { "body": '<path fill="currentColor" d="M14 24a1 1 0 0 1-.961-.725L11.246 17H8v-2h4a1 1 0 0 1 .961.725L14 19.36l3.039-10.635a1 1 0 0 1 1.922 0L20.754 15H24v2h-4a1 1 0 0 1-.961-.725L18 12.64l-3.039 10.635A1 1 0 0 1 14 24Z"/><path fill="currentColor" d="M16 31a.999.999 0 0 1-.504-.136l-12-7A1 1 0 0 1 3 23V9a1 1 0 0 1 .496-.864l12-7a1 1 0 0 1 1.008 0l12 7l-1.008 1.728L16 3.158L5 9.574v12.852l11 6.417l11-6.417V15h2v8a1 1 0 0 1-.496.864l-12 7A.999.999 0 0 1 16 31Z"/>' }, "ibm-cloud-pal": { "body": '<path fill="currentColor" d="m30.5 17.7l-6-3.5c-.1-.2-.3-.2-.5-.2s-.4 0-.5.1l-6 3.5c-.3.2-.5.5-.5.9v6.9c0 .4.2.7.5.9l6 3.5c.1.2.3.2.5.2s.4 0 .5-.1l6-3.5c.3-.2.5-.5.5-.9v-6.9c0-.4-.2-.7-.5-.9zM29 24.9l-5 3l-5-3v-5.8l5-3l5 3v5.8z"/><path fill="currentColor" d="M14 26H9c-4.4 0-8-3.6-8-8c0-3.7 2.6-6.9 6.2-7.8C8 5.5 12.1 2 17 2c5.5 0 10 4.5 10 10h-2c0-4.4-3.6-8-8-8c-4.1 0-7.5 3.1-8 7.2v.8l-.8.1C5.2 12.5 3 15 3 18c0 3.3 2.7 6 6 6h5v2z"/>' }, "ibm-cloud-privileged-access-gateway": { "body": '<path fill="currentColor" d="m32 23l-5 5l-1.4-1.4l2.6-2.6H20v-2h8.2l-2.6-2.6L27 18z"/><path fill="currentColor" d="M25.5 2.7c-.4-.4-.9-.7-1.5-.7h-2.7c-.6 0-1.1.3-1.3.8L19.4 4H18v-.5c0-.8-.7-1.5-1.5-1.5h-5c-.8 0-1.5.7-1.5 1.5V4H8.6L8 2.8c-.2-.5-.7-.8-1.3-.8H4c-.6 0-1.1.3-1.5.7c-.4.5-.6 1.1-.5 1.7l.7 4.1C3 9.9 4.2 11 5.7 11H6v12c-1.7 0-3 1.3-3 3v4h19v-2h-5v-7c0-1.7-1.3-3-3-3s-3 1.3-3 3v7H5v-2c0-.6.4-1 1-1h2V11h12v7h2v-7h.3c1.5 0 2.7-1.1 3-2.5l.7-4.1c.1-.6-.1-1.2-.5-1.7zM13 21c0-.6.4-1 1-1s1 .4 1 1v7h-2v-7zM23.3 8.2c-.1.5-.5.8-1 .8H5.7c-.5 0-.9-.4-1-.8L4 4h2.4l1 2H12V4h4v2h4.6l1-2H24l-.7 4.2z"/>' }, "ibm-cloud-projects": { "body": '<path fill="currentColor" d="M30 18H20v6.468a5.022 5.022 0 0 0 2.861 4.52L25 30l2.139-1.013A5.022 5.022 0 0 0 30 24.467V18zm-5 9.786l-1.283-.607A3.012 3.012 0 0 1 22 24.468V20h6v4.468a3.012 3.012 0 0 1-1.717 2.71L25 27.787zM17 18H5a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h12v-2H5v-5h12v-2zM27 4h-5a2 2 0 0 0-2 2v9h2V6h5v9h2V6a2 2 0 0 0-2-2zM15 4H5a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zM5 13V6h10v7H5z"/>' }, "ibm-cloud-resiliency": { "body": '<path fill="currentColor" d="M24 24v6h6v-6h-6zm4 4h-2v-2h2v2zM2 30h6v-6H2v6zm2-4h2v2H4v-2z"/><path fill="currentColor" d="M26 15h-9V8.837c1.44-.434 2.5-1.757 2.5-3.337C19.5 3.57 17.93 2 16 2s-3.5 1.57-3.5 3.5c0 1.58 1.06 2.903 2.5 3.337V15H6c-1.103 0-2 .897-2 2v5h2v-5h9v7h-2v6h6v-6h-2v-7h9v5h2v-5c0-1.103-.897-2-2-2zM14.5 5.5c0-.827.673-1.5 1.5-1.5s1.5.673 1.5 1.5S16.827 7 16 7s-1.5-.673-1.5-1.5zM17 28h-2v-2h2v2zm9.5-19C28.43 9 30 7.43 30 5.5S28.43 2 26.5 2S23 3.57 23 5.5S24.57 9 26.5 9zm0-5c.827 0 1.5.673 1.5 1.5S27.327 7 26.5 7S25 6.327 25 5.5S25.673 4 26.5 4zm-21 5C7.43 9 9 7.43 9 5.5S7.43 2 5.5 2S2 3.57 2 5.5S3.57 9 5.5 9zm0-5C6.327 4 7 4.673 7 5.5S6.327 7 5.5 7S4 6.327 4 5.5S4.673 4 5.5 4z"/>' }, "ibm-cloud-secrets-manager": { "body": '<path fill="currentColor" d="M20 16c0-.7-.2-1.4-.6-2l3.3-3.3l-1.4-1.4l-3.3 3.3c-.6-.4-1.3-.6-2-.6s-1.4.2-2 .6l-3.3-3.3l-1.4 1.4l3.3 3.3c-.4.6-.6 1.3-.6 2s.2 1.4.6 2l-3.3 3.3l1.4 1.4l3.3-3.3c.6.4 1.3.6 2 .6s1.4-.2 2-.6l3.3 3.3l1.4-1.4l-3.3-3.3c.4-.6.6-1.3.6-2zm-4 2c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2z"/><path fill="currentColor" d="M26 17h6v-2h-2.1C29.4 7.7 23.4 2 16 2C8.3 2 2 8.3 2 16s6.3 14 14 14c5.2 0 9.7-2.8 12.1-7l-1.7-1c-2.1 3.6-5.9 6-10.4 6c-6.6 0-12-5.4-12-12S9.4 4 16 4c6.3 0 11.4 4.9 11.9 11H26v2z"/>' }, "ibm-cloud-security-compliance-center": { "body": '<path fill="currentColor" d="M30 18v5.5c0 1.5-.9 2.8-2.3 3.5l-1.7.8l-1.7-.8c-1.4-.6-2.3-2-2.3-3.5V18h8m2-2H20v7.5c0 2.2 1.3 4.3 3.4 5.3L26 30l2.6-1.2c2.1-1 3.4-3 3.4-5.3V16z"/><path fill="currentColor" d="M16 25H7.5C3.4 25 0 21.6 0 17.5c0-3.7 2.7-6.7 6.2-7.4c.9-4.7 5-8.1 9.8-8.1c5.5 0 10 4.5 10 10h-2c0-4.4-3.6-8-8-8c-4.1 0-7.5 3.1-8 7.1v.9h-.9c-2.9.2-5.1 2.6-5.1 5.5c0 3 2.5 5.5 5.5 5.5H16v2z"/>' }, "ibm-cloud-security-compliance-center-workload-protection": { "body": '<path fill="currentColor" d="M20 18v6.5c0 1.9 1.1 3.7 2.9 4.5l2.1 1l2.1-1c1.7-.8 2.9-2.6 2.9-4.5V18H20zm8 6.5c0 1.2-.7 2.2-1.7 2.7l-1.3.6l-1.3-.6c-1-.5-1.7-1.6-1.7-2.7V20h6v4.5zM16 20c-2.2 0-4-1.8-4-4s1.8-4 4-4s4 1.8 4 4h-2c0-1.1-.9-2-2-2s-2 .9-2 2s.9 2 2 2v2z"/><path fill="currentColor" d="M16 25c-5 0-9-4-9-9s4-9 9-9s9 4 9 9h-2c0-3.9-3.1-7-7-7s-7 3.1-7 7s3.1 7 7 7v2z"/><path fill="currentColor" d="M16 30C8.3 30 2 23.7 2 16S8.3 2 16 2s14 6.3 14 14h-2c0-6.6-5.4-12-12-12S4 9.4 4 16s5.4 12 12 12v2z"/>' }, "ibm-cloud-subnets": { "body": '<path fill="currentColor" d="M26 22a3.607 3.607 0 0 0-2 .6L19.414 18L18 19.414L22.6 24a4.176 4.176 0 0 0-.4 1H9.858a3.553 3.553 0 0 0-.458-1L24 9.4a3.607 3.607 0 0 0 2 .6a4 4 0 1 0-3.857-5H9.9A4.079 4.079 0 0 0 6 2a4 4 0 0 0 0 8a3.607 3.607 0 0 0 2-.6l4.586 4.6L14 12.586L9.4 8a4.175 4.175 0 0 0 .4-1h12.342a3.555 3.555 0 0 0 .458 1L8 22.6a3.607 3.607 0 0 0-2-.6a4 4 0 1 0 3.857 5H22.1a4.012 4.012 0 1 0 3.9-5Zm0-18a2 2 0 1 1-2 2a2.006 2.006 0 0 1 2-2ZM6 8a2 2 0 1 1 2-2a2.006 2.006 0 0 1-2 2Zm0 20a2 2 0 1 1 2-2a2.006 2.006 0 0 1-2 2Zm20 0a2 2 0 1 1 2-2a2.006 2.006 0 0 1-2 2Z"/>' }, "ibm-cloud-sysdig-secure": { "body": '<path fill="currentColor" d="m25 14l-2.1-1c-1.7-.8-2.9-2.6-2.9-4.5V2h10v6.5c0 1.9-1.1 3.7-2.9 4.5L25 14zM22 4v4.5c0 1.2.7 2.2 1.7 2.7l1.3.6l1.3-.6c1-.5 1.7-1.6 1.7-2.7V4h-6z"/><path fill="currentColor" d="M28 16v6H4V6h12V4H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h8v4H8v2h16v-2h-4v-4h8c1.1 0 2-.9 2-2v-6h-2zM18 28h-4v-4h4v4z"/>' }, "ibm-cloud-transit-gateway": { "body": '<path fill="currentColor" d="m25.9 20.9l3.5-3.5a1.933 1.933 0 0 0 0-2.8l-5.3-5.3l1.4-1.4a.901.901 0 0 0 .5.1a2 2 0 1 0-2-2a.901.901 0 0 0 .1.5L18 12.6a3.633 3.633 0 0 0-4 0l-3.3-3.3L16 4l3.5 3.5l1.4-1.4l-3.5-3.5a1.933 1.933 0 0 0-2.8 0L9.3 7.9L7.9 6.5A.901.901 0 0 0 8 6a2 2 0 1 0-2 2a.901.901 0 0 0 .5-.1l6.1 6.1a3.633 3.633 0 0 0 0 4l-3.3 3.3L4 16l3.5-3.5l-1.4-1.4l-3.5 3.5a1.933 1.933 0 0 0 0 2.8l5.3 5.3l-1.4 1.4A.901.901 0 0 0 6 24a2 2 0 1 0 2 2a.901.901 0 0 0-.1-.5l6.1-6.1a3.633 3.633 0 0 0 4 0l3.3 3.3L16 28l-3.5-3.5l-1.4 1.4l3.5 3.5a1.933 1.933 0 0 0 2.8 0l5.3-5.3l1.4 1.4c0 .2-.1.3-.1.5a2 2 0 1 0 2-2a.901.901 0 0 0-.5.1L19.4 18a3.633 3.633 0 0 0 0-4l3.3-3.3L28 16l-3.5 3.5ZM16 18a2 2 0 1 1 2-2a2.006 2.006 0 0 1-2 2Z"/>' }, "ibm-cloud-vpc-endpoints": { "body": '<path fill="currentColor" d="M20 27H7a2.006 2.006 0 0 1-2-2V12h2v13h13Z"/><path fill="currentColor" d="m23.4 22l-4-4a3.606 3.606 0 0 0 .6-2a4.012 4.012 0 0 0-4-4a3.606 3.606 0 0 0-2 .6l-4-4V2H2v8h6.6l4 4a3.606 3.606 0 0 0-.6 2a4.012 4.012 0 0 0 4 4a3.606 3.606 0 0 0 2-.6l4 4V30h8v-8ZM8 8H4V4h4Zm8 10a2 2 0 1 1 2-2a2.006 2.006 0 0 1-2 2Zm12 10h-4v-4h4Z"/><path fill="currentColor" d="M25 20h2V7a2.006 2.006 0 0 0-2-2H12v2h13Z"/>' }, "ibm-content-services": { "body": '<path fill="currentColor" d="m26 32l-2.139-1.012A5.024 5.024 0 0 1 21 26.468V20h10v6.468a5.02 5.02 0 0 1-2.861 4.52L26 32Zm-1.283-2.82l1.283.607l1.283-.607A3.012 3.012 0 0 0 29 26.468V22h-6v4.468c0 1.154.674 2.219 1.717 2.712Z"/><path fill="currentColor" d="M17 10.586A2 2 0 0 0 15.586 10H10a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h9v-2h-9V12h4v4a2 2 0 0 0 2 2h4.292c.693 0 1.312-.414 1.577-1.054c.265-.64.12-1.37-.37-1.861l-4.5-4.499ZM16 16v-3.586L19.585 16H16Z"/><path fill="currentColor" d="M28 6H16l-3.414-3.414A2 2 0 0 0 11.172 2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h2v-2H4V4h7.172l4 4H28v10h2V8a2 2 0 0 0-2-2Z"/>' }, "ibm-data-replication": { "body": '<path fill="currentColor" d="M20 20v2h5.22a11.016 11.016 0 0 1-11.97 4.653l-.499 1.937A13 13 0 0 0 26 24.293V28h2v-8zm5-17a4.005 4.005 0 0 0-4 4a3.954 3.954 0 0 0 .567 2.019L9.019 21.567A3.952 3.952 0 0 0 7 21a4 4 0 1 0 4 4a3.954 3.954 0 0 0-.567-2.019l12.548-12.548A3.952 3.952 0 0 0 25 11a4 4 0 0 0 0-8zM7 27a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zM25 9a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm-9-6A13.04 13.04 0 0 0 6 7.707V4H4v8h8v-2H6.78a11.016 11.016 0 0 1 11.97-4.653l.499-1.937A13.036 13.036 0 0 0 16 3z"/>' }, "ibm-datastage": { "body": '<path fill="currentColor" d="M27 22.1V13h-2v9.1c-1.4.4-2.5 1.5-2.9 2.9H13v2h9.1c.4 1.7 2 3 3.9 3c2.2 0 4-1.8 4-4c0-1.9-1.3-3.4-3-3.9zM26 28c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2zm-16 2H2v-8h8v8zm-6-2h4v-4H4v4zM9.9 7H19V5H9.9c-.5-1.7-2-3-3.9-3c-2.2 0-4 1.8-4 4c0 1.9 1.3 3.4 3 3.9V19h2V9.9C8.4 9.5 9.5 8.4 9.9 7zM6 8c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2z"/><path fill="currentColor" d="M22 2v2h4.6L11 19.6l1.4 1.4L28 5.4V10h2V2z"/>' }, "ibm-db2": { "body": '<circle cx="23" cy="26" r="1" fill="currentColor"/><circle cx="9" cy="6" r="1" fill="currentColor"/><path fill="currentColor" d="M12 17h8c2.206 0 4-1.794 4-4v-3h2c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2H6c-1.103 0-2 .897-2 2v4c0 1.103.897 2 2 2h16v3c0 1.103-.897 2-2 2h-8c-2.206 0-4 1.794-4 4v3H6c-1.103 0-2 .897-2 2v4c0 1.103.897 2 2 2h20c1.103 0 2-.897 2-2v-4c0-1.103-.897-2-2-2H10v-3c0-1.103.897-2 2-2ZM6 4h20v4H6V4Zm20 24H6v-4h20v4Z"/>' }, "ibm-db2-alt": { "body": '<path fill="currentColor" d="M31.358 22H22.96v-2.329l3.654-3.127c1.326-1.14 1.785-1.802 1.785-2.805V13.5c0-.901-.799-1.36-1.564-1.36c-1.121 0-1.665.765-1.903 1.666l-2.227-.85c.527-1.649 1.904-3.026 4.368-3.026c2.567 0 4.046 1.513 4.046 3.57c0 2.04-1.462 3.28-3.162 4.623l-2.21 1.734h5.61V22zM12.829 9.421h2.516v5.15h.085c.255-.985 1.24-1.7 2.397-1.7c2.26 0 3.433 1.633 3.433 4.658s-1.173 4.675-3.433 4.675c-1.156 0-2.142-.731-2.397-1.7h-.085V22h-2.516V9.421zm5.814 8.89v-1.547c0-1.121-.697-1.852-1.65-1.852s-1.648.493-1.648 1.308v2.635c0 .816.697 1.309 1.649 1.309s1.649-.731 1.649-1.853zM1.116 10.135h4.47c3.146 0 5.22 1.989 5.22 5.933S8.73 22 5.585 22h-4.47V10.135zm4.47 9.569c1.53 0 2.483-.833 2.483-2.72v-1.836c0-1.886-.952-2.72-2.482-2.72H3.7v7.276h1.887z"/>' }, "ibm-match-360": { "body": '<path fill="currentColor" d="M5 25a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2zm11 0a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2zm11 0a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2zm1-2h-2V11a2.006 2.006 0 0 0-2-2h-2V7h2a4.012 4.012 0 0 1 4 4zM15 12h2v11h-2zM6 23H4V11a4.012 4.012 0 0 1 4-4h2v2H8a2.006 2.006 0 0 0-2 2zM16 2l-1.3 2.634l-2.906.42l2.103 2.052L13.4 10L16 8.634L18.6 10l-.497-2.894l2.103-2.049l-2.906-.423z"/>' }, "ibm-mq": { "body": '<path fill="currentColor" d="m22.5 28.4l-.9-1.8c4-2.1 6.5-6.2 6.5-10.6c0-6.6-5.4-12-12-12c-1.3 0-2.5.2-3.7.6l-.6-1.9c1.3-.5 2.7-.7 4.2-.7c7.7 0 14 6.3 14 14c0 5.2-2.9 10-7.5 12.4z"/><path fill="currentColor" d="m20.5 23.8l-1-1.7c2.2-1.2 3.5-3.6 3.5-6.1c0-3.9-3.1-7-7-7c-.6 0-1.2.1-1.8.2l-.5-1.9c.8-.2 1.5-.3 2.3-.3c5 0 9 4 9 9c0 3.2-1.7 6.2-4.5 7.8zm-11 4.6C4.9 26 2 21.2 2 16c0-1.5.2-2.9.7-4.3l1.9.6C4.2 13.5 4 14.7 4 16c0 4.5 2.5 8.6 6.5 10.6l-1 1.8z"/><path fill="currentColor" d="M11.5 23.8C8.7 22.2 7 19.2 7 16c0-.8.1-1.5.3-2.2l1.9.5c-.1.5-.2 1.1-.2 1.7c0 2.5 1.3 4.8 3.5 6.1l-1 1.7z"/><path fill="currentColor" d="M20 16c0-2.2-1.8-4-4-4c-.7 0-1.4.2-2 .6L8.9 7.5c.1-.2.1-.3.1-.5c0-1.1-.9-2-2-2s-2 .9-2 2s.9 2 2 2c.2 0 .3 0 .5-.1l5.1 5.1c-.4.6-.6 1.3-.6 2c0 1.9 1.3 3.4 3 3.9v7.4c-.6.3-1 1-1 1.7c0 1.1.9 2 2 2s2-.9 2-2c0-.7-.4-1.4-1-1.7v-7.4c1.7-.5 3-2 3-3.9zm-4 2c-1.1 0-2-.9-2-2s.9-2 2-2s2 .9 2 2s-.9 2-2 2z"/>' }, "ibm-open-enterprise-languages": { "body": '<path fill="currentColor" d="M23.586 21.414L27.166 25l-3.582 3.587L25 30l5-5l-5-5zm-3.172 0L16.834 25l3.582 3.587L19 30l-5-5l5-5zM22 6h2v8h-2zm-4 0h2v8h-2zm-4 8h-2c-1.103 0-2-.897-2-2V8c0-1.103.897-2 2-2h2c1.103 0 2 .897 2 2v4c0 1.103-.897 2-2 2zm-2-6v4h2V8h-2zM6 6h2v8H6z"/><path fill="currentColor" d="M10 28H4c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h22c1.103 0 2 .897 2 2v12h-2V4H4v22h6v2z"/>' }, "ibm-openshift-container-platform-on-vpc-for-regulated-industries": { "body": '<circle cx="19" cy="27" r="1" fill="currentColor"/><path fill="currentColor" d="M29 31H16c-1.103 0-2-.897-2-2v-4c0-1.103.897-2 2-2h13c1.103 0 2 .897 2 2v4c0 1.103-.897 2-2 2zm-13-6v4h13v-4H16zm13-4H16c-1.103 0-2-.897-2-2v-4c0-1.103.897-2 2-2h13c1.103 0 2 .897 2 2v4c0 1.103-.897 2-2 2zm-13-6v4h13v-4H16z"/><path fill="currentColor" d="M12 27.3C7.347 25.648 4 21.213 4 16C4 9.383 9.383 4 16 4c4.831 0 8.994 2.876 10.895 7h2.166C27.042 5.746 21.957 2 16 2C8.28 2 2 8.28 2 16c0 6.33 4.225 11.685 10 13.41V27.3Z"/>' }, "ibm-power-vs": { "body": '<path fill="currentColor" d="M16 25c-2 0-4-.7-5.6-2l1.3-1.6c1.3 1 2.8 1.5 4.4 1.5c3.9 0 7-3.1 7-7c0-.3 0-.7-.1-1l2-.3V16c0 5-4 9-9 9zm-8.9-7.7C7 16.9 7 16.4 7 16c0-5 4-9 9-9c2 0 4 .7 5.6 2l-1.3 1.6C19.1 9.5 17.6 9 16 9c-3.9 0-7 3.1-7 7c0 .3 0 .7.1 1l-2 .3z"/><circle cx="23" cy="27" r="1" fill="currentColor"/><circle cx="9" cy="20" r="1" fill="currentColor"/><circle cx="23" cy="12" r="1" fill="currentColor"/><circle cx="16" cy="16" r="2" fill="currentColor"/><circle cx="9" cy="5" r="1" fill="currentColor"/><path fill="currentColor" d="M16 30C8.3 30 2 23.7 2 16c0-3.7 1.5-7.3 4.1-9.9l1.4 1.4C5.2 9.8 4 12.8 4 16c0 6.6 5.4 12 12 12c1.4 0 2.8-.2 4.1-.7l.7 1.9c-1.5.5-3.2.8-4.8.8zm9.9-4.1l-1.4-1.4c2.3-2.3 3.5-5.3 3.5-8.5c0-6.6-5.4-12-12-12c-1.4 0-2.8.2-4.1.7l-.7-1.9c1.5-.5 3.2-.8 4.8-.8c7.7 0 14 6.3 14 14c0 3.7-1.5 7.3-4.1 9.9z"/>' }, "ibm-power-with-vpc": { "body": '<path fill="currentColor" d="M9 21H3c-1.103 0-2-.897-2-2v-6c0-1.103.897-2 2-2h6c1.103 0 2 .897 2 2v6c0 1.103-.897 2-2 2zm-6-8v6h6v-6H3zm8.693 16.325A14.05 14.05 0 0 1 4.2 23.538l1.685-1.078a12.043 12.043 0 0 0 6.421 4.96l-.614 1.904z"/><circle cx="19" cy="27" r="1" fill="currentColor"/><path fill="currentColor" d="M29 31H16c-1.103 0-2-.897-2-2v-4c0-1.103.897-2 2-2h13c1.103 0 2 .897 2 2v4c0 1.103-.897 2-2 2zm-13-6v4h13v-4H16zm10.89-4h2.184A14.07 14.07 0 0 0 30 16c0-.672-.064-1.338-.16-2h-2.026c.11.66.186 1.326.186 2c0 1.755-.387 3.43-1.11 5zM28 7c0-.37-.067-.721-.161-1.062l1.857-1.072l-1-1.732L26.85 4.2A3.995 3.995 0 0 0 25 3.142V1h-2v2.142c-.711.185-1.35.55-1.85 1.058l-1.846-1.066l-1 1.732L20.16 5.94c-.093.339-.16.689-.16 1.06s.067.721.161 1.062l-1.857 1.072l1 1.732L21.15 9.8c.5.509 1.14.872 1.85 1.057V13h2v-2.143A4.002 4.002 0 0 0 26.85 9.8l1.846 1.066l1-1.732l-1.857-1.072C27.933 7.722 28 7.37 28 7zm-4 2c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2zm-18.114.54L4.201 8.46A13.955 13.955 0 0 1 16 2v2A11.96 11.96 0 0 0 5.886 9.54z"/>' }, "ibm-private-path-services": { "body": '<path fill="currentColor" d="M24 16a2.995 2.995 0 0 0-2.816 2H12v-2H6v6h6v-2h9.184A2.995 2.995 0 0 0 24 22c1.654 0 3-1.346 3-3s-1.346-3-3-3Zm-14 4H8v-2h2v2Zm14 0a1 1 0 1 1 .001-2.001A1 1 0 0 1 24 20Z"/><path fill="currentColor" d="M25.832 11.22C24.99 6.553 20.905 3 16 3s-8.99 3.553-9.832 8.22C2.638 12.052 0 15.22 0 19c0 4.411 3.589 8 8 8h4v-2H8c-3.309 0-6-2.691-6-6s2.691-6 6-6c0-4.411 3.589-8 8-8s8 3.589 8 8c3.309 0 6 2.691 6 6s-2.691 6-6 6h-8v2h8c4.411 0 8-3.589 8-8c0-3.78-2.638-6.948-6.168-7.78Z"/>' }, "ibm-process-mining": { "body": '<path fill="currentColor" d="M26 22c-1.858 0-3.41 1.28-3.858 3H9.858A4.003 4.003 0 0 0 7 22.142V19c0-1.103.897-2 2-2h14c2.206 0 4-1.794 4-4V9.858c1.72-.447 3-2 3-3.858c0-2.206-1.794-4-4-4s-4 1.794-4 4c0 1.858 1.28 3.41 3 3.858V13c0 1.103-.897 2-2 2H9c-2.206 0-4 1.794-4 4v3.142c-1.72.447-3 2-3 3.858c0 2.206 1.794 4 4 4c1.858 0 3.41-1.28 3.858-3h12.284c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4ZM24 6c0-1.103.897-2 2-2s2 .897 2 2s-.897 2-2 2s-2-.897-2-2ZM6 28c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2Zm20 0c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2Z"/><path fill="currentColor" d="M6 10c.74 0 1.424-.215 2.019-.567L11.586 13L13 11.586L9.433 8.019A3.95 3.95 0 0 0 10 6c0-2.206-1.794-4-4-4S2 3.794 2 6s1.794 4 4 4Zm0-6c1.103 0 2 .897 2 2s-.897 2-2 2s-2-.897-2-2s.897-2 2-2Z"/>' }, "ibm-sap-on-power": { "body": '<path fill="currentColor" d="M9 21H3c-1.103 0-2-.897-2-2v-6c0-1.103.897-2 2-2h6c1.103 0 2 .897 2 2v6c0 1.103-.897 2-2 2zm-6-8v6h6v-6H3zm8.693 16.325A14.05 14.05 0 0 1 4.2 23.538l1.685-1.078a12.043 12.043 0 0 0 6.421 4.96l-.614 1.904z"/><circle cx="19" cy="27" r="1" fill="currentColor"/><path fill="currentColor" d="M29 31H16c-1.103 0-2-.897-2-2v-4c0-1.103.897-2 2-2h13c1.103 0 2 .897 2 2v4c0 1.103-.897 2-2 2zm-13-6v4h13v-4H16zm10.89-4h2.184A14.07 14.07 0 0 0 30 16c0-.672-.064-1.338-.16-2h-2.026c.11.66.186 1.326.186 2c0 1.755-.387 3.43-1.11 5zm-1.39-9H19a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h12a1 1 0 0 1 .786 1.618l-5.5 7A1 1 0 0 1 25.5 12zM20 10h5.014l3.929-5H20v5zM5.886 9.54L4.201 8.46A13.955 13.955 0 0 1 16 2v2A11.96 11.96 0 0 0 5.886 9.54z"/>' }, "ibm-secure-infrastructure-on-vpc-for-regulated-industries": { "body": '<path fill="currentColor" d="M9 21H3c-1.103 0-2-.897-2-2v-6c0-1.103.897-2 2-2h6c1.103 0 2 .897 2 2v6c0 1.103-.897 2-2 2zm-6-8v6h6v-6H3zm13 17c-.362 0-.72-.014-1.076-.04c-4.352-.332-8.36-2.732-10.723-6.42l1.685-1.08a12.057 12.057 0 0 0 9.19 5.505c.305.023.613.035.924.035v2zm7 0l-2.1-1c-1.7-.8-2.9-2.6-2.9-4.5V18h10v6.5c0 1.9-1.1 3.7-2.9 4.5L23 30zm-3-10v4.5c0 1.2.7 2.2 1.7 2.7l1.3.6l1.3-.6c1-.5 1.7-1.6 1.7-2.7V20h-6zm7.302-8c.454 1.282.698 2.621.698 4h2c0-1.37-.199-2.708-.584-4h-2.114zM27 10h-3c-1.103 0-2-.897-2-2V5c0-1.103.897-2 2-2h3c1.103 0 2 .897 2 2v3c0 1.103-.897 2-2 2zm-3-5v3h3V5h-3zm-4-2.417A13.952 13.952 0 0 0 16 2A13.951 13.951 0 0 0 4.202 8.46l1.684 1.08A11.961 11.961 0 0 1 20 4.698V2.583z"/>' }, "ibm-security": { "body": '<path fill="currentColor" d="M16 0L4 5.978v14.066a12 12 0 0 0 24 0V5.978Zm6.83 27.314L16 23.912v2.228l5.036 2.509A10.002 10.002 0 0 1 6 20.044V7.21l10-4.982L26 7.21v3.75L16 5.978v2.228l10 4.982v3.75l-10-4.982v2.228l10 4.982v.878a9.905 9.905 0 0 1-.37 2.687L16 17.934v2.228l8.895 4.431a10.025 10.025 0 0 1-2.065 2.721Z"/>' }, "ibm-security-services": { "body": '<path fill="currentColor" d="M26 20a2.97 2.97 0 0 0-1.855.66L22 19.423v-1.606a3 3 0 1 0-2 0v1.606l-2.145 1.239A2.97 2.97 0 0 0 16 20a3.02 3.02 0 1 0 2.925 2.353L21 21.154l2.075 1.198A2.998 2.998 0 1 0 26 20Zm-10 4a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm5-10a1 1 0 1 1-1 1a1 1 0 0 1 1-1Zm5 10a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M16 31A11.012 11.012 0 0 1 5 20V6.382l10.987-5.5l10.46 5.237l-.895 1.788l-9.565-4.789L7 7.618V20a9 9 0 0 0 14.4 7.201l1.2 1.599A10.908 10.908 0 0 1 16 31Z"/>' }, "ibm-telehealth": { "body": '<path fill="currentColor" d="M18 25h-3v-3h-2v3h-3v2h3v3h2v-3h3v-2z"/><path fill="currentColor" d="M22 30h-2v-5c0-2.8-2.2-5-5-5H9c-2.8 0-5 2.2-5 5v5H2v-5c0-3.9 3.1-7 7-7h6c3.9 0 7 3.1 7 7v5zm6-24.8V3c0-1.1-.9-2-2-2h-8c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V6.8L31 9V3l-3 2.2zM26 9h-8V3h8v6zm-10.5 3.5c-.9.9-2.1 1.5-3.5 1.5c-2.8 0-5-2.2-5-5s2.2-5 5-5c.5 0 .9.1 1.3.2l.6-1.9c-.6-.2-1.2-.3-1.9-.3c-3.9 0-7 3.1-7 7s3.1 7 7 7c1.9 0 3.7-.8 5-2l-1.5-1.5z"/>' }, "ibm-tenet": { "body": '<path fill="currentColor" d="M20 13h-8a1 1 0 0 0-.832 1.555l4 6a1 1 0 0 0 1.664 0l4-6A1 1 0 0 0 20 13Zm-4 5.197L13.868 15h4.264L16 18.197Z"/><path fill="currentColor" d="M16 23a7 7 0 0 1-4.42-1.58l-1.42 1.42c.03.026.057.056.088.082A9.006 9.006 0 0 0 16 25c4.963 0 9-4.038 9-9h-2c0 3.86-3.14 7-7 7Z"/><circle cx="23" cy="12" r="1" fill="currentColor"/><circle cx="9" cy="20" r="1" fill="currentColor"/><path fill="currentColor" d="M16 9c1.61 0 3.177.562 4.422 1.578L21.84 9.16c-.038-.033-.071-.07-.11-.103A9.017 9.017 0 0 0 16 7c-4.963 0-9 4.038-9 9h2c0-3.86 3.14-7 7-7Z"/><path fill="currentColor" d="M16 30C8.28 30 2 23.72 2 16S8.28 2 16 2s14 6.28 14 14s-6.28 14-14 14Zm0-26C9.383 4 4 9.383 4 16s5.383 12 12 12s12-5.383 12-12S22.617 4 16 4Z"/>' }, "ibm-toolchain": { "body": '<path fill="currentColor" d="M25 21c-.74 0-1.424.215-2.02.567l-2.03-2.031l-1.415 1.414l2.032 2.031A3.954 3.954 0 0 0 21 25c0 2.206 1.794 4 4 4c.356 0 .694-.061 1.023-.15l-2.437-2.436A1.994 1.994 0 0 1 23 25a2.002 2.002 0 0 1 3.414-1.414l2.437 2.437A3.95 3.95 0 0 0 29 25c0-2.206-1.795-4-4-4zm-4.05-8.536L24.713 8.7c.391.187.824.3 1.286.3a3 3 0 1 0-3-3c0 .462.113.895.3 1.286l-3.764 3.764l1.414 1.414zM26 5c.551 0 1 .449 1 1s-.449 1-1 1s-1-.449-1-1s.449-1 1-1zm-10 7a4 4 0 0 0-4 4c0 .74.215 1.425.566 2.02l-5.28 5.28A2.971 2.971 0 0 0 6 23a3 3 0 1 0 3 3c0-.462-.113-.895-.3-1.286l5.28-5.28A3.96 3.96 0 0 0 16 20a4 4 0 0 0 0-8zM6 27a1.001 1.001 0 0 1 0-2a1.001 1.001 0 0 1 0 2zm10-9c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2zm-9-7c.74 0 1.424-.215 2.02-.567l2.03 2.031l1.414-1.414l-2.03-2.031C10.783 8.424 11 7.739 11 7c0-2.206-1.794-4-4-4c-.356 0-.694.061-1.023.15l2.437 2.436A2.002 2.002 0 0 1 7 9a1.993 1.993 0 0 1-1.414-.586L3.149 5.977A3.95 3.95 0 0 0 3 7c0 2.206 1.794 4 4 4z"/>' }, "ibm-vsi-on-vpc-for-regulated-industries": { "body": '<path fill="currentColor" d="M9 21H3c-1.103 0-2-.897-2-2v-6c0-1.103.897-2 2-2h6c1.103 0 2 .897 2 2v6c0 1.103-.897 2-2 2zm-6-8v6h6v-6H3zm13 17c-.362 0-.72-.014-1.076-.04c-4.352-.332-8.36-2.732-10.723-6.42l1.685-1.08a12.057 12.057 0 0 0 9.19 5.505c.305.023.613.035.924.035v2zm12 0h-8c-1.103 0-2-.897-2-2v-8c0-1.103.897-2 2-2h8c1.103 0 2 .897 2 2v8c0 1.103-.897 2-2 2zm-8-10v8h8v-8h-8zm7.302-8c.454 1.282.698 2.621.698 4h2c0-1.37-.199-2.708-.584-4h-2.114zM27 10h-3c-1.103 0-2-.897-2-2V5c0-1.103.897-2 2-2h3c1.103 0 2 .897 2 2v3c0 1.103-.897 2-2 2zm-3-5v3h3V5h-3zm-4-2.417A13.952 13.952 0 0 0 16 2A13.951 13.951 0 0 0 4.202 8.46l1.684 1.08A11.961 11.961 0 0 1 20 4.698V2.583z"/>' }, "ibm-watson-assistant": { "body": '<path fill="currentColor" d="M28 2H18c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h2.4l1.7 3l1.7-1l-2.3-4H18V4h10v6h-3v2h3c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM14.7 31L13 30l3.5-6H22c1.1 0 2-.9 2-2v-5h2v5c0 2.2-1.8 4-4 4h-4.4l-2.9 5z"/><circle cx="10" cy="17" r="1" fill="currentColor"/><circle cx="14" cy="17" r="1" fill="currentColor"/><circle cx="18" cy="17" r="1" fill="currentColor"/><path fill="currentColor" d="M12 26H6c-2.2 0-4-1.8-4-4V12c0-2.2 1.8-4 4-4h8v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h6v2z"/>' }, "ibm-watson-discovery": { "body": '<path fill="currentColor" d="M6 17h8v2H6z"/><circle cx="3" cy="18" r="1" fill="currentColor"/><circle cx="13" cy="14" r="1" fill="currentColor"/><path fill="currentColor" d="M2 13h8v2H2zm4-4h8v2H6z"/><circle cx="3" cy="10" r="1" fill="currentColor"/><path fill="currentColor" d="m30 28.6l-7.4-7.4c1.5-2 2.4-4.5 2.4-7.2c0-6.6-5.4-12-12-12c-3.3 0-6.4 1.3-8.7 3.8l1.5 1.4C7.6 5.1 10.2 4 13 4c5.5 0 10 4.5 10 10s-4.5 10-10 10c-3 0-5.8-1.3-7.7-3.6l-1.5 1.3C6 24.4 9.4 26 13 26c3.2 0 6.1-1.3 8.3-3.3l7.3 7.3l1.4-1.4z"/>' }, "ibm-watson-knowledge-catalog": { "body": '<path fill="currentColor" d="m23 27.2l-2.6-2.6L19 26l4 4l7-7l-1.4-1.4zM12 18h8v2h-8zm0-5h8v2h-8zm0-5h8v2h-8z"/><path fill="currentColor" d="M16 28H6v-4h2v-2H6v-5h2v-2H6v-5h2V8H6V4h18v16h2V4c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2v4H2v2h2v5H2v2h2v5H2v2h2v4c0 1.1.9 2 2 2h10v-2z"/>' }, "ibm-watson-knowledge-studio": { "body": '<path fill="currentColor" d="M20 25h7v2h-7zm2 4h3v2h-3zm5-6h-2c0-1.1.4-2 1.2-2.8l.5-.5c.8-.8 1.3-2 1.3-3.2c0-2.5-2-4.5-4.5-4.5S19 14 19 16.5c0 1.2.5 2.3 1.3 3.2l.5.5c.8.8 1.2 1.7 1.2 2.8h-2c0-.5-.2-1-.6-1.4l-.5-.5c-1.2-1.2-1.9-2.9-1.9-4.6c0-3.6 2.9-6.5 6.5-6.5s6.5 2.9 6.5 6.5c0 1.7-.7 3.4-1.9 4.6l-.5.5c-.4.4-.6.9-.6 1.4zM6 22h8v2H6z"/><circle cx="12" cy="19" r="1" fill="currentColor"/><path fill="currentColor" d="M6 18h3v2H6zm0-4h7v2H6zm4-4h7v2h-7z"/><circle cx="7" cy="11" r="1" fill="currentColor"/><path fill="currentColor" d="M16 6h4v2h-4z"/><circle cx="13" cy="7" r="1" fill="currentColor"/><path fill="currentColor" d="M6 6h4v2H6z"/><path fill="currentColor" d="M18 28H4V4h18v4h2V4c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v24c0 1.1.9 2 2 2h14v-2z"/>' }, "ibm-watson-language-translator": { "body": '<path fill="currentColor" d="M16 28h-3c-3.9 0-7-3.1-7-7v-4h2v4c0 2.8 2.2 5 5 5h3v2zm12 2h2.2l-4.6-11h-2.2l-4.6 11H21l.8-2h5.3l.9 2zm-5.3-4l1.8-4.4l1.8 4.4h-3.6zM28 15h-2v-4c0-2.8-2.2-5-5-5h-4V4h4c3.9 0 7 3.1 7 7v4zM14 5V3H9V1H7v2H2v2h8.2c-.2.9-.8 2.5-2.2 4c-.6-.7-1.1-1.4-1.4-2H4.3c.4 1 1.1 2.2 2.1 3.3c-.8.7-2 1.3-3.4 1.8l.7 1.9c1.8-.7 3.2-1.5 4.3-2.3c1.1.9 2.5 1.7 4.3 2.3l.7-1.9c-1.4-.5-2.6-1.2-3.5-1.8c1.9-2 2.5-4.1 2.7-5.3H14z"/>' }, "ibm-watson-machine-learning": { "body": '<path fill="currentColor" d="M3.6 22.5c-1-2-1.6-4.2-1.6-6.5C2 8.3 8.3 2 16 2v2C9.4 4 4 9.4 4 16c0 2 .5 3.8 1.4 5.5l-1.8 1zM28 16c0 6.6-5.4 12-12 12c-2.9 0-5.6-1-7.7-2.8l5.7-5.7l-1.4-1.5l-6.5 6.5c-.4.4-.4 1 0 1.4C8.7 28.5 12.3 30 16 30c7.7 0 14-6.3 14-14h-2z"/><path fill="currentColor" d="M18 25c-.1 0-.3 0-.4-.1c-.3-.1-.6-.4-.6-.8l-.7-5l2-.3l.4 3.3l2.2-1.7V15c0-.3.1-.5.3-.7l3.2-3.2c.9-.9 1.5-2.2 1.5-3.5V6h-1.5c-1.3 0-2.6.5-3.5 1.5l-3.2 3.2c-.2.2-.4.3-.7.3h-5.5l-1.7 2.2l3.3.4l-.3 2l-5-.7c-.4 0-.7-.3-.8-.6s-.1-.7.1-1l3-4c.3-.2.6-.3.9-.3h5.6l3-3c1.3-1.3 3.1-2 4.9-2H26c1.1 0 2 .9 2 2v1.5c0 1.9-.7 3.6-2 4.9l-3 3V21c0 .3-.1.6-.4.8l-4 3c-.2.1-.4.2-.6.2z"/>' }, "ibm-watson-natural-language-classifier": { "body": '<path fill="currentColor" d="M28 12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2h-4c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h1v4h-3v2h8v-2h-3v-4h1zm-4-8h4v6h-4V4zm-3 18.4L19.6 21L16 24.6L12.4 21L11 22.4l3.6 3.6l-3.6 3.6l1.4 1.4l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6zM12 18h3v3h2v-3h3v-2h-8zm-2-6V4c0-1.1-.9-2-2-2H3v2h5v2H4c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1v4H2v2h8v-2H7v-4h3zM4 8h4v2H4V8z"/>' }, "ibm-watson-natural-language-understanding": { "body": '<path fill="currentColor" d="M6 23h5v2H6zm0-4h5v2H6z"/><path fill="currentColor" d="M13 30H4c-1.1 0-2-.9-2-2V17c0-1.1.9-2 2-2h9c1.1 0 2 .9 2 2v11c0 1.1-.9 2-2 2zM4 17v11h9V17H4zM19 2h8v2h-8zm3 4h8v2h-8zm0 4h8v2h-8zm-3 4h8v2h-8zm3 4h8v2h-8zM12 1l-1.4 1.4L13.2 5H4c-1.1 0-2 .9-2 2v5h2V7h9.2l-2.6 2.6L12 11l5-5l-5-5z"/>' }, "ibm-watson-openscale": { "body": '<path fill="currentColor" d="M4 28c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zm24 4c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1zM22.4 4.4l-.9 1.8C26.1 8.4 29 13 29 18c0 .7-.1 1.4-.2 2.1l2 .3c.1-.8.2-1.6.2-2.5c0-5.7-3.4-11-8.6-13.5zM16 7c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3zm0-4c-.6 0-1 .4-1 1s.4 1 1 1s1-.4 1-1s-.4-1-1-1z"/><path fill="currentColor" d="m25.5 13.6l-1-1.7l-7.5 4.4V9h-2v7.2L6.2 11c-.5-.3-1.1-.1-1.4.3s-.1 1.1.3 1.4L14 18l-6.2 3.6l1 1.7l6.2-3.6V30c0 .6.4 1 1 1s1-.4 1-1V19.8l6.2 3.7l1-1.7L18 18l7.5-4.4z"/>' }, "ibm-watson-orders": { "body": '<path fill="currentColor" d="M28 13h-2v-2c0-2.8-2.2-5-5-5h-3V4h3c3.9 0 7 3.1 7 7v2zm-6 7h3v2h-3zm0 4h3v2h-3z"/><path fill="currentColor" d="M27 30h-5v-2h5V18h-7v9c0 1.7-1.3 3-3 3s-3-1.3-3-3v-3h2v3c0 .6.4 1 1 1s1-.4 1-1V16h11v12c0 1.1-.9 2-2 2zm-15-2h-1c-3.9 0-7-3.1-7-7v-4h2v4c0 2.8 2.2 5 5 5h1v2zm-1-18v2h3c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h2.4l1.7 3l1.7-1l-2.3-4H4V4h10v6h-3z"/>' }, "ibm-watson-query": { "body": '<path fill="currentColor" d="M22 24h-.5l-3.3-6c.5-.5.8-1.2.8-2c0-1.7-1.3-3-3-3s-3 1.3-3 3c0 .8.3 1.5.8 2l-3.3 6H10c-1.7 0-3 1.3-3 3s1.3 3 3 3s3-1.3 3-3c0-.8-.3-1.5-.8-2l3.3-6.1h1l3.3 6.1c-.5.5-.8 1.2-.8 2c0 1.7 1.3 3 3 3s3-1.3 3-3s-1.3-3-3-3zm-6-9c.6 0 1 .4 1 1s-.4 1-1 1s-1-.4-1-1s.4-1 1-1zm-6 13c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm12 0c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/><path fill="currentColor" d="M24.8 9.1C23.9 5 20.3 2 16 2S8.1 5 7.2 9.1c-3 .6-5.2 3.3-5.2 6.4C2 19.1 4.9 22 8.5 22H9v-2h-.5C6 20 4 18 4 15.5c0-2.3 1.8-4.3 4.1-4.5H9l.1-.8C9.5 6.6 12.5 4 16 4c3.5 0 6.5 2.6 6.9 6.1l.1.9l.8.1c2.3.2 4.1 2.2 4.1 4.5c0 2.5-2 4.5-4.5 4.5H23v2h.5c3.6 0 6.5-2.9 6.5-6.5c0-3.2-2.2-5.9-5.2-6.5z"/>' }, "ibm-watson-speech-to-text": { "body": '<path fill="currentColor" d="M14 18H4c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h2.4l1.7 3l1.7-1l-2.3-4H4v-6h10v6h-3v2h3c1.1 0 2-.9 2-2v-6c0-1.1-.9-2-2-2zm5 8h2c3.9 0 7-3.1 7-7v-2h-2v2c0 2.8-2.2 5-5 5h-2v2zm-1-15h6v2h-6zm0-4h12v2H18zm0-4h12v2H18zM4 14h2v-2c0-2.8 2.2-5 5-5h4V5h-4c-3.9 0-7 3.1-7 7v2z"/>' }, "ibm-watson-studio": { "body": '<path fill="currentColor" d="M25 21c-2.8 0-5-2.2-5-5s2.2-5 5-5s5 2.2 5 5s-2.2 5-5 5zm0-8c-1.7 0-3 1.3-3 3s1.3 3 3 3s3-1.3 3-3s-1.3-3-3-3zm-11-2V6c0-1.1-.9-2-2-2h-2v2h2v5c0 2.1 1.1 3.9 2.7 5c-1.6 1.1-2.7 2.9-2.7 5v5h-2v2h2c1.1 0 2-.9 2-2v-5c0-2.2 1.8-4 4-4v-2c-2.2 0-4-1.8-4-4zM2 30v-6h6v6H2zm2-4v2h2v-2H4zm-2-7v-6h6v6H2zm2-4v2h2v-2H4zM2 8V2h6v6H2zm2-4v2h2V4H4z"/>' }, "ibm-watson-text-to-speech": { "body": '<path fill="currentColor" d="M13 26h-2c-3.9 0-7-3.1-7-7v-2h2v2c0 2.8 2.2 5 5 5h2v2zm5-8h10c1.1 0 2 .9 2 2v6c0 1.1-.9 2-2 2h-2.4l-1.7 3l-1.7-1l2.3-4H28v-6H18v6h3v2h-3c-1.1 0-2-.9-2-2v-6c0-1.1.9-2 2-2zm10-4h-2v-2c0-2.8-2.2-5-5-5h-4V5h4c3.9 0 7 3.1 7 7v2zM2 11h6v2H2zm0-4h12v2H2zm0-4h12v2H2z"/>' }, "ibm-watson-tone-analyzer": { "body": '<path fill="currentColor" d="M23.9 10c-.6-.6-1.5-1-2.4-1s-1.8.4-2.4 1l-1.4-1.4c1-1 2.4-1.6 3.8-1.6s2.9.6 3.8 1.6L23.9 10z"/><circle cx="24" cy="5" r="1" fill="currentColor"/><circle cx="19" cy="5" r="1" fill="currentColor"/><path fill="currentColor" d="M15 0h13c1.1 0 2 .9 2 2v10c0 1.1-.9 2-2 2h-3.5l-1.7 3l-1.8-1l2.3-4H28V2H15v10h5v2h-5c-1.1 0-2-.9-2-2V2c0-1.1.9-2 2-2zm5 19v6c0 .6-.4 1-1 1h-5v2h5c1.7 0 3-1.3 3-3v-6h-2zm-4.6 1.4c-.8 1-2.1 1.6-3.4 1.6s-2.6-.6-3.4-1.6L7 21.6C8.2 23 10 24 12 24s3.8-.9 5-2.4l-1.6-1.2z"/><circle cx="15.5" cy="17.5" r="1.5" fill="currentColor"/><circle cx="8.5" cy="17.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M10.1 26H5c-.6 0-1-.4-1-1V14c0-.6.4-1 1-1h5v-2H5c-1.7 0-3 1.3-3 3v11c0 1.7 1.3 3 3 3h4l2.3 4l1.7-1l-2.9-5z"/>' }, "ibm-z-cloud-mod-stack": { "body": '<path fill="currentColor" d="M18.496 27.386L16 28.842L5 22.426v-5.852l10.016-5.843c.292.166.625.269.984.269a2 2 0 1 0-2-2l.001.008l-10.505 6.128A1.001 1.001 0 0 0 3 16v7c0 .355.189.685.496.864l12 7a.999.999 0 0 0 1.008 0l3-1.75l-1.008-1.728z"/><path fill="currentColor" d="m28.504 8.136l-3-1.75l-1.008 1.728L27 9.574v12.852l-4.593 2.679l-10.409-6.093L12 19a2 2 0 1 0-2 2c.358 0 .69-.102.981-.267l10.92 6.393a1.004 1.004 0 0 0 1.009.001l5.594-3.263c.307-.179.496-.509.496-.864V9c0-.355-.189-.685-.496-.864z"/><path fill="currentColor" d="M23 17.277V5.5c0-.355-.189-.685-.496-.864l-6-3.5a.999.999 0 0 0-1.008 0l-12 7A1.001 1.001 0 0 0 3 9v2.999h2V9.574l11-6.417l5 2.917v11.203c-.595.347-1 .984-1 1.723a2 2 0 0 0 4 0c0-.738-.405-1.376-1-1.723z"/>' }, "ibm-z-cloud-provisioning": { "body": '<path fill="currentColor" d="M10 17h4v4h-4zm7-7h4v4h-4zm0 7h4v4h-4z"/><path fill="currentColor" d="M19.758 26.65L16 28.842L5 22.426V18H3v5c0 .355.189.685.496.864l12 7a.999.999 0 0 0 1.008 0l4.282-2.498l-1.028-1.716zm8.746-18.514l-4.269-2.49l-1.029 1.715L27 9.574v12.852l-3.787 2.209l1.029 1.715l4.262-2.486c.307-.179.496-.509.496-.864V9c0-.355-.189-.685-.496-.864zM5 9.574l11-6.417l3.751 2.188L20.78 3.63l-4.276-2.494a.999.999 0 0 0-1.008 0l-12 7A1.001 1.001 0 0 0 3 9v5h2V9.574z"/>' }, "ibm-z-environments-dev-sec-ops": { "body": '<path fill="currentColor" d="M23.5 16v2c3.033 0 5.5 2.467 5.5 5.5S26.533 29 23.5 29S18 26.533 18 23.5h-2a7.5 7.5 0 1 0 7.5-7.5Z"/><path fill="currentColor" d="M23.5 26a2.5 2.5 0 0 0 0-5c-.322 0-.627.066-.91.177l-4.883-4.884l-1.414 1.414l4.884 4.884A2.473 2.473 0 0 0 21 23.5a2.5 2.5 0 0 0 2.5 2.5zM29 13h-2V9.574L16 3.158l-3 1.75V13h-2V4.333a1 1 0 0 1 .496-.863l4-2.334a1 1 0 0 1 1.008 0l12 7A1 1 0 0 1 29 9v4zM7 6h2v10H7z"/><path fill="currentColor" d="M14 29.991L3.496 23.864A1 1 0 0 1 3 23V9h2v13.426l10.008 5.838L14 29.99Z"/>' }, "ibm-z-os-ai-control-interface": { "body": '<circle cx="12" cy="21" r="1" fill="currentColor"/><path fill="currentColor" d="M23 25H9c-1.103 0-2-.897-2-2v-4c0-1.103.897-2 2-2h14c1.103 0 2 .897 2 2v4c0 1.103-.897 2-2 2ZM9 19v4h14v-4H9Z"/><circle cx="12" cy="11" r="1" fill="currentColor"/><path fill="currentColor" d="M23 15H9c-1.103 0-2-.897-2-2V9c0-1.103.897-2 2-2h14c1.103 0 2 .897 2 2v4c0 1.103-.897 2-2 2ZM9 9v4h14V9H9Z"/><path fill="currentColor" d="M28 30H4c-1.103 0-2-.897-2-2V16h2v12h24V4H16V2h12c1.103 0 2 .897 2 2v24c0 1.103-.897 2-2 2ZM12 0v5h-2V0zM3.414 2L6.95 5.536L5.536 6.95L2 3.414zM0 10h5v2H0z"/>' }, "ibm-z-os-containers": { "body": '<path fill="currentColor" d="M29 12h-9V3h9v9Zm-7-2h5V5h-5v5Z"/><path fill="currentColor" d="M20 15v2h7v10H17V3H5c-1.103 0-2 .897-2 2v22c0 1.103.897 2 2 2h22c1.103 0 2-.897 2-2V15h-9ZM6.414 17H15v8.586L6.414 17ZM15 15H6.414L15 6.414V15ZM13.586 5L5 13.586V5h8.586ZM5 18.414L13.586 27H5v-8.586Z"/>' }, "ibm-z-os-package-manager": { "body": '<path fill="currentColor" d="M15 9v10.172l-2.586-2.586L11 18l5 5l5-5l-1.414-1.414L17 19.172V9h-2zm4.758 17.65L16 28.842L5 22.426V18H3v5c0 .355.189.685.496.864l12 7a.999.999 0 0 0 1.008 0l4.282-2.498l-1.028-1.716zm8.746-18.514l-4.269-2.49l-1.029 1.715L27 9.574v12.852l-3.787 2.209l1.029 1.715l4.262-2.486c.307-.179.496-.509.496-.864V9c0-.355-.189-.685-.496-.864zM5 9.574l11-6.417l3.751 2.188L20.78 3.63l-4.276-2.494a.999.999 0 0 0-1.008 0l-12 7A1.001 1.001 0 0 0 3 9v5h2V9.574z"/>' }, "ica-2d": { "body": '<path d="M22 24H10a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zM10 10v12h12V10z" fill="currentColor"/><path d="M11 2H2v9h2V4h7V2z" fill="currentColor"/><path d="M2 21v9h9v-2H4v-7H2z" fill="currentColor"/><path d="M30 11V2h-9v2h7v7h2z" fill="currentColor"/><path d="M21 30h9v-9h-2v7h-7v2z" fill="currentColor"/>', "hidden": true }, "ice-accretion": { "body": '<path fill="currentColor" d="M4 2a2 2 0 0 0-2 2v16l1 2l1-2V4h4v10l1 2l1-2V2zm24 0H14v8l1 2l1-2V4h2v13l1 2l1-2V4h4v10l1 2l1-2V4h2v20l1 2l1-2V4a2 2 0 0 0-2-2zM14 28l-1 2l-1-2V16h2v12z"/><path fill="currentColor" d="m24 26l-1 2l-1-2v-6h2v6zM8 24l-1 2l-1-2v-6h2v6z"/>' }, "ice-vision": { "body": '<path fill="currentColor" d="M19 14v7l1 2l1-2v-7h-2zm-2 0h-4a2 2 0 0 0-2 2v4l1 2l1-2v-4h2v7l1 2l1-2z"/><path fill="currentColor" d="M4 18A12 12 0 1 0 16 6h-4V1L6 7l6 6V8h4A10 10 0 1 1 6 18Z"/>' }, "id": { "body": '<path d="M10 9h2v2h-2z" fill="currentColor"/><path d="M18 23h-4V9h4a4 4 0 0 1 4 4v6a4 4 0 0 1-4 4zm-2-2h2a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2h-2z" fill="currentColor"/><path d="M10 13h2v10h-2z" fill="currentColor"/>', "hidden": true }, "id-management": { "body": '<path fill="currentColor" d="M15 20H9a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z"/><path fill="currentColor" d="M28 19v9H4V8h12V6H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2v-9Z"/><path fill="currentColor" d="M20 19h6v2h-6zm2 4h4v2h-4zm10-13V8h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 26 4.101V2h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 20.101 8H18v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V16h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 29.899 10zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3z"/>' }, "idea": { "body": '<path fill="currentColor" d="M11 24h10v2H11zm2 4h6v2h-6zm3-26A10 10 0 0 0 6 12a9.19 9.19 0 0 0 3.46 7.62c1 .93 1.54 1.46 1.54 2.38h2c0-1.84-1.11-2.87-2.19-3.86A7.2 7.2 0 0 1 8 12a8 8 0 0 1 16 0a7.2 7.2 0 0 1-2.82 6.14c-1.07 1-2.18 2-2.18 3.86h2c0-.92.53-1.45 1.54-2.39A9.18 9.18 0 0 0 26 12A10 10 0 0 0 16 2z"/>' }, "identification": { "body": '<path fill="currentColor" d="M28 6v20H4V6h24m0-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path fill="currentColor" d="M6 10h7v2H6zm0 4h4v2H6zm17 4h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z"/>' }, "image": { "body": '<path fill="currentColor" d="M19 14a3 3 0 1 0-3-3a3 3 0 0 0 3 3Zm0-4a1 1 0 1 1-1 1a1 1 0 0 1 1-1Z"/><path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 22H6v-6l5-5l5.59 5.59a2 2 0 0 0 2.82 0L21 19l5 5Zm0-4.83l-3.59-3.59a2 2 0 0 0-2.82 0L18 19.17l-5.59-5.59a2 2 0 0 0-2.82 0L6 17.17V6h20Z"/>' }, "image-copy": { "body": '<path fill="currentColor" d="M4 22H2V4a2.002 2.002 0 0 1 2-2h18v2H4zm17-5a3 3 0 1 0-3-3a3.003 3.003 0 0 0 3 3zm0-4a1 1 0 1 1-1 1a1 1 0 0 1 1-1z"/><path fill="currentColor" d="M28 7H9a2.002 2.002 0 0 0-2 2v19a2.002 2.002 0 0 0 2 2h19a2.002 2.002 0 0 0 2-2V9a2.002 2.002 0 0 0-2-2Zm0 21H9v-6l4-3.997l5.586 5.586a2 2 0 0 0 2.828 0L23 22.003L28 27Zm0-3.828l-3.586-3.586a2 2 0 0 0-2.828 0L20 22.172l-5.586-5.586a2 2 0 0 0-2.828 0L9 19.172V9h19Z"/>' }, "image-medical": { "body": '<path fill="currentColor" d="M26 6v20H6V6h20m0-2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/><path fill="currentColor" d="M22 16v-2h-5v-2h3v-2h-3V8h-2v2h-3v2h3v2h-5v2h5v2h-5v2h5v2h-3v2h8v-2h-3v-2h5v-2h-5v-2h5z"/>' }, "image-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm15-6a3 3 0 1 0-3-3a3 3 0 0 0 3 3zm0-4a1 1 0 1 1-1 1a1 1 0 0 1 1-1z"/><path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v10h2V6h20v15.17l-3.59-3.59a2 2 0 0 0-2.82 0L18 19.17L11.83 13l-1.414 1.415L14 18l2.59 2.59a2 2 0 0 0 2.82 0L21 19l5 5v2H16v2h10a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z"/>' }, "image-search": { "body": '<path fill="currentColor" d="M24 14a5.99 5.99 0 0 0-4.885 9.471L14 28.586L15.414 30l5.115-5.115A5.997 5.997 0 1 0 24 14zm0 10a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm-7-12a3 3 0 1 0-3-3a3.003 3.003 0 0 0 3 3zm0-4a1 1 0 1 1-1 1a1 1 0 0 1 1-1z"/><path fill="currentColor" d="M12 24H4v-6.003L9 13l5.586 5.586L16 17.168l-5.586-5.585a2 2 0 0 0-2.828 0L4 15.168V4h20v6h2V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h8Z"/>' }, "image-search-alt": { "body": '<path fill="currentColor" d="M10 16a5.99 5.99 0 0 0 9.471 4.885L24.586 26L26 24.586l-5.115-5.115A5.997 5.997 0 1 0 10 16Zm2 0a4 4 0 1 1 4 4a4.005 4.005 0 0 1-4-4Z"/><path fill="currentColor" d="M29 7h-6.46l-1.71-2.55A.995.995 0 0 0 20 4h-8a.995.995 0 0 0-.83.45L9.46 7H3a1.003 1.003 0 0 0-1 1v17a1.003 1.003 0 0 0 1 1h9v-2H4V9h6a.995.995 0 0 0 .83-.45L12.54 6h6.92l1.71 2.55A.995.995 0 0 0 22 9h6v12h2V8a1.003 1.003 0 0 0-1-1Z"/>' }, "image-service": { "body": '<path fill="currentColor" d="M28 20h-2v2h2v6H4v-6h2v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="M13 4h2v8h-2zM9 4h2v8H9zm12 8h-2a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-2-6v4h2V6zm2 8h2v8h-2zM9 14h2v8H9zm8 8h-2a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-2-6v4h2v-4z"/>' }, "import-export": { "body": '<path fill="currentColor" d="M28 24v4H4v-4H2v4l.008-.005A1.998 1.998 0 0 0 4 30h24a2 2 0 0 0 2-2v-4zm-.4-9.4L24 18.2V4h-2v14.2l-3.6-3.6L17 16l6 6l6-6l-1.4-1.4zM9 4l-6 6l1.4 1.4L8 7.8V22h2V7.8l3.6 3.6L15 10L9 4z"/>' }, "improve-relevance": { "body": '<path fill="currentColor" d="M22 26.59L19.41 24L18 25.41l4 4l8-8L28.59 20L22 26.59z"/><circle cx="16" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M16 22a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4Z"/><path fill="currentColor" d="M28 16a12 12 0 1 0-12 12v-2a10 10 0 1 1 10-10Z"/>' }, "in-progress": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2Zm0 26a12 12 0 0 1 0-24v12l8.481 8.481A11.963 11.963 0 0 1 16 28Z"/>' }, "in-progress-error": { "body": '<path fill="currentColor" d="M30 24a6 6 0 1 0-6 6a6.007 6.007 0 0 0 6-6Zm-2 0a3.952 3.952 0 0 1-.567 2.019l-5.452-5.452A3.953 3.953 0 0 1 24 20a4.005 4.005 0 0 1 4 4Zm-8 0a3.952 3.952 0 0 1 .567-2.019l5.452 5.452A3.953 3.953 0 0 1 24 28a4.005 4.005 0 0 1-4-4Z"/><path fill="currentColor" d="M14 2a12 12 0 1 0 2 23.82v-2.022A10 10 0 1 1 14 4v10l4.343 4.343A7.975 7.975 0 0 1 24 16h1.82A11.93 11.93 0 0 0 14 2Z"/>' }, "in-progress-warning": { "body": '<path fill="currentColor" d="M27.38 28h-6.762L24 21.236ZM24 18a1 1 0 0 0-.895.553l-5 10A1 1 0 0 0 19 30h10a1 1 0 0 0 .921-1.39l-5.026-10.057A1 1 0 0 0 24 18Z"/><path fill="currentColor" d="M18.746 22.8A9.999 9.999 0 1 1 14 4v10l6.097 6.097l1.22-2.44A2.985 2.985 0 0 1 24 16h1.82A11.993 11.993 0 1 0 14 26a11.934 11.934 0 0 0 3.394-.497Z"/>' }, "incomplete": { "body": '<path fill="currentColor" d="m23.764 6.86l1.285-1.532a13.976 13.976 0 0 0-4.182-2.441l-.683 1.878a11.973 11.973 0 0 1 3.58 2.094zM27.81 14l1.968-.413a13.889 13.889 0 0 0-1.638-4.541L26.409 10a12.52 12.52 0 0 1 1.401 4zm-7.626 13.235l.683 1.878a13.976 13.976 0 0 0 4.182-2.44l-1.285-1.532a11.973 11.973 0 0 1-3.58 2.094zM26.409 22l1.731 1a14.14 14.14 0 0 0 1.638-4.587l-1.968-.347A12.152 12.152 0 0 1 26.409 22zM16 30V2a14 14 0 0 0 0 28z"/>' }, "incomplete-cancel": { "body": '<path fill="currentColor" d="M30 21.41L28.59 20L25 23.59L21.41 20L20 21.41L23.59 25L20 28.59L21.41 30L25 26.41L28.59 30L30 28.59L26.41 25L30 21.41zM14 26a12 12 0 0 1 0-24zm3.826-21.236a10.029 10.029 0 0 1 3.242 2.168L22.48 5.52a12.036 12.036 0 0 0-3.89-2.602zM26 14a11.93 11.93 0 0 0-.917-4.59l-1.847.764A9.943 9.943 0 0 1 24 14z"/>' }, "incomplete-error": { "body": '<path fill="currentColor" d="M14 26a12 12 0 0 1 0-24zm3.826-21.236a10.029 10.029 0 0 1 3.242 2.168L22.48 5.52a12.036 12.036 0 0 0-3.89-2.602zM26 14a11.93 11.93 0 0 0-.917-4.59l-1.847.764A9.943 9.943 0 0 1 24 14zm4 10a6 6 0 1 0-6 6a6.007 6.007 0 0 0 6-6zm-2 0a3.952 3.952 0 0 1-.567 2.019l-5.452-5.452A3.953 3.953 0 0 1 24 20a4.005 4.005 0 0 1 4 4zm-8 0a3.952 3.952 0 0 1 .567-2.019l5.452 5.452A3.953 3.953 0 0 1 24 28a4.005 4.005 0 0 1-4-4z"/>' }, "incomplete-warning": { "body": '<path fill="currentColor" d="M14 26a12 12 0 0 1 0-24zm3.826-21.236a10.029 10.029 0 0 1 3.242 2.168L22.48 5.52a12.036 12.036 0 0 0-3.89-2.602zM26 14a11.93 11.93 0 0 0-.917-4.59l-1.847.764A9.943 9.943 0 0 1 24 14zm1.38 14h-6.762L24 21.236zM24 18a1 1 0 0 0-.895.553l-5 10A1 1 0 0 0 19 30h10a1 1 0 0 0 .921-1.39l-5.026-10.057A1 1 0 0 0 24 18z"/>' }, "increase-level": { "body": '<path fill="currentColor" d="m23 4l-5 3.75v6.5L15 12l-5 3.75v6.5L7 20l-5 3.75V30h2v-5.25l3-2.25l3 2.25V30h2V16.75l3-2.25l3 2.25V30h2V8.75l3-2.25l3 2.25V30h2V7.75L23 4z"/>' }, "industry": { "body": '<path fill="currentColor" d="M29.53 6.15a1 1 0 0 0-1 0L20 10.38V7a1 1 0 0 0-1.45-.89L10 10.38V3a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v25h28V7a1 1 0 0 0-.47-.85ZM22 26h-4v-7h4Zm6 0h-4v-8a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v8H4V4h4v9.62l10-5v5l10-5Z"/>' }, "information": { "body": '<path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2h-3zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14 14 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12 12 0 0 0 16 4Z"/>' }, "information-disabled": { "body": '<path fill="currentColor" d="M30 3.414L28.586 2L2 28.586L3.414 30l3.443-3.443a13.961 13.961 0 0 0 19.7-19.7zM28 16a11.973 11.973 0 0 1-19.732 9.146L15 18.414V22h-2v2h7v-2h-3v-5.586l8.146-8.146A11.897 11.897 0 0 1 28 16zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8z"/><path fill="currentColor" d="M5.67 22.085A11.983 11.983 0 0 1 22.086 5.67l1.454-1.454A13.985 13.985 0 0 0 4.216 23.54Z"/>' }, "information-filled": { "body": '<path fill="none" d="M16 8a1.5 1.5 0 1 1-1.5 1.5A1.5 1.5 0 0 1 16 8Zm4 13.875h-2.875v-8H13v2.25h1.875v5.75H12v2.25h8Z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 6a1.5 1.5 0 1 1-1.5 1.5A1.5 1.5 0 0 1 16 8Zm4 16.125h-8v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z"/>' }, "information-square": { "body": '<path fill="currentColor" d="M17 22v-8h-4v2h2v6h-3v2h8v-2h-3zM16 8a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 8z"/><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2ZM6 6v20h20V6Z"/>' }, "information-square-filled": { "body": '<path fill="none" d="M16 8a1.5 1.5 0 1 1-1.5 1.5A1.5 1.5 0 0 1 16 8Zm4 13.875h-2.875v-8H13v2.25h1.875v5.75H12v2.25h8Z"/><path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM16 8a1.5 1.5 0 1 1-1.5 1.5A1.5 1.5 0 0 1 16 8Zm4 16.125h-8v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z"/>' }, "infrastructure-classic": { "body": '<path fill="currentColor" d="M18 26h12v2H18zm0-5h12v2H18zm0-5h12v2H18z"/><path fill="currentColor" d="M14 25H9.5a7.496 7.496 0 0 1-1.322-14.876A10 10 0 0 1 28 12h-2a7.999 7.999 0 0 0-15.95-.87l-.09.834l-.837.056A5.496 5.496 0 0 0 9.5 23H14Z"/>' }, "insert": { "body": '<path fill="currentColor" d="M2 9h9V2H2zm2-5h5v3H4zM2 19h9v-7H2zm2-5h5v3H4zM2 29h9v-7H2zm2-5h5v3H4zM27 9h-9l3.41-3.59L20 4l-6 6l6 6l1.41-1.41L18 11h9a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H15v2h12a3 3 0 0 0 3-3V12a3 3 0 0 0-3-3z"/>' }, "insert-page": { "body": '<path fill="currentColor" d="M26 30h-2V20H12v10h-2V20a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2zM5.17 16L2 19.17l1.411 1.419L8 16l-4.58-4.58L2 12.83L5.17 16zM24 14H12a2.002 2.002 0 0 1-2-2V2h2v10h12V2h2v10a2.002 2.002 0 0 1-2 2z"/>' }, "insert-syntax": { "body": '<path fill="currentColor" d="m20.17 16l-2.58 2.58L19 20l4-4l-4-4l-1.42 1.41L20.17 16zm-8.34 0l2.58-2.58L13 12l-4 4l4 4l1.42-1.41L11.83 16z"/><path fill="currentColor" d="M27 22.142V9.858A3.992 3.992 0 1 0 22.142 5H9.858A3.992 3.992 0 1 0 5 9.858v12.284A3.992 3.992 0 1 0 9.858 27h12.284A3.992 3.992 0 1 0 27 22.142ZM26 4a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM4 6a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Zm2 22a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm16.142-3H9.858A3.994 3.994 0 0 0 7 22.142V9.858A3.995 3.995 0 0 0 9.858 7h12.284A3.994 3.994 0 0 0 25 9.858v12.284A3.993 3.993 0 0 0 22.142 25ZM26 28a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2Z"/>' }, "inspection": { "body": '<path fill="currentColor" d="m15 17.18l-2.59-2.59L11 16l4 4l7-7l-1.41-1.41L15 17.18z"/><path fill="currentColor" d="M30 15h-2.05A12.007 12.007 0 0 0 17 4.05V2h-2v2.05A12.007 12.007 0 0 0 4.05 15H2v2h2.05A12.007 12.007 0 0 0 15 27.95V30h2v-2.05A12.007 12.007 0 0 0 27.95 17H30ZM17 25.95V23h-2v2.95A10.017 10.017 0 0 1 6.05 17H9v-2H6.05A10.017 10.017 0 0 1 15 6.05V9h2V6.05A10.017 10.017 0 0 1 25.95 15H23v2h2.949A10.017 10.017 0 0 1 17 25.95Z"/>' }, "instance-bx": { "body": '<path fill="currentColor" d="M12 5a3.003 3.003 0 0 0-3-3H4v13h5a3.003 3.003 0 0 0 3-3v-1.5a2.977 2.977 0 0 0-.78-2a2.977 2.977 0 0 0 .78-2zM6 4h3a1.001 1.001 0 0 1 1 1v1.551A.959.959 0 0 1 9 7.5H6zm4 8a1 1 0 0 1-1 1H6V9.5h3a1 1 0 0 1 1 1zm12-7h-2l-2 3.897L16 5h-2l2.905 5L14 15h2l2-3.799L20 15h2l-2.902-5L22 5z"/><circle cx="9" cy="27" r="1" fill="currentColor"/><path fill="currentColor" d="M2 18h4v2H2zm6 0h4v2H8zm6 0h4v2h-4zm6 0h4v2h-4zm6 0h4v2h-4zm0 13H6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM6 25v4h20v-4z"/>' }, "instance-classic": { "body": '<path fill="currentColor" d="M23.5 21H23v-2h.5a4.497 4.497 0 0 0 .356-8.981l-.815-.064l-.099-.812a6.994 6.994 0 0 0-13.883 0l-.1.812l-.815.064A4.497 4.497 0 0 0 8.5 19H9v2h-.5A6.497 6.497 0 0 1 7.2 8.136a8.994 8.994 0 0 1 17.6 0A6.497 6.497 0 0 1 23.5 21Z"/><circle cx="9" cy="27" r="1" fill="currentColor"/><path fill="currentColor" d="M26 23h-9v-7.17l2.59 2.58L21 17l-5-5l-5 5l1.41 1.41L15 15.83V23H6a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2Zm0 6H6v-4h20Z"/>' }, "instance-cx": { "body": '<circle cx="9" cy="27" r="1" fill="currentColor"/><path fill="currentColor" d="M22 5h-2l-2 3.897L16 5h-2l2.905 5L14 15h2l2-3.799L20 15h2l-2.902-5L22 5zM12 15H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h6v2H6v9h6zM2 18h4v2H2zm6 0h4v2H8zm6 0h4v2h-4zm6 0h4v2h-4zm6 0h4v2h-4zm0 13H6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM6 25v4h20v-4z"/>' }, "instance-mx": { "body": '<path fill="currentColor" d="M22 5h-2l-2 3.897L16 5h-2l2.905 5L14 15h2l2-3.799L20 15h2l-2.902-5L22 5zM10 2L8.485 6.374L8 8l-.465-1.626L6 2H4v13h2V7.374l-.159-1.996l.58 1.996L8 12l1.579-4.626l.58-2l-.159 2V15h2V2h-2z"/><circle cx="9" cy="27" r="1" fill="currentColor"/><path fill="currentColor" d="M2 18h4v2H2zm6 0h4v2H8zm6 0h4v2h-4zm6 0h4v2h-4zm6 0h4v2h-4zm0 13H6a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM6 25v4h20v-4z"/>' }, "instance-virtual": { "body": '<circle cx="7" cy="23" r="1" fill="currentColor"/><path fill="currentColor" d="M2 6h4v2H2zm6 0h4v2H8zm6 0h4v2h-4zm6 0h4v2h-4zm6 0h4v2h-4zm2 22H4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zM4 20v6h24v-6zm-2-8h28v2H2z"/>' }, "integration": { "body": '<path fill="currentColor" d="m29.88 15.52l-6-11A1 1 0 0 0 23 4H9a1 1 0 0 0-.88.52l-6 11a1 1 0 0 0 0 1l6 11A1 1 0 0 0 9 28h14a1 1 0 0 0 .88-.52l6-11a1 1 0 0 0 0-.96ZM22.93 7l4.39 8h-9.5ZM16 14.14L10.82 6h10.36ZM9.07 7l5.11 8h-9.5ZM4.68 17h9.5l-5.11 8Zm11.32.86L21.18 26H10.82ZM22.93 25l-5.11-8h9.5Z"/>' }, "intent-request-active": { "body": '<path fill="currentColor" d="m23 27.2l-2.6-2.6L19 26l4 4l8-8l-1.4-1.4z"/><path fill="currentColor" d="M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z"/>' }, "intent-request-create": { "body": '<path fill="currentColor" d="M30 24h-4v-4h-2v4h-4v2h4v4h2v-4h4z"/><path fill="currentColor" d="M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z"/>' }, "intent-request-heal": { "body": '<path fill="currentColor" d="M27 20c-.8 0-1.5.3-2.1.9l-.4.5l-.4-.5c-.6-.6-1.4-.9-2.1-.9s-1.5.3-2.1.9c-1.2 1.2-1.2 3.1 0 4.3l4.6 4.8l4.6-4.8c1.2-1.2 1.2-3.1 0-4.3c-.5-.6-1.3-.9-2.1-.9z"/><path fill="currentColor" d="M16.6 28.6L4 16L16 4l12.6 12.6l1.4-1.4L17.5 2.6c-.8-.8-2.1-.8-2.9 0l-12 11.9c-.8.8-.8 2.1 0 2.9L15.1 30l1.5-1.4z"/>' }, "intent-request-inactive": { "body": '<circle cx="18.5" cy="22.5" r="1.5" fill="currentColor"/><circle cx="23.5" cy="22.5" r="1.5" fill="currentColor"/><circle cx="28.5" cy="22.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z"/>' }, "intent-request-scale-in": { "body": '<path fill="currentColor" d="m28.6 30l1.4-1.4l-7.6-7.6H29v-2H19v10h2v-6.6zM2 28.6L3.4 30l7.6-7.6V29h2V19H3v2h6.6zM17 2h-2v10.2l-4.6-4.6L9 9l7 7l7-7l-1.4-1.4l-4.6 4.6z"/>' }, "intent-request-scale-out": { "body": '<path fill="currentColor" d="m19 20.4l1.4-1.4l7.6 7.6V20h2v10H20v-2h6.6zm-6 0L11.6 19L4 26.6V20H2v10h10v-2H5.4zm4-4.4h-2V5.8l-4.6 4.6L9 9l7-7l7 7l-1.4 1.4L17 5.8z"/>' }, "intent-request-uninstall": { "body": '<path fill="currentColor" d="M30 21.4L28.6 20L25 23.6L21.4 20L20 21.4l3.6 3.6l-3.6 3.6l1.4 1.4l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6z"/><path fill="currentColor" d="M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z"/>' }, "intent-request-upgrade": { "body": '<path fill="currentColor" d="m28 23l-1.4 1.4l-2.6-2.6V30h-2v-8.2l-2.6 2.6L18 23l5-5z"/><path fill="currentColor" d="M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z"/>' }, "interactions": { "body": '<path fill="currentColor" d="M26 18h-4v-4h-2v14h6a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-4 8v-6h4v6zM20 6.076l-.744-1.857L16 5.522V2h-2v3.523L10.744 4.22L10 6.077l3.417 1.367L10.9 10.8l1.6 1.2L15 8.667L17.5 12l1.6-1.2l-2.517-3.357L20 6.076zM10 18H5v2h5v2H6a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6v-8a2.002 2.002 0 0 0-2-2zm0 8H6v-2h4z"/>' }, "interactive-segmentation-cursor": { "body": '<path d="M29.414 24L15.999 10.566a2.047 2.047 0 0 0-2.828 0l-2.586 2.586a2.002 2.002 0 0 0 0 2.829l13.414 13.434a2.002 2.002 0 0 0 2.828 0l2.587-2.587a2 2 0 0 0 0-2.828zm-17.415-9.434l2.586-2.585l3.5 3.5l-2.587 2.587l-3.5-3.5zM25.413 28l-8.5-8.519l2.586-2.587L28 25.414z" fill="currentColor"/><path d="M7 20l2-2l2 2l-2 2z" fill="currentColor"/><path d="M18 9l2-2l2 2l-2 2z" fill="currentColor"/><path d="M7 9l2-2l2 2l-2 2z" fill="currentColor"/><path d="M11 2H2v9h2V4h7V2z" fill="currentColor"/>', "hidden": true }, "intersect": { "body": '<path fill="currentColor" d="M22 24h-4v-2h4v-4h2v4a2.002 2.002 0 0 1-2 2zM10 14H8v-4a2.002 2.002 0 0 1 2-2h4v2h-4z"/><path fill="currentColor" d="M28 8h-4V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h4v4a2.002 2.002 0 0 0 2 2h18a2.002 2.002 0 0 0 2-2V10a2.002 2.002 0 0 0-2-2Zm0 20H10v-4h4v-2h-4v-4H8v4H4V4h18v4h-4v2h4v4h2v-4h4Z"/>' }, "intrusion-prevention": { "body": '<circle cx="22" cy="23.887" r="2" fill="currentColor"/><path fill="currentColor" d="M29.777 23.479A8.64 8.64 0 0 0 22 18a8.64 8.64 0 0 0-7.777 5.479L14 24l.223.521A8.64 8.64 0 0 0 22 30a8.64 8.64 0 0 0 7.777-5.479L30 24zM22 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm3-18H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h21a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 4v4h21V4zm8 24H4v-4h8v-2H4a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h8z"/><path fill="currentColor" d="M28 12H7a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h5v-2H7v-4h21v2h2v-2a2.002 2.002 0 0 0-2-2Z"/>' }, "inventory-management": { "body": '<path fill="currentColor" d="M19 24h4v4h-4zm7 0h4v4h-4zm-7-7h4v4h-4zm7 0h4v4h-4z"/><path fill="currentColor" d="M17 24H4V10h24v5h2v-5a2.002 2.002 0 0 0-2-2h-6V4a2.002 2.002 0 0 0-2-2h-8a2.002 2.002 0 0 0-2 2v4H4a2.002 2.002 0 0 0-2 2v14a2.002 2.002 0 0 0 2 2h13ZM12 4h8v4h-8Z"/>' }, "iot-connect": { "body": '<path fill="currentColor" d="M30 19h-4v-4h-2v9H8V8h9V6h-4V2h-2v4H8a2.002 2.002 0 0 0-2 2v3H2v2h4v6H2v2h4v3a2.002 2.002 0 0 0 2 2h3v4h2v-4h6v4h2v-4h3a2.003 2.003 0 0 0 2-2v-3h4Z"/><path fill="currentColor" d="M26 2a4.004 4.004 0 0 0-4 4a3.956 3.956 0 0 0 .567 2.02L19.586 11H11v10h10v-8.586l2.98-2.98A3.955 3.955 0 0 0 26 10a4 4 0 0 0 0-8Zm-7 17h-6v-6h6Zm7-11a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "iot-platform": { "body": '<path fill="currentColor" d="M30 19h-4v-4h-2v9H8V8h9V6h-4V2h-2v4H8a2.002 2.002 0 0 0-2 2v3H2v2h4v6H2v2h4v3a2.002 2.002 0 0 0 2 2h3v4h2v-4h6v4h2v-4h3a2.003 2.003 0 0 0 2-2v-3h4Z"/><path fill="currentColor" d="M21 21H11V11h10zm-8-2h6v-6h-6zm18-6h-2A10.012 10.012 0 0 0 19 3V1a12.013 12.013 0 0 1 12 12z"/><path fill="currentColor" d="M26 13h-2a5.006 5.006 0 0 0-5-5V6a7.008 7.008 0 0 1 7 7Z"/>' }, "iso": { "body": '<path fill="currentColor" d="M28 23h-4a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2zm-4-12v10h4V11zm-6 12h-6v-2h6v-4h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h6v2h-6v4h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zM2 11h3v10H2v2h8v-2H7V11h3V9H2v2z"/>' }, "iso-filled": { "body": '<path fill="currentColor" d="M21 13h3v6h-3z"/><path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2ZM8 21H6V11h2Zm9-8h-5v2h3a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-5v-2h5v-2h-3a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h5Zm9 6a2 2 0 0 1-2 2h-3a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2Z"/>' }, "iso-outline": { "body": '<path fill="currentColor" d="M24 21h-3a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2zm-3-8v6h3v-6zm-6 8h-5v-2h5v-2h-3a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h5v2h-5v2h3a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2zM6 11h2v10H6z"/><path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2ZM4 24V8h24v16Z"/>' }, "join-full": { "body": '<path fill="none" d="M16 9.075a7.994 7.994 0 0 1 0 13.85a7.994 7.994 0 0 1 0-13.85m0-2.237a9.995 9.995 0 0 0 0 18.324a9.995 9.995 0 0 0 0-18.324Z"/><path fill="currentColor" d="M10 16a9.998 9.998 0 0 1 6-9.162a10 10 0 1 0 0 18.324A9.998 9.998 0 0 1 10 16Z"/><path fill="currentColor" d="M16 9.075a7.994 7.994 0 0 0 0 13.85a7.994 7.994 0 0 0 0-13.85Z"/><path fill="currentColor" d="M20 6a9.954 9.954 0 0 0-4 .838a9.995 9.995 0 0 1 0 18.324A9.999 9.999 0 1 0 20 6Z"/>' }, "join-inner": { "body": '<path fill="currentColor" d="M20 6a9.935 9.935 0 0 0-4 .842a9.999 9.999 0 1 0 0 18.318A9.998 9.998 0 1 0 20 6Zm-8 18a8 8 0 1 1 1.757-15.798a9.973 9.973 0 0 0 0 15.598A7.992 7.992 0 0 1 12 24Zm8 0a7.992 7.992 0 0 1-1.757-.2a9.973 9.973 0 0 0 0-15.599A7.997 7.997 0 1 1 20 24Z"/>' }, "join-left": { "body": '<path fill="currentColor" d="M20 6a9.927 9.927 0 0 0-3.997.84a9.976 9.976 0 0 1 2.245 1.36a8 8 0 1 1 0 15.601a9.976 9.976 0 0 1-2.245 1.36A9.998 9.998 0 1 0 20 6Z"/><path fill="currentColor" d="M12 16a8.01 8.01 0 0 0 6.248 7.8a9.986 9.986 0 0 0 0-15.6A8.01 8.01 0 0 0 12 16Z"/><path fill="none" d="M12 16a8.01 8.01 0 0 1 6.248-7.8a9.976 9.976 0 0 0-2.245-1.36a9.99 9.99 0 0 0 0 18.32a9.976 9.976 0 0 0 2.245-1.36A8.01 8.01 0 0 1 12 16Z"/><path fill="currentColor" d="M10 16a10.01 10.01 0 0 1 6.003-9.16a10 10 0 1 0 0 18.32A10.01 10.01 0 0 1 10 16Z"/>' }, "join-outer": { "body": '<path fill="currentColor" d="M20 6a9.954 9.954 0 0 0-4 .838a9.995 9.995 0 0 1 0 18.324A9.999 9.999 0 1 0 20 6zM10 16a9.998 9.998 0 0 1 6-9.162a10 10 0 1 0 0 18.324A9.998 9.998 0 0 1 10 16z"/>' }, "join-right": { "body": '<path fill="currentColor" d="M20 6a9.95 9.95 0 0 0-4.003.84a9.99 9.99 0 0 1 0 18.32A9.999 9.999 0 1 0 20 6Z"/><path fill="none" d="M20 16a8.01 8.01 0 0 0-6.248-7.8a9.976 9.976 0 0 1 2.245-1.36a9.99 9.99 0 0 1 0 18.32a9.976 9.976 0 0 1-2.245-1.36A8.01 8.01 0 0 0 20 16Z"/><path fill="currentColor" d="M10 16a9.976 9.976 0 0 0 3.752 7.8a7.994 7.994 0 0 0 0-15.6A9.976 9.976 0 0 0 10 16Z"/><path fill="currentColor" d="M12 24a8 8 0 1 1 1.752-15.8a9.976 9.976 0 0 1 2.245-1.36a10 10 0 1 0 0 18.32a9.976 9.976 0 0 1-2.245-1.36A7.973 7.973 0 0 1 12 24Z"/>' }, "jpg": { "body": '<path fill="currentColor" d="M30 23h-6a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h6v2h-6v10h4v-4h-2v-2h4zm-16 0h-2V9h6a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-4zm0-7h4v-5h-4zm-6 7H4a2 2 0 0 1-2-2v-2h2v2h4V9h2v12a2 2 0 0 1-2 2z"/>' }, "json": { "body": '<path fill="currentColor" d="M31 11v10h-2l-2-6v6h-2V11h2l2 6v-6h2zm-9.666 10h-2.667A1.668 1.668 0 0 1 17 19.334v-6.667A1.668 1.668 0 0 1 18.666 11h2.667A1.668 1.668 0 0 1 23 12.666v6.667A1.668 1.668 0 0 1 21.334 21zM19 19h2v-6h-2zm-5.666 2H9v-2h4v-2h-2a2.002 2.002 0 0 1-2-2v-2.334A1.668 1.668 0 0 1 10.666 11H15v2h-4v2h2a2.002 2.002 0 0 1 2 2v2.333A1.668 1.668 0 0 1 13.334 21zm-8 0H2.667A1.668 1.668 0 0 1 1 19.334V17h2v2h2v-8h2v8.334A1.668 1.668 0 0 1 5.333 21z"/>' }, "json-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm25-8l-2-6h-2v10h2v-6l2 6h2V6h-2v6zm-7.666-6h-2.667A1.668 1.668 0 0 0 17 7.667v6.667A1.668 1.668 0 0 0 18.666 16h2.667A1.668 1.668 0 0 0 23 14.334V7.667A1.668 1.668 0 0 0 21.334 6zM21 14h-2V8h2zM9 7.667V10a2.002 2.002 0 0 0 2 2h2v2H9v2h4.333A1.668 1.668 0 0 0 15 14.334V12a2.002 2.002 0 0 0-2-2h-2V8h4V6h-4.334A1.668 1.668 0 0 0 9 7.667zM5 14H3v-2H1v2.333A1.668 1.668 0 0 0 2.667 16h2.667A1.668 1.668 0 0 0 7 14.334V6H5z"/>' }, "jump-link": { "body": '<path fill="currentColor" d="M13.414 17.586L18 22.172V8H8V6h10a2.002 2.002 0 0 1 2 2v14.172l4.586-4.586L26 19l-7 7l-7-7Z"/>' }, "keep-dry": { "body": '<path fill="currentColor" d="M25 10a3.898 3.898 0 0 1-4-3.777a3.902 3.902 0 0 1 .653-2.064L24.17.414a1.038 1.038 0 0 1 1.66 0l2.485 3.696A3.97 3.97 0 0 1 29 6.223A3.898 3.898 0 0 1 25 10Zm0-7.237l-1.656 2.463a1.89 1.89 0 0 0-.344.997a2.014 2.014 0 0 0 4 0a1.98 1.98 0 0 0-.375-1.047Z"/><path fill="currentColor" d="M29.985 15.83a13.973 13.973 0 0 0-1.814-4.832L26.433 12a12.092 12.092 0 0 1 1.07 2.212A5.408 5.408 0 0 0 26 14a6.544 6.544 0 0 0-3.939 1.333a14.518 14.518 0 0 0-3.046-8.934A13.886 13.886 0 0 0 17 4.4V2h-2v2.046A14.38 14.38 0 0 0 2.015 15.83a1 1 0 0 0 1.495 1.03A4.855 4.855 0 0 1 6 16a4.865 4.865 0 0 1 4.14 2.51a1.04 1.04 0 0 0 1.72 0A5.02 5.02 0 0 1 15 16.126V25.5a2.5 2.5 0 0 1-5 0V25H8v.5a4.5 4.5 0 0 0 9 0v-9.375a5.02 5.02 0 0 1 3.14 2.386a1 1 0 0 0 1.72 0A4.865 4.865 0 0 1 26 16a4.855 4.855 0 0 1 2.49.86a1 1 0 0 0 1.496-1.03ZM9.94 15.333A6.544 6.544 0 0 0 6 14a5.408 5.408 0 0 0-1.503.213A12.441 12.441 0 0 1 12.985 6.4a14.516 14.516 0 0 0-3.046 8.934ZM16 14a6.553 6.553 0 0 0-4.056 1.43c.037-2.22.608-6.49 4.056-9.176c3.43 2.677 4.009 6.95 4.052 9.173A6.552 6.552 0 0 0 16 14Z"/>' }, "keyboard": { "body": '<path fill="currentColor" d="M28 26H4a2 2 0 0 1-2-2V10a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2ZM4 10v14h24V10Z"/><path fill="currentColor" d="M10 20h11v2H10zm-4-8h2v2H6zm4 0h2v2h-2zm4 0h2v2h-2zm4 0h2v2h-2zM6 20h2v2H6zm0-4h2v2H6zm4 0h2v2h-2zm4 0h2v2h-2zm8-4h4v2h-4zm0 4h4v2h-4zm-4 0h2v2h-2zm5 4h3v2h-3z"/>' }, "keyboard-off": { "body": '<path fill="currentColor" d="M6 12h2v2H6zm12 0h2v2h-2zM6 20h2v2H6zm0-4h2v2H6zm4 0h2v2h-2zm12-4h4v2h-4zm0 4h4v2h-4z"/><path fill="currentColor" d="M14.2 10H28v13h2V10c0-1.1-.9-2-2-2H12.2l2 2zM30 28.6L3.4 2L2 3.4L6.6 8H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h20.6l4 4l1.4-1.4zM4 24V10h4.6l2 2H10v2h2.6l2 2H14v2h2.6l2 2H10v2h10.6l2 2H4z"/>' }, "kubernetes": { "body": '<path fill="currentColor" d="m29.223 17.964l-3.304-.754a9.784 9.784 0 0 0-1.525-6.625l2.54-2.025l-1.247-1.564l-2.539 2.024A9.97 9.97 0 0 0 17 6.05V3h-2v3.05a9.97 9.97 0 0 0-6.148 2.97l-2.54-2.024L5.066 8.56l2.54 2.025a9.784 9.784 0 0 0-1.524 6.625l-3.304.754l.446 1.95l3.297-.753a10.036 10.036 0 0 0 4.269 5.358l-1.33 2.763l1.802.867l1.329-2.76a9.811 9.811 0 0 0 6.82 0l1.33 2.76l1.802-.868l-1.33-2.762a10.036 10.036 0 0 0 4.269-5.358l3.297.752ZM24 16c0 .257-.015.511-.039.763l-5-1.142a2.966 2.966 0 0 0-.137-.594l3.996-3.187A7.94 7.94 0 0 1 24 16Zm-9 0a1 1 0 1 1 1 1a1 1 0 0 1-1-1Zm6.576-5.726l-3.996 3.187a3.003 3.003 0 0 0-.58-.277V8.07a7.976 7.976 0 0 1 4.576 2.205ZM15 8.07v5.115a3.003 3.003 0 0 0-.58.277l-3.996-3.187A7.976 7.976 0 0 1 15 8.07ZM8 16a7.94 7.94 0 0 1 1.18-4.16l3.996 3.187a2.966 2.966 0 0 0-.137.594l-5 1.141A8.072 8.072 0 0 1 8 16Zm.483 2.712l4.976-1.136a3.013 3.013 0 0 0 .414.537L11.66 22.71a8.031 8.031 0 0 1-3.176-3.998ZM16 24a7.968 7.968 0 0 1-2.54-.42l2.22-4.612A2.999 2.999 0 0 0 16 19a2.999 2.999 0 0 0 .319-.032l2.221 4.612A7.955 7.955 0 0 1 16 24Zm4.34-1.29l-2.213-4.598a3.013 3.013 0 0 0 .414-.536l4.976 1.136a8.031 8.031 0 0 1-3.176 3.998Z"/>' }, "label": { "body": '<path fill="currentColor" d="M23 13h-5v2h5v2h-4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6v-8a2.002 2.002 0 0 0-2-2zm0 8h-4v-2h4zM13 9H9a2.002 2.002 0 0 0-2 2v12h2v-5h4v5h2V11a2.002 2.002 0 0 0-2-2zm-4 7v-5h4v5z"/><path fill="currentColor" d="M28 28H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2ZM4 6v20h24V6Z"/>' }, "language": { "body": '<path fill="currentColor" d="M18 19h6v2h-6zm0-4h12v2H18zm0-4h12v2H18zm-4 10v-2H9v-2H7v2H2v2h8.215a8.591 8.591 0 0 1-2.216 3.977A9.273 9.273 0 0 1 6.552 23H4.333a10.855 10.855 0 0 0 2.145 3.297A14.658 14.658 0 0 1 3 28.127L3.702 30a16.42 16.42 0 0 0 4.29-2.336A16.488 16.488 0 0 0 12.299 30L13 28.127A14.664 14.664 0 0 1 9.523 26.3a10.313 10.313 0 0 0 2.729-5.3zm-2.833-8h2.166L8.75 2H6.583L2 13h2.166L5 11h5.333zM5.833 9l1.833-4.4L9.5 9z"/>' }, "laptop": { "body": '<path fill="currentColor" d="M26 24.005H6a2.002 2.002 0 0 1-2-2v-14a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v14a2.003 2.003 0 0 1-2 2Zm-20-16v14h20v-14Zm-4 18h28v2H2z"/>' }, "lasso": { "body": '<path fill="currentColor" d="M20 2h-8a9.984 9.984 0 0 0-4.965 18.655C7.025 20.77 7 20.882 7 21a3.993 3.993 0 0 0 2.91 3.83A4.005 4.005 0 0 1 6 28H4v2h2a6.004 6.004 0 0 0 5.928-5.12a3.997 3.997 0 0 0 2.93-2.88H20a10 10 0 0 0 0-20Zm-9 21a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm9-3h-5.142a3.984 3.984 0 0 0-7.15-1.264A7.99 7.99 0 0 1 12 4h8a8 8 0 0 1 0 16Z"/>' }, "lasso-polygon": { "body": '<path fill="currentColor" d="M29.625 2.22a1 1 0 0 0-1.098-.101L17.935 7.8L3.366 2.07a1 1 0 0 0-1.28 1.336l6.435 14.48a3.965 3.965 0 0 0 1.39 6.944A4.005 4.005 0 0 1 6 28H4v2h2a6.004 6.004 0 0 0 5.928-5.12a4.002 4.002 0 0 0 2.93-2.88h8.382a2 2 0 0 0 1.927-1.465l4.796-17.267a1 1 0 0 0-.338-1.049ZM11 23a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm12.24-3h-8.382a3.897 3.897 0 0 0-4.512-2.934L4.905 4.824L18.065 10l9.345-5.012Z"/>' }, "launch": { "body": '<path fill="currentColor" d="M26 28H6a2.003 2.003 0 0 1-2-2V6a2.003 2.003 0 0 1 2-2h10v2H6v20h20V16h2v10a2.003 2.003 0 0 1-2 2Z"/><path fill="currentColor" d="M20 2v2h6.586L18 12.586L19.414 14L28 5.414V12h2V2H20z"/>' }, "launch-study-1": { "body": '<circle cx="23" cy="25" r="1" fill="currentColor"/><path d="M26 22v6H6v-6h20m0-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2z" fill="currentColor"/><path d="M20.59 10.59L17 14.17V2h-2v12.17l-3.59-3.58L10 12l6 6l6-6l-1.41-1.41z" fill="currentColor"/><path d="M8 24h12v2H8z" fill="currentColor"/>', "hidden": true }, "launch-study-2": { "body": '<circle cx="23" cy="7" r="1" fill="currentColor"/><path d="M26 4v6H6V4h20m0-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2z" fill="currentColor"/><path d="M20.59 21.41L17 17.83V30h-2V17.83l-3.59 3.58L10 20l6-6l6 6l-1.41 1.41z" fill="currentColor"/><path d="M8 6h12v2H8z" fill="currentColor"/>', "hidden": true }, "launch-study-3": { "body": '<circle cx="23" cy="25" r="1" fill="currentColor"/><path d="M26 22v6H6v-6h20m0-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2z" fill="currentColor"/><path d="M20.59 4.59L17 8.17V0h-2v8.17l-3.59-3.58L10 6l6 6l6-6l-1.41-1.41z" fill="currentColor"/><path d="M20.59 10.59L16 15.16l-4.59-4.57L10 12l6 6l6-6l-1.41-1.41z" fill="currentColor"/><path d="M8 24h12v2H8z" fill="currentColor"/>', "hidden": true }, "layers": { "body": '<path fill="currentColor" d="M16 24a.997.997 0 0 1-.474-.12l-13-7l.948-1.76L16 21.864l12.526-6.744l.948 1.76l-13 7A.997.997 0 0 1 16 24Z"/><path fill="currentColor" d="M16 30a.997.997 0 0 1-.474-.12l-13-7l.948-1.76L16 27.864l12.526-6.744l.948 1.76l-13 7A.997.997 0 0 1 16 30zm0-12a.997.997 0 0 1-.474-.12l-13-7a1 1 0 0 1 0-1.76l13-7a.998.998 0 0 1 .948 0l13 7a1 1 0 0 1 0 1.76l-13 7A.997.997 0 0 1 16 18zM5.11 10L16 15.864L26.89 10L16 4.136z"/>' }, "legend": { "body": '<path fill="currentColor" d="M16 22h14v2H16z"/><rect width="6" height="6" x="4" y="20" fill="currentColor" rx="1"/><path fill="currentColor" d="M16 8h14v2H16zm-6.5 4h-5a.5.5 0 0 1-.447-.724l2.5-5.022a.52.52 0 0 1 .894 0l2.5 5.023A.5.5 0 0 1 9.5 12z"/>' }, "letter-aa": { "body": '<path fill="currentColor" d="M23 13h-5v2h5v2h-4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6v-8a2 2 0 0 0-2-2zm0 8h-4v-2h4zM13 9H9a2 2 0 0 0-2 2v12h2v-5h4v5h2V11a2 2 0 0 0-2-2zm-4 7v-5h4v5z"/>' }, "letter-bb": { "body": '<path fill="currentColor" d="M23 13h-4V9h-2v14h6a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zm-4 8v-6h4v6zm-4-9a3 3 0 0 0-3-3H7v14h5a3 3 0 0 0 3-3v-2a3 3 0 0 0-.78-2a3 3 0 0 0 .78-2zm-6-1h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H9zm4 9a1 1 0 0 1-1 1H9v-4h3a1 1 0 0 1 1 1z"/>' }, "letter-cc": { "body": '<path fill="currentColor" d="M24 23h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2h-5v6h5zm-9 0H9a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h6v2H9v10h6z"/>' }, "letter-dd": { "body": '<path fill="currentColor" d="M23 9v4h-4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6V9zm-4 6h4v6h-4zm-8 8H7V9h4a4 4 0 0 1 4 4v6a4 4 0 0 1-4 4zm-2-2h2a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2H9z"/>' }, "letter-ee": { "body": '<path fill="currentColor" d="M25 19v-4a2.002 2.002 0 0 0-2-2h-4a2.002 2.002 0 0 0-2 2v6a2.008 2.008 0 0 0 2 2h5v-2h-5v-2zm-6-4h4v2h-4zm-4-4V9H7v14h8v-2H9v-4h5v-2H9v-4h6z"/>' }, "letter-ff": { "body": '<path fill="currentColor" d="M16 11V9H8v14h2v-6h5v-2h-5v-4h6zm8 0V9h-3a2 2 0 0 0-2 2v2h-2v2h2v8h2v-8h3v-2h-3v-2z"/>' }, "letter-gg": { "body": '<path fill="currentColor" d="M19 13a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4v2h-5v2h5a2 2 0 0 0 2-2V13zm4 8h-4v-6h4zm-8 2H9a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h6v2H9v10h4v-4h-2v-2h4z"/>' }, "letter-hh": { "body": '<path fill="currentColor" d="M13 9v6H9V9H7v14h2v-6h4v6h2V9h-2zm10 4h-4V9h-2v14h2v-8h4v8h2v-8a2 2 0 0 0-2-2z"/>' }, "letter-ii": { "body": '<path fill="currentColor" d="M10 11h3v10h-3v2h8v-2h-3V11h3V9h-8v2zm10 2h2v10h-2zm0-4h2v2h-2z"/>' }, "letter-jj": { "body": '<path fill="currentColor" d="M20 9h2v2h-2zm0 16h-3v2h3a2 2 0 0 0 2-2V13h-2zm-6-2h-4a2 2 0 0 1-2-2v-2h2v2h4V9h2v12a2 2 0 0 1-2 2z"/>' }, "letter-kk": { "body": '<path fill="currentColor" d="M15 9h-2.11L9 15.55V9H7v14h2v-4.29l.93-1.49L12.89 23H15l-3.89-7.57L15 9zm7.78 14H25l-3.78-6L25 13h-2.24L19 17.17V9h-2v14h2v-3.75l.96-1.04L22.78 23z"/>' }, "letter-ll": { "body": '<path fill="currentColor" d="M11 21V9H9v14h8v-2h-6zm12 2h-2a2 2 0 0 1-2-2V9h2v12h2z"/>' }, "letter-mm": { "body": '<path fill="currentColor" d="M24 13h-8v10h2v-8h2v8h2v-8h2v8h2v-8a2 2 0 0 0-2-2zM12 9l-1.52 5l-.48 1.98L9.54 14L8 9H6v14h2v-8l-.16-2l.58 2L10 19.63L11.58 15l.58-2l-.16 2v8h2V9h-2z"/>' }, "letter-nn": { "body": '<path fill="currentColor" d="M25 23h-2v-8h-4v8h-2V13h6a2 2 0 0 1 2 2zm-12-4L9.32 9H7v14h2V13l3.68 10H15V9h-2v10z"/>' }, "letter-oo": { "body": '<path fill="currentColor" d="M23 23h-4a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2zm-4-8v6h4v-6zm-6 8H9a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2zM9 11v10h4V11z"/>' }, "letter-pp": { "body": '<path fill="currentColor" d="M23 13h-6v14h2v-4h4a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zm-4 8v-6h4v6zM9 23H7V9h6a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H9zm0-7h4v-5H9z"/>' }, "letter-qq": { "body": '<path fill="currentColor" d="M19 13a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4v4h2V13zm4 8h-4v-6h4zM13 9H9a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h1v2a2 2 0 0 0 2 2h2v-2h-2v-2h1a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2zM9 21V11h4v10z"/>' }, "letter-rr": { "body": '<path fill="currentColor" d="M16 15v-4a2 2 0 0 0-2-2H8v14h2v-6h1.48l2.34 6H16l-2.33-6H14a2 2 0 0 0 2-2zm-6-4h4v4h-4zm14 2h-6v10h2v-8h4v-2z"/>' }, "letter-ss": { "body": '<path fill="currentColor" d="M22 23h-5v-2h5v-2h-3a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h5v2h-5v2h3a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2zm-9 0H7v-2h6v-4H9a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h6v2H9v4h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2z"/>' }, "letter-tt": { "body": '<path fill="currentColor" d="M8 11h3v12h2V11h3V9H8v2zm15 4v-2h-3v-2h-2v2h-2v2h2v6a2 2 0 0 0 2 2h3v-2h-3v-6z"/>' }, "letter-uu": { "body": '<path fill="currentColor" d="M23 23h-4a2 2 0 0 1-2-2v-8h2v8h4v-8h2v8a2 2 0 0 1-2 2zm-10 0H9a2 2 0 0 1-2-2V9h2v12h4V9h2v12a2 2 0 0 1-2 2z"/>' }, "letter-vv": { "body": '<path fill="currentColor" d="M25 13h-1.75L21 22.03L18.79 13H17l2.5 10h3L25 13zM13 9l-2 13L9 9H7l2.52 14h2.96L15 9h-2z"/>' }, "letter-ww": { "body": '<path fill="currentColor" d="m24.3 13l-.91 8.61L22 13h-2l-1.39 8.61L17.7 13H16l1.36 10h2.28L21 14.63L22.36 23h2.28L26 13h-1.7zM12.21 9l-.34 8l-.26 4.54L11.2 18l-.68-5.46H8.5L7.82 18l-.41 3.54L7.16 17l-.35-8h-1.8l1 14h2.27l.76-4.93L9.5 14l.01-.03l.01.03l.46 4.07l.76 4.93h2.27l1-14h-1.8z"/>' }, "letter-xx": { "body": '<path fill="currentColor" d="M15 9h-2l-2 6l-2-6H7l2.75 7L7 23h2l2-6l2 6h2l-2.76-7L15 9zm10 4h-2l-2 3.9l-2-3.9h-2l2.91 5L17 23h2l2-3.8l2 3.8h2l-2.9-5l2.9-5z"/>' }, "letter-yy": { "body": '<path fill="currentColor" d="M15 9h-2l-2 7l-2-7H7l3 9v5h2v-5l3-9zm8 4l-2 7.52L19.08 13H17l3.15 9.87l-.62 2.13H17v2h2.26a2 2 0 0 0 1.91-1.42L25 13z"/>' }, "letter-zz": { "body": '<path fill="currentColor" d="M25 15v-2h-8v2h5.5L17 21v2h8v-2h-5.49L25 15zM15 9H7v2h6L7 21v2h8v-2H9l6-10V9z"/>' }, "license": { "body": '<path fill="currentColor" d="M10 6h12v2H10zm0 4h12v2H10zm0 14h6v2h-6zm0-10h6v2h-6z"/><path fill="currentColor" d="M24 30H8a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM8 4v24h16V4Z"/>' }, "license-draft": { "body": '<path fill="currentColor" d="M8 6h12v2H8zm0 4h12v2H8zm0 4h6v2H8zm0 10h4v2H8z"/><path fill="currentColor" d="m29.707 19.293l-3-3a1 1 0 0 0-1.414 0L16 25.586V30h4.414l9.293-9.293a1 1 0 0 0 0-1.414zM19.586 28H18v-1.586l5-5L24.586 23zM26 21.586L24.414 20L26 18.414L27.586 20zM12 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v10h-2V4H6v24h6z"/>' }, "license-global": { "body": '<path fill="currentColor" d="M22 14a8 8 0 1 0 8 8a8.01 8.01 0 0 0-8-8zm5.91 7h-1.954a12.03 12.03 0 0 0-1.218-4.332A6.01 6.01 0 0 1 27.91 21zm-7.854 0A10.014 10.014 0 0 1 22 16.015A10.012 10.012 0 0 1 23.945 21zm3.89 2A10.01 10.01 0 0 1 22 27.985A10.012 10.012 0 0 1 20.055 23zm-4.684-6.332A12.027 12.027 0 0 0 18.044 21H16.09a6.01 6.01 0 0 1 3.172-4.332zM16.09 23h1.953a12.027 12.027 0 0 0 1.218 4.332A6.01 6.01 0 0 1 16.09 23zm8.648 4.332A12.024 12.024 0 0 0 25.956 23h1.954a6.009 6.009 0 0 1-3.172 4.332zM6 14h6v2H6zm0-8h12v2H6zm0 4h12v2H6zm0 14h6v2H6z"/><path fill="currentColor" d="M12 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v8h-2V4H4v24h8Z"/>' }, "license-maintenance": { "body": '<path fill="currentColor" d="M8 14h6v2H8zm0-8h12v2H8zm0 4h12v2H8zm0 14h6v2H8zm22 0v-2h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 24 18.101V16h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 18.101 22H16v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V30h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 27.899 24zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3z"/><path fill="currentColor" d="M14 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v10h-2V4H6v24h8Z"/>' }, "license-maintenance-draft": { "body": '<path fill="currentColor" d="m29.707 19.293l-3-3a1 1 0 0 0-1.414 0L16 25.586V30h4.414l9.293-9.293a1 1 0 0 0 0-1.414zM19.586 28H18v-1.586l5-5L24.586 23zM26 21.586L24.414 20L26 18.414L27.586 20zM20 13v-2h-2.142a3.94 3.94 0 0 0-.425-1.019l1.517-1.517l-1.414-1.414l-1.517 1.517A3.944 3.944 0 0 0 15 8.142V6h-2v2.142a3.944 3.944 0 0 0-1.019.425L10.464 7.05L9.05 8.464l1.517 1.517A3.94 3.94 0 0 0 10.142 11H8v2h2.142a3.94 3.94 0 0 0 .425 1.019L9.05 15.536l1.414 1.414l1.517-1.517a3.944 3.944 0 0 0 1.019.425V18h2v-2.142a3.944 3.944 0 0 0 1.019-.425l1.517 1.517l1.414-1.414l-1.517-1.517A3.94 3.94 0 0 0 17.858 13zm-6 1a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2z"/><path fill="currentColor" d="M12 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v10h-2V4H6v24h6Z"/>' }, "license-third-party": { "body": '<path fill="currentColor" d="M8 14h6v2H8zm0-8h12v2H8zm0 4h12v2H8zm0 14h6v2H8zm19 1h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z"/><path fill="currentColor" d="M14 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v10h-2V4H6v24h8Z"/>' }, "license-third-party-draft": { "body": '<path fill="currentColor" d="m29.707 19.293l-3-3a1 1 0 0 0-1.414 0L16 25.586V30h4.414l9.293-9.293a1 1 0 0 0 0-1.414zM19.586 28H18v-1.586l5-5L24.586 23zM26 21.586L24.414 20L26 18.414L27.586 20zM17 15h-6a3 3 0 0 0-3 3v1h2v-1a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v1h2v-1a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z"/><path fill="currentColor" d="M12 30H6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v10h-2V4H6v24h6Z"/>' }, "lifesaver": { "body": '<path fill="currentColor" d="M28.226 22.812a13.966 13.966 0 0 0 0-13.624L28.414 9a2.002 2.002 0 0 0 0-2.828l-2.586-2.586a2.003 2.003 0 0 0-2.828 0l-.188.187a13.969 13.969 0 0 0-13.624 0L9 3.586a2.002 2.002 0 0 0-2.828 0L3.586 6.172a2.002 2.002 0 0 0 0 2.828l.188.188a13.97 13.97 0 0 0 0 13.624L3.586 23a2.002 2.002 0 0 0 0 2.828l2.586 2.586a2.002 2.002 0 0 0 2.828 0l.188-.188a13.969 13.969 0 0 0 13.624 0l.188.188a2.002 2.002 0 0 0 2.828 0l2.586-2.586a2.002 2.002 0 0 0 0-2.828ZM28 16a11.973 11.973 0 0 1-1.255 5.332l-3.894-3.896a6.98 6.98 0 0 0 0-2.873l3.894-3.895A11.973 11.973 0 0 1 28 16Zm-1-8.414l-4.935 4.934a7.043 7.043 0 0 0-2.585-2.585L24.414 5ZM16 21a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5Zm5.315-15.73l-3.879 3.88a6.98 6.98 0 0 0-2.873 0l-3.878-3.88a12.248 12.248 0 0 1 10.63 0ZM7.585 5l4.935 4.935a7.045 7.045 0 0 0-2.585 2.585L5 7.587ZM4 16a11.972 11.972 0 0 1 1.255-5.331l3.894 3.895a6.98 6.98 0 0 0 0 2.873L5.255 21.33A11.972 11.972 0 0 1 4 16Zm3.586 11L5 24.414l4.935-4.934a7.043 7.043 0 0 0 2.585 2.586Zm3.099-.27l3.878-3.879a6.98 6.98 0 0 0 2.873 0l3.88 3.879a12.248 12.248 0 0 1-10.631 0Zm13.73.27l-4.935-4.935a7.045 7.045 0 0 0 2.585-2.585L27 24.414Z"/>' }, "light": { "body": '<path fill="currentColor" d="M15 2h2v5h-2zm6.688 6.9l3.506-3.506l1.414 1.414l-3.506 3.506zM25 15h5v2h-5zm-3.312 8.1l1.414-1.413l3.506 3.506l-1.414 1.414zM15 25h2v5h-2zm-9.606.192L8.9 21.686l1.414 1.414l-3.505 3.506zM2 15h5v2H2zm3.395-8.192l1.414-1.414L10.315 8.9L8.9 10.314zM16 12a4 4 0 1 1-4 4a4.005 4.005 0 0 1 4-4m0-2a6 6 0 1 0 6 6a6 6 0 0 0-6-6Z"/>' }, "light-filled": { "body": '<path fill="currentColor" d="M15 2h2v5h-2zm6.688 6.9l3.506-3.506l1.414 1.414l-3.506 3.506zM25 15h5v2h-5zm-3.312 8.1l1.414-1.413l3.506 3.506l-1.414 1.414zM15 25h2v5h-2zm-9.606.192L8.9 21.686l1.414 1.414l-3.505 3.506zM2 15h5v2H2zm3.395-8.192l1.414-1.414L10.315 8.9L8.9 10.314zM16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Z"/>' }, "lightning": { "body": '<path fill="currentColor" d="M11.61 29.92a1 1 0 0 1-.6-1.07L12.83 17H8a1 1 0 0 1-1-1.23l3-13A1 1 0 0 1 11 2h10a1 1 0 0 1 .78.37a1 1 0 0 1 .2.85L20.25 11H25a1 1 0 0 1 .9.56a1 1 0 0 1-.11 1l-13 17A1 1 0 0 1 12 30a1.09 1.09 0 0 1-.39-.08ZM17.75 13l2-9H11.8L9.26 15h5.91l-1.59 10.28L23 13Z"/>' }, "link": { "body": '<path fill="currentColor" d="M29.25 6.76a6 6 0 0 0-8.5 0l1.42 1.42a4 4 0 1 1 5.67 5.67l-8 8a4 4 0 1 1-5.67-5.66l1.41-1.42l-1.41-1.42l-1.42 1.42a6 6 0 0 0 0 8.5A6 6 0 0 0 17 25a6 6 0 0 0 4.27-1.76l8-8a6 6 0 0 0-.02-8.48Z"/><path fill="currentColor" d="M4.19 24.82a4 4 0 0 1 0-5.67l8-8a4 4 0 0 1 5.67 0A3.94 3.94 0 0 1 19 14a4 4 0 0 1-1.17 2.85L15.71 19l1.42 1.42l2.12-2.12a6 6 0 0 0-8.51-8.51l-8 8a6 6 0 0 0 0 8.51A6 6 0 0 0 7 28a6.07 6.07 0 0 0 4.28-1.76l-1.42-1.42a4 4 0 0 1-5.67 0Z"/>' }, "linux": { "body": '<path fill="currentColor" d="m29.895 23.542l-1.724-3.447a2 2 0 0 0-1.789-1.106h-.468a14.887 14.887 0 0 0-1.82-4.597C23.065 12.442 22 10.428 22 8a6 6 0 0 0-12 0a13.004 13.004 0 0 1-2.049 6.215a14.702 14.702 0 0 0-1.87 4.776h-.463a2 2 0 0 0-1.789 1.106l-1.724 3.447a1 1 0 0 0 .098 1.05l4.029 5.326a3 3 0 0 0 3.848.652l1.874-1.124A13.822 13.822 0 0 0 16 30a13.803 13.803 0 0 0 4.049-.553l1.871 1.123a2.982 2.982 0 0 0 1.538.43a3.038 3.038 0 0 0 2.34-1.119l4-5.288a1.001 1.001 0 0 0 .097-1.051Zm-7.569-8.216a14.831 14.831 0 0 1 1.56 3.663h-2.148a16.66 16.66 0 0 0-.98-2.645a12.708 12.708 0 0 1-.879-2.446a8.805 8.805 0 0 0 1.003-1.427l.039-.072a30.746 30.746 0 0 0 1.405 2.927ZM12 21a9.396 9.396 0 0 1 1.073-3.852c.256-.582.516-1.175.726-1.799a4.047 4.047 0 0 0 4.402 0c.21.624.47 1.217.726 1.8A9.396 9.396 0 0 1 20 21c0 1.288-.415 3-4 3s-4-1.712-4-3Zm6.51-8.575A3.627 3.627 0 0 1 16 14a3.627 3.627 0 0 1-2.51-1.576a7.636 7.636 0 0 1 5.02 0ZM12 8a4 4 0 0 1 8 0a10.916 10.916 0 0 0 .467 3.115a7.981 7.981 0 0 0-1.467-.63V8h-2v2.054a9.252 9.252 0 0 0-2 0V8h-2v2.485a7.902 7.902 0 0 0-1.478.637A10.71 10.71 0 0 0 12 8Zm-2.285 7.16a29.8 29.8 0 0 0 1.354-2.78l.049.09a8.805 8.805 0 0 0 1.003 1.428a12.708 12.708 0 0 1-.879 2.445a16.657 16.657 0 0 0-.98 2.647H8.104a14.057 14.057 0 0 1 1.61-3.83Zm1.37 12.477l-2.034 1.22a.987.987 0 0 1-1.253-.18l-3.626-4.794l1.446-2.892h3.706l2.166 5.394a1.004 1.004 0 0 1-.405 1.252Zm2.316.117a2.957 2.957 0 0 0-.056-2.11A9.03 9.03 0 0 0 16 26a9.024 9.024 0 0 0 2.656-.356a2.989 2.989 0 0 0-.054 2.11a13.872 13.872 0 0 1-5.2 0Zm10.83.884a.996.996 0 0 1-1.282.217l-2.034-1.22a1.01 1.01 0 0 1-.396-1.273l2.157-5.373h3.705l1.446 2.892Z"/>' }, "linux-alt": { "body": '<path fill="currentColor" d="M22.612 20.521A6.158 6.158 0 0 0 24 16.526C24 13.48 21.981 11 19.5 11a4.244 4.244 0 0 0-3.5 2.06A4.244 4.244 0 0 0 12.5 11C10.019 11 8 13.479 8 16.525a6.16 6.16 0 0 0 1.388 3.997c-.569.368-.939.641-.988.678a1 1 0 0 0-.18 1.425C8.66 23.175 12.616 28 16 28s7.34-4.825 7.78-5.375a1 1 0 0 0-.18-1.425a19.31 19.31 0 0 0-.988-.678ZM12.5 13c1.355 0 2.5 1.614 2.5 3.525v1.567a9.1 9.1 0 0 0-1.024.231A2.641 2.641 0 0 0 14 18c0-1.105-.672-2-1.5-2s-1.5.895-1.5 2a2.38 2.38 0 0 0 .407 1.362c-.081.042-.169.08-.248.122A4.03 4.03 0 0 1 10 16.525C10 14.615 11.145 13 12.5 13ZM16 26c-1.57 0-3.965-2.084-5.52-3.806C11.9 21.28 14.266 20 16 20s4.1 1.279 5.52 2.194C19.965 23.916 17.57 26 16 26Zm4.84-6.516c-.078-.041-.166-.08-.247-.122A2.38 2.38 0 0 0 21 18c0-1.105-.672-2-1.5-2s-1.5.895-1.5 2a2.641 2.641 0 0 0 .024.323A9.1 9.1 0 0 0 17 18.092v-1.567C17 14.615 18.145 13 19.5 13s2.5 1.614 2.5 3.525a4.03 4.03 0 0 1-1.16 2.96Z"/><path fill="currentColor" d="M30 30a3.888 3.888 0 0 1-4-4V14a10 10 0 0 0-20 0v12a3.888 3.888 0 0 1-4 4v-2a1.88 1.88 0 0 0 2-2V14a12 12 0 0 1 24 0v12a1.883 1.883 0 0 0 2 2Z"/>' }, "list": { "body": '<path fill="currentColor" d="M10 6h18v2H10zm0 18h18v2H10zm0-9h18v2H10zm-6 0h2v2H4zm0-9h2v2H4zm0 18h2v2H4z"/>' }, "list-boxes": { "body": '<path fill="currentColor" d="M16 8h14v2H16zm0 14h14v2H16zm-6-8H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zM4 6v6h6.001L10 6zm6 22H4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-6-8v6h6.001L10 20z"/>' }, "list-bulleted": { "body": '<circle cx="7" cy="9" r="3" fill="currentColor"/><circle cx="7" cy="23" r="3" fill="currentColor"/><path fill="currentColor" d="M16 22h14v2H16zm0-14h14v2H16z"/>' }, "list-checked": { "body": '<path fill="currentColor" d="M16 22h14v2H16zm-2-2.6L12.6 18L6 24.6L3.4 22L2 23.4l4 4zM16 8h14v2H16zm-2-2.6L12.6 4L6 10.6L3.4 8L2 9.4l4 4z"/>' }, "list-checked-mirror": { "body": '<path fill="currentColor" d="M30 19.4L28.6 18L22 24.6L19.4 22L18 23.4l4 4zM2 22h14v2H2zM30 5.4L28.6 4L22 10.6L19.4 8L18 9.4l4 4zM2 8h14v2H2z"/>' }, "list-dropdown": { "body": '<path fill="currentColor" d="M26 6V2H2v10h9v18h19V6ZM4 10V4h20v2H11v4Zm24 18H13V8h15Z"/><path fill="currentColor" d="M15 11h2v2h-2zm4 0h7v2h-7zm-4 6h2v2h-2zm4 0h7v2h-7zm-4 6h2v2h-2zm4 0h7v2h-7z"/>' }, "list-numbered": { "body": '<path fill="currentColor" d="M16 22h14v2H16zm0-14h14v2H16zm-8 4V4H6v1H4v2h2v5H4v2h6v-2H8zm2 16H4v-4a2 2 0 0 1 2-2h2v-2H4v-2h4a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H6v2h4z"/>' }, "list-numbered-mirror": { "body": '<path fill="currentColor" d="M28 28h-6v-4c0-1.1.9-2 2-2h2v-2h-4v-2h4c1.1 0 2 .9 2 2v2c0 1.1-.9 2-2 2h-2v2h4v2zM2 22h14v2H2zm24-10V4h-2v1h-2v2h2v5h-2v2h6v-2zM2 8h14v2H2z"/>' }, "load-balancer-application": { "body": '<path fill="currentColor" d="M4 26h4v4H4zm10 0h4v4h-4zm10 0h4v4h-4zm1-10h-8v-2h-2v2H7a2.002 2.002 0 0 0-2 2v6h2v-6h8v6h2v-6h8v6h2v-6a2.002 2.002 0 0 0-2-2zM9 2v10h14V2zm2 2h2v6h-2zm10 6h-6V4h6z"/>' }, "load-balancer-classic": { "body": '<path fill="currentColor" d="M4 26h4v4H4zm10 0h4v4h-4zm10 0h4v4h-4zm1-10h-8v-4h-2v4H7a2.002 2.002 0 0 0-2 2v6h2v-6h8v6h2v-6h8v6h2v-6a2.002 2.002 0 0 0-2-2zm-5-6V2h-8v8zm-6-2V4h4v4z"/>' }, "load-balancer-global": { "body": '<path fill="currentColor" d="M4 26h4v4H4zm10 0h4v4h-4zm10 0h4v4h-4zm1-10h-8v-4h-2v4H7a2.002 2.002 0 0 0-2 2v6h2v-6h8v6h2v-6h8v6h2v-6a2.002 2.002 0 0 0-2-2zm-9-6a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/>' }, "load-balancer-listener": { "body": '<path fill="currentColor" d="M15 8h2v2h-2zm4 0h2v2h-2zm-8 0h2v2h-2zm14 8h-8v-3h-2v3H7a2.002 2.002 0 0 0-2 2v6h2v-6h8v6h2v-6h8v6h2v-6a2.002 2.002 0 0 0-2-2zM4 26h4v4H4zm10 0h4v4h-4zm10 0h4v4h-4zM11 3h10v2H11z"/>' }, "load-balancer-local": { "body": '<path fill="currentColor" d="M25 16h-8v-6h-2v6H7a2.002 2.002 0 0 0-2 2v6h2v-6h8v6h2v-6h8v6h2v-6a2.002 2.002 0 0 0-2-2zM4 26h4v4H4zm10 0h4v4h-4zm10 0h4v4h-4zM11 5h10v2H11z"/>' }, "load-balancer-network": { "body": '<path fill="currentColor" d="M25 16h-8v-4h-2v4H7a2.002 2.002 0 0 0-2 2v4h2v-4h8v4h2v-4h8v4h2v-4a2.002 2.002 0 0 0-2-2zm-5-6V2h-8v8h8zm-6-2V4h4v4zm12 16a2.995 2.995 0 0 0-2.816 2h-4.368a2.982 2.982 0 0 0-5.632 0H8.816a3 3 0 1 0 0 2h4.368a2.982 2.982 0 0 0 5.632 0h4.368A2.995 2.995 0 1 0 26 24zM6 28a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm10 0a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm10 0a1 1 0 1 1 1-1a1 1 0 0 1-1 1z"/>' }, "load-balancer-pool": { "body": '<path fill="currentColor" d="M10 15h12v2H10zM8.7 6.285A2.966 2.966 0 0 0 9 5a3 3 0 1 0-3 3a2.96 2.96 0 0 0 1.285-.3L10 10.413V13h2V9.586zM6 6a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm13-1a3 3 0 1 0-4 2.815V13h2V7.816A2.996 2.996 0 0 0 19 5zm-3 1a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm10-4a3.003 3.003 0 0 0-3 3a2.966 2.966 0 0 0 .3 1.285l-3.3 3.3V13h2v-2.586L24.715 7.7A2.96 2.96 0 0 0 26 8a3 3 0 0 0 0-6zm0 4a1 1 0 1 1 1-1a1 1 0 0 1-1 1zM12 19h-2v2.586L7.285 24.3A2.96 2.96 0 0 0 6 24a3 3 0 1 0 3 3a2.966 2.966 0 0 0-.3-1.285l3.3-3.3zm-6 9a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm11-3.816V19h-2v5.184a3 3 0 1 0 2 0zM16 28a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm10-4a2.96 2.96 0 0 0-1.285.3L22 21.587V19h-2v3.414l3.3 3.3A2.966 2.966 0 0 0 23 27a3 3 0 1 0 3-3zm0 4a1 1 0 1 1 1-1a1 1 0 0 1-1 1z"/>' }, "load-balancer-vpc": { "body": '<path fill="currentColor" d="M8 30H2v-6h6zm-4-2h2v-2H4zm15 2h-6v-6h6zm-4-2h2v-2h-2zm15 2h-6v-6h6zm-4-2h2v-2h-2zM16 10a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm10 12h-5a4.005 4.005 0 0 1-4-4h-2a4.005 4.005 0 0 1-4 4H6a2.002 2.002 0 0 0-2 2v4h2v-4h5a5.97 5.97 0 0 0 4-1.54V22h2v-5.54A5.97 5.97 0 0 0 21 18h5v4h2v-4a2.002 2.002 0 0 0-2-2z"/>' }, "location": { "body": '<path fill="currentColor" d="M16 18a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5Zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3Z"/><path fill="currentColor" d="m16 30l-8.436-9.949a35.076 35.076 0 0 1-.348-.451A10.889 10.889 0 0 1 5 13a11 11 0 0 1 22 0a10.884 10.884 0 0 1-2.215 6.597l-.001.003s-.3.394-.345.447ZM8.812 18.395c.002 0 .234.308.287.374L16 26.908l6.91-8.15c.044-.055.278-.365.279-.366A8.901 8.901 0 0 0 25 13a9 9 0 1 0-18 0a8.905 8.905 0 0 0 1.813 5.395Z"/>' }, "location-company": { "body": '<path fill="currentColor" d="m16 30l-8.436-9.949a35.076 35.076 0 0 1-.348-.451A10.889 10.889 0 0 1 5 13a11 11 0 0 1 22 0a10.884 10.884 0 0 1-2.215 6.597l-.001.003s-.3.394-.345.447ZM8.812 18.395c.002 0 .234.308.287.374L16 26.908l6.91-8.15c.044-.055.278-.365.279-.366A8.901 8.901 0 0 0 25 13a9 9 0 0 0-18 0a8.905 8.905 0 0 0 1.813 5.395Z"/><path fill="currentColor" d="M21 18h-2v-8h-6v8h-2v-8a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2Z"/><path fill="currentColor" d="M15 16h2v2h-2zm0-4h2v2h-2z"/>' }, "location-company-filled": { "body": '<path fill="none" d="M21 18h-2v-8h-6v8h-2v-8a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2Zm-4-2h-2v2h2Zm0-4h-2v2h2Z"/><path fill="currentColor" d="M16 2A11.013 11.013 0 0 0 5 13a10.889 10.889 0 0 0 2.216 6.6s.3.395.349.452L16 30l8.439-9.953c.044-.053.345-.447.345-.447l.001-.003A10.885 10.885 0 0 0 27 13A11.013 11.013 0 0 0 16 2Zm1 16h-2v-2h2Zm0-4h-2v-2h2Zm4 4h-2v-8h-6v8h-2v-8a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2Z"/>' }, "location-current": { "body": '<path fill="currentColor" d="M4 12.983a1 1 0 0 0 .629.945l9.601 3.841l3.841 9.602A1 1 0 0 0 19 28h.016a1 1 0 0 0 .924-.658l8-22a1 1 0 0 0-1.282-1.283l-22 8a1.001 1.001 0 0 0-.658.925Z"/>' }, "location-filled": { "body": '<path fill="currentColor" d="M16 2A11.013 11.013 0 0 0 5 13a10.889 10.889 0 0 0 2.216 6.6s.3.395.349.452L16 30l8.439-9.953c.044-.053.345-.447.345-.447l.001-.003A10.885 10.885 0 0 0 27 13A11.013 11.013 0 0 0 16 2Zm0 15a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><circle cx="16" cy="13" r="4" fill="none"/>' }, "location-hazard": { "body": '<circle cx="16" cy="20.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M15 7h2v9h-2z"/><path fill="currentColor" d="m16 30l-8.436-9.949a35.076 35.076 0 0 1-.348-.451A10.889 10.889 0 0 1 5 13a11 11 0 0 1 22 0a10.884 10.884 0 0 1-2.215 6.597l-.001.003s-.3.394-.345.447ZM8.812 18.395c.002 0 .234.308.287.374L16 26.908l6.91-8.15c.044-.055.278-.365.279-.366A8.901 8.901 0 0 0 25 13a9 9 0 0 0-18 0a8.905 8.905 0 0 0 1.813 5.395Z"/>' }, "location-hazard-filled": { "body": '<path fill="none" d="M16 22a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 22Zm-1.125-6h2.25V7h-2.25Z"/><path fill="currentColor" d="M16 2A11.013 11.013 0 0 0 5 13a10.889 10.889 0 0 0 2.216 6.6s.3.395.349.452L16 30l8.439-9.953c.044-.053.345-.447.345-.447l.001-.003A10.885 10.885 0 0 0 27 13A11.013 11.013 0 0 0 16 2Zm-1.125 5h2.25v9h-2.25ZM16 22a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 22Z"/>' }, "location-heart": { "body": '<path fill="currentColor" d="M18.303 9a2.662 2.662 0 0 0-1.908.806l-.393.405l-.397-.405a2.662 2.662 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L16.002 18l4.209-4.298a2.8 2.8 0 0 0 0-3.896A2.662 2.662 0 0 0 18.303 9Z"/><path fill="currentColor" d="m16 30l-8.436-9.949a35.076 35.076 0 0 1-.348-.451A10.889 10.889 0 0 1 5 13a11 11 0 0 1 22 0a10.884 10.884 0 0 1-2.215 6.597l-.001.003s-.3.394-.345.447ZM8.812 18.395c.002 0 .234.308.287.374L16 26.908l6.91-8.15c.044-.055.278-.365.279-.366A8.901 8.901 0 0 0 25 13a9 9 0 0 0-18 0a8.905 8.905 0 0 0 1.813 5.395Z"/>' }, "location-heart-filled": { "body": '<path fill="none" d="M18.303 9a2.662 2.662 0 0 0-1.908.806l-.393.405l-.397-.405a2.662 2.662 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L16.002 18l4.209-4.298a2.8 2.8 0 0 0 0-3.896A2.662 2.662 0 0 0 18.303 9Z"/><path fill="currentColor" d="M16 2A11.013 11.013 0 0 0 5 13a10.889 10.889 0 0 0 2.216 6.6s.3.395.349.452L16 30l8.439-9.953c.044-.053.345-.447.345-.447l.001-.003A10.885 10.885 0 0 0 27 13A11.013 11.013 0 0 0 16 2Zm4.21 11.702L16.003 18l-4.213-4.298a2.8 2.8 0 0 1 0-3.896a2.662 2.662 0 0 1 3.816 0l.397.405l.393-.405a2.662 2.662 0 0 1 3.816 0a2.8 2.8 0 0 1 0 3.896Z"/>' }, "location-person": { "body": '<path fill="currentColor" d="M20 19h-2v-2h-4v2h-2v-2a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2zm-4-5a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1z"/><path fill="currentColor" d="m16 30l-8.436-9.949a35.076 35.076 0 0 1-.348-.451A10.889 10.889 0 0 1 5 13a11 11 0 0 1 22 0a10.884 10.884 0 0 1-2.215 6.597l-.001.003s-.3.394-.345.447ZM8.812 18.395c.002 0 .234.308.287.374L16 26.908l6.91-8.15c.044-.055.278-.365.279-.366A8.901 8.901 0 0 0 25 13a9 9 0 0 0-18 0a8.905 8.905 0 0 0 1.813 5.395Z"/>' }, "location-person-filled": { "body": '<path fill="none" d="M20 19h-2v-2h-4v2h-2v-2a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2Zm-1-8a3 3 0 1 0-3 3a3.003 3.003 0 0 0 3-3Zm-2 0a1 1 0 1 1-1-1a1.001 1.001 0 0 1 1 1Z"/><circle cx="16" cy="11" r="1" fill="currentColor"/><path fill="currentColor" d="M16 2A11.013 11.013 0 0 0 5 13a10.889 10.889 0 0 0 2.216 6.6s.3.395.349.452L16 30l8.439-9.953c.044-.053.345-.447.345-.447l.001-.003A10.885 10.885 0 0 0 27 13A11.013 11.013 0 0 0 16 2Zm0 6a3 3 0 1 1-3 3a3.003 3.003 0 0 1 3-3Zm4 11h-2v-2h-4v2h-2v-2a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2Z"/>' }, "location-save": { "body": '<path fill="currentColor" d="M18 30h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3.003 3.003 0 0 0-3-3h-6a3.003 3.003 0 0 0-3 3zm6-6a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm1.342-7.94l-22-8A1 1 0 0 0 2.06 3.341l8 22a1.001 1.001 0 0 0 .924.659H11a1 1 0 0 0 .929-.629l3.841-9.602l9.602-3.84a1 1 0 0 0-.03-1.87zm-10.714 4.01l-.398.16l-.159.398l-3.027 7.568L4.672 4.672l17.524 6.372z"/>' }, "location-star": { "body": '<path fill="currentColor" d="m16 7l1.912 3.667l4.088.506l-3 2.753l.6 4.074l-3.6-2.292L12.4 18l.6-4.074l-3-2.753l4.2-.506L16 7z"/><path fill="currentColor" d="m16 30l-8.436-9.949a35.076 35.076 0 0 1-.348-.451A10.889 10.889 0 0 1 5 13a11 11 0 0 1 22 0a10.884 10.884 0 0 1-2.215 6.597l-.001.003s-.3.394-.345.447ZM8.812 18.395c.002 0 .234.308.287.374L16 26.908l6.91-8.15c.044-.055.278-.365.279-.366A8.901 8.901 0 0 0 25 13a9 9 0 0 0-18 0a8.905 8.905 0 0 0 1.813 5.395Z"/>' }, "location-star-filled": { "body": '<path fill="none" d="m16 7l1.912 3.667l4.088.506l-3 2.753l.6 4.074l-3.6-2.292L12.4 18l.6-4.074l-3-2.753l4.2-.506L16 7z"/><path fill="currentColor" d="M16 2A11.013 11.013 0 0 0 5 13a10.889 10.889 0 0 0 2.216 6.6s.3.395.349.452L16 30l8.439-9.953c.044-.053.345-.447.345-.447l.001-.003A10.885 10.885 0 0 0 27 13A11.013 11.013 0 0 0 16 2Zm3.6 16L16 15.709L12.4 18l.6-4.074l-3-2.753l4.2-.507L16 7l1.912 3.667l4.088.506l-3 2.753Z"/>' }, "locked": { "body": '<path fill="currentColor" d="M24 14h-2V8a6 6 0 0 0-12 0v6H8a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2ZM12 8a4 4 0 0 1 8 0v6h-8Zm12 20H8V16h16Z"/>' }, "logical-partition": { "body": '<circle cx="9" cy="7" r="1" fill="currentColor"/><path fill="currentColor" d="M27 22v-4a2 2 0 0 0-2-2h-8v-4h9a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h9v4H7a2 2 0 0 0-2 2v4H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2H7v-4h8v4h-1a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-1v-4h8v4h-1a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-1ZM8 28H4v-4h4v4Zm10-4v4h-4v-4h4ZM6 10V4h20v6H6Zm22 18h-4v-4h4v4Z"/>' }, "login": { "body": '<path fill="currentColor" d="M26 30H14a2 2 0 0 1-2-2v-3h2v3h12V4H14v3h-2V4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v24a2 2 0 0 1-2 2Z"/><path fill="currentColor" d="M14.59 20.59L18.17 17H4v-2h14.17l-3.58-3.59L16 10l6 6l-6 6l-1.41-1.41z"/>' }, "logo-angular": { "body": '<path fill="currentColor" d="M13.5 16h4.9L16 10.8L13.5 16z"/><path fill="currentColor" d="M16 3L3 7.6l2.7 15.8L16 29l10.3-5.6L29 7.6L16 3zm5.1 18.6l-1.5-3.2h-7.1L11 21.6H8.6L16 5.3l7.4 16.2h-2.3z"/>' }, "logo-ansible-community": { "body": '<path fill="currentColor" d="M27.8 27.7L17.5 3.1c-.3-.7-.9-1.1-1.6-1.1c-.7 0-1.3.4-1.6 1.1L3 30h3.9l4.5-11.1l13.3 10.7c.5.4.9.6 1.4.6c1 0 1.9-.7 1.9-1.8c0-.2-.1-.4-.2-.7zM15.9 7.5l6.7 16.4L12.5 16l3.4-8.5z"/>' }, "logo-delicious": { "body": '<path fill="currentColor" d="M4 16h12v12H4zM16 4h12v12H16z"/>', "hidden": true }, "logo-digg": { "body": '<path fill="currentColor" d="M6.48 7.6v3.92H2V21h7.28V7.6zm0 11.2H4.8v-5h1.68zm3.92-7.28h2.8v9.52h-2.8zm0-3.92h2.8v2.8h-2.8zm3.92 3.92V21h4.48v1.12h-4.48v2.28h7.28V11.52zm4.48 7.28h-1.68v-5h1.68zm3.92-7.28V21h4.48v1.12h-4.48v2.28H30V11.52zm4.48 7.28h-1.68v-5h1.68z"/>' }, "logo-discord": { "body": '<path fill="currentColor" d="M25.7 7.1C23.9 6.3 22 5.7 20 5.3h-.1c-.2.4-.5 1-.7 1.5c-2.2-.3-4.3-.3-6.4 0c-.2-.5-.5-1-.7-1.5H12c-2 .3-3.9.9-5.7 1.8C2.7 12.5 1.7 17.8 2.2 23v.1c2.4 1.8 4.7 2.8 7 3.5h.1c.5-.7 1-1.5 1.4-2.3v-.1c-.8-.3-1.5-.6-2.2-1c-.1 0-.1-.1 0-.1c.1-.1.3-.2.4-.3H9c4.6 2.1 9.5 2.1 14.1 0h.1c.1.1.3.2.4.3c.1 0 0 .1 0 .1c-.7.4-1.4.8-2.2 1c0 0-.1.1 0 .1c.4.8.9 1.6 1.4 2.3h.1c2.3-.7 4.6-1.8 7-3.5V23c.6-6-1-11.2-4.2-15.9zM11.4 19.9c-1.4 0-2.5-1.3-2.5-2.8s1.1-2.8 2.5-2.8s2.5 1.3 2.5 2.8c0 1.5-1.1 2.8-2.5 2.8zm9.3 0c-1.4 0-2.5-1.3-2.5-2.8s1.1-2.8 2.5-2.8s2.5 1.3 2.5 2.8c0 1.5-1.1 2.8-2.5 2.8z"/>' }, "logo-facebook": { "body": '<path fill="currentColor" d="M26.67 4H5.33A1.34 1.34 0 0 0 4 5.33v21.34A1.34 1.34 0 0 0 5.33 28h11.49v-9.28H13.7v-3.63h3.12v-2.67c0-3.1 1.89-4.79 4.67-4.79c.93 0 1.86 0 2.79.14V11h-1.91c-1.51 0-1.8.72-1.8 1.77v2.31h3.6l-.47 3.63h-3.13V28h6.1A1.34 1.34 0 0 0 28 26.67V5.33A1.34 1.34 0 0 0 26.67 4Z"/>' }, "logo-figma": { "body": '<path fill="currentColor" d="M23.6 11.6c1-.6 1.7-1.5 2.1-2.6c.4-1.1.4-2.2.1-3.3c-.3-1.1-1-2-1.9-2.7c-.9-.7-2.1-1-3.2-1h-9.2c-1.2 0-2.3.4-3.2 1c-1.1.7-1.7 1.7-2.1 2.7c-.3 1.1-.3 2.3.1 3.3c.4 1.1 1.1 2 2.1 2.6c-.7.5-1.4 1.1-1.8 1.9c-.4.8-.6 1.6-.6 2.5c0 .9.2 1.7.6 2.5c.4.8 1 1.4 1.8 1.9c-1 .6-1.7 1.5-2.1 2.6c-.4 1.1-.4 2.2-.1 3.3c.3 1.1 1 2 2 2.7c.9.7 2.1 1 3.2 1c1.4 0 2.8-.6 3.9-1.5c1-1 1.6-2.3 1.6-3.7V20c1 .9 2.3 1.4 3.6 1.4h.1c1.2 0 2.3-.4 3.2-1c.9-.7 1.6-1.6 1.9-2.7c.3-1.1.3-2.2-.1-3.3c-.3-1.3-1.1-2.2-2-2.8zm-6.7-7.9h3.7c.5 0 1 0 1.4.2c.5.2.9.4 1.2.8c.4.3.6.7.8 1.2s.3.9.3 1.4c0 .5-.1 1-.3 1.4c-.2.4-.5.8-.8 1.2c-.4.3-.8.6-1.2.8c-.5.2-1 .2-1.4.2h-3.7V3.7zm-5.5 0h3.7v7h-3.7c-.9 0-1.8-.4-2.4-1.1c-.7-.6-1-1.5-1-2.4s.4-1.8 1-2.4c.6-.6 1.5-1 2.4-1.1zM7.8 16c0-.9.4-1.8 1.1-2.5c.7-.7 1.6-1 2.6-1h3.7v7h-3.7c-1 0-1.9-.4-2.6-1c-.7-.7-1.1-1.6-1.1-2.5zm7.3 8.7c0 1-.4 1.9-1.1 2.5c-.7.7-1.6 1-2.6 1c-.5 0-1 0-1.4-.2c-.5-.2-.9-.4-1.2-.7c-.4-.3-.6-.7-.8-1.2c-.2-.4-.3-.9-.3-1.4c0-.5.1-1 .3-1.4c.2-.4.5-.8.8-1.2c.4-.3.8-.6 1.2-.8c.5-.2 1-.2 1.4-.2h3.7v3.6zm5.5-5.2h-.1c-.9 0-1.8-.4-2.4-1.1c-.6-.7-1-1.5-1-2.4c0-.9.4-1.8 1-2.4c.6-.7 1.5-1 2.4-1.1h.1c.5 0 1 0 1.4.2c.5.2.9.4 1.2.8c.4.3.6.7.8 1.2c.2.4.3.9.3 1.4c0 .5-.1 1-.3 1.4c-.2.4-.5.8-.8 1.2c-.4.3-.8.6-1.2.8h-1.4z"/>' }, "logo-flickr": { "body": '<circle cx="8" cy="16" r="6" fill="currentColor"/><circle cx="24" cy="16" r="6" fill="currentColor"/>' }, "logo-github": { "body": '<path fill="currentColor" fill-rule="evenodd" d="M16 2a14 14 0 0 0-4.43 27.28c.7.13 1-.3 1-.67v-2.38c-3.89.84-4.71-1.88-4.71-1.88a3.71 3.71 0 0 0-1.62-2.05c-1.27-.86.1-.85.1-.85a2.94 2.94 0 0 1 2.14 1.45a3 3 0 0 0 4.08 1.16a2.93 2.93 0 0 1 .88-1.87c-3.1-.36-6.37-1.56-6.37-6.92a5.4 5.4 0 0 1 1.44-3.76a5 5 0 0 1 .14-3.7s1.17-.38 3.85 1.43a13.3 13.3 0 0 1 7 0c2.67-1.81 3.84-1.43 3.84-1.43a5 5 0 0 1 .14 3.7a5.4 5.4 0 0 1 1.44 3.76c0 5.38-3.27 6.56-6.39 6.91a3.33 3.33 0 0 1 .95 2.59v3.84c0 .46.25.81 1 .67A14 14 0 0 0 16 2Z"/>' }, "logo-glassdoor": { "body": '<path fill="currentColor" d="M10.828 28h10.344a3.43 3.43 0 0 0 3.43-3.43V10.33h-3.43v14.24H7.398a3.43 3.43 0 0 0 3.43 3.43Z"/><path fill="currentColor" d="M21.172 4H10.828a3.43 3.43 0 0 0-3.43 3.43v14.24h3.43V7.43h13.774A3.43 3.43 0 0 0 21.172 4Z"/>' }, "logo-google": { "body": '<path fill="currentColor" d="M27.39 13.82H16.21v4.63h6.44c-.6 2.95-3.11 4.64-6.44 4.64a7.09 7.09 0 0 1 0-14.18a7 7 0 0 1 4.42 1.58L24.12 7a12 12 0 1 0-7.91 21c6 0 11.45-4.36 11.45-12a9.56 9.56 0 0 0-.27-2.18Z"/>', "hidden": true }, "logo-instagram": { "body": '<circle cx="22.406" cy="9.594" r="1.44" fill="currentColor"/><path fill="currentColor" d="M16 9.838A6.162 6.162 0 1 0 22.162 16A6.162 6.162 0 0 0 16 9.838ZM16 20a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z"/><path fill="currentColor" d="M16 6.162c3.204 0 3.584.012 4.849.07a6.642 6.642 0 0 1 2.228.413a3.975 3.975 0 0 1 2.278 2.278a6.642 6.642 0 0 1 .413 2.228c.058 1.265.07 1.645.07 4.85s-.012 3.583-.07 4.848a6.642 6.642 0 0 1-.413 2.228a3.975 3.975 0 0 1-2.278 2.278a6.642 6.642 0 0 1-2.228.413c-1.265.058-1.645.07-4.849.07s-3.584-.012-4.849-.07a6.642 6.642 0 0 1-2.228-.413a3.975 3.975 0 0 1-2.278-2.278a6.642 6.642 0 0 1-.413-2.228c-.058-1.265-.07-1.645-.07-4.849s.012-3.584.07-4.849a6.642 6.642 0 0 1 .413-2.228a3.975 3.975 0 0 1 2.278-2.278a6.642 6.642 0 0 1 2.228-.413c1.265-.058 1.645-.07 4.849-.07M16 4c-3.259 0-3.668.014-4.948.072a8.807 8.807 0 0 0-2.912.558a6.136 6.136 0 0 0-3.51 3.51a8.807 8.807 0 0 0-.558 2.913C4.014 12.333 4 12.74 4 16s.014 3.668.072 4.948a8.807 8.807 0 0 0 .558 2.912a6.136 6.136 0 0 0 3.51 3.51a8.807 8.807 0 0 0 2.913.558c1.28.058 1.688.072 4.947.072s3.668-.014 4.948-.072a8.807 8.807 0 0 0 2.913-.558a6.136 6.136 0 0 0 3.51-3.51a8.807 8.807 0 0 0 .557-2.913C27.986 19.667 28 19.26 28 16s-.014-3.668-.072-4.948a8.807 8.807 0 0 0-.558-2.912a6.136 6.136 0 0 0-3.51-3.51a8.807 8.807 0 0 0-2.913-.557C19.667 4.013 19.26 4 16 4Z"/>' }, "logo-invision": { "body": '<path fill="currentColor" d="M4 4v24h24V4H4zm8.1 5c.8 0 1.4.6 1.4 1.4c0 .8-.6 1.4-1.4 1.4c-.8 0-1.4-.6-1.4-1.4c.1-.8.7-1.4 1.4-1.4zm9.4 13.2c-1.4 0-2.1-.8-2.1-2c0-.3 0-.7.1-1l.7-2.4c.1-.2.1-.5.1-.7c0-.8-.5-1.3-1.2-1.3c-1 0-1.6.7-1.9 2L15.9 22h-2.3l.4-1.7c-.7 1.1-1.6 1.8-2.8 1.8c-1.4 0-2.1-.8-2.1-2c0-.3 0-.7.1-1l1.1-4.3H8.7l.5-1.8h3.9l-1.5 6.1c-.1.3-.1.6-.1.9c0 .4.2.5.5.6c.2 0 1.6 0 2.4-1.8l1-4.1h-1.6l.5-1.8h3.5l-.5 2.1c.6-1.2 1.9-2.2 3.1-2.2c1.3 0 2.4.9 2.4 2.7c0 .5-.1 1-.2 1.5l-.7 2.4c-.1.2-.1.4-.1.6c0 .4.2.6.5.6s.7-.2 1.2-1.5l.9.4c-.7 1.9-1.7 2.7-2.9 2.7z"/>' }, "logo-jupyter": { "body": '<path fill="currentColor" d="M26.077 3.588a1.69 1.69 0 1 1-1.76-1.585a1.67 1.67 0 0 1 1.76 1.585zM16.219 23.11c-4.487 0-8.43-1.61-10.469-3.988a11.162 11.162 0 0 0 20.938 0c-2.034 2.378-5.962 3.988-10.469 3.988zm0-15.463c4.487 0 8.43 1.61 10.469 3.988a11.162 11.162 0 0 0-20.938 0c2.04-2.382 5.963-3.988 10.47-3.988zm-6.176 20.09a2.108 2.108 0 1 1-.203-.797a2.128 2.128 0 0 1 .203.798zM6.26 7.107A1.226 1.226 0 1 1 7.452 5.83A1.242 1.242 0 0 1 6.26 7.106z"/>' }, "logo-keybase": { "body": '<path fill="currentColor" d="M14.123 26.933a1.112 1.112 0 1 1-1.112-1.112a1.112 1.112 0 0 1 1.112 1.112m6.903 0a1.112 1.112 0 1 1-1.112-1.112a1.112 1.112 0 0 1 1.112 1.112M9.97 6.74l.06-.972l.972.06l-.06.972z"/><path fill="currentColor" d="M26.427 16.383a13.087 13.087 0 0 0-5.144-4.182a14.12 14.12 0 0 0-1.135-.445c.012-.032.027-.062.04-.094a4.83 4.83 0 0 0-2.986-6.319a5.937 5.937 0 0 0-1.997-.355c-.036-.126-.116-.675.58-2.158L14.375 2l-.338.466c-.384.531-.755 1.044-1.103 1.55a2.166 2.166 0 0 0-1.448-.677l-1.632-.101H9.85a2.233 2.233 0 0 0-.129-.004a2.188 2.188 0 0 0-2.18 2.048L7.44 6.917v.006A2.188 2.188 0 0 0 9.485 9.23l1.168.072a5.171 5.171 0 0 0 .47 2.688a13.195 13.195 0 0 0-4.264 2.9C3 18.788 3 23.06 3 26.492v2.07l1.524-1.616A12.33 12.33 0 0 0 5.854 30h1.983a10.71 10.71 0 0 1-1.959-4.49l2.235-2.37l-1.15 3.605l2.03-1.477c3.586-2.61 7.868-3.21 12.726-1.783a4.628 4.628 0 0 0 5.22-1.468c.043-.063.082-.128.122-.193a9.614 9.614 0 0 1 .164 1.746a12.421 12.421 0 0 1-1.61 6.43h1.877a14.402 14.402 0 0 0 1.378-6.43a12.267 12.267 0 0 0-2.443-7.188ZM13.845 5.925a1.587 1.587 0 0 0 1.399.706a4.211 4.211 0 0 1 1.44.272a3.17 3.17 0 0 1 1.028 5.464l-.475-.585l-.004-.004a1.705 1.705 0 0 0-3.023.987a3.214 3.214 0 0 1-1.9-3.541a8.482 8.482 0 0 1 1.438-3.466a1.642 1.642 0 0 0 .098.167Zm3.49 9.259l-.607.496a.268.268 0 0 1-.376-.038l-.126-.155a.28.28 0 0 1 .04-.393l.6-.49l-1.236-1.516a.362.362 0 1 1 .561-.457l3.455 4.252a.362.362 0 0 1-.199.581a.357.357 0 0 1-.081.01a.36.36 0 0 1-.281-.134l-.344-.424l-1.222.997a.281.281 0 0 1-.396-.04l-.553-.677a.279.279 0 0 1 .04-.392l1.227-1.002ZM9.08 7.018l.101-1.634a.54.54 0 0 1 .539-.506l.033.001l1.633.101a.539.539 0 0 1 .505.572l-.008.118a10.674 10.674 0 0 0-.902 2.005l-1.395-.086a.54.54 0 0 1-.506-.57ZM25.594 21.07a2.988 2.988 0 0 1-3.41.837c-4.532-1.33-8.63-1.053-12.213.82l1.907-5.978l-7.203 7.64a11.67 11.67 0 0 1 3.353-8.342a11.495 11.495 0 0 1 4.107-2.691a5.42 5.42 0 0 0 2.241 1.221a4.714 4.714 0 0 0 .563.12a1.626 1.626 0 0 0 .245 1.642l.085.104a1.625 1.625 0 0 0 .259 1.605l.553.677a1.628 1.628 0 0 0 2.29.232l.332-.27a1.708 1.708 0 0 0 1.986-2.654l-1.942-2.391a4.88 4.88 0 0 0 .486-.456a12.449 12.449 0 0 1 1.383.518a11.419 11.419 0 0 1 4.508 3.684c.975 1.34 1.15 2.716.47 3.682Z"/>' }, "logo-kubernetes": { "body": '<path fill="currentColor" d="m15.134 17.189l.865.416l.863-.415l.214-.931l-.597-.747h-.961l-.599.745l.215.932zm-.917-3.309l.002.002a.524.524 0 0 0 .832-.401v-.003l.013-.007l.178-3.141a6.52 6.52 0 0 0-.633.11a6.2 6.2 0 0 0-2.973 1.617l2.575 1.826zm-1.382 2.382h.003a.524.524 0 0 0 .206-.902l-.003-.002l.003-.012l-2.351-2.104a6.178 6.178 0 0 0-.875 3.9l3.014-.87zm1.03 2.239a.523.523 0 0 0-.606-.399h-.004l-.005-.006l-3.09.525a6.205 6.205 0 0 0 2.486 3.11l1.197-2.893l-.009-.012l.001-.003a.518.518 0 0 0 .03-.322zm2.597 1.142l-.001-.002a.53.53 0 0 0-.48-.276a.527.527 0 0 0-.444.277l-.001.003h-.003l-1.52 2.748a6.228 6.228 0 0 0 3.38.172a6.6 6.6 0 0 0 .604-.168l-1.523-2.754zm2.275-1.553h-.003a.51.51 0 0 0-.12-.009a.526.526 0 0 0-.455.732v.002l-.003.006l1.21 2.923a6.185 6.185 0 0 0 2.494-3.134l-3.118-.527zm2.552-4.846l-2.338 2.092l.001.007l-.002.002a.525.525 0 0 0 .205.901h.004l.002.014l3.03.872a6.292 6.292 0 0 0-.902-3.888zm-4.35.223v.003a.516.516 0 0 0 .114.304a.524.524 0 0 0 .719.097l.002-.002l.01.004l2.558-1.814a6.23 6.23 0 0 0-3.584-1.729l.177 3.136z"/><path fill="currentColor" d="M30.38 19.038L27.903 8.27a1.906 1.906 0 0 0-1.038-1.29L16.83 2.188a1.933 1.933 0 0 0-1.666 0L5.133 6.982a1.907 1.907 0 0 0-1.038 1.29L1.619 19.04a1.89 1.89 0 0 0 .261 1.459a1.836 1.836 0 0 0 .109.151l6.944 8.634a1.924 1.924 0 0 0 1.5.716l11.135-.002a1.925 1.925 0 0 0 1.5-.715l6.942-8.635a1.891 1.891 0 0 0 .37-1.61Zm-3.81-.13a.643.643 0 0 1-.782.443h-.004l-.005-.001l-.007-.002l-.005-.002l-.057-.012a1.785 1.785 0 0 1-.098-.022a2.464 2.464 0 0 1-.359-.132c-.057-.025-.117-.052-.18-.076l-.018-.006a5.52 5.52 0 0 0-1.028-.301a.412.412 0 0 0-.296.098l-.037.025l-.002.002h-.002a8.946 8.946 0 0 0-.252-.045a7.817 7.817 0 0 1-3.459 4.351c.01.022.02.05.031.081a.935.935 0 0 0 .067.157l.002.002l-.001.003l-.017.042a.415.415 0 0 0-.03.309a5.69 5.69 0 0 0 .533.951c.037.057.075.109.112.16a2.4 2.4 0 0 1 .21.32c.016.03.037.075.055.113l.023.049a.608.608 0 1 1-1.095.517l-.022-.045a2.518 2.518 0 0 1-.052-.11a2.506 2.506 0 0 1-.121-.365c-.017-.06-.034-.121-.054-.185l-.006-.016a5.544 5.544 0 0 0-.405-.993a.418.418 0 0 0-.263-.17l-.041-.013h-.002l-.001-.002l-.06-.108l-.066-.12a7.887 7.887 0 0 1-1.027.31a7.759 7.759 0 0 1-4.51-.324l-.135.244l-.002.001a.481.481 0 0 0-.256.124a2.283 2.283 0 0 0-.336.721c-.04.117-.08.238-.128.357a3.74 3.74 0 0 0-.054.188a2.475 2.475 0 0 1-.12.362a1.57 1.57 0 0 1-.05.103l-.024.05v.002l-.002.002a.677.677 0 0 1-.595.394a.548.548 0 0 1-.24-.054a.643.643 0 0 1-.258-.86l.027-.058l.05-.104a2.53 2.53 0 0 1 .21-.322c.037-.05.075-.103.112-.158a5.82 5.82 0 0 0 .543-.976a.589.589 0 0 0-.053-.336v-.004l.107-.257a7.822 7.822 0 0 1-3.46-4.32l-.26.044v-.001l-.027-.015a.596.596 0 0 0-.316-.106a5.545 5.545 0 0 0-1.028.301l-.017.007a5.321 5.321 0 0 0-.178.073a2.495 2.495 0 0 1-.362.133c-.03.008-.07.017-.11.025l-.045.01l-.005.002l-.007.002h-.009a.608.608 0 1 1-.27-1.18h.005l.005-.002h.006l.046-.012c.04-.01.081-.02.114-.026a2.413 2.413 0 0 1 .38-.035c.064-.003.129-.006.196-.011l.015-.002a5.554 5.554 0 0 0 1.062-.177a.72.72 0 0 0 .231-.227l.024-.032l.001-.001h.002l.247-.072a7.777 7.777 0 0 1 1.224-5.413l-.19-.17v-.002l-.004-.027a.598.598 0 0 0-.115-.316a5.617 5.617 0 0 0-.892-.627a4.398 4.398 0 0 0-.171-.094a2.473 2.473 0 0 1-.327-.197a2.327 2.327 0 0 1-.09-.072l-.035-.028l-.005-.003l-.005-.004a.705.705 0 0 1-.26-.435a.573.573 0 0 1 .112-.458A.584.584 0 0 1 8 9.53a.723.723 0 0 1 .421.159l.037.028l.097.078a2.525 2.525 0 0 1 .267.276c.04.047.082.095.128.144l.01.01a5.522 5.522 0 0 0 .8.72a.416.416 0 0 0 .31.041l.042-.007h.002l.001.001c.036.026.149.107.214.151a7.727 7.727 0 0 1 3.923-2.24a7.967 7.967 0 0 1 1.082-.166l.014-.252a.649.649 0 0 0 .195-.308a5.578 5.578 0 0 0-.066-1.08l-.001-.008a3.799 3.799 0 0 0-.033-.192a2.561 2.561 0 0 1-.05-.38V6.4l.001-.05v-.017a.609.609 0 1 1 1.21 0l.002.06v.11a2.535 2.535 0 0 1-.05.38a3.938 3.938 0 0 0-.032.192l-.004.032a5.448 5.448 0 0 0-.064 1.056a.413.413 0 0 0 .162.267l.033.03l.002.001v.002c.001.044.008.184.013.264a7.79 7.79 0 0 1 2.718.756a7.881 7.881 0 0 1 2.263 1.65l.226-.161h.002l.031.002a.591.591 0 0 0 .33-.041a5.489 5.489 0 0 0 .787-.71l.022-.022c.045-.048.086-.095.127-.142a2.57 2.57 0 0 1 .27-.278c.026-.023.062-.05.097-.078l.036-.029a.609.609 0 1 1 .755.948l-.044.035c-.03.026-.063.052-.088.071a2.473 2.473 0 0 1-.327.197c-.056.03-.114.06-.173.095a5.689 5.689 0 0 0-.892.627a.415.415 0 0 0-.108.293l-.004.044v.001l-.001.001l-.091.082a9.443 9.443 0 0 0-.119.107a7.798 7.798 0 0 1 1.25 5.4l.24.07h.001l.017.026a.601.601 0 0 0 .24.233a5.595 5.595 0 0 0 1.063.176h.012c.068.007.133.01.197.012a2.462 2.462 0 0 1 .38.035c.03.006.07.016.11.026l.064.015a.643.643 0 0 1 .512.74Z"/>' }, "logo-linkedin": { "body": '<path fill="currentColor" d="M26.2 4H5.8C4.8 4 4 4.8 4 5.7v20.5c0 .9.8 1.7 1.8 1.7h20.4c1 0 1.8-.8 1.8-1.7V5.7c0-.9-.8-1.7-1.8-1.7zM11.1 24.4H7.6V13h3.5v11.4zm-1.7-13c-1.1 0-2.1-.9-2.1-2.1c0-1.2.9-2.1 2.1-2.1c1.1 0 2.1.9 2.1 2.1s-1 2.1-2.1 2.1zm15.1 12.9H21v-5.6c0-1.3 0-3.1-1.9-3.1S17 17.1 17 18.5v5.7h-3.5V13h3.3v1.5h.1c.5-.9 1.7-1.9 3.4-1.9c3.6 0 4.3 2.4 4.3 5.5v6.2z"/>' }, "logo-livestream": { "body": '<path fill="currentColor" d="M22.49 23.71h-7.54a3.12 3.12 0 0 1-2.41-1A14.91 14.91 0 0 1 10 18.88c-1.3-2.6-2.54-5.22-3.82-7.82c-.39-.8-.82-1.56-1.28-2.32A7.84 7.84 0 0 0 2 5.6h3.57a45.63 45.63 0 0 1 7 .61a8.09 8.09 0 0 1 6.34 5.09a48.51 48.51 0 0 1 2.17 7.36a26 26 0 0 0 1.41 5.05zm5.61 2.67a2.93 2.93 0 0 1-2.74-2.64a42.08 42.08 0 0 1-.14-4.9a48 48 0 0 0-.61-7.58a3.75 3.75 0 0 0-.83-2h2.65c.54 0 .73.37.89.78a12.1 12.1 0 0 1 .68 3.24c.29 2.72.31 5.45.33 8.18a10.94 10.94 0 0 0 0 1.15c.09.78.4 1.1 1.17 1.08c.5 0 .5-.06.5-.06v2.69a8.62 8.62 0 0 1-1.9.06z"/>' }, "logo-mastodon": { "body": '<path fill="currentColor" d="M29.058 11.193c0-6.074-3.98-7.855-3.98-7.855C23.072 2.417 19.626 2.03 16.047 2h-.088c-3.58.03-7.023.417-9.03 1.338c0 0-3.98 1.78-3.98 7.855c0 1.391-.027 3.054.017 4.817c.145 5.94 1.09 11.795 6.581 13.248c2.532.67 4.707.81 6.458.715c3.175-.176 4.958-1.133 4.958-1.133l-.105-2.304s-2.27.715-4.818.628c-2.525-.087-5.19-.272-5.598-3.372a6.334 6.334 0 0 1-.057-.87s2.479.607 5.62.75c1.92.088 3.722-.112 5.551-.33c3.508-.42 6.563-2.581 6.947-4.556c.605-3.112.555-7.593.555-7.593Zm-4.694 7.826H21.45V11.88c0-1.505-.633-2.268-1.9-2.268c-1.4 0-2.102.906-2.102 2.697v3.908h-2.896v-3.908c0-1.791-.702-2.697-2.102-2.697c-1.267 0-1.9.763-1.9 2.268v7.139H7.636v-7.355c0-1.503.383-2.698 1.152-3.581c.792-.884 1.83-1.337 3.12-1.337c1.49 0 2.62.573 3.366 1.72L16 9.681l.726-1.217c.746-1.146 1.876-1.719 3.367-1.719c1.288 0 2.326.453 3.12 1.337c.768.883 1.15 2.078 1.15 3.581v7.355Z"/>' }, "logo-medium": { "body": '<path fill="currentColor" d="M30 16c0 3.7-.6 6.7-1.4 6.7c-.8 0-1.4-3-1.4-6.7s.6-6.7 1.4-6.7c.8 0 1.4 3 1.4 6.7m-3.5 0c0 4.1-1.8 7.5-3.9 7.5s-3.9-3.4-3.9-7.5s1.8-7.5 3.9-7.5s3.9 3.4 3.9 7.5m-8.7 0c0 4.4-3.5 8-7.9 8S2 20.4 2 16s3.5-8 7.9-8s7.9 3.6 7.9 8"/>' }, "logo-npm": { "body": '<path fill="currentColor" d="M4 28V4h24v24H4zM8.5 8.5v15H16v-12h4.5v12h3v-15h-15z"/>' }, "logo-openshift": { "body": '<path fill="currentColor" d="M26.461 15.797a12.135 12.135 0 0 0-1.179-4.317L29 10.13a11.988 11.988 0 0 0-1.028-1.738l-1.743.635a11.988 11.988 0 0 0-21.71 7.913l1.747-.642a12.19 12.19 0 0 0 .331 1.985l-3.713 1.355A12.145 12.145 0 0 0 4.757 23.7l1.966-.716l.002.004a11.886 11.886 0 0 0 4.67 3.89a12.013 12.013 0 0 0 15.945-5.804a11.873 11.873 0 0 0 1.08-5.992Zm-2.92 3.496a7.8 7.8 0 0 1-10.353 3.775a7.72 7.72 0 0 1-2.271-1.613l-1.985.724a7.84 7.84 0 0 1-2.074-3.99l3.725-1.357a7.817 7.817 0 0 1-.123-2.066l-1.752.637A7.773 7.773 0 0 1 19.765 8.94h.006a7.744 7.744 0 0 1 2.265 1.615l1.744-.634a7.801 7.801 0 0 1 1.229 1.656l-3.71 1.36a7.824 7.824 0 0 1 .977 4.388l1.968-.716a7.671 7.671 0 0 1-.703 2.684Z"/>' }, "logo-pinterest": { "body": '<path fill="currentColor" d="M16 2a14 14 0 0 0-5.1 27a13.24 13.24 0 0 1 0-4l1.65-7a5.05 5.05 0 0 1-.38-2c0-1.94 1.13-3.4 2.53-3.4a1.76 1.76 0 0 1 1.77 2c0 1.2-.76 3-1.16 4.66a2 2 0 0 0 2.08 2.53c2.48 0 4.4-2.63 4.4-6.41a5.53 5.53 0 0 0-5.85-5.7a6.06 6.06 0 0 0-6.32 6.08a5.42 5.42 0 0 0 1 3.19a.44.44 0 0 1 .1.4c-.11.44-.35 1.4-.39 1.59s-.21.31-.47.19c-1.75-.82-2.84-3.37-2.84-5.43c0-4.41 3.21-8.47 9.25-8.47c4.85 0 8.63 3.46 8.63 8.09c0 4.82-3 8.7-7.27 8.7a3.76 3.76 0 0 1-3.21-1.6l-.87 3.33a15.55 15.55 0 0 1-1.74 3.67A14.17 14.17 0 0 0 16 30a14 14 0 0 0 0-28"/>' }, "logo-python": { "body": '<path fill="currentColor" d="M23.488 9.14v2.966a4.284 4.284 0 0 1-4.173 4.236h-6.672a3.408 3.408 0 0 0-3.34 3.394v6.36c0 1.81 1.574 2.876 3.34 3.395a11.176 11.176 0 0 0 6.672 0c1.682-.487 3.34-1.467 3.34-3.394V23.55h-6.672v-.849h10.012c1.941 0 2.665-1.354 3.34-3.386a11.464 11.464 0 0 0 0-6.79c-.48-1.932-1.396-3.386-3.34-3.386Zm-3.752 16.108a1.273 1.273 0 1 1-1.254 1.269a1.26 1.26 0 0 1 1.254-1.27Z"/><path fill="none" d="M19.736 25.248a1.273 1.273 0 1 1-1.254 1.269a1.26 1.26 0 0 1 1.254-1.27Z"/><path fill="currentColor" d="M15.835 2a19.072 19.072 0 0 0-3.192.273c-2.827.499-3.34 1.544-3.34 3.472V8.29h6.68v.849H6.796a4.17 4.17 0 0 0-4.173 3.387a12.486 12.486 0 0 0 0 6.789c.475 1.977 1.609 3.386 3.55 3.386H8.47V19.65a4.245 4.245 0 0 1 4.173-4.15h6.672a3.365 3.365 0 0 0 3.34-3.394V5.745a3.729 3.729 0 0 0-3.34-3.472A20.838 20.838 0 0 0 15.835 2Zm-3.612 2.048a1.273 1.273 0 1 1-1.254 1.277a1.268 1.268 0 0 1 1.254-1.277Z"/><path fill="none" d="M12.223 4.048a1.273 1.273 0 1 1-1.254 1.277a1.268 1.268 0 0 1 1.254-1.277Z"/>' }, "logo-quora": { "body": '<path fill="currentColor" d="M29 23.86h-2a1.72 1.72 0 0 1-1.73 1.72c-1.15 0-1.82-.86-2.58-2a11 11 0 0 0 4.79-9.1c.09-7.19-5.85-11.89-12.17-11.89S3 7.37 3 14.37s6 11.79 12.17 11.79a10.71 10.71 0 0 0 3.07-.48c1.15 2.11 2.59 3.74 5.46 3.74a5 5 0 0 0 5.3-5.56Zm-8.14-3.45a6.31 6.31 0 0 0-5.56-3.16a6 6 0 0 0-3.74 1.15l.64 1.6a2.56 2.56 0 0 1 .86-.1c1.82 0 3 1.53 4.12 3.64a7.58 7.58 0 0 1-1.91.19C10.86 23.76 9 20.6 9 14.47s1.91-9.3 6.23-9.3s6.32 3.16 6.32 9.3a20.68 20.68 0 0 1-.72 5.94Z"/>' }, "logo-r-script": { "body": '<path fill="currentColor" fill-rule="evenodd" d="M30 14.784c0-5.178-6.268-9.376-14-9.376S2 9.606 2 14.784c0 4.615 4.981 8.442 11.536 9.223v2.991l4.776-.001v-2.974a19.381 19.381 0 0 0 3.342-.665L23.593 27l5.397-.002l-3.252-5.485C28.363 19.809 30 17.426 30 14.784Zm-22.498.7c0-3.54 4.764-6.41 10.641-6.41s10.214 1.963 10.214 6.41a5.47 5.47 0 0 1-3.398 5.126a3.225 3.225 0 0 0-.298-.175a10.473 10.473 0 0 0-1.34-.505s4.174-.31 4.174-4.466s-4.368-4.234-4.368-4.234h-9.59v10.025c-3.567-1.035-6.035-3.227-6.035-5.771Zm13.742 1.845l-2.893.001l.001-2.68h2.892a1.248 1.248 0 0 1 1.34 1.316a1.323 1.323 0 0 1-1.34 1.363Zm-2.933 3.495h1.283a.878.878 0 0 1 .64.291a3.292 3.292 0 0 1 .51.63a22.403 22.403 0 0 1-2.432.145Z"/>' }, "logo-react": { "body": '<path fill="currentColor" d="m25 11.6l-.9-.3c0-.2.1-.4.1-.6c.7-3.3.2-6-1.3-6.9c-1.5-.8-3.9 0-6.3 2.1c-.2.2-.5.4-.7.6c-.2-.1-.3-.3-.5-.4C13 3.9 10.5 3 9 3.9c-1.5.8-1.9 3.4-1.3 6.5c.1.3.1.6.2.9c-.4.1-.7.2-1 .3c-3 1-4.9 2.7-4.9 4.3c0 1.7 2 3.5 5.1 4.5c.2.1.5.2.8.2c-.1.3-.2.7-.2 1c-.6 3.1-.1 5.5 1.3 6.4c1.5.9 4 0 6.5-2.2c.2-.2.4-.4.6-.5c.2.2.5.5.8.7c2.4 2.1 4.7 2.9 6.2 2c1.5-.9 2-3.5 1.4-6.7c0-.2-.1-.5-.2-.8c.2-.1.4-.1.5-.2c3.2-1.1 5.3-2.8 5.3-4.5c-.1-1.5-2.1-3.1-5.1-4.2zm-7.5-4.7c2.1-1.8 4-2.5 4.9-2c.9.5 1.3 2.7.7 5.6c0 .2-.1.4-.1.6c-1.2-.3-2.5-.5-3.7-.6c-.7-1-1.5-2-2.4-3l.6-.6zm-7.2 10.5c.3.5.5 1 .8 1.5c.3.5.6 1 .9 1.4c-.9-.1-1.7-.2-2.6-.4c.2-.8.5-1.6.9-2.5zm0-2.8c-.4-.8-.6-1.6-.9-2.4c.8-.2 1.7-.3 2.5-.4c-.3.5-.6.9-.9 1.4c-.2.4-.5.9-.7 1.4zm.6 1.4c.4-.8.8-1.5 1.2-2.3c.4-.7.9-1.5 1.4-2.2c.8-.1 1.7-.1 2.6-.1c.9 0 1.7 0 2.6.1c.5.7.9 1.4 1.3 2.2c.4.7.8 1.5 1.2 2.3c-.4.8-.8 1.5-1.2 2.3c-.4.7-.9 1.5-1.3 2.2c-.8.1-1.7.1-2.6.1c-.9 0-1.7 0-2.5-.1c-.5-.7-.9-1.4-1.4-2.2c-.5-.8-.9-1.5-1.3-2.3zm10 2.9c.3-.5.6-1 .8-1.5c.4.8.7 1.6.9 2.5c-.9.2-1.7.3-2.6.4c.4-.5.7-1 .9-1.4zm.8-4.3c-.3-.5-.5-1-.8-1.5c-.3-.5-.6-.9-.8-1.4c.9.1 1.7.3 2.6.4c-.3.9-.6 1.7-1 2.5zM16 8.3c.6.6 1.1 1.3 1.6 2c-1.1-.1-2.2-.1-3.3 0c.6-.7 1.2-1.4 1.7-2zM9.6 4.9c.9-.5 3 .2 5.2 2.2l.4.4c-.9.9-1.7 1.9-2.4 3c-1.3.1-2.5.3-3.7.6c-.1-.3-.1-.6-.2-.9c-.6-2.7-.2-4.8.7-5.3zM8.2 19.6c-.2-.1-.5-.1-.7-.2c-1.4-.5-2.5-1.1-3.3-1.7c-.7-.6-1-1.2-1-1.7c0-1 1.5-2.3 4.1-3.2c.3-.1.6-.2 1-.3c.3 1.2.7 2.4 1.3 3.5c-.6 1.2-1 2.4-1.4 3.6zm6.5 5.5c-1.1 1-2.2 1.6-3.1 2c-.9.3-1.5.3-2 .1c-.9-.5-1.3-2.5-.8-5.1c.1-.4.2-.7.2-1.1c1.2.3 2.5.5 3.8.5c.7 1 1.5 2 2.4 3c-.2.2-.3.4-.5.6zm1.3-1.4c-.6-.6-1.1-1.3-1.7-2h3.3c-.4.7-1 1.4-1.6 2zm7.3 1.7c-.2.9-.5 1.5-.9 1.7c-.9.5-2.8-.2-4.8-1.9c-.2-.2-.5-.4-.7-.6c.8-.9 1.6-1.9 2.3-3c1.3-.1 2.5-.3 3.8-.6c.1.2.1.5.2.7c.3 1.4.3 2.7.1 3.7zm1-6c-.2 0-.3.1-.5.1c-.4-1.2-.9-2.4-1.4-3.6c.5-1.1 1-2.3 1.4-3.5c.3.1.6.2.8.3c2.6.9 4.2 2.2 4.2 3.2c0 1.2-1.7 2.6-4.5 3.5z"/><path fill="currentColor" d="M16 18.5c.5 0 1-.1 1.4-.4c.4-.3.7-.7.9-1.1c.2-.5.2-1 .1-1.5s-.3-.9-.7-1.3c-.3-.4-.8-.6-1.3-.7c-.5-.1-1 0-1.5.1c-.5.2-.9.5-1.1.9c-.3.4-.4.9-.4 1.4c0 .3.1.7.2 1c.1.3.3.6.5.8c.2.2.5.4.8.5c.4.2.8.3 1.1.3z"/>' }, "logo-red-hat-ansible": { "body": '<path fill="currentColor" d="m21.91 20.586l-5-11a1.001 1.001 0 0 0-1.82 0l-5 11a1 1 0 0 0 1.82.828l1.999-4.396l6.498 4.787a1 1 0 0 0 1.504-1.22ZM16 12.417l2.499 5.498l-3.744-2.759L16 12.416Z"/><path fill="currentColor" d="M16 30C8.28 30 2 23.72 2 16S8.28 2 16 2s14 6.28 14 14s-6.28 14-14 14Zm0-26C9.383 4 4 9.383 4 16s5.383 12 12 12s12-5.383 12-12S22.617 4 16 4Z"/>' }, "logo-sketch": { "body": '<path fill="currentColor" d="m16.1 3.2l7.7.9c.2 0 .3.1.4.2l5.7 7.7c.2.2.2.5 0 .7l-13.6 16c-.1.1-.3.1-.4 0l-13.6-16c-.3-.2-.3-.5-.2-.7l5.7-7.7c.1-.1.2-.2.4-.2l7.7-.9h.2zm1.6 1.6h-.2s-.1.1 0 .2l4.3 5.4c0 .1.1.1.1.2c0 .2-.1.3-.3.3H10.4c-.1 0-.1 0-.2-.1s-.1-.3-.1-.4L14.5 5v-.2h-.2l-5.9 5.9s-.1.1-.2.1s-.2-.1-.2-.2l.2-4.3c0-.1 0-.1-.1-.1s-.1 0-.1.1l-1.1 4.9c0 .2-.2.3-.3.3l-2.8.6c-.1 0-.1.1-.1.1c0 .1 0 .1.1.1h2.7c.2 0 .3.1.4.2l6.6 11.8c0 .1.1.1.2.1s.1-.1.1-.2L8.6 12.9v-.1c0-.2.1-.3.3-.4h14.4c.2.1.2.3.2.4l-5.3 11.3c0 .1 0 .2.1.2s.2 0 .2-.1L25 12.6c.1-.1.2-.2.4-.2h2.7c.1 0 .1 0 .1-.1s0-.1-.1-.1l-2.8-.6c-.2 0-.3-.2-.4-.3l-.9-5c0-.1-.1-.1-.1-.1c-.1 0-.1 0-.1.1l.2 4.3c0 .1 0 .1-.1.2s-.2.1-.3 0l-5.9-6z"/>' }, "logo-skype": { "body": '<path fill="currentColor" d="M27.91 17.88a11.63 11.63 0 0 0 .15-1.88A12.06 12.06 0 0 0 16 3.94a11.63 11.63 0 0 0-1.88.15a7.29 7.29 0 0 0-10 10A11.63 11.63 0 0 0 3.94 16A12.06 12.06 0 0 0 16 28.06a11.63 11.63 0 0 0 1.88-.15a7.29 7.29 0 0 0 10-10Zm-6.18 3.6a5 5 0 0 1-2.24 1.73a9 9 0 0 1-3.48.62A8.41 8.41 0 0 1 12 23a5.2 5.2 0 0 1-1.82-1.63a3.59 3.59 0 0 1-.7-2a1.36 1.36 0 0 1 .43-1A1.56 1.56 0 0 1 11 18a1.38 1.38 0 0 1 .91.32a2.5 2.5 0 0 1 .63.94a5.83 5.83 0 0 0 .66 1.18a2.61 2.61 0 0 0 1 .78a3.87 3.87 0 0 0 1.69.31a4 4 0 0 0 2.34-.62a1.8 1.8 0 0 0 .89-1.53a1.54 1.54 0 0 0-.47-1.17a3.09 3.09 0 0 0-1.25-.7c-.52-.17-1.21-.34-2.08-.53a16 16 0 0 1-2.91-.98a4.78 4.78 0 0 1-1.89-1.4a3.5 3.5 0 0 1-.7-2.21a3.65 3.65 0 0 1 .74-2.24a4.7 4.7 0 0 1 2.14-1.5a9.51 9.51 0 0 1 3.3-.48a8.63 8.63 0 0 1 2.59.35a5.81 5.81 0 0 1 1.83.92a3.91 3.91 0 0 1 1.06 1.21a2.62 2.62 0 0 1 .34 1.25a1.4 1.4 0 0 1-.43 1a1.43 1.43 0 0 1-1.07.46a1.25 1.25 0 0 1-.89-.28a3.36 3.36 0 0 1-.65-.87a3.79 3.79 0 0 0-1.05-1.31a3.13 3.13 0 0 0-1.95-.46a3.64 3.64 0 0 0-2 .5a1.44 1.44 0 0 0-.76 1.2a1.15 1.15 0 0 0 .25.75a2.21 2.21 0 0 0 .72.55a4.74 4.74 0 0 0 .92.36c.32.09.84.22 1.57.39c.92.2 1.74.42 2.49.66a7.61 7.61 0 0 1 1.9.88a3.59 3.59 0 0 1 1.23 1.31a4 4 0 0 1 .4 1.96a4.24 4.24 0 0 1-.77 2.48Z"/>' }, "logo-slack": { "body": '<path fill="currentColor" d="M9.042 19.166a2.521 2.521 0 1 1-2.52-2.521h2.52zm1.27 0a2.521 2.521 0 0 1 5.043 0v6.313a2.521 2.521 0 1 1-5.042 0zm2.522-10.124a2.521 2.521 0 1 1 2.521-2.52v2.52zm0 1.27a2.521 2.521 0 0 1 0 5.043H6.52a2.521 2.521 0 1 1 0-5.042zm10.124 2.522a2.521 2.521 0 1 1 2.52 2.521h-2.52zm-1.27 0a2.521 2.521 0 0 1-5.043 0V6.52a2.521 2.521 0 1 1 5.042 0zm-2.522 10.124a2.521 2.521 0 1 1-2.521 2.52v-2.52zm0-1.27a2.521 2.521 0 0 1 0-5.043h6.313a2.521 2.521 0 1 1 0 5.042z"/>' }, "logo-snapchat": { "body": '<path fill="currentColor" d="M27.977 9.628a7.33 7.33 0 0 0-.118-1.289a5.246 5.246 0 0 0-.487-1.495a5.187 5.187 0 0 0-1-1.332a4.956 4.956 0 0 0-2.18-1.243a8.844 8.844 0 0 0-2.306-.246l-.004-.012H10.114v.012a12.578 12.578 0 0 0-1.323.059A6.295 6.295 0 0 0 7.38 4.4a5.115 5.115 0 0 0-3.125 3.415a8.8 8.8 0 0 0-.246 2.286L4 21.907a14.92 14.92 0 0 0 .109 1.599A5.53 5.53 0 0 0 4.6 25.12a5.17 5.17 0 0 0 1.443 1.744a4.69 4.69 0 0 0 1.444.783a7.83 7.83 0 0 0 2.374.348c.504.003 1.007.016 1.51.014c3.66-.016 7.319.026 10.978-.023a8.632 8.632 0 0 0 1.44-.153a4.877 4.877 0 0 0 2.411-1.172a4.992 4.992 0 0 0 1.593-2.654a9.665 9.665 0 0 0 .207-2.1v-.141c0-.055-.02-11.98-.023-12.138Zm-3.213 11.105c-.154.36-.93.657-2.244.86c-.123.02-.175.219-.246.545c-.03.135-.06.267-.1.405a.245.245 0 0 1-.26.195h-.02a2.101 2.101 0 0 1-.374-.047a4.921 4.921 0 0 0-.986-.105a4.37 4.37 0 0 0-.71.06a3.405 3.405 0 0 0-1.349.689a3.912 3.912 0 0 1-2.366.933c-.05 0-.098-.002-.134-.004a1.063 1.063 0 0 1-.088.004a3.906 3.906 0 0 1-2.365-.932a3.412 3.412 0 0 0-1.35-.69a4.361 4.361 0 0 0-.71-.06a4.858 4.858 0 0 0-.985.111a2.187 2.187 0 0 1-.374.054a.257.257 0 0 1-.28-.202a5.135 5.135 0 0 1-.1-.408c-.072-.328-.124-.528-.247-.547c-1.313-.203-2.09-.501-2.244-.863a.335.335 0 0 1-.027-.114a.21.21 0 0 1 .176-.22a4.585 4.585 0 0 0 2.757-1.639a6.168 6.168 0 0 0 .94-1.461l.004-.01a.943.943 0 0 0 .09-.79c-.169-.4-.73-.577-1.1-.695a3.842 3.842 0 0 1-.25-.084c-.328-.13-.868-.404-.796-.783a.733.733 0 0 1 .712-.468a.505.505 0 0 1 .216.043a2.157 2.157 0 0 0 .892.235a.747.747 0 0 0 .513-.157q-.014-.263-.032-.525a8.874 8.874 0 0 1 .212-3.545a4.607 4.607 0 0 1 4.278-2.758l.354-.003a4.615 4.615 0 0 1 4.285 2.76a8.884 8.884 0 0 1 .212 3.548l-.003.057l-.028.467a.722.722 0 0 0 .466.156a2.232 2.232 0 0 0 .84-.234a.663.663 0 0 1 .275-.055a.832.832 0 0 1 .313.06l.005.002a.583.583 0 0 1 .44.478c.004.184-.132.458-.803.723a4.055 4.055 0 0 1-.249.084c-.371.118-.931.296-1.1.695a.942.942 0 0 0 .09.789l.004.01a5.431 5.431 0 0 0 3.697 3.1a.211.211 0 0 1 .176.22a.34.34 0 0 1-.027.116Z"/><path fill="none" d="M24.764 20.733c-.154.36-.93.657-2.244.86c-.123.02-.175.219-.246.545c-.03.135-.06.267-.1.405a.245.245 0 0 1-.26.195h-.02a2.101 2.101 0 0 1-.374-.047a4.921 4.921 0 0 0-.986-.105a4.37 4.37 0 0 0-.71.06a3.405 3.405 0 0 0-1.349.689a3.912 3.912 0 0 1-2.366.933c-.05 0-.098-.002-.134-.004a1.063 1.063 0 0 1-.088.004a3.906 3.906 0 0 1-2.365-.932a3.412 3.412 0 0 0-1.35-.69a4.361 4.361 0 0 0-.71-.06a4.858 4.858 0 0 0-.985.111a2.187 2.187 0 0 1-.374.054a.257.257 0 0 1-.28-.202a5.135 5.135 0 0 1-.1-.408c-.072-.328-.124-.528-.247-.547c-1.313-.203-2.09-.501-2.244-.863a.335.335 0 0 1-.027-.114a.21.21 0 0 1 .176-.22a4.585 4.585 0 0 0 2.757-1.639a6.168 6.168 0 0 0 .94-1.461l.004-.01a.943.943 0 0 0 .09-.79c-.169-.4-.73-.577-1.1-.695a3.842 3.842 0 0 1-.25-.084c-.328-.13-.868-.404-.796-.783a.733.733 0 0 1 .712-.468a.505.505 0 0 1 .216.043a2.157 2.157 0 0 0 .892.235a.747.747 0 0 0 .513-.157q-.014-.263-.032-.525a8.874 8.874 0 0 1 .212-3.545a4.607 4.607 0 0 1 4.278-2.758l.354-.003a4.615 4.615 0 0 1 4.285 2.76a8.884 8.884 0 0 1 .212 3.548l-.003.057l-.028.467a.722.722 0 0 0 .466.156a2.232 2.232 0 0 0 .84-.234a.663.663 0 0 1 .275-.055a.832.832 0 0 1 .313.06l.005.002a.583.583 0 0 1 .44.478c.004.184-.132.458-.803.723a4.055 4.055 0 0 1-.249.084c-.371.118-.931.296-1.1.695a.942.942 0 0 0 .09.789l.004.01a5.431 5.431 0 0 0 3.697 3.1a.211.211 0 0 1 .176.22a.34.34 0 0 1-.027.116Z"/>' }, "logo-stumbleupon": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-.09 10.45a.84.84 0 0 0-.84.84v5.14a3.55 3.55 0 0 1-7.1 0v-2.34h2.71v2.24a.84.84 0 0 0 1.68 0v-5a3.55 3.55 0 0 1 7.09 0v1l-1.58.51l-1.12-.51v-1a.85.85 0 0 0-.84-.88Zm7.93 6a3.55 3.55 0 0 1-7.09 0v-2.31l1.12.51l1.58-.51v2.29a.84.84 0 0 0 1.68 0v-2.24h2.71Z"/>', "hidden": true }, "logo-svelte": { "body": '<path fill="currentColor" d="M26.1 5.7C23.5 2 18.4.9 14.7 3.2L8.2 7.4c-1.8 1.1-3 2.9-3.4 5c-.3 1.7 0 3.5.8 5.1c-.6.8-.9 1.8-1.1 2.8c-.4 2.1.1 4.3 1.4 6c2.6 3.7 7.7 4.8 11.4 2.5l6.5-4.2c1.8-1.1 3-2.9 3.4-5c.3-1.7 0-3.5-.8-5.1c.6-.8.9-1.8 1.1-2.8c.4-2.1-.1-4.3-1.4-6zM24.3 11c0 .2-.1.4-.2.6l-.1.4l-.3-.2c-.8-.6-1.6-1-2.6-1.3l-.2-.1v-.2c0-.3-.1-.7-.3-1c-.4-.5-1-.8-1.7-.6c-.1 0-.3.1-.4.2L12 12.9c-.3.2-.5.5-.6.9c-.1.4 0 .8.2 1.1c.4.5 1 .8 1.7.6c.1 0 .3-.1.4-.2l2.5-1.6c.4-.3.9-.5 1.3-.6c2.1-.5 4.3.3 5.6 2.1c.7 1 1 2.4.8 3.6c-.2 1.2-1 2.3-2 3L15.4 26c-.4.3-.9.5-1.3.6c-2.1.5-4.3-.3-5.6-2.1c-.7-1-1-2.4-.8-3.6c0-.2.1-.4.2-.6L8 20l.3.2c.8.6 1.6 1 2.6 1.3l.2.1v.2c0 .3.1.7.3 1c.4.5 1 .8 1.7.6c.1 0 .3-.1.4-.2L20 19c.3-.2.5-.5.6-.9c.1-.4 0-.8-.2-1.1c-.4-.5-1-.8-1.7-.6c-.1 0-.3.1-.4.2l-2.5 1.6c-.4.3-.9.5-1.3.6c-2.1.5-4.3-.3-5.6-2.1c-.8-1-1-2.4-.8-3.6c.2-1.2 1-2.3 2-3l6.5-4.2c.4-.3.9-.5 1.3-.6c2.1-.5 4.3.3 5.6 2.1c.7 1.1 1 2.4.8 3.6z"/>' }, "logo-tumblr": { "body": '<path fill="currentColor" d="M22.6 28h-4c-3.59 0-6.3-1.86-6.3-6.3v-7.12H9v-3.86A7.17 7.17 0 0 0 14.3 4h3.76v6.12h4.36v4.46h-4.36v6.2c0 1.86.94 2.49 2.42 2.49h2.12Z"/>' }, "logo-twitter": { "body": '<path fill="currentColor" d="M11.547 25.752c9.057 0 14.01-7.503 14.01-14.01c0-.213 0-.425-.014-.636A10.017 10.017 0 0 0 28 8.556a9.827 9.827 0 0 1-2.828.776a4.942 4.942 0 0 0 2.164-2.724a9.866 9.866 0 0 1-3.126 1.195a4.929 4.929 0 0 0-8.392 4.491A13.98 13.98 0 0 1 5.67 7.15a4.928 4.928 0 0 0 1.525 6.573a4.887 4.887 0 0 1-2.235-.617v.063a4.926 4.926 0 0 0 3.95 4.827a4.917 4.917 0 0 1-2.223.084a4.93 4.93 0 0 0 4.6 3.42A9.88 9.88 0 0 1 4 23.54a13.94 13.94 0 0 0 7.547 2.209"/>' }, "logo-vmware": { "body": '<path fill="currentColor" d="M3.4 11C3 10.1 2 9.7 1 10.2s-1.3 1.4-.9 2.3l4 8.5c.6 1.3 1.3 2 2.5 2c1.3 0 1.9-.8 2.5-2c0 0 3.4-7.4 3.4-7.5c0-.1.1-.3.5-.3c.3 0 .5.2.5.6V21c0 1.1.6 2 1.8 2s1.8-.9 1.8-2v-6c0-1.1.8-1.9 1.9-1.9c1.1 0 1.9.8 1.9 1.9v6c0 1.1.6 2 1.8 2s1.8-.9 1.8-2v-6c0-1.1.8-1.9 1.9-1.9c1.1 0 1.9.8 1.9 1.9v6c0 1.1.6 2 1.8 2s1.8-.9 1.8-2v-6.8c0-2.5-2-4.2-4.4-4.2s-3.9 1.7-3.9 1.7c-.8-1-1.9-1.7-3.8-1.7c-2 0-3.7 1.7-3.7 1.7c-.8-1-2.2-1.7-3.3-1.7c-1.7 0-3.1.8-4 2.7l-2.5 5.9L3.4 11"/>' }, "logo-vmware-alt": { "body": '<path fill="currentColor" d="m22.413 19.11l-1.915-5.536a2 2 0 0 1-.1-.541c0-.511.41-1.013 1.072-1.013c.552 0 .923.351 1.083.863l1.204 3.98l1.233-3.97c.16-.532.572-.893 1.143-.893h.13c.572 0 .984.371 1.144.893l1.244 3.98l1.233-4.01c.15-.472.481-.853 1.073-.853c.612 0 1.043.471 1.043 1.023c0 .15-.04.351-.07.451l-2.006 5.626c-.23.692-.692.993-1.233.993h-.07c-.542 0-.993-.311-1.204-.953l-1.243-3.95l-1.264 3.95c-.2.642-.662.953-1.203.953h-.07c-.532 0-.993-.311-1.224-.993zm-20.32-6.465c-.246-.553-.868-.8-1.451-.543c-.583.256-.79.899-.533 1.452l2.43 5.284c.385.83.79 1.265 1.54 1.265c.81 0 1.166-.474 1.541-1.265c0 0 2.124-4.623 2.144-4.672a.306.306 0 0 1 .306-.198c.188 0 .336.149.336.346v4.524c0 .692.385 1.265 1.126 1.265s1.146-.573 1.146-1.265v-3.694c0-.711.513-1.176 1.205-1.176s1.155.475 1.155 1.176v3.694c0 .692.386 1.265 1.127 1.265s1.145-.573 1.145-1.265v-3.694c0-.711.514-1.176 1.205-1.176s1.156.475 1.156 1.176v3.694c0 .692.385 1.265 1.126 1.265s1.146-.573 1.146-1.265V14.63c0-1.55-1.245-2.627-2.736-2.627s-2.43 1.037-2.43 1.037c-.494-.642-1.185-1.037-2.341-1.037c-1.225 0-2.301 1.037-2.301 1.037c-.504-.642-1.344-1.037-2.045-1.037c-1.087 0-1.946.474-2.47 1.679l-1.55 3.665l-1.976-4.702"/>' }, "logo-vue": { "body": '<path fill="currentColor" d="M24.9 3.9L16 19.4L7.1 3.9H2l14 24.3L30 3.9h-5.1z"/><path fill="currentColor" d="m16 9.5l-3.2-5.6H8.1L16 17.5l7.9-13.6h-4.6L16 9.5z"/>' }, "logo-wechat": { "body": '<path fill="currentColor" fill-rule="evenodd" d="M27.086 24.78A6.618 6.618 0 0 0 30 19.465c0-3.88-3.776-7.027-8.434-7.027s-8.434 3.147-8.434 7.027s3.777 7.028 8.434 7.028a9.955 9.955 0 0 0 2.754-.385l.247-.037a.892.892 0 0 1 .448.13l1.847 1.066l.162.053a.281.281 0 0 0 .281-.282l-.045-.205l-.38-1.417l-.03-.18a.56.56 0 0 1 .236-.458ZM12.12 4.68C6.53 4.68 2 8.455 2 13.114a7.939 7.939 0 0 0 3.497 6.374a.671.671 0 0 1 .283.55l-.035.215l-.456 1.701l-.055.246a.338.338 0 0 0 .337.338l.196-.063l2.216-1.28a1.058 1.058 0 0 1 .536-.155l.298.044a11.967 11.967 0 0 0 3.304.464l.555-.014a6.515 6.515 0 0 1-.34-2.067c0-4.247 4.133-7.691 9.23-7.691l.55.014c-.762-4.029-4.947-7.11-9.995-7.11Zm6.633 13.663a1.125 1.125 0 1 1 1.125-1.125a1.124 1.124 0 0 1-1.125 1.125Zm5.624 0a1.125 1.125 0 1 1 1.123-1.125a1.125 1.125 0 0 1-1.123 1.125Zm-15.631-6.58a1.35 1.35 0 1 1 1.35-1.348a1.349 1.349 0 0 1-1.35 1.349Zm6.747 0a1.35 1.35 0 1 1 1.35-1.348a1.349 1.349 0 0 1-1.35 1.349Z"/>' }, "logo-xing": { "body": '<path fill="currentColor" d="M11.42 8.29a1.25 1.25 0 0 0-1.13-.76h-4a.65.65 0 0 0-.55.25a.63.63 0 0 0 0 .62l2.73 4.73l-4.3 7.59a.6.6 0 0 0 0 .62a.58.58 0 0 0 .52.28h4a1.22 1.22 0 0 0 1.1-.78l4.36-7.71l-2.73-4.84Zm16.41-5.41a.65.65 0 0 0 0-.62a.61.61 0 0 0-.53-.26h-4.08a1.19 1.19 0 0 0-1.08.77s-8.7 15.43-9 15.93l5.74 10.53A1.26 1.26 0 0 0 20 30h4a.59.59 0 0 0 .54-.26a.62.62 0 0 0 0-.62l-5.69-10.4Z"/>' }, "logo-yelp": { "body": '<path fill="currentColor" fill-rule="evenodd" d="m8.509 15.184l5.06 2.468c.973.475.823 1.906-.228 2.168l-5.462 1.362c-.681.17-1.354-.3-1.434-.998a9.986 9.986 0 0 1 .456-4.33a1.16 1.16 0 0 1 1.608-.67zM10.535 25.6l3.766-4.183c.724-.805 2.059-.265 2.02.817l-.196 5.627a1.161 1.161 0 0 1-1.353 1.104a10.078 10.078 0 0 1-4.033-1.632a1.16 1.16 0 0 1-.204-1.733zm8.929-5.566l5.353 1.74c.666.216.991.97.69 1.602a10.078 10.078 0 0 1-2.677 3.43a1.161 1.161 0 0 1-1.724-.28l-2.984-4.775c-.574-.918.312-2.052 1.342-1.717zm5.444-3.415l-5.411 1.552c-1.041.298-1.887-.866-1.282-1.764l3.149-4.667a1.16 1.16 0 0 1 1.727-.224a9.986 9.986 0 0 1 2.56 3.522a1.162 1.162 0 0 1-.743 1.581zM12.264 3.489c-.974.26-1.903.605-2.782 1.024A1.16 1.16 0 0 0 8.98 6.14l5.289 9.16c.593 1.028 2.164.607 2.164-.58V4.143a1.16 1.16 0 0 0-1.248-1.158c-.97.077-1.947.243-2.921.504z"/>' }, "logo-youtube": { "body": '<path fill="currentColor" d="M29.41 9.26a3.5 3.5 0 0 0-2.47-2.47C24.76 6.2 16 6.2 16 6.2s-8.76 0-10.94.59a3.5 3.5 0 0 0-2.47 2.47A36.13 36.13 0 0 0 2 16a36.13 36.13 0 0 0 .59 6.74a3.5 3.5 0 0 0 2.47 2.47c2.18.59 10.94.59 10.94.59s8.76 0 10.94-.59a3.5 3.5 0 0 0 2.47-2.47A36.13 36.13 0 0 0 30 16a36.13 36.13 0 0 0-.59-6.74ZM13.2 20.2v-8.4l7.27 4.2Z"/>' }, "logout": { "body": '<path fill="currentColor" d="M6 30h12a2.002 2.002 0 0 0 2-2v-3h-2v3H6V4h12v3h2V4a2.002 2.002 0 0 0-2-2H6a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2Z"/><path fill="currentColor" d="M20.586 20.586L24.172 17H10v-2h14.172l-3.586-3.586L22 10l6 6l-6 6l-1.414-1.414z"/>' }, "loop": { "body": '<path fill="currentColor" d="M23.59 19.41L26 22h-5v2h5l-2.41 2.59L25 28l5-5l-5-5l-1.41 1.41zM13 6a9 9 0 0 0-7.48 14l1.66-1.11A7 7 0 1 1 13 22H2v2h11a9 9 0 0 0 0-18z"/>' }, "mac-command": { "body": '<path fill="currentColor" d="M24 13a4 4 0 0 0 4-4V8a4 4 0 0 0-4-4h-1a4 4 0 0 0-4 4v3h-6V8a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v1a4 4 0 0 0 4 4h3v6H8a4 4 0 0 0-4 4v1a4 4 0 0 0 4 4h1a4 4 0 0 0 4-4v-3h6v3a4 4 0 0 0 4 4h1a4 4 0 0 0 4-4v-1a4 4 0 0 0-4-4h-3v-6Zm-3-5a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2v1a2 2 0 0 1-2 2h-3ZM8 11a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h1a2 2 0 0 1 2 2v3H8Zm3 13a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2v-1a2 2 0 0 1 2-2h3Zm8-5h-6v-6h6Zm2 2h3a2 2 0 0 1 2 2v1a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2Z"/>' }, "mac-option": { "body": '<path fill="currentColor" d="M18 5h10v2H18zm-7.4 0H4v2h5.4l9 20H28v-2h-8.4z"/>' }, "mac-shift": { "body": '<path fill="currentColor" d="M21 28H11a2.002 2.002 0 0 1-2-2V16H4a1 1 0 0 1-.707-1.707l12-12a1 1 0 0 1 1.414 0l12 12A1 1 0 0 1 28 16h-5v10a2.003 2.003 0 0 1-2 2ZM6.414 14H11v12h10V14h4.586L16 4.414Z"/>' }, "machine-learning": { "body": '<path fill="currentColor" d="M16 25a6.99 6.99 0 0 1-5.833-3.129l1.666-1.107a5 5 0 0 0 8.334 0l1.666 1.107A6.99 6.99 0 0 1 16 25zm4-11a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2zm-8 0a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2z"/><path fill="currentColor" d="M30 16v-2h-2v-4a4.005 4.005 0 0 0-4-4h-2V2h-2v4h-8V2h-2v4H8a4.005 4.005 0 0 0-4 4v4H2v2h2v5H2v2h2v3a4.005 4.005 0 0 0 4 4h16a4.005 4.005 0 0 0 4-4v-3h2v-2h-2v-5Zm-4 10a2.002 2.002 0 0 1-2 2H8a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2Z"/>' }, "machine-learning-model": { "body": '<path fill="currentColor" d="M27 24a2.96 2.96 0 0 0-1.285.3l-4.3-4.3H18v2h2.586l3.715 3.715A2.966 2.966 0 0 0 24 27a3 3 0 1 0 3-3zm0 4a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm0-15a2.995 2.995 0 0 0-2.816 2H18v2h6.184A2.995 2.995 0 1 0 27 13zm0 4a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm0-15a3.003 3.003 0 0 0-3 3a2.966 2.966 0 0 0 .348 1.373L20.596 10H18v2h3.404l4.4-4.252A2.999 2.999 0 1 0 27 2zm0 4a1 1 0 1 1 1-1a1 1 0 0 1-1 1z"/><path fill="currentColor" d="M18 6h2V4h-2a3.976 3.976 0 0 0-3 1.382A3.976 3.976 0 0 0 12 4h-1a9.01 9.01 0 0 0-9 9v6a9.01 9.01 0 0 0 9 9h1a3.976 3.976 0 0 0 3-1.382A3.976 3.976 0 0 0 18 28h2v-2h-2a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2Zm-6 20h-1a7.005 7.005 0 0 1-6.92-6H6v-2H4v-4h3a3.003 3.003 0 0 0 3-3V9H8v2a1 1 0 0 1-1 1H4.08A7.005 7.005 0 0 1 11 6h1a2.002 2.002 0 0 1 2 2v4h-2v2h2v4h-2a3.003 3.003 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h2v4a2.002 2.002 0 0 1-2 2Z"/>' }, "magic-wand": { "body": '<path fill="currentColor" d="M29.414 24L12 6.586a2.048 2.048 0 0 0-2.828 0L6.586 9.172a2.002 2.002 0 0 0 0 2.828l17.413 17.414a2.002 2.002 0 0 0 2.828 0l2.587-2.586a2 2 0 0 0 0-2.828ZM8 10.586L10.586 8l5 5l-2.587 2.587l-5-5ZM25.413 28l-11-10.999L17 14.414l11 11ZM2 16l2-2l2 2l-2 2zM14 4l2-2l2 2l-2 2zM2 4l2-2l2 2l-2 2z"/>' }, "magic-wand-filled": { "body": '<path fill="currentColor" d="M29.414 24L12 6.586a2.048 2.048 0 0 0-2.828 0L6.586 9.172a2.002 2.002 0 0 0 0 2.828l17.413 17.414a2.002 2.002 0 0 0 2.828 0l2.587-2.586a2 2 0 0 0 0-2.828ZM8 10.586L10.586 8l5 5l-2.587 2.587l-5-5ZM2 16l2-2l2 2l-2 2zM14 4l2-2l2 2l-2 2zM2 4l2-2l2 2l-2 2z"/>' }, "magnify": { "body": '<defs/><path d="M12 21H4V4h18v8h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v17a2 2 0 0 0 2 2h8z" fill="currentColor"/><path d="M30 28.58l-3.11-3.11a6 6 0 1 0-1.42 1.42L28.58 30zM22 26a4 4 0 1 1 4-4a4 4 0 0 1-4 4z" fill="currentColor"/>', "hidden": true }, "mail-all": { "body": '<path fill="currentColor" d="M16.59 20.41L20.17 24l-3.59 3.59L18 29l5-5l-5-5l-1.41 1.41zm7 0L27.17 24l-3.59 3.59L25 29l5-5l-5-5l-1.41 1.41z"/><path fill="currentColor" d="M14 23H4V7.91l11.43 7.91a1 1 0 0 0 1.14 0L28 7.91V17h2V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h10ZM25.8 7L16 13.78L6.2 7Z"/>' }, "mail-reply": { "body": '<path fill="currentColor" d="m25 18l-1.414 1.414L26.167 22H18a4 4 0 0 0 0 8h2v-2h-2a2 2 0 0 1 0-4h8.167l-2.583 2.587L25 28l5-5Z"/><path fill="currentColor" d="M10 22H4L3.997 6.906l11.434 7.916a1 1 0 0 0 1.138 0L28 6.91V16h2V6a2.002 2.002 0 0 0-2-2H4a2 2 0 0 0-2 1.997V22a2.003 2.003 0 0 0 2 2h6ZM25.799 6L16 12.784L6.201 6Z"/>' }, "mammogram": { "body": '<path d="M25 32h7v-7h-2v5h-5v2z" fill="currentColor"/><path d="M25 27h-3V17h3a3.003 3.003 0 0 1 3 3v4a3.003 3.003 0 0 1-3 3zm-1-2h1a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1h-1z" fill="currentColor"/><path d="M20 27h-6v-4a2.002 2.002 0 0 1 2-2h2v-2h-4v-2h4a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2h-2v2h4z" fill="currentColor"/><path d="M25 15h-3V5h3a3.003 3.003 0 0 1 3 3v4a3.003 3.003 0 0 1-3 3zm-1-2h1a1 1 0 0 0 1-1V8a1 1 0 0 0-1-1h-1z" fill="currentColor"/><path d="M18 5h-4v2h4v2h-3v2h3v2h-4v2h4a2.003 2.003 0 0 0 2-2V7a2.002 2.002 0 0 0-2-2z" fill="currentColor"/><path d="M10 27H8v-3.046c-4.715-.442-6-4.01-6-5.954c0-3.015 2.082-4.502 3.919-5.814C7.572 11.006 9 9.986 9 8V5h2v3c0 3.015-2.082 4.502-3.919 5.814C5.428 14.994 4 16.014 4 18c.005.403.191 4 5 4a1 1 0 0 1 1 1z" fill="currentColor"/><path d="M7 0H0v7h2V2h5V0z" fill="currentColor"/>', "hidden": true }, "mammogram-stacked": { "body": '<path fill="currentColor" d="M30 16h-2V4H16V2h12a2.002 2.002 0 0 1 2 2Z"/><path fill="currentColor" d="M25 23h-2V9H9V7h14a2.002 2.002 0 0 1 2 2Z"/><path fill="currentColor" d="M18 30H4a2.002 2.002 0 0 1-2-2V14a2.002 2.002 0 0 1 2-2h14a2.002 2.002 0 0 1 2 2v14a2.003 2.003 0 0 1-2 2ZM4 14v14h14.002L18 14Z"/><path fill="currentColor" d="M13 18h1v-2h-1a5.008 5.008 0 0 0-4.899 4H7v2h1.101A5.008 5.008 0 0 0 13 26h1v-2h-1a3 3 0 0 1 0-6Z"/>', "hidden": true }, "manage-protection": { "body": '<path fill="currentColor" d="m16 30l-6.176-3.293A10.982 10.982 0 0 1 4 17V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v13a10.982 10.982 0 0 1-5.824 9.707ZM6 4v13a8.985 8.985 0 0 0 4.766 7.942L16 27.733l5.234-2.79A8.985 8.985 0 0 0 26 17V4Z"/><path fill="currentColor" d="M16 25.277V6h8v10.805a7 7 0 0 1-3.7 6.173Z"/>' }, "managed-solutions": { "body": '<path fill="currentColor" d="M30 23h-5v-5h-2v5h-5v2h5v5h2v-5h5v-2z"/><path fill="currentColor" d="m24.127 11.84l1.181.213a5.792 5.792 0 0 1 2.625 1.144A5.422 5.422 0 0 1 29.953 18h2.03a7.502 7.502 0 0 0-6.15-7.885a10.007 10.007 0 0 0-7.94-7.933a10.002 10.002 0 0 0-11.72 7.933A7.505 7.505 0 0 0 .059 18.41A7.684 7.684 0 0 0 7.773 25H14v-2H7.698a5.632 5.632 0 0 1-5.603-4.486a5.506 5.506 0 0 1 4.434-6.43l1.349-.245l.214-1.11a8.206 8.206 0 0 1 6.742-6.642a7.971 7.971 0 0 1 3.014.13a8.144 8.144 0 0 1 6.053 6.446Z"/>' }, "map": { "body": '<path fill="currentColor" d="m16 24l-6.09-8.6A8.14 8.14 0 0 1 16 2a8.08 8.08 0 0 1 8 8.13a8.2 8.2 0 0 1-1.8 5.13Zm0-20a6.07 6.07 0 0 0-6 6.13a6.19 6.19 0 0 0 1.49 4L16 20.52L20.63 14A6.24 6.24 0 0 0 22 10.13A6.07 6.07 0 0 0 16 4Z"/><circle cx="16" cy="9" r="2" fill="currentColor"/><path fill="currentColor" d="M28 12h-2v2h2v14H4V14h2v-2H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V14a2 2 0 0 0-2-2Z"/>' }, "map-boundary": { "body": '<path fill="currentColor" d="M12 10h2v4h-2zm6 8h4v2h-4zm-4 0v-2h-2v4h4v-2h-2zm2-14h12v12H16z"/><path fill="currentColor" d="m17.885 29.997l-6.066-3.855L4 27.989V4h10v4h-2V6H6v19.461l6.181-1.46l5.934 3.772L22.818 26H26v-6h-2v-2h4v10h-4.818l-5.297 1.997z"/>' }, "map-boundary-vegetation": { "body": '<path fill="currentColor" d="M28 16H18v-2h5v-4a2 2 0 0 1 2-2h1.5a1.5 1.5 0 0 0 .284-2.973l-.711-.136l-.075-.571a2.632 2.632 0 0 0-1.68-2.182a2.505 2.505 0 0 0-3.083 1.304l-.304.647l-.71-.077a2.018 2.018 0 0 0-2.17 2.434A2.098 2.098 0 0 0 20.126 8H21v2h-.782a4.15 4.15 0 0 1-4.206-3.686a4.005 4.005 0 0 1 3.741-4.306a4.5 4.5 0 0 1 8.074 1.252a3.505 3.505 0 0 1 2.142 3.71A3.628 3.628 0 0 1 26.317 10H25v4h3zm-10 2h4v2h-4zm-4 0v-2h-2v4h4v-2h-2zm-2-8h2v4h-2z"/><path fill="currentColor" d="m17.885 30l-6.066-3.858L4 27.989V4h10v4h-2V6H6v19.461l6.181-1.46l5.934 3.775L22.818 26H26v-6h-2v-2h4v10h-4.818l-5.297 2z"/>' }, "map-center": { "body": '<path fill="currentColor" d="M23 26h2v4h-2zm0-8h2v4h-2zm3 5h4v2h-4zm-8 0h4v2h-4zm7.342-12.94l-22-8A1 1 0 0 0 2.06 3.341l8 22a1.001 1.001 0 0 0 .924.659H11a1 1 0 0 0 .929-.629l3.841-9.602l9.601-3.84a1 1 0 0 0-.029-1.87zm-10.714 4.01l-.398.16l-.159.398l-3.026 7.568L4.672 4.672l17.524 6.372z"/>' }, "map-identify": { "body": '<path fill="currentColor" d="M15 8h2v6h-2zm0 10h2v6h-2zm3-3h6v2h-6zM8 15h6v2H8zm-4-5H2V4a2.002 2.002 0 0 1 2-2h6v2H4zm6 20H4a2.002 2.002 0 0 1-2-2v-6h2v6h6zm18 0h-6v-2h6v-6h2v6a2.002 2.002 0 0 1-2 2zm2-20h-2V4h-6V2h6a2.002 2.002 0 0 1 2 2z"/>' }, "marine-warning": { "body": '<path fill="currentColor" d="M12 20H7a1 1 0 0 0-.97 1.242L6.97 25h2.06l-.75-3h15.44l-.75 3h2.06l.94-3.758A1 1 0 0 0 25 20H14V3a1 1 0 0 0-1.8-.601L2.209 15.39A1 1 0 0 0 3 17h9Zm-6.97-5L12 5.94V15Z"/><path fill="currentColor" d="M26.906 25.751A2.998 2.998 0 0 1 24 28a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 20 25a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 16 28a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 12 25a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 8 28a2.998 2.998 0 0 1-2.906-2.249l-1.936.498A4.997 4.997 0 0 0 8 30a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 24 30a4.997 4.997 0 0 0 4.842-3.751Z"/><path fill="none" d="M23.75 10h-1.5V6h1.5ZM23 11a1 1 0 1 0 1 1a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M29.912 13.935L23.628 2.371a.718.718 0 0 0-1.256 0l-6.284 11.564A.72.72 0 0 0 16.72 15h12.56a.72.72 0 0 0 .631-1.065ZM22.25 6h1.5v4h-1.5Zm.75 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "math-curve": { "body": '<path fill="currentColor" d="M10.355 23.058C12.77 24.592 15.621 26 17.951 26a3.873 3.873 0 0 0 2.856-1.084c2.286-2.29.14-6.398-1.938-10.372l5.801-5.801a43.605 43.605 0 0 1 3.012 2.124L29 9.349a45.425 45.425 0 0 0-2.872-2.064L30 3.413L28.586 2l-4.207 4.206c-3.316-1.91-7.108-3.246-9.228-1.122c-2.04 2.043-.552 5.532 1.268 9.083l-6.307 6.306a43.942 43.942 0 0 1-2.8-2.1L6 19.884a47.752 47.752 0 0 0 2.665 2.035L4 26.585V2H2v26a2 2 0 0 0 2 2h26v-2H5.413Zm6.21-16.557c1.135-1.138 3.693-.286 6.337 1.183l-4.995 4.994c-1.313-2.619-2.35-5.167-1.342-6.177Zm.821 9.526c1.58 3.032 3.182 6.296 2.007 7.473c-1.312 1.314-4.522-.026-7.572-1.908Z"/>' }, "matrix": { "body": '<path d="M18 13V4h-2v2h-3v2h3v5h-3v2h8v-2h-3z" fill="currentColor"/><path d="M16.5 20a3.5 3.5 0 1 1-3.5 3.5a3.5 3.5 0 0 1 3.5-3.5m0-2a5.5 5.5 0 1 0 5.5 5.5a5.5 5.5 0 0 0-5.5-5.5z" fill="currentColor"/><path d="M8 30H2V2h6v2H4v24h4v2z" fill="currentColor"/><path d="M30 30h-6v-2h4V4h-4V2h6v28z" fill="currentColor"/>', "hidden": true }, "maximize": { "body": '<path fill="currentColor" d="M20 2v2h6.586L18 12.582L19.414 14L28 5.414V12h2V2H20zm-6 17.416L12.592 18L4 26.586V20H2v10h10v-2H5.414L14 19.416z"/>' }, "media-cast": { "body": '<path fill="currentColor" d="M2 26h3a3 3 0 0 0-3-3zm7 0H7a5.006 5.006 0 0 0-5-5v-2a7.008 7.008 0 0 1 7 7z"/><path fill="currentColor" d="M13 26h-2a9.01 9.01 0 0 0-9-9v-2a11.012 11.012 0 0 1 11 11Z"/><path fill="currentColor" d="M28 26H15v-2h13V8H4v5H2V8a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2Z"/>' }, "media-library": { "body": '<path fill="currentColor" d="M13 15v8l7-4l-7-4z"/><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V12a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v14a2.002 2.002 0 0 1-2 2zM6 12v14h20V12zm0-6h20v2H6zm2-4h16v2H8z"/>' }, "media-library-filled": { "body": '<path fill="none" d="M13 15v8l7-4l-7-4z"/><path fill="currentColor" d="M26 10H6a2.002 2.002 0 0 0-2 2v14a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V12a2.002 2.002 0 0 0-2-2zM13 23v-8l7 4zM6 6h20v2H6zm2-4h16v2H8z"/>' }, "medication": { "body": '<path fill="currentColor" d="M24 2H8a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2v18a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V10a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2ZM10 14h3v10h-3Zm12 14H10v-2h5V12h-5v-2h12ZM8 8V4h16v4Z"/>' }, "medication-alert": { "body": '<path fill="currentColor" d="M22 19h2v5h-2z"/><path fill="currentColor" d="M23 31a8 8 0 1 1 8-8a8 8 0 0 1-8 8Zm0-14a6 6 0 1 0 6 6a6 6 0 0 0-6-6Z"/><circle cx="23" cy="26" r="1" fill="currentColor"/><path fill="currentColor" d="M20 2H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2v18a2 2 0 0 0 2 2h8v-2H6v-2h5V12H6v-2h12v3h2v-3a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2ZM9 14v10H6V14ZM4 8V4h16v4Z"/>' }, "medication-reminder": { "body": '<path fill="currentColor" d="M20 2H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2v18a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V10a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2ZM6 14h3v10H6Zm12 14H6v-2h5V12H6v-2h12ZM4 8V4h16v4Z"/><circle cx="26" cy="16" r="4" fill="currentColor"/>' }, "menu": { "body": '<path fill="currentColor" d="M4 6h24v2H4zm0 18h24v2H4zm0-12h24v2H4zm0 6h24v2H4z"/>' }, "message-queue": { "body": '<path fill="currentColor" d="M28 28H4a2.002 2.002 0 0 1-2-2v-5h2v5h24v-5h2v5a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M7 21h18v2H7zm0-5h18v2H7zm0-5h18v2H7zm0-5h18v2H7z"/>' }, "meter": { "body": '<path fill="currentColor" d="M26 16a9.928 9.928 0 0 0-1.14-4.618l-1.495 1.496A7.948 7.948 0 0 1 24 16zm-2.586-6L22 8.586L17.285 13.3A2.966 2.966 0 0 0 16 13a3 3 0 1 0 3 3a2.966 2.966 0 0 0-.3-1.285zM16 17a1 1 0 1 1 1-1a1.001 1.001 0 0 1-1 1zm0-9a7.952 7.952 0 0 1 3.122.635l1.496-1.496A9.986 9.986 0 0 0 6 16h2a8.01 8.01 0 0 1 8-8z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "meter-alt": { "body": '<path fill="currentColor" d="M30 20a13.854 13.854 0 0 0-2.23-7.529l-1.444 1.445A11.892 11.892 0 0 1 28 20zM28 9.414L26.586 8l-8.567 8.567A3.952 3.952 0 0 0 16 16a4 4 0 1 0 4 4a3.953 3.953 0 0 0-.567-2.02zM16 22a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm0-14a11.909 11.909 0 0 1 6.083 1.674l1.454-1.453A13.977 13.977 0 0 0 2 20h2A12.014 12.014 0 0 1 16 8z"/>' }, "microphone": { "body": '<path fill="currentColor" d="M23 14v3a7 7 0 0 1-14 0v-3H7v3a9 9 0 0 0 8 8.94V28h-4v2h10v-2h-4v-2.06A9 9 0 0 0 25 17v-3Z"/><path fill="currentColor" d="M16 22a5 5 0 0 0 5-5V7a5 5 0 0 0-10 0v10a5 5 0 0 0 5 5ZM13 7a3 3 0 0 1 6 0v10a3 3 0 0 1-6 0Z"/>' }, "microphone-filled": { "body": '<path fill="currentColor" d="M23 14v3a7 7 0 0 1-14 0v-3H7v3a9 9 0 0 0 8 8.94V28h-4v2h10v-2h-4v-2.06A9 9 0 0 0 25 17v-3Z"/><path fill="currentColor" d="M16 22a5 5 0 0 0 5-5V7a5 5 0 0 0-10 0v10a5 5 0 0 0 5 5Z"/>' }, "microphone-off": { "body": '<path fill="currentColor" d="M9.18 18.57A7.41 7.41 0 0 1 9 17v-3H7v3a8.84 8.84 0 0 0 .58 3.18zM13 15V7a3 3 0 0 1 6 0v1.75l2-2A5 5 0 0 0 11 7v8zm10 2a7 7 0 0 1-11.73 5.14l1.42-1.41A5 5 0 0 0 21 17v-4.58l9-9L28.59 2L2 28.59L3.41 30l6.44-6.44A8.91 8.91 0 0 0 15 25.94V28h-4v2h10v-2h-4v-2.06A9 9 0 0 0 25 17v-3h-2zm-4 0a3 3 0 0 1-4.9 2.31l4.9-4.89z"/>' }, "microphone-off-filled": { "body": '<path fill="currentColor" d="M23 17a7 7 0 0 1-11.73 5.14l1.42-1.41A5 5 0 0 0 21 17v-4.58l9-9L28.59 2L2 28.59L3.41 30l6.44-6.44A8.91 8.91 0 0 0 15 25.94V28h-4v2h10v-2h-4v-2.06A9 9 0 0 0 25 17v-3h-2zm-14 .32V14H7v3a9 9 0 0 0 .25 2.09zM20.76 5.58A5 5 0 0 0 11 7v8.34z"/>' }, "microscope": { "body": '<path fill="currentColor" d="M25.394 24a7.877 7.877 0 0 0-1.67-8.568a3.918 3.918 0 0 0-1.085-4.414l2.776-2.776a2.002 2.002 0 0 0 0-2.829l-2.828-2.828a2.002 2.002 0 0 0-2.829 0L6.586 15.757a2.003 2.003 0 0 0 0 2.829l2.828 2.828a2.002 2.002 0 0 0 2.829 0l4.775-4.775a3.933 3.933 0 0 0 5.513.432A5.944 5.944 0 0 1 23.177 24H16v4H4v2h24v-6Zm-14.566-4L8 17.171l1.879-1.878l2.828 2.828ZM16 14a3.981 3.981 0 0 0 .076.752l-1.955 1.955l-2.828-2.828l9.88-9.88L24 6.827l-3.249 3.25A3.977 3.977 0 0 0 16 14Zm4 2a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm6 12h-8v-2h8Z"/>' }, "microservices-1": { "body": '<path fill="currentColor" d="m11 21l-4-2.2v-4.5l4-2.2l4 2.2v4.5L11 21zm-2-3.4l2 1.1l2-1.1v-2.2l-2-1.1l-2 1.1v2.2zM6 30l-4-2.2v-4.5L6 21l4 2.2v4.5L6 30zm-2-3.4l2 1.1l2-1.1v-2.2l-2-1.1l-2 1.1v2.2zM16 30l-4-2.2v-4.5l4-2.2l4 2.2v4.5L16 30zm-2-3.4l2 1.1l2-1.1v-2.2l-2-1.1l-2 1.1v2.2zM26 30l-4-2.2v-4.5l4-2.2l4 2.2v4.5L26 30zm-2-3.4l2 1.1l2-1.1v-2.2l-2-1.1l-2 1.1v2.2zm.6-15L22 14.2V9.4l3-1.7V3.2L21 1l-4 2.2v4.5l3 1.7v4.7l-2.6-2.6L16 13l5 5l5-5l-1.4-1.4zM19 4.4l2-1.1l2 1.1v2.2l-2 1.1l-2-1.1V4.4z"/>' }, "microservices-2": { "body": '<path fill="currentColor" d="M16 22v-6h-6v-6H2v20h20v-8h-6zm-2-4v4h-4v-4h4zM4 12h4v4H4v-4zm4 6v4H4v-4h4zM4 28v-4h4v4H4zm10 0h-4v-4h4v4zm6 0h-4v-4h4v4zm9.6-14.4L27 16.2V10h3V2h-8v8h3v6.2l-2.6-2.6L21 15l5 5l5-5l-1.4-1.4zM24 4h4v4h-4V4z"/>' }, "migrate": { "body": '<path fill="currentColor" d="M26 2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h9v6.17l-2.59-2.58L11 15l5 5l5-5l-1.41-1.41L17 16.17V10h9a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zM6 4h4v4H6zm20 4H12V4h14zm0 14H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zM6 24h14v4H6zm20 4h-4v-4h4z"/>' }, "migrate-alt": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 22H12v-6h-2v6H4v-9h16.172l-3.586 3.586L18 22l6-6l-6-6l-1.414 1.414L20.172 15H4V6h6v6h2V6h16Z"/>' }, "milestone": { "body": '<path fill="currentColor" d="M24.586 6.586A1.986 1.986 0 0 0 23.17 6H16V2h-2v4H6a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h8v14h2V16h7.171a1.986 1.986 0 0 0 1.415-.586L29 11ZM23.17 14H6V8h17.172l3 3Z"/>' }, "military-camp": { "body": '<path fill="currentColor" d="M27 28V17.52a2.003 2.003 0 0 0-.853-1.639L17 9.48V8h6V2h-8v7.48l-9.147 6.402A2.002 2.002 0 0 0 5 17.52V28H2v2h28v-2ZM17 4h4v2h-4ZM7 17.52l9-6.3l9 6.3V28h-8v-8h-2v8H7Z"/>' }, "minimize": { "body": '<path fill="currentColor" d="M4 18v2h6.586L2 28.582L3.414 30L12 21.414V28h2V18H4zM30 3.416L28.592 2L20 10.586V4h-2v10h10v-2h-6.586L30 3.416z"/>' }, "misuse": { "body": '<path fill="currentColor" d="M16 2C8.3 2 2 8.3 2 16s6.3 14 14 14s14-6.3 14-14S23.7 2 16 2zm5.4 21L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4l-1.6 1.6z"/>' }, "misuse-alt": { "body": '<path fill="currentColor" d="M21.41 23L16 17.591L10.59 23L9 21.41L14.409 16L9 10.591L10.591 9L16 14.409L21.409 9L23 10.591L17.591 16L23 21.41L21.41 23z"/><path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12.014 12.014 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Z"/>', "hidden": true }, "misuse-outline": { "body": '<path fill="currentColor" d="M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2zm0 26C9.4 28 4 22.6 4 16S9.4 4 16 4s12 5.4 12 12s-5.4 12-12 12z"/><path fill="currentColor" d="M21.4 23L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4z"/>' }, "mixed-rain-hail": { "body": '<circle cx="24.5" cy="25.5" r="1.5" fill="currentColor"/><circle cx="21.5" cy="29.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="m15.868 30.496l-1.736-.992L17.276 24h-5.999l4.855-8.496l1.736.992L14.723 22h6.001l-4.856 8.496z"/><path fill="currentColor" d="M9 32a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 9 32zM24.8 9.136a8.994 8.994 0 0 0-17.6 0a6.493 6.493 0 0 0 .23 12.768l-1.324 2.649a1 1 0 1 0 1.788.894l2-4a1 1 0 0 0-.446-1.341A.979.979 0 0 0 9 20.01V20h-.5a4.497 4.497 0 0 1-.356-8.981l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.497 4.497 0 0 1 23.5 20H23v2h.5a6.497 6.497 0 0 0 1.3-12.864z"/>' }, "mobile": { "body": '<path fill="currentColor" d="M22 4H10a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h12a2.003 2.003 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2Zm0 2v2H10V6ZM10 28V10h12v18Z"/>' }, "mobile-add": { "body": '<path fill="currentColor" d="M28 24h-4v-4h-2v4h-4v2h4v4h2v-4h4v-2z"/><path fill="currentColor" d="M10 28V10h12v7h2V6a2.002 2.002 0 0 0-2-2H10a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h6v-2Zm0-22h12v2H10Z"/>' }, "mobile-audio": { "body": '<path fill="currentColor" d="M28 12h2v3h-2zm-4-5h2v13h-2zm-4 4h2v5h-2zm-4-2h2v9h-2zm-4 3h2v3h-2z"/><circle cx="13.5" cy="24.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M20 30H7a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h13v2H7v24h13v-4h2v4a2.002 2.002 0 0 1-2 2Z"/>' }, "mobile-check": { "body": '<path fill="currentColor" d="m20 27.18l-2.59-2.59L16 26l4 4l8-8l-1.41-1.41L20 27.18z"/><path fill="currentColor" d="M10 28V10h12v9h2V6a2.002 2.002 0 0 0-2-2H10a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h4v-2Zm0-22h12v2H10Z"/>' }, "mobile-download": { "body": '<path fill="currentColor" d="m28 25l-1.414-1.414L24 26.172V18h-2v8.172l-2.586-2.586L18 25l5 5l5-5z"/><path fill="currentColor" d="M10 28V10h12v5h2V6a2.002 2.002 0 0 0-2-2H10a2.002 2.002 0 0 0-2 2v22a2.002 2.002 0 0 0 2 2h6v-2Zm0-22h12v2H10Z"/>' }, "mobile-landscape": { "body": '<path fill="currentColor" d="M3 10v12a2.002 2.002 0 0 0 2 2h22a2.002 2.002 0 0 0 2-2V10a2.003 2.003 0 0 0-2-2H5a2.002 2.002 0 0 0-2 2Zm2 0h2v12H5Zm22 12H9V10h18Z"/>' }, "mobility-services": { "body": '<path fill="currentColor" d="m29.338 19.934l-7.732-2.779l-3.232-4.058A2.99 2.99 0 0 0 16.054 12H8.058a2.998 2.998 0 0 0-2.48 1.312l-2.712 3.983A4.988 4.988 0 0 0 2 20.107V26a1 1 0 0 0 1 1h2.142a3.98 3.98 0 0 0 7.716 0h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-5.125a1 1 0 0 0-.662-.941zM9 28a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2zm14 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm5-3h-1.142a3.98 3.98 0 0 0-7.716 0h-6.284a3.98 3.98 0 0 0-7.716 0H4v-4.893a2.998 2.998 0 0 1 .52-1.688l2.711-3.981A1 1 0 0 1 8.058 14h7.996a.993.993 0 0 1 .764.354l3.4 4.269a1 1 0 0 0 .444.318L28 21.578zm0-23h-4a2.002 2.002 0 0 0-2 2v8a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2zm0 2v2h-4V4zm-4 8V8h4v4z"/>' }, "model": { "body": '<path fill="currentColor" d="M23.5 4h-15l-6.784 9.045L16 29.527l14.284-16.482Zm3.5 8h-5.446l-3.75-6H22.5Zm-16.698 2l3.754 10.23L5.19 14Zm2.13 0h7.136l-3.569 9.721Zm.373-2L16 6.887L19.196 12Zm8.893 2h5.112l-8.867 10.231ZM9.5 6h4.696l-3.75 6H5Z"/>' }, "model-alt": { "body": '<path fill="currentColor" d="M28.447 16.105L23 13.383V7a1 1 0 0 0-.553-.894l-6-3a1 1 0 0 0-.894 0l-6 3A1 1 0 0 0 9 7v6.382l-5.447 2.723A1 1 0 0 0 3 17v7a1 1 0 0 0 .553.894l6 3a1.001 1.001 0 0 0 .894 0L16 25.119l5.553 2.777a1.001 1.001 0 0 0 .894 0l6-3A1 1 0 0 0 29 24v-7a1 1 0 0 0-.553-.895ZM21 13.383l-4 2v-4.764l4-2Zm-5-8.264L19.764 7L16 8.882L12.236 7Zm-5 3.5l4 2v4.764l-4-2ZM9 25.382l-4-2v-4.764l4 2Zm1-6.5L6.236 17L10 15.118L13.764 17Zm1 1.736l4-2v4.764l-4 2Zm10 4.764l-4-2v-4.764l4 2Zm1-6.5L18.236 17L22 15.118L25.764 17Zm5 4.5l-4 2v-4.764l4-2Z"/>' }, "model-builder": { "body": '<path fill="currentColor" d="M22 4v3H10V4H2v8h8V9h7.023A4.946 4.946 0 0 0 16 12v8a3.004 3.004 0 0 1-3 3h-3v-3H2v8h8v-3h3a5.006 5.006 0 0 0 5-5v-8a2.998 2.998 0 0 1 2.997-3H22v3h8V4ZM8 10H4V6h4Zm0 16H4v-4h4Zm20-16h-4V6h4Z"/>' }, "model-builder-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4z"/><path fill="currentColor" d="M22 4v3H10V4H2v8h8V9h7.023A4.946 4.946 0 0 0 16 12v16h2V12a2.998 2.998 0 0 1 2.997-3H22v3h8V4ZM8 10H4V6h4Zm20 0h-4V6h4Z"/>' }, "model-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4z"/><path fill="currentColor" d="M23.5 4h-15l-6.784 9.045L6.01 18l1.511-1.31L5.19 14h5.255L16 22.887L21.554 14h5.256L15.813 26.692L17.323 28l12.96-14.955ZM5 12l4.5-6h4.696l-3.75 6Zm11-5.113L19.196 12h-6.392Zm0 12.226L12.804 14h6.392ZM21.554 12l-3.75-6H22.5l4.5 6Z"/>' }, "money": { "body": '<path fill="currentColor" d="M2 22h28v2H2zm0 4h28v2H2zm22-16a2 2 0 1 0 2 2a2 2 0 0 0-2-2zm-8 6a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm-8 0a2 2 0 1 0 2 2a2 2 0 0 0-2-2z"/><path fill="currentColor" d="M28 20H4a2.005 2.005 0 0 1-2-2V6a2.005 2.005 0 0 1 2-2h24a2.005 2.005 0 0 1 2 2v12a2.003 2.003 0 0 1-2 2Zm0-14H4v12h24Z"/>' }, "monster": { "body": '<path fill="currentColor" d="M23 22h-2v-2h-2v2h-2v-2h-2v2h-2v-2h-2v2H9v2h2v2h2v-2h2v2h2v-2h2v2h2v-2h2v-2z"/><path fill="currentColor" d="M28 11h-1V4a2.002 2.002 0 0 0-2-2H7a2.002 2.002 0 0 0-2 2v7H4a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h1v4a7.008 7.008 0 0 0 7 7h8a7.008 7.008 0 0 0 7-7v-4h1a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2Zm-3-7v3.382l-2.553-1.276a1 1 0 0 0-.894 0L18 7.881l-3.553-1.776a1 1 0 0 0-.894 0L10 7.881l-3-1.5V4Zm3 13h-3v6a5.006 5.006 0 0 1-5 5h-8a5.006 5.006 0 0 1-5-5v-6H4v-4h3V8.618l2.553 1.277a1 1 0 0 0 .894 0L14 8.118l3.553 1.776a1.001 1.001 0 0 0 .894 0L22 8.119l3 1.5V13h3Z"/><path fill="currentColor" d="M9 14h5v2H9zm9 0h5v2h-5z"/>' }, "monument": { "body": '<path fill="currentColor" d="M20 28V6l-4-4l-4 4v22H2v2h28v-2Zm-6 0V6.828l2-2l2 2V28Z"/>' }, "moon": { "body": '<path fill="currentColor" d="M13.502 5.414a15.075 15.075 0 0 0 11.594 18.194a11.113 11.113 0 0 1-7.975 3.39c-.138 0-.278.005-.418 0a11.094 11.094 0 0 1-3.2-21.584M14.98 3a1.002 1.002 0 0 0-.175.016a13.096 13.096 0 0 0 1.825 25.981c.164.006.328 0 .49 0a13.072 13.072 0 0 0 10.703-5.555a1.01 1.01 0 0 0-.783-1.565A13.08 13.08 0 0 1 15.89 4.38A1.015 1.015 0 0 0 14.98 3Z"/>' }, "moonrise": { "body": '<path fill="currentColor" d="M2 28h28v2H2zm24-2h-2a7.987 7.987 0 0 0-2.037-5.333l1.49-1.335A9.983 9.983 0 0 1 26 26zm-10 0h-2a9.927 9.927 0 0 1 3.754-7.804A7.89 7.89 0 0 0 16 18a8.01 8.01 0 0 0-8 8H6a10.011 10.011 0 0 1 10-10a9.892 9.892 0 0 1 4.446 1.052a1 1 0 0 1 0 1.79A7.957 7.957 0 0 0 16 26zm0-24l-5 5l1.41 1.41L15 5.83V14h2V5.83l2.59 2.58L21 7l-5-5z"/>' }, "moonset": { "body": '<path fill="currentColor" d="M2 28h28v2H2zm24-2h-2a7.987 7.987 0 0 0-2.037-5.333l1.49-1.335A9.983 9.983 0 0 1 26 26zm-10 0h-2a9.927 9.927 0 0 1 3.754-7.804A7.89 7.89 0 0 0 16 18a8.01 8.01 0 0 0-8 8H6a10.011 10.011 0 0 1 10-10a9.892 9.892 0 0 1 4.446 1.052a1 1 0 0 1 0 1.79A7.957 7.957 0 0 0 16 26zm0-12l-5-5l1.41-1.41L15 10.17V2h2v8.17l2.59-2.58L21 9l-5 5z"/>' }, "mostly-cloudy": { "body": '<path fill="currentColor" d="M21.743 18.692a6.05 6.05 0 0 0 1.057-1.086a5.998 5.998 0 1 0-10.733-4.445A7.557 7.557 0 0 0 6.35 18.25A5.993 5.993 0 0 0 8 30.005h11a5.985 5.985 0 0 0 2.743-11.313ZM18 10.005a4.004 4.004 0 0 1 4 4a3.961 3.961 0 0 1-.8 2.4a4.012 4.012 0 0 1-.94.891a7.542 7.542 0 0 0-6.134-4.24A3.998 3.998 0 0 1 18 10.006Zm1 18H8a3.993 3.993 0 0 1-.673-7.93l.663-.112l.146-.656a5.496 5.496 0 0 1 10.729 0l.146.656l.662.112a3.993 3.993 0 0 1-.673 7.93Zm7-15h4v2h-4zM22.95 7.64l2.828-2.827l1.415 1.414l-2.829 2.828zM17 2.005h2v4h-2zM8.808 6.227l1.414-1.414l2.829 2.828l-1.415 1.414z"/>' }, "mostly-cloudy-night": { "body": '<path fill="currentColor" d="M29.844 15.035a1.517 1.517 0 0 0-1.23-.866a5.355 5.355 0 0 1-3.41-1.716a6.465 6.465 0 0 1-1.286-6.392a1.603 1.603 0 0 0-.299-1.546a1.454 1.454 0 0 0-1.36-.493l-.019.003a7.927 7.927 0 0 0-6.22 7.431A7.364 7.364 0 0 0 13.5 11a7.551 7.551 0 0 0-7.15 5.244A5.993 5.993 0 0 0 8 28h11a5.977 5.977 0 0 0 5.615-8.088a7.505 7.505 0 0 0 5.132-3.357a1.537 1.537 0 0 0 .097-1.52ZM19 26H8a3.993 3.993 0 0 1-.673-7.93l.663-.112l.145-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 26Zm4.465-8.001h-.021a5.958 5.958 0 0 0-2.795-1.755a7.507 7.507 0 0 0-2.6-3.677c-.01-.101-.036-.197-.041-.3a6.078 6.078 0 0 1 3.79-6.05a8.458 8.458 0 0 0 1.94 7.596a7.4 7.4 0 0 0 3.902 2.228a5.429 5.429 0 0 1-4.175 1.958Z"/>' }, "mountain": { "body": '<path fill="currentColor" d="M27.634 26L17.79 5.105a2 2 0 0 0-3.588.021L4.366 26H2v2h28v-2ZM15.99 5.979L20.947 16.5L19 17.798l-3-2l-3 2l-1.955-1.303Zm-5.805 12.346L13 20.202l3-2l3 2l2.81-1.873L25.422 26H6.575Z"/>' }, "mov": { "body": '<path fill="currentColor" d="m28 9l-2 13l-2-13h-2l2.52 14h2.96L30 9h-2zM18 23h-4a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2zm-4-12v10h4V11zM8 9l-1.51 5L6 15.98L5.54 14L4 9H2v14h2v-8l-.16-2l.58 2L6 19.63L7.58 15l.58-2L8 15v8h2V9H8z"/>' }, "move": { "body": '<path fill="currentColor" d="m25 11l-1.41 1.41L26.17 15H17V5.83l2.59 2.58L21 7l-5-5l-5 5l1.41 1.41L15 5.83V15H5.83l2.58-2.59L7 11l-5 5l5 5l1.41-1.41L5.83 17H15v9.17l-2.59-2.58L11 25l5 5l5-5l-1.41-1.41L17 26.17V17h9.17l-2.58 2.59L25 21l5-5l-5-5z"/>' }, "movement": { "body": '<path fill="currentColor" d="m24 20l-1.41 1.41L26.17 25H10a4 4 0 0 1 0-8h12a6 6 0 0 0 0-12H5.83l3.58-3.59L8 0L2 6l6 6l1.41-1.41L5.83 7H22a4 4 0 0 1 0 8H10a6 6 0 0 0 0 12h16.17l-3.58 3.59L24 32l6-6Z"/>' }, "mp3": { "body": '<path fill="currentColor" d="M28 9h-6v2h6v4h-4v2h4v4h-6v2h6a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2zM14 23h-2V9h6a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-4zm0-7h4v-5h-4zM8 9l-1.51 5L6 15.98L5.54 14L4 9H2v14h2v-8l-.16-2l.58 2L6 19.63L7.58 15l.58-2L8 15v8h2V9H8z"/>' }, "mp4": { "body": '<path fill="currentColor" d="M28 10v8v-8m1-1h-2v8h-3V9h-2v10h5v4h2v-4h1v-2h-1V9zM14 23h-2V9h6a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-4zm0-7h4v-5h-4zM8 9l-1.51 5L6 15.98L5.54 14L4 9H2v14h2v-8l-.16-2l.58 2L6 19.63L7.58 15l.58-2L8 15v8h2V9H8z"/>' }, "mpeg": { "body": '<path fill="currentColor" d="M32 21h-4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h4v2h-4v6h2v-2h-1v-2h3zm-8-8v-1.976h-6V21h6v-2h-4v-2h2v-2h-2v-2h4zm-10-2H9v10h2v-3h3a2.003 2.003 0 0 0 2-2v-3a2.002 2.002 0 0 0-2-2zm-3 5v-3h3l.001 3zm-4-5H5l-1.5 4L2 11H0v10h2v-7l1.5 4L5 14v7h2V11z"/>' }, "mpg2": { "body": '<path fill="currentColor" d="M32 21h-6v-4a2.002 2.002 0 0 1 2-2h2v-2h-4v-2h4a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2h-2v2h4zm-8 0h-4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h4v2h-4v6h2v-2h-1v-2h3zM14 11H9v10h2v-3h3a2.003 2.003 0 0 0 2-2v-3a2.002 2.002 0 0 0-2-2zm-3 5v-3h3l.001 3zm-4-5H5l-1.5 4L2 11H0v10h2v-7l1.5 4L5 14v7h2V11z"/>' }, "music": { "body": '<path fill="currentColor" d="M25 4H10a2.002 2.002 0 0 0-2 2v14.556A3.955 3.955 0 0 0 6 20a4 4 0 1 0 4 4V12h15v8.556A3.954 3.954 0 0 0 23 20a4 4 0 1 0 4 4V6a2.002 2.002 0 0 0-2-2ZM6 26a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm17 0a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2ZM10 6h15v4H10Z"/>' }, "music-add": { "body": '<path fill="currentColor" d="M30 6h-4V2h-2v4h-4v2h4v4h2V8h4V6zm-6 9v7.556A3.955 3.955 0 0 0 22 22a4 4 0 1 0 4 4V15zm-2 13a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2zM17 6h-7a2.002 2.002 0 0 0-2 2v14.556A3.956 3.956 0 0 0 6 22a4 4 0 1 0 4 4V8h7zM6 28a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2z"/>' }, "music-remove": { "body": '<path fill="currentColor" d="M26.41 7L30 3.41L28.59 2L25 5.59L21.41 2L20 3.41L23.59 7L20 10.59L21.41 12L25 8.41L28.59 12L30 10.59L26.41 7zM24 15v7.556A3.955 3.955 0 0 0 22 22a4 4 0 1 0 4 4V15zm-2 13a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2zM17 6h-7a2.002 2.002 0 0 0-2 2v14.556A3.956 3.956 0 0 0 6 22a4 4 0 1 0 4 4V8h7zM6 28a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2z"/>' }, "name-space": { "body": '<path fill="currentColor" d="M7 12H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h3v2H4v4h3zm2-2h6v2H9zm8 0h6v2h-6zm11 2h-3v-2h3V6h-3V4h3a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM17 4h6v2h-6zM9 4h6v2H9zm19 24H4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 22v4h24v-4zm-2-7h28v2H2z"/>' }, "navaid-civil": { "body": '<path fill="currentColor" d="M30 14h-2.18A12.011 12.011 0 0 0 18 4.18V2h-4v2.18A12.011 12.011 0 0 0 4.18 14H2v4h2.18A12.011 12.011 0 0 0 14 27.82V30h4v-2.18A12.011 12.011 0 0 0 27.82 18H30ZM16 26a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10Z"/>' }, "navaid-dme": { "body": '<path fill="currentColor" d="M16 20a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M24 24H8a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2ZM8 10v12h16V10Z"/><path fill="currentColor" d="M28 28H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2ZM4 6v20h24V6Z"/>' }, "navaid-helipad": { "body": '<path fill="currentColor" d="M18 9v6h-4V9h-2v14h2v-6h4v6h2V9h-2z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "navaid-military": { "body": '<path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/><path fill="currentColor" d="M16 24a8 8 0 1 1 8-8a8.01 8.01 0 0 1-8 8Zm0-14a6 6 0 1 0 6 6a6.007 6.007 0 0 0-6-6Z"/><circle cx="16" cy="16" r="2" fill="currentColor"/>' }, "navaid-military-civil": { "body": '<path fill="currentColor" d="M16 24a8 8 0 1 1 8-8a8.01 8.01 0 0 1-8 8Zm0-14a6 6 0 1 0 6 6a6.007 6.007 0 0 0-6-6Z"/><path fill="currentColor" d="M30 14h-2.18A12.011 12.011 0 0 0 18 4.18V2h-4v2.18A12.011 12.011 0 0 0 4.18 14H2v4h2.18A12.011 12.011 0 0 0 14 27.82V30h4v-2.18A12.011 12.011 0 0 0 27.82 18H30ZM16 26a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10Z"/>' }, "navaid-ndb": { "body": '<path fill="currentColor" d="M16 24a8 8 0 1 1 8-8a8.01 8.01 0 0 1-8 8Zm0-14a6 6 0 1 0 6 6a6.007 6.007 0 0 0-6-6Z"/><circle cx="16" cy="16" r="2" fill="currentColor"/><circle cx="16" cy="4" r="2" fill="currentColor"/><circle cx="16" cy="28" r="2" fill="currentColor"/><circle cx="28" cy="16" r="2" fill="currentColor"/><circle cx="4" cy="16" r="2" fill="currentColor"/><circle cx="7.515" cy="7.515" r="2" fill="currentColor"/><circle cx="24.485" cy="24.485" r="2" fill="currentColor"/><circle cx="24.485" cy="7.515" r="2" fill="currentColor"/><circle cx="7.515" cy="24.485" r="2" fill="currentColor"/>' }, "navaid-ndb-dme": { "body": '<path fill="currentColor" d="M4 12H2V4a2.002 2.002 0 0 1 2-2h8v2H4zm8 18H4a2.002 2.002 0 0 1-2-2v-8h2v8h8zm16 0h-8v-2h8v-8h2v8a2.002 2.002 0 0 1-2 2zm2-18h-2V4h-8V2h8a2.002 2.002 0 0 1 2 2zM16 22a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4z"/><circle cx="16" cy="16" r="2" fill="currentColor"/><circle cx="16" cy="7" r="1" fill="currentColor"/><circle cx="16" cy="3" r="1" fill="currentColor"/><circle cx="16" cy="25" r="1" fill="currentColor"/><circle cx="16" cy="29" r="1" fill="currentColor"/><circle cx="25" cy="16" r="1" fill="currentColor"/><circle cx="29" cy="16" r="1" fill="currentColor"/><circle cx="7" cy="16" r="1" fill="currentColor"/><circle cx="3" cy="16" r="1" fill="currentColor"/><circle cx="9.636" cy="9.636" r="1" fill="currentColor"/><circle cx="7" cy="7" r="1" fill="currentColor"/><circle cx="22.364" cy="22.364" r="1" fill="currentColor"/><circle cx="25" cy="25" r="1" fill="currentColor"/><circle cx="22.364" cy="9.636" r="1" fill="currentColor"/><circle cx="25" cy="7" r="1" fill="currentColor"/><circle cx="9.636" cy="22.364" r="1" fill="currentColor"/><circle cx="7" cy="25" r="1" fill="currentColor"/>' }, "navaid-private": { "body": '<path fill="currentColor" d="M20 15v-4a2.002 2.002 0 0 0-2-2h-6v14h2v-6h1.48l2.335 6h2.145l-2.333-6H18a2.003 2.003 0 0 0 2-2Zm-6-4h4v4h-4Z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "navaid-seaplane": { "body": '<path fill="currentColor" d="M20 18a3.996 3.996 0 0 1-3 3.858V17h2v-2h-2v-1.184a3 3 0 1 0-2 0V15h-2v2h2v4.858A3.996 3.996 0 0 1 12 18h-2a6 6 0 0 0 12 0Zm-4-8a1 1 0 1 1-1 1a1 1 0 0 1 1-1Z"/><path fill="currentColor" d="M30 14h-2.18A12.011 12.011 0 0 0 18 4.18V2h-4v2.18A12.011 12.011 0 0 0 4.18 14H2v4h2.18A12.011 12.011 0 0 0 14 27.82V30h4v-2.18A12.011 12.011 0 0 0 27.82 18H30ZM16 26a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10Z"/>' }, "navaid-tacan": { "body": '<circle cx="16" cy="14" r="2" fill="currentColor"/><path fill="currentColor" d="M20 28h-8a1 1 0 0 1-1-1v-5.734l-3.739-6.543l-4.776-2.866a1 1 0 0 1-.353-1.353l4-7a1 1 0 0 1 1.383-.361L12.277 6h7.446l4.762-2.857a1 1 0 0 1 1.383.36l4 7a1 1 0 0 1-.353 1.354l-4.776 2.866L21 21.266V27a1 1 0 0 1-1 1Zm-7-2h6v-5.265l4.262-7.458l4.384-2.63l-3.007-5.264L20.277 8h-8.554L7.361 5.383l-3.007 5.263l4.384 2.63L13 20.736Z"/>' }, "navaid-vhfor": { "body": '<path fill="currentColor" d="M22 28H10a1 1 0 0 1-.844-.463l-7-11a1 1 0 0 1 0-1.074l7-11A1 1 0 0 1 10 4h12a1 1 0 0 1 .844.463l7 11a1 1 0 0 1 0 1.074l-7 11A1 1 0 0 1 22 28Zm-11.451-2H21.45l6.363-10L21.45 6h-10.9L4.186 16Z"/><path fill="currentColor" d="M19.5 24h-7a1 1 0 0 1-.841-.46l-4.5-7a1.002 1.002 0 0 1 0-1.08l4.5-7A1 1 0 0 1 12.5 8h7a1 1 0 0 1 .841.46l4.5 7a1.002 1.002 0 0 1 0 1.08l-4.5 7a1 1 0 0 1-.841.46Zm-6.454-2h5.908l3.857-6l-3.857-6h-5.908l-3.857 6Z"/>' }, "navaid-vor": { "body": '<circle cx="16" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="m30.864 15.496l-7-12A1 1 0 0 0 23 3H9a1 1 0 0 0-.864.496l-7 12a1 1 0 0 0 0 1.008l7 12A1 1 0 0 0 9 29h14a1 1 0 0 0 .864-.496l7-12a1 1 0 0 0 0-1.008ZM22.426 27H9.574L3.158 16L9.574 5h12.852l6.416 11Z"/>' }, "navaid-vordme": { "body": '<circle cx="16" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M30 6a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2Zm-2 6.926L22.964 6H28ZM27.764 16L20.49 26h-8.982L4.236 16L11.51 6h8.982ZM9.036 6L4 12.925V6ZM4 19.075L9.036 26H4ZM22.964 26L28 19.074V26Z"/>' }, "navaid-vortac": { "body": '<circle cx="16" cy="14" r="2" fill="currentColor"/><path fill="currentColor" d="m29.868 10.504l-4-7a1 1 0 0 0-1.383-.361L19.723 6h-7.446L7.515 3.143a1 1 0 0 0-1.383.36l-4 7a1 1 0 0 0 .353 1.354l4.776 2.866L11 21.266V27a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-5.734l3.739-6.543l4.776-2.866a1 1 0 0 0 .353-1.353ZM18.848 21h-5.696l-4.576-8.008L11.429 8h9.142l2.853 4.992Z"/>' }, "need": { "body": '<path fill="currentColor" d="M29.121 16.879A2.98 2.98 0 0 0 27.01 16H27a2.977 2.977 0 0 0-2.121.879l-4.901 4.901A2.994 2.994 0 0 0 17 19h-7a5.006 5.006 0 0 0-5 5v.667l-3 3.996l1.6 1.2l3.4-4.53V24a3.003 3.003 0 0 1 3-3h7a1 1 0 0 1 0 2h-4v2h4.929a3.972 3.972 0 0 0 2.828-1.172l5.536-5.535A.993.993 0 0 1 27 18h.003a1 1 0 0 1 .704 1.707l-7.414 7.414a2.98 2.98 0 0 1-2.122.879H11v2h7.171a4.966 4.966 0 0 0 3.536-1.465l7.414-7.414a2.999 2.999 0 0 0 0-4.242zm-7.535-8.293L18 12V2h-2v10l-3.586-3.414L11 10l6 6l6-6l-1.414-1.414z"/>' }, "network-1": { "body": '<path fill="currentColor" d="M16 20a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zM5 20a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm5 17a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm12 6a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm5-5a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm-5-5a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zM10 9a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/>' }, "network-2": { "body": '<path fill="currentColor" d="M17 17h5.142a4 4 0 1 0 0-2H17V7h5.142a4 4 0 1 0 0-2H17a2.002 2.002 0 0 0-2 2v8H9.858a4 4 0 1 0 0 2H15v8a2.002 2.002 0 0 0 2 2h5.142a4 4 0 1 0 0-2H17Zm9-3a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2Zm0-10a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM6 18a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm20 6a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2Z"/>' }, "network-3": { "body": '<path fill="currentColor" d="M30 30h-8v-8h8zm-6-2h4v-4h-4zm-4-1H8a6 6 0 0 1 0-12h2v2H8a4 4 0 0 0 0 8h12z"/><path fill="currentColor" d="M20 20h-8v-8h8Zm-6-2h4v-4h-4Z"/><path fill="currentColor" d="M24 17h-2v-2h2a4 4 0 0 0 0-8H12V5h12a6 6 0 0 1 0 12zm-14-7H2V2h8zM4 8h4V4H4z"/>' }, "network-3-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm26 10h-8v-8h8zm-6-2h4v-4h-4zm-4-8h-8v-8h8zm-6-2h4v-4h-4z"/><path fill="currentColor" d="M24 17h-2v-2h2a4 4 0 0 0 0-8H12V5h12a6 6 0 0 1 0 12zm-14-7H2V2h8zM4 8h4V4H4z"/>' }, "network-4": { "body": '<circle cx="21" cy="26" r="2" fill="currentColor"/><circle cx="21" cy="6" r="2" fill="currentColor"/><circle cx="4" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M28 12a3.996 3.996 0 0 0-3.858 3h-4.284a3.966 3.966 0 0 0-5.491-2.643l-3.177-3.97A3.963 3.963 0 0 0 12 6a4 4 0 1 0-4 4a3.96 3.96 0 0 0 1.634-.357l3.176 3.97a3.924 3.924 0 0 0 0 4.774l-3.176 3.97A3.96 3.96 0 0 0 8 22a4 4 0 1 0 4 4a3.962 3.962 0 0 0-.81-2.387l3.176-3.97A3.966 3.966 0 0 0 19.858 17h4.284A3.993 3.993 0 1 0 28 12ZM6 6a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Zm2 22a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm8-10a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm12 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "network-4-reference": { "body": '<circle cx="21" cy="26" r="2" fill="currentColor"/><path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4z"/><circle cx="21" cy="6" r="2" fill="currentColor"/><circle cx="4" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M28 12a3.996 3.996 0 0 0-3.858 3h-4.284a3.966 3.966 0 0 0-5.491-2.643l-3.177-3.97A3.962 3.962 0 0 0 12 6a4 4 0 1 0-4 4a3.96 3.96 0 0 0 1.634-.357l3.176 3.97A3.961 3.961 0 0 0 12 16a3.991 3.991 0 0 0 7.858 1h4.284A3.993 3.993 0 1 0 28 12ZM8 8a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm8 10a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm12 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Z"/>' }, "network-admin-control": { "body": '<path fill="currentColor" d="M27 20.415L25.586 19L23 21.587L20.414 19L19 20.415L21.586 23L19 25.586L20.414 27L23 24.414L25.586 27L27 25.586L24.414 23L27 20.415zM24 4a4.005 4.005 0 0 0-4 4a3.951 3.951 0 0 0 .567 2.019L10.019 20.567A3.952 3.952 0 0 0 8 20a4 4 0 1 0 4 4a3.951 3.951 0 0 0-.567-2.019l10.548-10.548A3.952 3.952 0 0 0 24 12a4 4 0 0 0 0-8zM8 26a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm16-16a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zM8 11.18L5.41 8.59L4 10l4 4l7-7l-1.41-1.41L8 11.18z"/>' }, "network-enterprise": { "body": '<path fill="currentColor" d="M25.798 10a10 10 0 0 0-19.62.124A7.496 7.496 0 0 0 7.5 25H8v-2h-.5a5.496 5.496 0 0 1-.377-10.98l.837-.057l.09-.833A7.993 7.993 0 0 1 23.736 10Z"/><path fill="currentColor" d="M28 12H18a2.002 2.002 0 0 0-2 2v4h-4a2.002 2.002 0 0 0-2 2v10h20V14a2.002 2.002 0 0 0-2-2ZM12 28v-8h4v8Zm16 0H18V14h10Z"/><path fill="currentColor" d="M20 16h2v4h-2zm4 0h2v4h-2zm-4 6h2v4h-2zm4 0h2v4h-2z"/>' }, "network-overlay": { "body": '<path fill="currentColor" d="M22 23h-8.17l2.58-2.59L15 19l-5 5l5 5l1.41-1.41L13.83 25H22v-2zM11 13h8.17l-2.58-2.59L18 9l5 5l-5 5l-1.41-1.41L19.17 15H11v-2z"/><path fill="currentColor" d="M24.5 25H24v-2h.5a5.496 5.496 0 0 0 .377-10.98l-.837-.056l-.09-.834a7.998 7.998 0 0 0-15.9 0l-.09.834l-.837.057A5.496 5.496 0 0 0 7.5 23H8v2h-.5a7.496 7.496 0 0 1-1.322-14.876a10 10 0 0 1 19.644 0A7.496 7.496 0 0 1 24.5 25Z"/>' }, "network-public": { "body": '<path fill="currentColor" d="M22.5 13c-4.7 0-8.5 3.8-8.5 8.5s3.8 8.5 8.5 8.5s8.5-3.8 8.5-8.5s-3.8-8.5-8.5-8.5zm6.5 8h-3c0-2-.3-4-.9-5.5c2.1 1 3.7 3 3.9 5.5zm-6.5 7c-.4-.2-1.3-1.8-1.5-5h2.9c-.2 3.2-1 4.8-1.4 5zM21 21c.1-3.8 1.1-5.8 1.4-6c.4.2 1.4 2.2 1.5 6H21zm-1.1-5.5c-.6 1.5-.8 3.5-.9 5.5h-3c.2-2.5 1.8-4.5 3.9-5.5zM16.2 23H19c.1 1.6.4 3.2.9 4.5c-1.8-.8-3.2-2.5-3.7-4.5zm8.9 4.5c.5-1.3.8-2.8.9-4.5h2.9c-.6 2-2 3.7-3.8 4.5z"/><path fill="currentColor" d="M25.8 10c-.9-4.6-5-8-9.8-8c-4.8 0-8.9 3.4-9.8 8.1c-3.5.7-6.2 3.7-6.2 7.4C0 21.6 3.4 25 7.5 25H11v-2H7.5c-3 0-5.5-2.5-5.5-5.5c0-2.9 2.2-5.3 5.1-5.5H8v-.9c.5-4 3.9-7.1 8-7.1c3.7 0 6.8 2.6 7.7 6h2.1z"/>' }, "new-tab": { "body": '<defs><path id="carbonNewTab0" fill="currentColor" d="M26 26H6V6h10V4H6a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V16h-2Z"/></defs><use href="#carbonNewTab0"/><use href="#carbonNewTab0"/><path fill="currentColor" d="M26 6V2h-2v4h-4v2h4v4h2V8h4V6h-4z"/>' }, "next-filled": { "body": '<path fill="currentColor" d="M2 16A14 14 0 1 0 16 2A14 14 0 0 0 2 16Zm6-1h12.15l-5.58-5.607L16 8l8 8l-8 8l-1.43-1.427L20.15 17H8Z"/><path fill="none" d="m16 8l-1.43 1.393L20.15 15H8v2h12.15l-5.58 5.573L16 24l8-8l-8-8z"/>' }, "next-outline": { "body": '<path fill="currentColor" d="m16 8l-1.43 1.393L20.15 15H8v2h12.15l-5.58 5.573L16 24l8-8l-8-8z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "no-image": { "body": '<path fill="currentColor" d="M30 3.414L28.586 2L2 28.586L3.414 30l2-2H26a2.003 2.003 0 0 0 2-2V5.414zM26 26H7.414l7.793-7.793l2.379 2.379a2 2 0 0 0 2.828 0L22 19l4 3.997zm0-5.832l-2.586-2.586a2 2 0 0 0-2.828 0L19 19.168l-2.377-2.377L26 7.414zM6 22v-3l5-4.997l1.373 1.374l1.416-1.416l-1.375-1.375a2 2 0 0 0-2.828 0L6 16.172V6h16V4H6a2.002 2.002 0 0 0-2 2v16z"/>' }, "no-ticket": { "body": '<path fill="currentColor" d="M28 6h-.586L30 3.414L28.586 2L2 28.586L3.414 30l4-4H28a2.003 2.003 0 0 0 2-2v-5a1 1 0 0 0-1-1a2 2 0 0 1 0-4a1 1 0 0 0 1-1V8a2.002 2.002 0 0 0-2-2zm0 6.127a4 4 0 0 0 0 7.746V24h-7v-3h-2v3H9.414L19 14.414V19h2v-6.586L25.414 8H28zm-24 0V8h15V6H4a2.002 2.002 0 0 0-2 2v5a1 1 0 0 0 1 1a2 2 0 0 1 0 4a1 1 0 0 0-1 1v5h2v-4.127a4 4 0 0 0 0-7.747z"/>' }, "nominal": { "body": '<path fill="currentColor" d="M24 28a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4zM8 28a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4zm8-4a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4z"/>' }, "nominate": { "body": '<path d="M25 23h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3z" fill="currentColor"/><path d="M18 18a4 4 0 1 0 4-4a4 4 0 0 0-4 4zm6 0a2 2 0 1 1-2-2a2 2 0 0 1 2 2z" fill="currentColor"/><path d="M10 18.59L7.41 16L6 17.41l4 4l7-7L15.59 13L10 18.59z" fill="currentColor"/><path d="M14 26H4V6h7.172l3.414 3.414l.586.586H28v8h2v-8a2 2 0 0 0-2-2H16l-3.414-3.414A2 2 0 0 0 11.172 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10z" fill="currentColor"/>', "hidden": true }, "non-certified": { "body": '<path fill="currentColor" d="M6 8h10v2H6zm0 4h8v2H6zm0 4h4v2H6z"/><path fill="currentColor" d="M28 26H7.414L30 3.414L28.586 2l-2 2H4a2.002 2.002 0 0 0-2 2v16h2V6h20.586L2 28.586L3.414 30l2-2H28a2.002 2.002 0 0 0 2-2V10h-2Z"/>' }, "noodle-bowl": { "body": '<path fill="currentColor" d="m11.414 15l-8-8L2 8.414L8.586 15H2v1a14 14 0 0 0 28 0v-1ZM16 28A12.017 12.017 0 0 1 4.041 17H27.96A12.017 12.017 0 0 1 16 28Z"/><path fill="currentColor" d="M22 8a5.005 5.005 0 0 0-1.57.255A8.024 8.024 0 0 0 14 5a7.936 7.936 0 0 0-4.906 1.68L4.414 2L3 3.414l6.05 6.05l.707-.707A5.96 5.96 0 0 1 14 7a6.02 6.02 0 0 1 4.688 2.264a5.06 5.06 0 0 0-.59.61A2.99 2.99 0 0 1 15.754 11H12v2h3.754a4.98 4.98 0 0 0 3.904-1.875A3 3 0 0 1 25 13h2a5.006 5.006 0 0 0-5-5Z"/>' }, "not-available": { "body": '<path fill="currentColor" d="M4 15h10v2H4zm14 0h10v2H18z"/>' }, "not-sent": { "body": '<path fill="currentColor" d="M30 28.59L3.41 2L2 3.41l8 8l-7.34 2.65a1 1 0 0 0 0 1.87l9.6 3.84l3.84 9.6a1 1 0 0 0 .9.63a1 1 0 0 0 .92-.66L20.6 22l8 8zM5.8 15l5.74-2l3.05 3l-1.83 1.83zM17 26.2l-2.79-7L16 17.41l3 3.05zm-1.31-14.75l7.64-2.78l-2.78 7.64l1.56 1.56l3.83-10.53a1 1 0 0 0-1.28-1.28L14.13 9.89z"/>' }, "not-sent-filled": { "body": '<path fill="currentColor" d="M30 28.59L3.41 2L2 3.41l8 8l-7.34 2.65a1 1 0 0 0 0 1.87l8.59 3.43L14.59 16L16 17.41l-3.37 3.37l3.44 8.59A1 1 0 0 0 17 30a1 1 0 0 0 .92-.66L20.6 22l8 8zm-7.51-11.76l3.45-9.49a1 1 0 0 0-1.28-1.28l-9.49 3.45z"/>' }, "notebook": { "body": '<path fill="currentColor" d="M19 10h7v2h-7zm0 5h7v2h-7zm0 5h7v2h-7z"/><path fill="currentColor" d="M28 5H4a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h24a2.003 2.003 0 0 0 2-2V7a2.002 2.002 0 0 0-2-2ZM4 7h11v18H4Zm13 18V7h11l.002 18Z"/>' }, "notebook-reference": { "body": '<path fill="currentColor" d="M4 20v2h3.586L2 27.586L3.414 29L9 23.414V27h2v-7H4zm15-10h7v2h-7zm0 5h7v2h-7zm0 5h7v2h-7z"/><path fill="currentColor" d="M28 5H4a2.002 2.002 0 0 0-2 2v10h2V7h11v20h13a2.002 2.002 0 0 0 2-2V7a2.002 2.002 0 0 0-2-2ZM17 25V7h11l.002 18Z"/>' }, "notification": { "body": '<path fill="currentColor" d="M28.707 19.293L26 16.586V13a10.014 10.014 0 0 0-9-9.95V1h-2v2.05A10.014 10.014 0 0 0 6 13v3.586l-2.707 2.707A1 1 0 0 0 3 20v3a1 1 0 0 0 1 1h7v.777a5.152 5.152 0 0 0 4.5 5.199A5.006 5.006 0 0 0 21 25v-1h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-.293-.707ZM19 25a3 3 0 0 1-6 0v-1h6Zm8-3H5v-1.586l2.707-2.707A1 1 0 0 0 8 17v-4a8 8 0 0 1 16 0v4a1 1 0 0 0 .293.707L27 20.414Z"/>' }, "notification-filled": { "body": '<path fill="currentColor" d="M28.707 19.293L26 16.586V13a10.014 10.014 0 0 0-9-9.95V1h-2v2.05A10.014 10.014 0 0 0 6 13v3.586l-2.707 2.707A1 1 0 0 0 3 20v3a1 1 0 0 0 1 1h7v1a5 5 0 0 0 10 0v-1h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-.293-.707ZM19 25a3 3 0 0 1-6 0v-1h6Z"/>' }, "notification-new": { "body": '<path fill="currentColor" d="M26 16.586V14h-2v3a1 1 0 0 0 .293.707L27 20.414V22H5v-1.586l2.707-2.707A1 1 0 0 0 8 17v-4a7.985 7.985 0 0 1 12-6.918V3.847a9.896 9.896 0 0 0-3-.796V1h-2v2.05A10.014 10.014 0 0 0 6 13v3.586l-2.707 2.707A1 1 0 0 0 3 20v3a1 1 0 0 0 1 1h7v1a5 5 0 0 0 10 0v-1h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-.293-.707ZM19 25a3 3 0 0 1-6 0v-1h6Z"/><circle cx="26" cy="8" r="4" fill="currentColor"/>' }, "notification-off": { "body": '<path fill="currentColor" d="M26 16.586V13a9.922 9.922 0 0 0-1.083-4.502L30 3.414L28.586 2L2 28.586L3.414 30l6-6H11v1a5 5 0 0 0 10 0v-1h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-.293-.707zM19 25a3 3 0 0 1-6 0v-1h6zm8-3H11.414l11.998-11.998A7.949 7.949 0 0 1 24 13v4a1 1 0 0 0 .293.707L27 20.414zM7.707 17.707A1 1 0 0 0 8 17v-4a8.01 8.01 0 0 1 8-8a7.925 7.925 0 0 1 4.986 1.768l1.426-1.426A9.934 9.934 0 0 0 17 3.05V1h-2v2.05A10.014 10.014 0 0 0 6 13v3.586l-3 3L4.414 21z"/>' }, "notification-off-filled": { "body": '<path fill="currentColor" d="M26 16.586V13a9.883 9.883 0 0 0-1.087-4.499L30 3.414L28.586 2L2 28.586L3.414 30l6-6H11v1a5 5 0 0 0 10 0v-1h7a1 1 0 0 0 1-1v-3a1 1 0 0 0-.293-.707zM19 25a3 3 0 0 1-6 0v-1h6zm2.61-20.262A9.926 9.926 0 0 0 17 3.051V1h-2v2.05A10.014 10.014 0 0 0 6 13v3.586l-2.707 2.707A1 1 0 0 0 3 20v3a.974.974 0 0 0 .059.29z"/>' }, "number-0": { "body": '<path fill="currentColor" d="M18 23h-4a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2Zm-4-12v10h4V11Z"/><path fill="currentColor" d="M15 15h2v2h-2z"/>' }, "number-1": { "body": '<path fill="currentColor" d="M16 10v12v-12m1-1h-5v2h3v10h-3v2h8v-2h-3V9Z"/>' }, "number-2": { "body": '<path fill="currentColor" d="M20 23h-8v-6a2 2 0 0 1 2-2h4v-4h-6V9h6a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-4v4h6Z"/>' }, "number-3": { "body": '<path fill="currentColor" d="M18 9h-6v2h6v4h-4v2h4v4h-6v2h6a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2Z"/>' }, "number-4": { "body": '<path fill="currentColor" d="M18 10v8v-8m1-1h-2v8h-3V9h-2v10h5v4h2v-4h1v-2h-1V9Z"/>' }, "number-5": { "body": '<path fill="currentColor" d="M18 23h-6v-2h6v-4h-6V9h8v2h-6v4h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2Z"/>' }, "number-6": { "body": '<path fill="currentColor" d="M18 14h-4v-3h5V9h-5a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-5a2 2 0 0 0-2-2Zm-4 7v-5h4v5Z"/>' }, "number-7": { "body": '<path fill="currentColor" d="M20 9h-8v4h2v-2h3.85L13 23h2.16L20 11V9z"/>' }, "number-8": { "body": '<path fill="currentColor" d="M18 9h-4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2Zm0 2v4h-4v-4Zm-4 10v-4h4v4Z"/>' }, "number-9": { "body": '<path fill="currentColor" d="M18 9h-4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h4v3h-5v2h5a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2Zm0 7h-4v-5h4Z"/>' }, "number-small-0": { "body": '<path fill="currentColor" d="M17 21h-2a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2Zm-2-8v6h2v-6Z"/>' }, "number-small-1": { "body": '<path fill="currentColor" d="M17 19v-8h-2v1h-2v2h2v5h-2v2h6v-2h-2z"/>' }, "number-small-2": { "body": '<path fill="currentColor" d="M19 21h-6v-4a2 2 0 0 1 2-2h2v-2h-4v-2h4a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-2v2h4Z"/>' }, "number-small-3": { "body": '<path fill="currentColor" d="M17 11h-4v2h4v2h-3v2h3v2h-4v2h4a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2Z"/>' }, "number-small-4": { "body": '<path fill="currentColor" d="M17 11v4h-2v-4h-2v6h4v4h2V11h-2z"/>' }, "number-small-5": { "body": '<path fill="currentColor" d="M17 21h-4v-2h4v-2h-4v-6h6v2h-4v2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2Z"/>' }, "number-small-6": { "body": '<path fill="currentColor" d="M17 21h-2a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h3v2h-3v2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2Zm-2-4v2h2v-2Z"/>' }, "number-small-7": { "body": '<path fill="currentColor" d="M16.44 21h-2L17 13h-2v1h-2v-3h6v2l-2.56 8z"/>' }, "number-small-8": { "body": '<path fill="currentColor" d="M17 11h-2a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2Zm0 2v2h-2v-2Zm-2 6v-2h2v2Z"/>' }, "number-small-9": { "body": '<path fill="currentColor" d="M17 21h-3v-2h3v-2h-2a2 2 0 0 1-2-2v-2a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2Zm-2-8v2h2v-2Z"/>' }, "object-storage": { "body": '<path fill="currentColor" d="M28 20h-2v2h2v6H4v-6h10v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="M30 8h-8v6h-6v8h8v-6h6zm-8 12h-4v-4h4zm6-6h-4v-4h4zm-10-4h-8V2h8zm-6-2h4V4h-4z"/>' }, "object-storage-alt": { "body": '<path fill="currentColor" d="M28 20h-2v2h2v6H4v-6h10v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="M21 14a2.981 2.981 0 0 0-2.037.811l-4.004-2.402A2.958 2.958 0 0 0 15 12a2.958 2.958 0 0 0-.041-.409l4.004-2.402A2.99 2.99 0 1 0 18 7a2.934 2.934 0 0 0 .042.41l-4.004 2.402a3 3 0 1 0 0 4.377l4.003 2.402A2.934 2.934 0 0 0 18 17a3 3 0 1 0 3-3Zm0-8a1 1 0 1 1-1 1a1 1 0 0 1 1-1Zm-9 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm9 5a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "observed-hail": { "body": '<path fill="currentColor" d="M4 18A12 12 0 1 0 16 6h-4V1L6 7l6 6V8h4A10 10 0 1 1 6 18Z"/><circle cx="13.5" cy="23.5" r="1.5" fill="currentColor"/><circle cx="10.5" cy="19.5" r="1.5" fill="currentColor"/><circle cx="16.5" cy="19.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M12 16.586L15.586 13L17 14.413L13.413 18zm6 0L21.586 13L23 14.413L19.413 18z"/>' }, "observed-lightning": { "body": '<path fill="currentColor" d="m15.67 24l-1.736-1l2.287-4h-3.889l3.993-7l1.737 1l-2.284 4h3.89l-3.998 7z"/><path fill="currentColor" d="M4 18A12 12 0 1 0 16 6h-4V1L6 7l6 6V8h4A10 10 0 1 1 6 18Z"/>' }, "omega": { "body": '<path fill="currentColor" d="M22.737 25A14.31 14.31 0 0 0 27 15c0-6.58-4.42-11-11-11S5 8.42 5 15a14.31 14.31 0 0 0 4.263 10H4v2h8v-2.238A12.568 12.568 0 0 1 7 15c0-5.467 3.533-9 9-9s9 3.533 9 9a12.568 12.568 0 0 1-5 9.762V27h8v-2Z"/>' }, "opacity": { "body": '<path fill="currentColor" d="M6 6h4v4H6zm4 4h4v4h-4zm4-4h4v4h-4zm8 0h4v4h-4zM6 14h4v4H6zm8 0h4v4h-4zm8 0h4v4h-4zM6 22h4v4H6zm8 0h4v4h-4zm8 0h4v4h-4zm-4-12h4v4h-4zm-8 8h4v4h-4zm8 0h4v4h-4z"/>' }, "open-panel-bottom": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 2v12H4V6ZM4 26v-6h24v6Z"/>' }, "open-panel-filled-bottom": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 2v12H4V6Z"/>' }, "open-panel-filled-left": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 22H12V6h16Z"/>' }, "open-panel-filled-right": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM4 6h16v20H4Z"/>' }, "open-panel-filled-top": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM4 26V14h24v12Z"/>' }, "open-panel-left": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM4 6h6v20H4Zm24 20H12V6h16Z"/>' }, "open-panel-right": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM4 6h16v20H4Zm24 20h-6V6h6Z"/>' }, "open-panel-top": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 2v6H4V6ZM4 26V14h24v12Z"/>' }, "operation": { "body": '<path d="M23 26h-2l5-10l-5-10h2l5 10l-5 10z" fill="currentColor"/><path d="M4 6h2v20H4z" fill="currentColor"/><path d="M16 9h-4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2zm0 12h-4V11h4z" fill="currentColor"/><path d="M13 15h2v2h-2z" fill="currentColor"/>', "hidden": true }, "operation-gauge": { "body": '<path d="M30 4h-6v2h3.75L24 10v2h6v-2h-3.62L30 6V4z" fill="currentColor"/><path d="M20 17.62L22.08 14l-1.73-1l-2.18 3.76A12 12 0 0 0 2 28h2a10 10 0 0 1 13.16-9.48L14 24a2 2 0 1 0 2 2a2 2 0 0 0-.27-1L19 19.35A10 10 0 0 1 24 28h2a12 12 0 0 0-6-10.38z" fill="currentColor"/>', "hidden": true }, "operation-if": { "body": '<path d="M12 13h2v10h-2z" fill="currentColor"/><path d="M12 9h2v2h-2z" fill="currentColor"/><path d="M23 11V9h-3a2 2 0 0 0-2 2v2h-2v2h2v8h2v-8h3v-2h-3v-2z" fill="currentColor"/>', "hidden": true }, "operations-field": { "body": '<path fill="currentColor" d="M20 12V2h2v10zm4 0V2h2v10zm4 0V2h2v10zm-12 8a3.912 3.912 0 0 1-4-4a3.912 3.912 0 0 1 4-4v-2a6 6 0 1 0 6 6h-2a3.912 3.912 0 0 1-4 4Z"/><path fill="currentColor" d="M28.893 18.454L26.098 16l-1.318 1.504l2.792 2.452l-2.36 4.088l-3.427-1.16a9.031 9.031 0 0 1-2.714 1.565L18.36 28h-4.72l-.71-3.55a9.095 9.095 0 0 1-2.695-1.572l-3.447 1.166l-2.36-4.088l2.725-2.395a8.926 8.926 0 0 1-.007-3.128l-2.718-2.39l2.36-4.087l3.427 1.16A9.03 9.03 0 0 1 12.93 7.55L13.64 4H16V2h-2.36a2 2 0 0 0-1.961 1.608l-.504 2.518a10.967 10.967 0 0 0-1.327.754l-2.42-.819a1.998 1.998 0 0 0-2.372.895l-2.36 4.088a2 2 0 0 0 .411 2.502l1.931 1.697C5.021 15.495 5 15.745 5 16c0 .258.01.513.028.766l-1.92 1.688a2 2 0 0 0-.413 2.502l2.36 4.088a1.998 1.998 0 0 0 2.374.895l2.434-.824a10.974 10.974 0 0 0 1.312.759l.503 2.518A2 2 0 0 0 13.64 30h4.72a2 2 0 0 0 1.961-1.608l.504-2.519a10.967 10.967 0 0 0 1.327-.753l2.419.818a1.998 1.998 0 0 0 2.373-.894l2.36-4.088a2 2 0 0 0-.411-2.502Z"/>' }, "operations-record": { "body": '<path fill="currentColor" d="M20 20h10v2H20zm0 4h10v2H20zm0 4h10v2H20zm-4-8a3.912 3.912 0 0 1-4-4a3.912 3.912 0 0 1 4-4a3.912 3.912 0 0 1 4 4h2a6 6 0 1 0-6 6z"/><path fill="currentColor" d="m29.305 11.044l-2.36-4.088a1.998 1.998 0 0 0-2.374-.895l-2.434.824a11.042 11.042 0 0 0-1.312-.758l-.504-2.52A2 2 0 0 0 18.36 2h-4.72a2 2 0 0 0-1.961 1.608l-.504 2.518a10.967 10.967 0 0 0-1.327.754l-2.42-.819a1.998 1.998 0 0 0-2.372.895l-2.36 4.088a2 2 0 0 0 .411 2.502l1.931 1.697C5.021 15.495 5 15.745 5 16c0 .258.01.513.028.766l-1.92 1.688a2 2 0 0 0-.413 2.502l2.36 4.088a1.998 1.998 0 0 0 2.374.895l2.434-.824a10.974 10.974 0 0 0 1.312.759l.503 2.518A2 2 0 0 0 13.64 30H16v-2h-2.36l-.71-3.55a9.095 9.095 0 0 1-2.695-1.572l-3.447 1.166l-2.36-4.088l2.725-2.395a8.926 8.926 0 0 1-.007-3.128l-2.718-2.39l2.36-4.087l3.427 1.16A9.03 9.03 0 0 1 12.93 7.55L13.64 4h4.72l.71 3.55a9.098 9.098 0 0 1 2.695 1.572l3.447-1.166l2.36 4.088l-2.798 2.452L26.092 16l2.8-2.454a2 2 0 0 0 .413-2.502Z"/>' }, "order-details": { "body": '<path fill="currentColor" d="M19 21h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z"/><path fill="currentColor" d="M25 5h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2ZM12 4h8v4h-8Zm13 24H7V7h3v3h12V7h3Z"/>' }, "ordinal": { "body": '<path fill="currentColor" d="M26 26V4h-8v6h-6v6H6v10H2v2h28v-2ZM8 26v-8h4v8Zm6 0V12h4v14Zm6 0V6h4v20Z"/>' }, "outage": { "body": '<path fill="currentColor" d="M12 24h9v2h-9zm1 4h6v2h-6z"/><path fill="currentColor" d="m8.783 18.975l1.418-1.418A6.92 6.92 0 0 1 8 12a7.99 7.99 0 0 1 13.527-5.77l1.414-1.413A9.988 9.988 0 0 0 6 12a8.941 8.941 0 0 0 2.783 6.975zM30 3.415L28.586 2L2 28.586L3.414 30L23.661 9.753A7.707 7.707 0 0 1 24 12a7.203 7.203 0 0 1-2.822 6.143C20.107 19.135 19 20.16 19 22h2c0-.92.526-1.45 1.535-2.386A9.193 9.193 0 0 0 26 12a9.874 9.874 0 0 0-.776-3.81z"/>' }, "outlook-severe": { "body": '<path fill="none" d="M15.125 19h1.75v5.5h-1.75ZM17 27a1 1 0 1 0-1 1a1 1 0 0 0 1-1Z"/><path fill="currentColor" d="m24.908 28.94l-8.076-14.452a.953.953 0 0 0-1.664 0L7.092 28.94A.712.712 0 0 0 7.713 30h16.574a.712.712 0 0 0 .621-1.06ZM15.125 19h1.75v5.5h-1.75ZM16 28a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M24.8 9.136a8.994 8.994 0 0 0-17.6 0a6.493 6.493 0 0 0 .915 12.845L9.222 20H8.5a4.48 4.48 0 0 1-3.37-7.456l5.298 5.297l1.013-1.814l-4.66-4.66a4.402 4.402 0 0 1 1.363-.348l.816-.064l.099-.812c.023-.194.058-.385.097-.573l3.78 3.78l1.014-1.814l-4.014-4.014a7.021 7.021 0 0 1 1.975-2.197L25.886 19.3a4.46 4.46 0 0 1-2.386.7h-.724l1.107 1.98a6.493 6.493 0 0 0 .918-12.844Zm2.5 8.75L13.782 4.368a6.974 6.974 0 0 1 9.16 5.775l.099.812l.815.064A4.517 4.517 0 0 1 28 15.5a4.46 4.46 0 0 1-.7 2.386Z"/>' }, "overflow-menu-horizontal": { "body": '<circle cx="8" cy="16" r="2" fill="currentColor"/><circle cx="16" cy="16" r="2" fill="currentColor"/><circle cx="24" cy="16" r="2" fill="currentColor"/>' }, "overflow-menu-vertical": { "body": '<circle cx="16" cy="8" r="2" fill="currentColor"/><circle cx="16" cy="16" r="2" fill="currentColor"/><circle cx="16" cy="24" r="2" fill="currentColor"/>' }, "overlay": { "body": '<path fill="currentColor" d="M28 8h-4V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h4v4a2.002 2.002 0 0 0 2 2h18a2.002 2.002 0 0 0 2-2V10a2.002 2.002 0 0 0-2-2ZM4 22V4h18v4H10a2.002 2.002 0 0 0-2 2v12Zm18 0h-2.586L10 12.586V10h2.586L22 19.416Zm-12-6.586L16.586 22H10Zm12.001 1.173L15.414 10H22ZM10 28v-4h12a2.002 2.002 0 0 0 2-2V10h4v18Z"/>' }, "package": { "body": '<path fill="currentColor" d="M26 30H6a2 2 0 0 1-2-2V16a2 2 0 0 1 2-2h3v2H6v12h20V16h-3v-2h3a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2Z"/><path fill="currentColor" d="M13 20h6v2h-6zm7.59-11.41L17 12.17V2h-2v10.17l-3.59-3.58L10 10l6 6l6-6l-1.41-1.41z"/>' }, "package-text-analysis": { "body": '<path fill="currentColor" d="M13 22h6v2h-6z"/><path fill="currentColor" d="M2 18v2h2v8c0 1.103.897 2 2 2h20c1.103 0 2-.897 2-2v-8h2v-2H2zm24 10H6v-8h20v8zm3-12h-5c-1.103 0-2-.897-2-2V8c0-1.103.897-2 2-2h5v2h-5v6h5v2zM18 6h-4V2h-2v14h6c1.103 0 2-.897 2-2V8c0-1.103-.897-2-2-2zm-4 8V8h4v6h-4zM8 6H3v2h5v2H4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6V8c0-1.103-.897-2-2-2zm0 8H4v-2h4v2z"/>' }, "page-break": { "body": '<path fill="currentColor" d="M2 18h4v2H2zm24 0h4v2h-4zm-2 4v6H8v-6H6v6a2.006 2.006 0 0 0 2 2h16a2.006 2.006 0 0 0 2-2v-6zM8 16V4h8v6a2.006 2.006 0 0 0 2 2h6v4h2v-6a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v12zM18 4.4l5.6 5.6H18zM10 18h4v2h-4zm8 0h4v2h-4z"/>' }, "page-first": { "body": '<path fill="currentColor" d="M14 16L24 6l1.4 1.4l-8.6 8.6l8.6 8.6L24 26zM8 4h2v24H8z"/>' }, "page-last": { "body": '<path fill="currentColor" d="M18 16L8 26l-1.4-1.4l8.6-8.6l-8.6-8.6L8 6zm4-12h2v24h-2z"/>' }, "page-number": { "body": '<path fill="currentColor" d="M22 26h-6v-6h4v-2h-4v-2h6v6h-4v2h4v2z"/><path fill="currentColor" d="m25.7 9.3l-7-7A.908.908 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h16a2.006 2.006 0 0 0 2-2V10a.908.908 0 0 0-.3-.7ZM18 4.4l5.6 5.6H18ZM24 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6Z"/>' }, "page-scroll": { "body": '<path d="M16 28H4a1.89 1.89 0 0 1-2-2V14a1.89 1.89 0 0 1 2-2h12a1.89 1.89 0 0 1 2 2v12a1.89 1.89 0 0 1-2 2zM4 14v12h12V14z" fill="currentColor"/><path d="M22 19h-2v-9H10V8h10a1.89 1.89 0 0 1 2 2z" fill="currentColor"/><path d="M26 14h-2V6h-8V4h8a1.89 1.89 0 0 1 2 2z" fill="currentColor"/><path d="M24 17v2h2.8L22 24.4V22h-2v6h6v-2h-2.8l4.8-5.4V23h2v-6h-6z" fill="currentColor"/>', "hidden": true }, "paint-brush": { "body": '<path fill="currentColor" d="M28.83 23.17L23 17.33V13a1 1 0 0 0-.29-.71l-10-10a1 1 0 0 0-1.42 0l-9 9a1 1 0 0 0 0 1.42l10 10A1 1 0 0 0 13 23h4.34l5.83 5.84a4 4 0 0 0 5.66-5.66ZM6 10.41l2.29 2.3l1.42-1.42L7.41 9L9 7.41l4.29 4.3l1.42-1.42L10.41 6L12 4.41L18.59 11L11 18.59L4.41 12Zm21.41 17a2 2 0 0 1-2.82 0l-6.13-6.12a1.8 1.8 0 0 0-.71-.29h-4.34l-1-1L20 12.41l1 1v4.34a1 1 0 0 0 .29.7l6.12 6.14a2 2 0 0 1 0 2.82Z"/>' }, "paint-brush-alt": { "body": '<path fill="currentColor" d="M28.828 3.172a4.094 4.094 0 0 0-5.656 0L4.05 22.292A6.954 6.954 0 0 0 2 27.242V30h2.756a6.952 6.952 0 0 0 4.95-2.05L28.828 8.829a3.999 3.999 0 0 0 0-5.657ZM10.91 18.26l2.829 2.829l-2.122 2.121l-2.828-2.828Zm-2.619 8.276A4.966 4.966 0 0 1 4.756 28H4v-.759a4.967 4.967 0 0 1 1.464-3.535l1.91-1.91l2.829 2.828ZM27.415 7.414l-12.261 12.26l-2.829-2.828l12.262-12.26a2.047 2.047 0 0 1 2.828 0a2 2 0 0 1 0 2.828Z"/>' }, "palm-tree": { "body": '<path fill="currentColor" d="M18.57 28C17.897 26.725 16 22.226 16 12v-.131l1.117.744A6.461 6.461 0 0 1 20 18h2a8.457 8.457 0 0 0-3.773-7.05L16.803 10h1.53a7.04 7.04 0 0 1 4.2 1.4l1.867 1.4l1.2-1.6l-1.867-1.4a9.06 9.06 0 0 0-5.4-1.8h-1.216A7.03 7.03 0 0 1 22 6h2V4h-2a9.035 9.035 0 0 0-7 3.364A9.035 9.035 0 0 0 8 4H6v2h2a7.03 7.03 0 0 1 4.883 2h-1.216a9.06 9.06 0 0 0-5.4 1.8L4.4 11.2l1.2 1.6l1.867-1.4a7.04 7.04 0 0 1 4.2-1.4h1.53l-1.423.95A8.457 8.457 0 0 0 8 18h2a6.461 6.461 0 0 1 2.883-5.387L14 11.87V12c0 8.944 1.412 13.765 2.361 16H2v2h28v-2Z"/>' }, "pan-horizontal": { "body": '<path fill="currentColor" d="m24 10l-1.414 1.414L26.172 15H5.828l3.586-3.586L8 10l-6 6l6 6l1.414-1.414L5.828 17h20.344l-3.586 3.586L24 22l6-6l-6-6z"/>' }, "pan-vertical": { "body": '<path fill="currentColor" d="m10 8l1.414 1.414L15 5.828v20.344l-3.586-3.586L10 24l6 6l6-6l-1.414-1.414L17 26.172V5.828l3.586 3.586L22 8l-6-6l-6 6z"/>' }, "panel-expansion": { "body": '<path fill="currentColor" d="M12 6H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2zm-6 8V8h6v6zm20-8h-6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2zm-6 18V8h6v16z"/>' }, "paragraph": { "body": '<path fill="currentColor" d="M27 4H13a7 7 0 0 0 0 14v10h2V6h5v22h2V6h5ZM13 16a5 5 0 0 1 0-10Z"/>' }, "parameter": { "body": '<path fill="currentColor" d="M28 13V8a2.002 2.002 0 0 0-2-2h-3v2h3v5a3.976 3.976 0 0 0 1.382 3A3.976 3.976 0 0 0 26 19v5h-3v2h3a2.002 2.002 0 0 0 2-2v-5a2.002 2.002 0 0 1 2-2v-2a2.002 2.002 0 0 1-2-2Z"/><path fill="currentColor" fill-rule="evenodd" d="m17 9l-.857 3h2L19 9h2l-.857 3H22v2h-2.428l-1.143 4H21v2h-3.143L17 23h-2l.857-3h-2L13 23h-2l.857-3H10v-2h2.429l1.143-4H11v-2h3.143L15 9Zm.572 5h-2l-1.143 4h2Z"/><path fill="currentColor" d="M6 13V8h3V6H6a2.002 2.002 0 0 0-2 2v5a2.002 2.002 0 0 1-2 2v2a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 0 2 2h3v-2H6v-5a3.976 3.976 0 0 0-1.382-3A3.976 3.976 0 0 0 6 13Z"/>' }, "parent-child": { "body": '<path fill="currentColor" d="M28 12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h11v4H9a2 2 0 0 0-2 2v4H4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2H9v-4h14v4h-3a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-3v-4a2 2 0 0 0-2-2h-6v-4ZM12 28H4v-4h8Zm16 0h-8v-4h8ZM4 4h24v6H4Z"/>' }, "partition-auto": { "body": '<path fill="currentColor" d="M26 19c-2.206 0-4 1.794-4 4c0 .684.188 1.317.492 1.88A10.988 10.988 0 0 1 16 27C9.935 27 5 22.065 5 16H3c0 7.168 5.832 13 13 13a12.98 12.98 0 0 0 7.843-2.642A3.967 3.967 0 0 0 26 27c2.206 0 4-1.794 4-4s-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2zM16 3a12.98 12.98 0 0 0-7.843 2.642A3.967 3.967 0 0 0 6 5C3.794 5 2 6.794 2 9s1.794 4 4 4s4-1.794 4-4c0-.684-.188-1.317-.492-1.88A10.988 10.988 0 0 1 16 5c6.065 0 11 4.935 11 11h2c0-7.168-5.832-13-13-13zM6 11c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2z"/>' }, "partition-collection": { "body": '<path fill="currentColor" d="M26 12c-1.858 0-3.41 1.28-3.858 3h-2.728c-.534 0-1.036.208-1.414.586L12.586 21H2v2h10.586c.534 0 1.036-.208 1.414-.586L19.414 17h2.728c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2zm-9.828-3.414L12.586 11H2V9h10.586c.534 0 1.036.208 1.414.586l3.586 3.586l-1.414 1.414z"/>' }, "partition-repartition": { "body": '<path fill="currentColor" d="M26 6c-1.858 0-3.41 1.28-3.858 3h-2.728c-.534 0-1.036.208-1.414.586l-3.586 3.586l1.414 1.414L19.414 11h2.728c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2zm-15.828 5.414L6.586 21H2v2h4.586c.534 0 1.036-.208 1.414-.586l3.586-3.586l-1.414-1.414z"/><path fill="currentColor" d="M26 18c-1.858 0-3.41 1.28-3.858 3h-2.728L8 9.586A1.986 1.986 0 0 0 6.586 9H2v2h4.586L18 22.414c.378.378.88.586 1.414.586h2.728c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4Zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2Z"/>' }, "partition-same": { "body": '<path fill="currentColor" d="M26 18c-1.858 0-3.41 1.28-3.858 3H2v2h20.142c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2zm0-18c-1.858 0-3.41 1.28-3.858 3H2v2h20.142c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2z"/>' }, "partition-specific": { "body": '<path fill="currentColor" d="M26 18c-1.858 0-3.41 1.28-3.858 3h-2.728L14 15.586A1.986 1.986 0 0 0 12.586 15H2v2h10.586L18 22.414c.378.378.88.586 1.414.586h2.728c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2zm0-18c-1.858 0-3.41 1.28-3.858 3h-2.728c-.534 0-1.036.208-1.414.586l-3.586 3.586l1.414 1.414L19.414 11h2.728c.447 1.72 2 3 3.858 3c2.206 0 4-1.794 4-4s-1.794-4-4-4zm0 6c-1.103 0-2-.897-2-2s.897-2 2-2s2 .897 2 2s-.897 2-2 2z"/>' }, "partly-cloudy": { "body": '<path fill="currentColor" d="M27 15h4v2h-4zm-4-7.413l3-3L27.415 6l-3 3zM15 1h2v4h-2zM4.586 26l3-3l1.415 1.415l-3 3zM4.585 6L6 4.587l3 3l-1.414 1.415z"/><path fill="currentColor" d="M1 15h4v2H1zm25.794 5.342a6.962 6.962 0 0 0-1.868-3.267A8.485 8.485 0 0 0 25 16a9 9 0 1 0-14.585 7.033A4.977 4.977 0 0 0 15 30h10a4.995 4.995 0 0 0 1.794-9.658zM9 16a6.995 6.995 0 0 1 13.985-.297A6.888 6.888 0 0 0 20 15a7.04 7.04 0 0 0-6.794 5.342a4.986 4.986 0 0 0-1.644 1.048A6.968 6.968 0 0 1 9 16zm16 12H15a2.994 2.994 0 0 1-.696-5.908l.658-.157l.099-.67a4.992 4.992 0 0 1 9.878 0l.099.67l.658.156A2.994 2.994 0 0 1 25 28z"/>' }, "partly-cloudy-night": { "body": '<path fill="currentColor" d="M30 19a4.974 4.974 0 0 0-3.206-4.658A6.971 6.971 0 0 0 13.758 12.9a13.142 13.142 0 0 1 .131-8.52A1.015 1.015 0 0 0 12.98 3a.983.983 0 0 0-.175.016a13.096 13.096 0 0 0 1.825 25.981c.164.006.328 0 .49 0a13.041 13.041 0 0 0 10.29-5.038A4.99 4.99 0 0 0 30 19Zm-15.297 7.998a11.095 11.095 0 0 1-3.2-21.584a15.182 15.182 0 0 0 .844 9.367A4.988 4.988 0 0 0 15 24h7.677a11.1 11.1 0 0 1-7.556 2.998c-.138 0-.278.004-.418 0ZM25 22H15a2.994 2.994 0 0 1-.696-5.908l.658-.157l.099-.67a4.992 4.992 0 0 1 9.878 0l.099.67l.658.157A2.994 2.994 0 0 1 25 22Z"/>' }, "partnership": { "body": '<path fill="currentColor" d="M8 9a4 4 0 1 1 4-4a4 4 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2 2 0 0 0-2-2zm16 6a4 4 0 1 1 4-4a4 4 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2 2 0 0 0-2-2zm2 27h-4a2 2 0 0 1-2-2v-7h2v7h4v-9h2v-6a1 1 0 0 0-1-1h-6.42L16 20l-4.58-8H5a1 1 0 0 0-1 1v6h2v9h4v-7h2v7a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-7a2 2 0 0 1-2-2v-6a3 3 0 0 1 3-3h7.58L16 16l3.42-6H27a3 3 0 0 1 3 3v6a2 2 0 0 1-2 2v7a2 2 0 0 1-2 2z"/>' }, "passenger-drinks": { "body": '<path fill="currentColor" d="M30 4V2h-8v2a3.99 3.99 0 0 0 3 3.859V11h-2v2h6v-2h-2V7.859A3.99 3.99 0 0 0 30 4zM10.5 9A3.5 3.5 0 1 1 14 5.5A3.504 3.504 0 0 1 10.5 9zm0-5A1.5 1.5 0 1 0 12 5.5A1.502 1.502 0 0 0 10.5 4zm11.975 27.313L19.34 24h-7.102a4.007 4.007 0 0 1-3.866-2.97l-1.634-6.127a3.899 3.899 0 0 1 7.534-2.009l.83 3.106H21v2h-7.435l-1.223-4.59a1.9 1.9 0 0 0-3.671.978l1.634 6.126A2.005 2.005 0 0 0 12.239 22h8.42l3.655 8.525z"/><path fill="currentColor" d="M18 28H7.768a2.002 2.002 0 0 1-1.932-1.485L2.034 12.258l1.932-.516L7.768 26H18Z"/>' }, "passenger-plus": { "body": '<path fill="currentColor" d="M10.5 9A3.5 3.5 0 1 1 14 5.5A3.504 3.504 0 0 1 10.5 9zm0-5A1.5 1.5 0 1 0 12 5.5A1.502 1.502 0 0 0 10.5 4zm11.974 27.313L19.34 24h-7.101a4.007 4.007 0 0 1-3.867-2.97l-1.634-6.127a3.899 3.899 0 0 1 7.535-2.009L15.1 16H21v2h-7.436l-1.223-4.59a1.9 1.9 0 0 0-3.67.978l1.633 6.126A2.005 2.005 0 0 0 12.238 22h8.42l3.655 8.525zM30 6h-4V2h-2v4h-4v2h4v4h2V8h4V6z"/><path fill="currentColor" d="M18 28H7.768a2.002 2.002 0 0 1-1.933-1.485L2.033 12.258l1.933-.516L7.768 26H18Z"/>' }, "password": { "body": '<path fill="currentColor" d="M21 2a8.998 8.998 0 0 0-8.612 11.612L2 24v6h6l10.388-10.388A9 9 0 1 0 21 2Zm0 16a7.013 7.013 0 0 1-2.032-.302l-1.147-.348l-.847.847l-3.181 3.181L12.414 20L11 21.414l1.379 1.379l-1.586 1.586L9.414 23L8 24.414l1.379 1.379L7.172 28H4v-3.172l9.802-9.802l.848-.847l-.348-1.147A7 7 0 1 1 21 18Z"/><circle cx="22" cy="10" r="2" fill="currentColor"/>' }, "paste": { "body": '<path fill="currentColor" d="M26 20h-8.17l2.58-2.59L19 16l-5 5l5 5l1.41-1.41L17.83 22H26v8h2v-8a2 2 0 0 0-2-2Z"/><path fill="currentColor" d="m23.71 9.29l-7-7A1 1 0 0 0 16 2H6a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h8v-2H6V4h8v6a2 2 0 0 0 2 2h6v2h2v-4a1 1 0 0 0-.29-.71ZM16 4.41L21.59 10H16Z"/>' }, "pause": { "body": '<path fill="currentColor" d="M12 8v16H8V8h4m0-2H8a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2zm12 2v16h-4V8h4m0-2h-4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2z"/>' }, "pause-filled": { "body": '<path fill="currentColor" d="M12 6h-2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2zm10 0h-2a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2z"/>' }, "pause-future": { "body": '<path fill="currentColor" d="M14 11h-2v11h2V11zm6 0h-2v11h2V11z"/><path fill="currentColor" d="M16 2a13.916 13.916 0 0 1 10 4.234V2h2v8h-8V8h4.922A11.982 11.982 0 1 0 28 16h2A14 14 0 1 1 16 2Z"/>' }, "pause-outline": { "body": '<path fill="currentColor" d="M14 10h-2v12h2V10zm6 0h-2v12h2V10z"/><path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12 12 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Z"/>' }, "pause-outline-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-2 20h-2V10h2Zm6 0h-2V10h2Z"/>' }, "pause-past": { "body": '<path fill="currentColor" d="M14 11h-2v11h2V11zm6 0h-2v11h2V11z"/><path fill="currentColor" d="M16 2A13.916 13.916 0 0 0 6 6.234V2H4v8h8V8H7.078A11.982 11.982 0 1 1 4 16H2A14 14 0 1 0 16 2Z"/>' }, "pcn-e-node": { "body": '<path fill="currentColor" d="M20 11V9h-8v14h8v-2h-6v-4h5v-2h-5v-4h6z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "pcn-military": { "body": '<path fill="currentColor" d="m16 16l-1.593 3l-3.407.414l2.5 2.253L13 25l3-1.875L19 25l-.5-3.333l2.5-2.253L17.5 19L16 16z"/><path fill="currentColor" d="M12.414 17.414L16 13.834l3.588 3.582L21 16l-5-5l-5 5l1.414 1.414z"/><path fill="currentColor" d="M12.414 12.414L16 8.834l3.588 3.582L21 11l-5-5l-5 5l1.414 1.414z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "pcn-p-node": { "body": '<path fill="currentColor" d="M14 23h-2V9h6a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2h-4Zm0-7h4v-5.002h-4Z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "pcn-z-node": { "body": '<path fill="currentColor" d="M20 9h-8v2h6l-6 10v2h8v-2h-6l6-10V9z"/><path fill="currentColor" d="M30.414 17.414a2 2 0 0 0 0-2.828l-5.787-5.787l2.9-2.862a2.002 2.002 0 1 0-1.44-1.388l-2.874 2.836l-5.799-5.8a2 2 0 0 0-2.828 0L8.799 7.374L5.937 4.472A2.002 2.002 0 1 0 4.55 5.914l2.835 2.873l-5.8 5.799a2 2 0 0 0 0 2.828l5.8 5.799l-2.835 2.873a1.998 1.998 0 1 0 1.387 1.442l2.862-2.9l5.787 5.786a2 2 0 0 0 2.828 0l5.8-5.799l2.872 2.836a1.998 1.998 0 1 0 1.442-1.387l-2.9-2.863ZM16 29L3 16L16 3l13 13Z"/>' }, "pdf": { "body": '<path fill="currentColor" d="M30 11V9h-8v14h2v-6h5v-2h-5v-4h6zM8 9H2v14h2v-5h4a2 2 0 0 0 2-2v-5a2 2 0 0 0-2-2zm0 7H4v-5h4zm8 7h-4V9h4a4 4 0 0 1 4 4v6a4 4 0 0 1-4 4zm-2-2h2a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2h-2z"/>' }, "pdf-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm18-4h2v-6h5V8h-5V4h6V2h-8v14zM16 2h-4v14h4a4 4 0 0 0 4-4V6a4 4 0 0 0-4-4zm2 10a2 2 0 0 1-2 2h-2V4h2a2 2 0 0 1 2 2zM8 2H2v14h2v-5h4a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zm0 7H4V4h4z"/>' }, "pedestrian": { "body": '<path fill="currentColor" d="m21.677 14l-1.245-3.114A2.986 2.986 0 0 0 17.646 9h-4.092a3.002 3.002 0 0 0-1.544.428L7 12.434V18h2v-4.434l3-1.8v11.931l-3.462 5.194L10.202 30L14 24.303V11h3.646a.995.995 0 0 1 .928.629L20.323 16H26v-2Z"/><path fill="currentColor" d="M17.051 18.316L19 24.162V30h2v-6.162l-2.051-6.154l-1.898.632zM16.5 8A3.5 3.5 0 1 1 20 4.5A3.504 3.504 0 0 1 16.5 8zm0-5A1.5 1.5 0 1 0 18 4.5A1.502 1.502 0 0 0 16.5 3z"/>' }, "pedestrian-child": { "body": '<path fill="currentColor" d="M26 16h-8.532l-5-6H5a3.003 3.003 0 0 0-3 3v6a2.002 2.002 0 0 0 2 2v7a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2v-7h-2v7H6v-9H4v-6a1 1 0 0 1 1-1h6.532l5 6H26a1 1 0 0 1 1 1v3h-2v6h-3v-6h-2v6a2.002 2.002 0 0 0 2 2h3a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0 2-2v-3a3.003 3.003 0 0 0-3-3Z"/><path fill="currentColor" d="M23.5 15a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5zm0-5a1.5 1.5 0 1 0 1.5 1.5a1.502 1.502 0 0 0-1.5-1.5zM8 9a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/>' }, "pedestrian-family": { "body": '<path fill="currentColor" d="M20 30h-3a2.002 2.002 0 0 1-2-2v-5h2v5h3v-5h2v-4a1.001 1.001 0 0 0-1-1h-8.72l-2-6H4a1.001 1.001 0 0 0-1 1v6h2v9h4v-7h2v7a2.002 2.002 0 0 1-2 2H5a2.002 2.002 0 0 1-2-2v-7a2.002 2.002 0 0 1-2-2v-6a3.003 3.003 0 0 1 3-3h6.28a1.998 1.998 0 0 1 1.897 1.367L13.72 16H21a3.003 3.003 0 0 1 3 3v4a2.002 2.002 0 0 1-2 2v3a2.002 2.002 0 0 1-2 2zm8 0h-2V19h3v-6a1.001 1.001 0 0 0-1-1h-4v-2h4a3.003 3.003 0 0 1 3 3v6a2.002 2.002 0 0 1-2 2h-1zM7 9a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm18 6a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z"/><path fill="currentColor" d="M18.5 15a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5Zm0-5a1.5 1.5 0 1 0 1.5 1.5a1.502 1.502 0 0 0-1.5-1.5Z"/>' }, "pen": { "body": '<path fill="currentColor" d="M27.307 6.107L30 3.414L28.586 2l-2.693 2.693L24.8 3.6a1.933 1.933 0 0 0-2.8 0l-18 18V28h6.4l18-18a1.933 1.933 0 0 0 0-2.8ZM9.6 26H6v-3.6L23.4 5L27 8.6ZM9 11.586L16.586 4L18 5.414L10.414 13z"/>' }, "pen-fountain": { "body": '<path fill="currentColor" d="m29.707 5.293l-3-3a1 1 0 0 0-1.414 0L19.586 8h-2.491a11.012 11.012 0 0 0-10.383 7.366L2.056 28.67a1 1 0 0 0 1.275 1.274l13.303-4.656A11.012 11.012 0 0 0 24 14.905v-2.49l5.707-5.708a1 1 0 0 0 0-1.414Zm-7.414 6A1 1 0 0 0 22 12v2.905a9.01 9.01 0 0 1-6.027 8.495l-9.168 3.209L16 17.414L14.586 16L5.39 25.195l3.21-9.168A9.01 9.01 0 0 1 17.095 10H20a1 1 0 0 0 .707-.293L26 4.414L27.586 6Z"/>' }, "pending": { "body": '<circle cx="9" cy="16" r="2" fill="currentColor"/><circle cx="23" cy="16" r="2" fill="currentColor"/><circle cx="16" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "pending-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2ZM8 18a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm8 0a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm8 0a2 2 0 1 1 2-2a2 2 0 0 1-2 2Z"/><path fill="none" d="M10 16a2 2 0 1 1-2-2a2 2 0 0 1 2 2Zm6-2a2 2 0 1 0 2 2a2 2 0 0 0-2-2Zm8 0a2 2 0 1 0 2 2a2 2 0 0 0-2-2Z"/>' }, "percentage": { "body": '<path fill="currentColor" d="M9 14a5 5 0 1 1 5-5a5.005 5.005 0 0 1-5 5Zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3ZM4 26.586L26.585 4L28 5.415L5.414 28zM23 28a5 5 0 1 1 5-5a5.005 5.005 0 0 1-5 5Zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3Z"/>' }, "percentage-filled": { "body": '<path fill="currentColor" d="M9 14a5 5 0 1 1 5-5a5.005 5.005 0 0 1-5 5ZM4 26.586L26.585 4L28 5.415L5.414 28zM23 28a5 5 0 1 1 5-5a5.005 5.005 0 0 1-5 5Z"/>' }, "person": { "body": '<path fill="currentColor" d="M18 30h-4a2 2 0 0 1-2-2v-7a2 2 0 0 1-2-2v-6a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v6a2 2 0 0 1-2 2v7a2 2 0 0 1-2 2zm-5-18a.94.94 0 0 0-1 1v6h2v9h4v-9h2v-6a.94.94 0 0 0-1-1zm3-3a4 4 0 1 1 4-4a4 4 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2 2 0 0 0-2-2z"/>' }, "person-favorite": { "body": '<path fill="currentColor" d="M10 31H6a2.006 2.006 0 0 1-2-2v-7a2.006 2.006 0 0 1-2-2v-6a2.946 2.946 0 0 1 3-3h6a2.946 2.946 0 0 1 3 3v6a2.006 2.006 0 0 1-2 2v7a2.006 2.006 0 0 1-2 2zM5 13a.945.945 0 0 0-1 1v6h2v9h4v-9h2v-6a.945.945 0 0 0-1-1zm3-3a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm20.766.256A4.212 4.212 0 0 0 23 4.032a4.212 4.212 0 0 0-5.766.224a4.319 4.319 0 0 0 0 6.044l5.764 5.84l.002-.002l.002.001l5.764-5.839a4.319 4.319 0 0 0 0-6.044zm-1.424 4.639l-4.34 4.397L23 13.29l-.002.002l-4.34-4.397a2.308 2.308 0 0 1 0-3.234a2.264 2.264 0 0 1 3.156 0l1.181 1.207l.005-.005l.005.005l1.18-1.207a2.264 2.264 0 0 1 3.157 0a2.308 2.308 0 0 1 0 3.234z"/>' }, "pest": { "body": '<circle cx="7.5" cy="9.5" r="1.5" fill="currentColor"/><circle cx="13" cy="13" r="1" fill="currentColor"/><circle cx="22" cy="21" r="1" fill="currentColor"/><path fill="currentColor" d="M25 14a8.984 8.984 0 0 0-7 3.356V13a10.905 10.905 0 0 0-1.01-4.585l-.356-.776l-.823.231A2.955 2.955 0 0 1 15 8a3.003 3.003 0 0 1-3-3a2.957 2.957 0 0 1 .13-.81l.232-.824l-.777-.357A10.912 10.912 0 0 0 7 2H2v7a10.895 10.895 0 0 0 2.234 6.627l.389.428l.54-.038a5.529 5.529 0 0 1 5.362 3.256l.221.497l.538.084A11.022 11.022 0 0 0 13 20h3v10h2v-4h3a9.01 9.01 0 0 0 9-9v-3Zm-12.898 3.947A7.51 7.51 0 0 0 5.528 14A8.895 8.895 0 0 1 4 9V4h3a8.862 8.862 0 0 1 3.026.53A4.246 4.246 0 0 0 10 5a4.966 4.966 0 0 0 5.47 4.974A8.88 8.88 0 0 1 16 13v5h-3a8.115 8.115 0 0 1-.898-.053ZM28 17a7.008 7.008 0 0 1-7 7h-3v-1a7.01 7.01 0 0 1 5.021-6.71A1.497 1.497 0 1 0 26 16.5a1.485 1.485 0 0 0-.092-.5H28Z"/>' }, "pet-image-b": { "body": '<defs/><path d="M19 21h2v3h-2z" fill="currentColor"/><path d="M19 0h2v3h-2z" fill="currentColor"/><path d="M8 11h3v2H8z" fill="currentColor"/><path d="M29 11h3v2h-3z" fill="currentColor"/><path transform="rotate(-45 12.586 4.577)" d="M11.59 3.07h1.98v3h-1.98z" fill="currentColor"/><path transform="rotate(-45 27.43 19.408)" d="M26.44 17.92h1.98v3h-1.98z" fill="currentColor"/><path transform="rotate(-45 12.592 19.414)" d="M11.09 18.42h3v1.98h-3z" fill="currentColor"/><path transform="rotate(-45 27.423 4.57)" d="M25.93 3.58h3v1.98h-3z" fill="currentColor"/><path d="M20 5a7 7 0 1 0 7 7a7 7 0 0 0-7-7zm0 12a5 5 0 0 1 0-10z" fill="currentColor"/><path d="M5 18H0v14h5a3 3 0 0 0 3-3v-2a3 3 0 0 0-.78-2A3 3 0 0 0 8 23v-2a3 3 0 0 0-3-3zm-3 2h3a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1H2zm4 9a1 1 0 0 1-1 1H2v-4h3a1 1 0 0 1 1 1z" fill="currentColor"/><path d="M2 2h7V0H0v9h2V2z" fill="currentColor"/>', "hidden": true }, "pet-image-o": { "body": '<path d="M11 29h2v3h-2z" fill="currentColor"/><path d="M11 8h2v3h-2z" fill="currentColor"/><path d="M0 19h3v2H0z" fill="currentColor"/><path d="M21 19h3v2h-3z" fill="currentColor"/><path d="M2.82 12.233l1.4-1.4l2.122 2.122l-1.4 1.4z" fill="currentColor"/><path d="M17.674 27.066l1.4-1.4l2.122 2.121l-1.4 1.4z" fill="currentColor"/><path d="M2.83 27.79l2.122-2.12l1.4 1.4l-2.121 2.121z" fill="currentColor"/><path d="M17.664 12.937l2.121-2.121l1.4 1.4l-2.121 2.121z" fill="currentColor"/><path d="M12 13a7 7 0 1 0 7 7a7 7 0 0 0-7-7zm0 12a5 5 0 0 1 0-10z" fill="currentColor"/><path d="M2 2h7V0H0v9h2V2z" fill="currentColor"/><path d="M30 0h-4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm-4 12V2h4v10z" fill="currentColor"/>', "hidden": true }, "phone": { "body": '<path fill="currentColor" d="M26 29h-.17C6.18 27.87 3.39 11.29 3 6.23A3 3 0 0 1 5.76 3h5.51a2 2 0 0 1 1.86 1.26L14.65 8a2 2 0 0 1-.44 2.16l-2.13 2.15a9.37 9.37 0 0 0 7.58 7.6l2.17-2.15a2 2 0 0 1 2.17-.41l3.77 1.51A2 2 0 0 1 29 20.72V26a3 3 0 0 1-3 3ZM6 5a1 1 0 0 0-1 1v.08C5.46 12 8.41 26 25.94 27a1 1 0 0 0 1.06-.94v-5.34l-3.77-1.51l-2.87 2.85l-.48-.06c-8.7-1.09-9.88-9.79-9.88-9.88l-.06-.48l2.84-2.87L11.28 5Z"/>' }, "phone-application": { "body": '<path fill="currentColor" d="M26 2h4v4h-4zm0 6h4v4h-4zm-6-6h4v4h-4zm0 6h4v4h-4zm5 22h-.17C5.18 28.87 2.39 12.29 2 7.23a3 3 0 0 1 2.761-3.221Q4.88 4 5 4h5.27a2 2 0 0 1 1.86 1.26L13.65 9a2 2 0 0 1-.44 2.16l-2.13 2.15a9.36 9.36 0 0 0 7.58 7.6l2.17-2.15a2 2 0 0 1 2.17-.41l3.77 1.51A2 2 0 0 1 28 21.72V27a3 3 0 0 1-3 3zM5 6a1 1 0 0 0-1.003.997c0 .028 0 .055.003.083C4.46 13 7.41 27 24.94 28a1 1 0 0 0 1.058-.938L26 27v-5.28l-3.77-1.51l-2.87 2.85l-.48-.06C10.18 21.91 9 13.21 9 13.12l-.06-.48l2.84-2.87L10.28 6z"/>' }, "phone-block": { "body": '<path fill="currentColor" d="M26 29h-.17C6.18 27.87 3.39 11.29 3 6.23a3 3 0 0 1 2.761-3.221Q5.88 3 6 3h5.27a2 2 0 0 1 1.86 1.26L14.65 8a2 2 0 0 1-.44 2.16l-2.13 2.15a9.36 9.36 0 0 0 7.58 7.6l2.17-2.15a2 2 0 0 1 2.17-.41l3.77 1.51A2 2 0 0 1 29 20.72V26a3 3 0 0 1-3 3ZM6 5a1 1 0 0 0-1.003.997q0 .042.003.083C5.46 12 8.41 26 25.94 27a1 1 0 0 0 1.058-.938L27 26v-5.28l-3.77-1.51l-2.87 2.85l-.48-.06c-8.7-1.09-9.88-9.79-9.88-9.88l-.06-.48l2.84-2.87L11.28 5Z"/><path fill="currentColor" d="M24.41 9L28 5.41L26.59 4L23 7.59L19.41 4L18 5.41L21.59 9L18 12.59L19.41 14L23 10.41L26.59 14L28 12.59L24.41 9z"/>' }, "phone-block-filled": { "body": '<path fill="currentColor" d="m20.333 21.482l2.24-2.24a2.167 2.167 0 0 1 2.337-.48l2.728 1.092A2.167 2.167 0 0 1 29 21.866v4.961a2.167 2.167 0 0 1-2.284 2.169C7.594 27.806 3.732 11.61 3.015 5.408A2.162 2.162 0 0 1 5.169 3h4.873a2.167 2.167 0 0 1 2.012 1.362l1.091 2.728a2.167 2.167 0 0 1-.48 2.337l-2.24 2.24s1.242 8.732 9.908 9.815Z"/><path fill="currentColor" d="M24.41 9L28 5.41L26.59 4L23 7.59L19.41 4L18 5.41L21.59 9L18 12.59L19.41 14L23 10.41L26.59 14L28 12.59L24.41 9z"/>' }, "phone-filled": { "body": '<path fill="currentColor" d="m20.33 21.48l2.24-2.24a2.19 2.19 0 0 1 2.34-.48l2.73 1.09a2.18 2.18 0 0 1 1.36 2v5A2.17 2.17 0 0 1 26.72 29C7.59 27.81 3.73 11.61 3 5.41A2.17 2.17 0 0 1 5.17 3H10a2.16 2.16 0 0 1 2 1.36l1.09 2.73a2.16 2.16 0 0 1-.47 2.34l-2.24 2.24s1.29 8.73 9.95 9.81Z"/>' }, "phone-incoming": { "body": '<path fill="currentColor" d="M26 29h-.17C6.18 27.87 3.39 11.29 3 6.23a3 3 0 0 1 2.761-3.221Q5.88 3 6 3h5.27a2 2 0 0 1 1.86 1.26L14.65 8a2 2 0 0 1-.44 2.16l-2.13 2.15a9.36 9.36 0 0 0 7.58 7.6l2.17-2.15a2 2 0 0 1 2.17-.41l3.77 1.51A2 2 0 0 1 29 20.72V26a3 3 0 0 1-3 3ZM6 5a1 1 0 0 0-1.003.997q0 .042.003.083C5.46 12 8.41 26 25.94 27a1 1 0 0 0 1.058-.938L27 26v-5.28l-3.77-1.51l-2.87 2.85l-.48-.06c-8.7-1.09-9.88-9.79-9.88-9.88l-.06-.48l2.84-2.87L11.28 5Z"/><path fill="currentColor" d="M27 13v-2h-4.586L29 4.414L27.586 3L21 9.586V5h-2v8h8z"/>' }, "phone-incoming-filled": { "body": '<path fill="currentColor" d="m20.333 21.482l2.24-2.24a2.167 2.167 0 0 1 2.337-.48l2.728 1.092A2.167 2.167 0 0 1 29 21.866v4.961a2.167 2.167 0 0 1-2.284 2.169C7.594 27.806 3.732 11.61 3.015 5.408A2.162 2.162 0 0 1 5.169 3h4.873a2.167 2.167 0 0 1 2.012 1.362l1.091 2.728a2.167 2.167 0 0 1-.48 2.337l-2.24 2.24s1.242 8.732 9.908 9.815Z"/><path fill="currentColor" d="M27 13v-2h-4.586L29 4.414L27.586 3L21 9.586V5h-2v8h8z"/>' }, "phone-ip": { "body": '<path fill="currentColor" d="M16 14h2v2h-2zm4 0h2v2h-2zm4 0h2v2h-2zm-8 4h2v2h-2zm4 0h2v2h-2zm4 0h2v2h-2zm-8 4h2v2h-2zm4 0h2v2h-2zm4 0h2v2h-2zm-8-12h10v2H16z"/><path fill="currentColor" d="M28 6H14V5a2.002 2.002 0 0 0-2-2H8a2.002 2.002 0 0 0-2 2v1H4a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V8a2.002 2.002 0 0 0-2-2ZM8 5h4v17H8Zm20 21H4V8h2v14a2.002 2.002 0 0 0 2 2h4a2.002 2.002 0 0 0 2-2V8h14Z"/>' }, "phone-off": { "body": '<path fill="currentColor" d="M9.19 18.56A25.66 25.66 0 0 1 5 6.08V6a1 1 0 0 1 1-1h5.28l1.5 3.77l-2.84 2.87l.06.48a13 13 0 0 0 1.46 4.17l1.46-1.46a9.34 9.34 0 0 1-.84-2.52l2.13-2.15A2 2 0 0 0 14.65 8l-1.52-3.74A2 2 0 0 0 11.27 3H5.76A3 3 0 0 0 3 6.23A28 28 0 0 0 7.79 20zm18.58.3L24 17.35a2 2 0 0 0-2.17.41l-2.17 2.15A9.17 9.17 0 0 1 15.45 18L30 3.41L28.59 2L2 28.59L3.41 30l7-7c3.38 3.18 8.28 5.62 15.39 6h.2a3 3 0 0 0 3-3v-5.28a2 2 0 0 0-1.23-1.86zM27 26v.06a1 1 0 0 1-1.06.94c-6.51-.37-11-2.54-14.11-5.42L14 19.44A10.77 10.77 0 0 0 19.88 22l.48.06l2.87-2.85L27 20.72z"/>' }, "phone-off-filled": { "body": '<path fill="currentColor" d="m26.74 19.56l-2.52-1a2 2 0 0 0-2.15.44L20 21.06a9.93 9.93 0 0 1-5.35-2.29L30 3.41L28.59 2L2 28.59L3.41 30l7.93-7.92c3.24 3.12 7.89 5.5 14.55 5.92A2 2 0 0 0 28 26v-4.59a2 2 0 0 0-1.26-1.85zM8.15 18.19l3.52-3.52a11.68 11.68 0 0 1-.82-2.67l2.07-2.07a2 2 0 0 0 .44-2.15l-1-2.52A2 2 0 0 0 10.5 4H6a2 2 0 0 0-2 2.22a29 29 0 0 0 4.15 11.97z"/>' }, "phone-outgoing": { "body": '<path fill="currentColor" d="M26 29h-.2C6.2 27.9 3.4 11.3 3 6.2C2.9 4.6 4.1 3.1 5.8 3h5.5c.8 0 1.6.5 1.9 1.3L14.6 8c.3.7.1 1.6-.4 2.2l-2.1 2.1c.7 3.9 3.7 6.9 7.6 7.6l2.2-2.1c.6-.6 1.4-.7 2.2-.4l3.8 1.5c.7.3 1.2 1 1.2 1.9V26c-.1 1.7-1.4 3-3.1 3zM6 5c-.6 0-1 .4-1 1v.1C5.5 12 8.4 26 25.9 27c.6 0 1-.4 1.1-.9v-5.4l-3.8-1.5l-2.9 2.9l-.4-.1c-8.7-1.1-9.9-9.8-9.9-9.9l-.1-.5l2.8-2.9L11.3 5H6z"/><path fill="currentColor" d="M20 4v2h4.6L18 12.6l1.4 1.4L26 7.4V12h2V4z"/>' }, "phone-outgoing-filled": { "body": '<path fill="currentColor" d="m20.333 21.482l2.24-2.24a2.167 2.167 0 0 1 2.337-.48l2.728 1.092A2.167 2.167 0 0 1 29 21.866v4.961a2.167 2.167 0 0 1-2.284 2.169C7.594 27.806 3.732 11.61 3.015 5.408A2.162 2.162 0 0 1 5.169 3h4.873a2.167 2.167 0 0 1 2.012 1.362l1.091 2.728a2.167 2.167 0 0 1-.48 2.337l-2.24 2.24s1.242 8.732 9.908 9.815Z"/><path fill="currentColor" d="M20 4v2h4.586L18 12.586L19.414 14L26 7.414V12h2V4h-8z"/>' }, "phone-settings": { "body": '<path fill="currentColor" d="M30 10V8h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 24 4.101V2h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 18.101 8H16v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V16h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 27.899 10Zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/><path fill="currentColor" d="M25 30h-.17C5.18 28.87 2.39 12.29 2 7.23a3 3 0 0 1 2.761-3.221Q4.88 4 5 4h5.27a2 2 0 0 1 1.86 1.26L13.65 9a2 2 0 0 1-.44 2.16l-2.13 2.15a9.36 9.36 0 0 0 7.58 7.6l2.17-2.15a2 2 0 0 1 2.17-.41l3.77 1.51A2 2 0 0 1 28 21.72V27a3 3 0 0 1-3 3ZM5 6a1 1 0 0 0-1.003.997c0 .028 0 .055.003.083C4.46 13 7.41 27 24.94 28a1 1 0 0 0 1.058-.938L26 27v-5.28l-3.77-1.51l-2.87 2.85l-.48-.06C10.18 21.91 9 13.21 9 13.12l-.06-.48l2.84-2.87L10.28 6Z"/>' }, "phone-voice": { "body": '<path fill="currentColor" d="M24 13h-2a3.003 3.003 0 0 0-3-3V8a5.006 5.006 0 0 1 5 5Z"/><path fill="currentColor" d="M28 13h-2a7.008 7.008 0 0 0-7-7V4a9.01 9.01 0 0 1 9 9zm-2 16h-.17C6.18 27.87 3.39 11.29 3 6.23a3 3 0 0 1 2.761-3.221Q5.88 3 6 3h5.27a2 2 0 0 1 1.86 1.26L14.65 8a2 2 0 0 1-.44 2.16l-2.13 2.15a9.36 9.36 0 0 0 7.58 7.6l2.17-2.15a2 2 0 0 1 2.17-.41l3.77 1.51A2 2 0 0 1 29 20.72V26a3 3 0 0 1-3 3zM6 5a1 1 0 0 0-1.003.997q0 .042.003.083C5.46 12 8.41 26 25.94 27a1 1 0 0 0 1.058-.938L27 26v-5.28l-3.77-1.51l-2.87 2.85l-.48-.06c-8.7-1.09-9.88-9.79-9.88-9.88l-.06-.48l2.84-2.87L11.28 5z"/>' }, "phone-voice-filled": { "body": '<path fill="currentColor" d="M24 13h-2a3.003 3.003 0 0 0-3-3V8a5.006 5.006 0 0 1 5 5Z"/><path fill="currentColor" d="M28 13h-2a7.008 7.008 0 0 0-7-7V4a9.01 9.01 0 0 1 9 9zm-7.667 8.482l2.24-2.24a2.167 2.167 0 0 1 2.337-.48l2.728 1.092A2.167 2.167 0 0 1 29 21.866v4.961a2.167 2.167 0 0 1-2.284 2.169C7.594 27.806 3.732 11.61 3.015 5.408A2.162 2.162 0 0 1 5.169 3h4.873a2.167 2.167 0 0 1 2.012 1.362l1.091 2.728a2.167 2.167 0 0 1-.48 2.337l-2.24 2.24s1.242 8.732 9.908 9.815z"/>' }, "phrase-sentiment": { "body": '<path fill="currentColor" d="M18.303 10a2.662 2.662 0 0 0-1.908.806l-.393.405l-.397-.405a2.662 2.662 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L16.002 19l4.209-4.298a2.8 2.8 0 0 0 0-3.896A2.662 2.662 0 0 0 18.303 10Z"/><path fill="currentColor" d="M17.736 30L16 29l4-7h6a1.997 1.997 0 0 0 2-2V8a1.997 1.997 0 0 0-2-2H6a1.997 1.997 0 0 0-2 2v12a1.997 1.997 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a3.999 3.999 0 0 1 4-4h20a3.999 3.999 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.835Z"/>' }, "picnic-area": { "body": '<path fill="currentColor" d="M24 12a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm2 16h-4.153l-.667-4H24v-2H8v2h2.82l-.667 4H6v2h3.82l-.667 4h2.027l.667-4h8.305l.667 4h2.028l-.667-4H26zm-13.82 0l.666-4h6.307l.666 4z"/>' }, "piggy-bank": { "body": '<path fill="currentColor" d="M16.5 14H20v-2h-2v-1h-2v1.05a2.5 2.5 0 0 0 .5 4.95h1a.5.5 0 0 1 0 1H14v2h2v1h2v-1.05a2.5 2.5 0 0 0-.5-4.95h-1a.5.5 0 0 1 0-1Z"/><path fill="currentColor" d="M29 13h-2.02A5.779 5.779 0 0 0 25 8.852V5a1 1 0 0 0-1.6-.8L19.667 7H15c-5.51 0-9.463 3.241-9.948 8H5a1 1 0 0 1-1-1v-2H2v2a3.003 3.003 0 0 0 3 3h.07A9.173 9.173 0 0 0 9 23.557V27a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-2h3v2a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-3.363A5.093 5.093 0 0 0 26.819 20H29a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1Zm-1 5h-2.876c-.305 2.753-.824 3.485-3.124 4.315V26h-2v-3h-7v3h-2v-3.622A7.013 7.013 0 0 1 7 16c0-4.835 4.018-7 8-7h5.333L23 7v2.776c2.418 1.86 1.913 3.186 2.018 5.224H28Z"/>' }, "piggy-bank-slot": { "body": '<path fill="currentColor" d="M13 11h7v2h-7z"/><path fill="currentColor" d="M29 13h-2.02A5.78 5.78 0 0 0 25 8.852V5a1 1 0 0 0-1.6-.8L19.667 7H15c-5.51 0-9.463 3.241-9.948 8H5a1 1 0 0 1-1-1v-2H2v2a3.003 3.003 0 0 0 3 3h.07A9.173 9.173 0 0 0 9 23.557V27a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-2h3v2a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1v-3.363A5.093 5.093 0 0 0 26.819 20H29a1 1 0 0 0 1-1v-5a1 1 0 0 0-1-1Zm-1 5h-2.876c-.305 2.753-.824 3.485-3.124 4.315V26h-2v-3h-7v3h-2v-3.622A7.013 7.013 0 0 1 7 16c0-4.835 4.018-7 8-7h5.333L23 7v2.776c2.418 1.86 1.913 3.186 2.018 5.224H28Z"/>' }, "pills": { "body": '<path fill="currentColor" d="M22 14a7.94 7.94 0 0 0-4 1.083V9A7 7 0 0 0 4 9v14a6.999 6.999 0 0 0 12.286 4.588A7.997 7.997 0 1 0 22 14Zm0 2a6.005 6.005 0 0 1 5.91 5H16.09A6.005 6.005 0 0 1 22 16ZM6 9a5 5 0 0 1 10 0v6H6Zm5 19a5.006 5.006 0 0 1-5-5v-6h9.765a7.957 7.957 0 0 0-.724 8.931A4.989 4.989 0 0 1 11 28Zm11 0a6.005 6.005 0 0 1-5.91-5h11.82A6.005 6.005 0 0 1 22 28Z"/>' }, "pills-add": { "body": '<path fill="currentColor" d="M22 14a7.94 7.94 0 0 0-4 1.083V9A7 7 0 0 0 4 9v14a6.986 6.986 0 0 0 12.276 4.577A7.997 7.997 0 1 0 22 14ZM11 4a5.006 5.006 0 0 1 5 5v6H6V9a5.006 5.006 0 0 1 5-5Zm0 24a5.006 5.006 0 0 1-5-5v-6h9.765a7.956 7.956 0 0 0-.724 8.932A5.015 5.015 0 0 1 11 28Zm11 0a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Z"/><path fill="currentColor" d="M25 21h-2v-2h-2v2h-2v2h2v2h2v-2h2v-2z"/>' }, "pills-subtract": { "body": '<path fill="currentColor" d="M22 14a7.94 7.94 0 0 0-4 1.083V9A7 7 0 0 0 4 9v14a6.986 6.986 0 0 0 12.276 4.577A7.997 7.997 0 1 0 22 14ZM11 4a5.006 5.006 0 0 1 5 5v6H6V9a5.006 5.006 0 0 1 5-5Zm0 24a5.006 5.006 0 0 1-5-5v-6h9.765a7.956 7.956 0 0 0-.724 8.932A5.015 5.015 0 0 1 11 28Zm11 0a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Z"/><path fill="currentColor" d="M19 21h6v2h-6z"/>' }, "pin": { "body": '<path fill="currentColor" d="M28.59 13.31L30 11.9L20 2l-1.31 1.42l1.18 1.18l-11.49 9.72l-1.72-1.71L5.25 14l5.66 5.68L2 28.58L3.41 30l8.91-8.91L18 26.75l1.39-1.42l-1.71-1.71l9.72-11.49ZM16.26 22.2L9.8 15.74L21.29 6L26 10.71Z"/>' }, "pin-filled": { "body": '<path fill="currentColor" d="M28.586 13.314L30 11.9L20 2l-1.314 1.415l1.186 1.186L8.38 14.322l-1.716-1.715L5.25 14l5.657 5.677L2 28.583L3.41 30l8.911-8.909L18 26.748l1.393-1.414l-1.716-1.716l9.724-11.49Z"/>' }, "plan": { "body": '<path fill="currentColor" d="M31 8c0-.4-.2-.7-.5-.9l-7-4c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1L16 6.8L9.5 3.1C9.3 3 9.2 3 9 3s-.3 0-.5.1l-7 4c-.3.2-.5.5-.5.9v20c0 .6.4 1 1 1c.2 0 .3-.1.5-.1L9 25.2l6.5 3.7c.2.1.3.1.5.1s.3 0 .5-.1l6.5-3.7l6.5 3.7c.1.1.3.1.5.1c.6 0 1-.4 1-1V8zM3 8.6l5-2.9v17.7l-5 2.9V8.6zm12 17.7l-5-2.9V5.7l5 2.9v17.7zm7-2.9l-5 2.9V8.6l5-2.9v17.7zm2 0V5.7l5 2.9v17.7l-5-2.9z"/>' }, "plane": { "body": '<path fill="currentColor" d="M29.37 14.75L20 10V6a4 4 0 0 0-8 0v4l-9.37 4.75a1 1 0 0 0-.63.93v5a1 1 0 0 0 1 1a1 1 0 0 0 .29-.05L12 18v5l-3.45 1.72a1 1 0 0 0-.55.9V29a1 1 0 0 0 1 1a.9.9 0 0 0 .28 0L16 28l6.72 2a.9.9 0 0 0 .28 0a1 1 0 0 0 1-1v-3.38a1 1 0 0 0-.55-.9L20 23v-5l8.71 3.61a1 1 0 0 0 .29.05a1 1 0 0 0 1-1v-5a1 1 0 0 0-.63-.91ZM28 19.15L18 15v9.24l4 2v1.43l-6-1.75l-6 1.75v-1.43l4-2V15L4 19.15V16.3l10-5.07V6a2 2 0 0 1 4 0v5.23l10 5.07Z"/>' }, "plane-private": { "body": '<path fill="currentColor" d="m28.584 14.585l-3.12-1.872A4.995 4.995 0 0 0 22.892 12H7.781L7.16 9.515A1.998 1.998 0 0 0 5.22 8H4a2.002 2.002 0 0 0-2 2v7a3.003 3.003 0 0 0 3 3h7v6a2.002 2.002 0 0 0 2 2h1.307a2.009 2.009 0 0 0 1.873-1.298L19.693 20h7.392a2.915 2.915 0 0 0 1.5-5.415ZM27.084 18h-8.777l-3 8H14v-8H5a1 1 0 0 1-1-1v-7h1.22l1 4H10v2h2v-2h3v2h2v-2h3v2h2v-2h.892a2.998 2.998 0 0 1 1.543.428l3.12 1.872a.915.915 0 0 1-.47 1.7Z"/><path fill="currentColor" d="M14 4h1.323l2.4 6h2.154L17.18 3.257A1.99 1.99 0 0 0 15.323 2H14a2.002 2.002 0 0 0-2 2v6h2Z"/>' }, "plane-sea": { "body": '<path fill="currentColor" d="M30 30h-2a4.932 4.932 0 0 1-4-1.987a5.02 5.02 0 0 1-8 0a5.02 5.02 0 0 1-8 0A4.932 4.932 0 0 1 4 30H2v-2h2a3.44 3.44 0 0 0 3.053-2.321A.971.971 0 0 1 8 25a1.007 1.007 0 0 1 .949.684A3.438 3.438 0 0 0 12 28a3.44 3.44 0 0 0 3.053-2.321A.99.99 0 0 1 16 25a1.007 1.007 0 0 1 .949.684A3.438 3.438 0 0 0 20 28a3.44 3.44 0 0 0 3.053-2.321a1 1 0 0 1 1.896.005A3.438 3.438 0 0 0 28 28h2zM28 6v4h-2.5l-2.1-2.8A3.013 3.013 0 0 0 21 6h-6a3.003 3.003 0 0 0-3 3v1H8.618l-.724-1.447l-1-2A1 1 0 0 0 6 6H3a1 1 0 0 0-1 1v6a3.003 3.003 0 0 0 3 3h6.82l-.667 4H7a1 1 0 0 0 0 2h20a1 1 0 0 0 0-2h-4.153l-.667-4h.163a4.966 4.966 0 0 0 3.535-1.465L28 12.415V16h2V6zM14 9a1 1 0 0 1 1-1h6a1.004 1.004 0 0 1 .8.4L23 10h-9zm6.82 11h-7.64l.667-4h6.306zm1.524-6H5a1 1 0 0 1-1-1V8h1.382l.724 1.447L7.381 12h18.204l-1.122 1.121a2.979 2.979 0 0 1-2.12.879z"/>' }, "play": { "body": '<path fill="currentColor" d="M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28ZM8 6.69v18.62L24.925 16Z"/>' }, "play-filled": { "body": '<path fill="none" d="M11 23a1 1 0 0 1-1-1V10a1 1 0 0 1 1.447-.894l12 6a1 1 0 0 1 0 1.788l-12 6A1.001 1.001 0 0 1 11 23Z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm7.447 14.895l-12 6A1 1 0 0 1 10 22V10a1 1 0 0 1 1.447-.894l12 6a1 1 0 0 1 0 1.788Z"/>' }, "play-filled-alt": { "body": '<path fill="currentColor" d="M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28Z"/>' }, "play-outline": { "body": '<path fill="currentColor" d="M11 23a1 1 0 0 1-1-1V10a1 1 0 0 1 1.447-.894l12 6a1 1 0 0 1 0 1.788l-12 6A1.001 1.001 0 0 1 11 23Zm1-11.382v8.764L20.764 16Z"/><path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12 12 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Z"/>' }, "play-outline-filled": { "body": '<path fill="none" d="M11 23a1 1 0 0 1-1-1V10a1 1 0 0 1 1.447-.894l12 6a1 1 0 0 1 0 1.788l-12 6A1.001 1.001 0 0 1 11 23Zm1-11.382v8.764L20.764 16Z"/><path fill="currentColor" d="M12 20.382L20.764 16L12 11.618v8.764z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm7.447 14.895l-12 6A1 1 0 0 1 10 22V10a1 1 0 0 1 1.447-.894l12 6a1 1 0 0 1 0 1.788Z"/>' }, "playlist": { "body": '<path fill="currentColor" d="M4 6h18v2H4zm0 6h18v2H4zm0 6h12v2H4zm17 0l7 5l-7 5V18z"/>' }, "plug": { "body": '<path fill="currentColor" d="M22 8h-1V2h-2v6h-6V2h-2v6h-1a2 2 0 0 0-2 2v6a8.007 8.007 0 0 0 7 7.93V30h2v-6.07A8.007 8.007 0 0 0 24 16v-6a2 2 0 0 0-2-2Zm0 8a6 6 0 0 1-12 0v-6h12Z"/>' }, "plug-filled": { "body": '<path fill="currentColor" d="M22 8h-1V2h-2v6h-6V2h-2v6h-1a2 2 0 0 0-2 2v6a8.007 8.007 0 0 0 7 7.93V30h2v-6.07A8.007 8.007 0 0 0 24 16v-6a2 2 0 0 0-2-2Z"/>' }, "png": { "body": '<path fill="currentColor" d="M30 23h-6a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h6v2h-6v10h4v-4h-2v-2h4zm-12-4L14.32 9H12v14h2V13l3.68 10H20V9h-2v10zM4 23H2V9h6a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2H4zm0-7h4v-5H4z"/>' }, "point-of-presence": { "body": '<path fill="currentColor" d="M28 30H18a2.002 2.002 0 0 1-2-2V18a2.002 2.002 0 0 1 2-2h2v2h-2v10h10V18h-2v-2h2a2.002 2.002 0 0 1 2 2v10a2.002 2.002 0 0 1-2 2zM14 16H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h10a2.002 2.002 0 0 1 2 2v2h-2V4H4v10h10v-2h2v2a2.002 2.002 0 0 1-2 2z"/><path fill="currentColor" d="M26 9a2.993 2.993 0 0 0-5.816-1H9v2h11.184A2.994 2.994 0 0 0 22 11.815V23h2V11.816A2.996 2.996 0 0 0 26 9Zm-3 1a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "pointer-text": { "body": '<path d="M13.71 12.29L7.41 6H13V4H4v9h2V7.41l6.29 6.3l1.42-1.42z" fill="currentColor"/><path d="M28 30H12a2 2 0 0 1-2-2V18h2v10h16V12H18v-2h10a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2z" fill="currentColor"/><path d="M22 15h-5v2h5v2h-4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6v-8a2 2 0 0 0-2-2zm0 8h-4v-2h4z" fill="currentColor"/>', "hidden": true }, "police": { "body": '<path fill="currentColor" d="M10 24h2v6h-2z"/><path fill="currentColor" d="M21 20H7a3.003 3.003 0 0 1-3-3V6H2v11a5.006 5.006 0 0 0 5 5h14a4.942 4.942 0 0 1 2.105.481L17 28.586L18.414 30l6.307-6.307A4.96 4.96 0 0 1 26 27v3h2v-3a7.008 7.008 0 0 0-7-7Z"/><path fill="currentColor" d="m25.275 4.039l-7-2a1.001 1.001 0 0 0-.55 0l-7 2a1 1 0 0 0-.695 1.203L11 9.123V11a7 7 0 1 0 14 0V9.123l.97-3.88a1 1 0 0 0-.695-1.204ZM18 4.04l5.795 1.656L23.22 8H19V6h-2v2h-4.219l-.576-2.304ZM18 16a5.006 5.006 0 0 1-5-5v-1h10v1a5.006 5.006 0 0 1-5 5Z"/>' }, "policy": { "body": '<path fill="currentColor" d="M30 18a6 6 0 1 0-10 4.46V30l4-1.893L28 30v-7.54A5.98 5.98 0 0 0 30 18zm-4 8.84l-2-.947l-2 .947v-3.19a5.888 5.888 0 0 0 4 0zM24 22a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zM9 14h7v2H9zm0-6h10v2H9z"/><path fill="currentColor" d="M6 30a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v4h-2V4H6v24h10v2Z"/>' }, "popup": { "body": '<path fill="currentColor" d="M28 4H10a2.006 2.006 0 0 0-2 2v14a2.006 2.006 0 0 0 2 2h18a2.006 2.006 0 0 0 2-2V6a2.006 2.006 0 0 0-2-2Zm0 16H10V6h18Z"/><path fill="currentColor" d="M18 26H4V16h2v-2H4a2.006 2.006 0 0 0-2 2v10a2.006 2.006 0 0 0 2 2h14a2.006 2.006 0 0 0 2-2v-2h-2Z"/>' }, "port-input": { "body": '<path fill="currentColor" d="M18 28c-3.593 0-6.967-1.59-9.257-4.363l1.542-1.274A9.975 9.975 0 0 0 18 26c5.514 0 10-4.486 10-10S23.514 6 18 6a9.975 9.975 0 0 0-7.715 3.637L8.743 8.363A11.969 11.969 0 0 1 18 4c6.617 0 12 5.383 12 12s-5.383 12-12 12Z"/><path fill="currentColor" d="m23 16l-7-7l-1.414 1.414L19.172 15H2v2h17.172l-4.586 4.586L16 23l7-7z"/>' }, "port-output": { "body": '<path fill="currentColor" d="m30 16l-7-7l-1.414 1.414L26.172 15H9v2h17.172l-4.586 4.586L23 23l7-7z"/><path fill="currentColor" d="M14 28C7.383 28 2 22.617 2 16S7.383 4 14 4c2.335 0 4.599.671 6.546 1.941l-1.092 1.676A9.96 9.96 0 0 0 14 6C8.486 6 4 10.486 4 16s4.486 10 10 10a9.96 9.96 0 0 0 5.454-1.617l1.092 1.676A11.953 11.953 0 0 1 14 28Z"/>' }, "portfolio": { "body": '<path fill="currentColor" d="M28 10h-6V6a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2ZM12 6h8v4h-8ZM4 26V12h24v14Z"/>' }, "power": { "body": '<path fill="currentColor" d="m22.5 5.74l-1 1.73a11 11 0 1 1-11 0l-1-1.73a13 13 0 1 0 13 0Z"/><path fill="currentColor" d="M15 2h2v14h-2z"/>' }, "ppt": { "body": '<path fill="currentColor" d="M22 11h3v12h2V11h3V9h-8v2zm-8 12h-2V9h6a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2h-4zm0-7h4v-5.002h-4zM4 23H2V9h6a2.002 2.002 0 0 1 2 2v5a2.002 2.002 0 0 1-2 2H4zm0-7h4v-5.002H4z"/>' }, "presentation-file": { "body": '<path fill="currentColor" d="M15 10h2v8h-2zm5 4h2v4h-2zm-10-2h2v6h-2z"/><path fill="currentColor" d="M25 4h-8V2h-2v2H7a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8v6h-4v2h10v-2h-4v-6h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 16H7V6h18Z"/>' }, "pressure": { "body": '<path fill="currentColor" d="m17.505 16l8.16-7.253A1 1 0 0 0 25 7h-3V2h-2v7h2.37L16 14.662L9.63 9H12V2h-2v5H7a1 1 0 0 0-.665 1.747L14.495 16l-8.16 7.253A1 1 0 0 0 7 25h3v5h2v-7H9.63L16 17.338L22.37 23H20v7h2v-5h3a1 1 0 0 0 .664-1.747Z"/>' }, "pressure-filled": { "body": '<path fill="currentColor" d="M22 30H10v-5H6l10-9l10 9h-4zm-6-14L6 7h4V2h12v5h4z"/>' }, "previous-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm8 15H11.85l5.58 5.573L16 24l-8-8l8-8l1.43 1.393L11.85 15H24Z"/><path fill="none" d="m16 8l1.43 1.393L11.85 15H24v2H11.85l5.58 5.573L16 24l-8-8l8-8z"/>' }, "previous-outline": { "body": '<path fill="currentColor" d="m16 8l1.43 1.393L11.85 15H24v2H11.85l5.58 5.573L16 24l-8-8l8-8z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "printer": { "body": '<path fill="currentColor" d="M28 9h-3V3H7v6H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h3v6h18v-6h3a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2ZM9 5h14v4H9Zm14 22H9V17h14Zm5-6h-3v-6H7v6H4V11h24Z"/>' }, "product": { "body": '<path fill="currentColor" d="M8 18h6v2H8zm0 4h10v2H8z"/><path fill="currentColor" d="M26 4H6a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2Zm-8 2v4h-4V6ZM6 26V6h6v6h8V6h6l.001 20Z"/>' }, "progress-bar": { "body": '<path fill="currentColor" d="M28 21H4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2ZM4 13v6h24v-6Z"/><path fill="currentColor" d="M6 15h14v2H6z"/>' }, "progress-bar-round": { "body": '<path fill="currentColor" d="M16 22a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4Z"/><path fill="currentColor" d="M16 26a10.016 10.016 0 0 1-7.453-3.333l1.49-1.334A8 8 0 1 0 16 8V6a10 10 0 0 1 0 20Z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "promote": { "body": '<path fill="currentColor" d="m16 21l1.4 1.4l-2.6 2.6H23v2h-8.2l2.6 2.6L16 31l-5-5zm-8.738 2.323l7.99-7.99l1.415 1.414l-7.99 7.99z"/><path fill="currentColor" d="M23 22h-2v-5c0-.3.1-.5.3-.7l4.1-4.1c1.7-1.7 2.6-4 2.6-6.4V4h-1.9c-2.4 0-4.7.9-6.4 2.6l-4.1 4.1c-.1.2-.3.3-.6.3H7.5l-2.6 3.3l5.3.8l-.3 2l-7-1c-.4-.1-.7-.3-.8-.6s-.1-.7.1-1l4-5c.2-.4.5-.5.8-.5h7.6l3.8-3.8c2-2.1 4.8-3.2 7.7-3.2H28c1.1 0 2 .9 2 2v1.9c0 2.9-1.1 5.7-3.2 7.8L23 17.4V22z"/>' }, "property-relationship": { "body": '<path fill="currentColor" d="m30 16l-8 8l-1.4-1.4l6.6-6.6l-6.6-6.6L22 8zm-18-1h8v2h-8zM2 16l8-8l1.4 1.4L4.8 16l6.6 6.6L10 24z"/>' }, "purchase": { "body": '<path fill="currentColor" d="M28 6H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Zm0 2v3H4V8ZM4 24V13h24v11Z"/><path fill="currentColor" d="M6 20h10v2H6z"/>' }, "qc-launch": { "body": '<path d="M25 22h-6a2.002 2.002 0 0 1-2-2V10a2.002 2.002 0 0 1 2-2h6v2h-6v10h6z" fill="currentColor"/><path d="M13 8H9a2.002 2.002 0 0 0-2 2v10a2.002 2.002 0 0 0 2 2h1v2a2.002 2.002 0 0 0 2 2h2v-2h-2v-2h1a2.002 2.002 0 0 0 2-2V10a2.002 2.002 0 0 0-2-2zM9 20V10h4v10z" fill="currentColor"/><path d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.003 2.003 0 0 1-2 2zM4 4v24h24V4z" fill="currentColor"/>', "hidden": true }, "qq-plot": { "body": '<circle cx="20" cy="4" r="2" fill="currentColor"/><circle cx="8" cy="16" r="2" fill="currentColor"/><circle cx="28" cy="12" r="2" fill="currentColor"/><circle cx="11" cy="7" r="2" fill="currentColor"/><circle cx="16" cy="24" r="2" fill="currentColor"/><path fill="currentColor" d="M30 3.413L28.586 2L4 26.585V2H2v26a2 2 0 0 0 2 2h26v-2H5.413Z"/>' }, "qr-code": { "body": '<path fill="currentColor" d="M24 28v-2h2v2zm-6-4v-2h2v2zm0 6h4v-2h-2v-2h-2v4zm8-4v-4h2v4zm2 0h2v4h-4v-2h2v-2zm-2-6v-2h4v4h-2v-2h-2zm-2 0h-2v4h-2v2h4v-6zm-6 0v-2h4v2zM6 22h4v4H6z"/><path fill="currentColor" d="M14 30H2V18h12zM4 28h8v-8H4zM22 6h4v4h-4z"/><path fill="currentColor" d="M30 14H18V2h12zm-10-2h8V4h-8zM6 6h4v4H6z"/><path fill="currentColor" d="M14 14H2V2h12ZM4 12h8V4H4Z"/>' }, "quadrant-plot": { "body": '<path fill="currentColor" d="M30 15H17V2h-2v13H2v2h13v13h2V17h13v-2z"/><path fill="currentColor" d="M5 30a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zM8 8a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm14 9a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1z"/><circle cx="11" cy="11" r="2" fill="currentColor"/><circle cx="11" cy="21" r="2" fill="currentColor"/><circle cx="21" cy="21" r="2" fill="currentColor"/><circle cx="22" cy="28" r="2" fill="currentColor"/><circle cx="28" cy="24" r="2" fill="currentColor"/><circle cx="4" cy="11" r="2" fill="currentColor"/><circle cx="28" cy="4" r="2" fill="currentColor"/>' }, "query": { "body": '<circle cx="11" cy="15.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M12 12h-2V8h2a2 2 0 0 0 0-4h-2a2.002 2.002 0 0 0-2 2v.5H6V6a4.005 4.005 0 0 1 4-4h2a4 4 0 0 1 0 8Z"/><path fill="currentColor" d="M22.448 21.034a10.971 10.971 0 0 0-2.527-16.29l-.999 1.73A8.997 8.997 0 1 1 5 14H3a10.992 10.992 0 0 0 18.034 8.448L28.586 30L30 28.586Z"/>' }, "query-queue": { "body": '<path fill="currentColor" d="M10 6h18v2H10zm0 6h18v2H10zm5 6h13v2H15zm-5 6h18v2H10zM4 14l7 5l-7 5V14z"/>' }, "queued": { "body": '<path fill="currentColor" d="M22 20h8v2h-8zm0 4h8v2h-8zm0 4h8v2h-8zm-4-4h2v2h-2zm0-4h2v2h-2zm0 8h2v2h-2zM6.815 8.293a12.078 12.078 0 0 1 3.192-2.673l-1-1.73a14.085 14.085 0 0 0-3.723 3.118zm18.37 0l1.53-1.285a14.085 14.085 0 0 0-3.723-3.118l-.999 1.73a12.078 12.078 0 0 1 3.192 2.673zM4.737 11.9l-1.878-.683A13.902 13.902 0 0 0 2 16h2a11.917 11.917 0 0 1 .737-4.1zm2.078 11.807A11.998 11.998 0 0 1 4.737 20.1l-1.878.683a13.99 13.99 0 0 0 2.425 4.21zM27.263 11.9A11.917 11.917 0 0 1 28 16h2a13.897 13.897 0 0 0-.86-4.783zM13.918 27.807a11.89 11.89 0 0 1-3.911-1.427l-1 1.73a13.867 13.867 0 0 0 4.564 1.664zm0-23.614a11.301 11.301 0 0 1 4.164 0l.347-1.967a13.187 13.187 0 0 0-4.858 0z"/>' }, "quotes": { "body": '<path fill="currentColor" d="M12 15H6.11A9 9 0 0 1 10 8.86l1.79-1.2L10.69 6L8.9 7.2A11 11 0 0 0 4 16.35V23a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2zm14 0h-5.89A9 9 0 0 1 24 8.86l1.79-1.2L24.7 6l-1.8 1.2a11 11 0 0 0-4.9 9.15V23a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2z"/>' }, "radar": { "body": '<path fill="currentColor" d="M30 3.414L28.586 2L15.293 15.293a1 1 0 0 0 1.414 1.414l4.18-4.18A5.996 5.996 0 1 1 16 10V8a8.011 8.011 0 1 0 6.316 3.098l2.847-2.847A11.881 11.881 0 0 1 28 16A12 12 0 1 1 16 4V2a14 14 0 1 0 14 14a13.857 13.857 0 0 0-3.422-9.164Z"/>' }, "radar-enhanced": { "body": '<path fill="currentColor" d="M30 3.415L28.585 2L17.293 13.293a1 1 0 1 0 1.414 1.414l3.455-3.455A4.982 4.982 0 0 1 18 19a5.038 5.038 0 0 1-.607-.05a8.043 8.043 0 0 0-4.342-4.342A4.9 4.9 0 0 1 18 9V7a7.008 7.008 0 0 0-7 7c0 .023.006.047.006.07A8.047 8.047 0 0 0 10 14a7.95 7.95 0 0 0-1.988.26C8.009 14.173 8 14.088 8 14A10.011 10.011 0 0 1 18 4V2A12.014 12.014 0 0 0 6 14c0 .355.017.706.047 1.054a7.994 7.994 0 1 0 10.9 10.898c.35.03.701.048 1.053.048a11.985 11.985 0 0 0 9.154-19.74ZM15.91 21h-1.954a12.029 12.029 0 0 0-1.218-4.332A6.01 6.01 0 0 1 15.91 21ZM4.09 23h1.954a12.032 12.032 0 0 0 1.218 4.332A6.01 6.01 0 0 1 4.09 23Zm1.953-2H4.09a6.01 6.01 0 0 1 3.171-4.332A12.032 12.032 0 0 0 6.043 21ZM10 27.986A10.015 10.015 0 0 1 8.055 23h3.89A10.015 10.015 0 0 1 10 27.986ZM8.055 21A10.012 10.012 0 0 1 10 16.015A10.01 10.01 0 0 1 11.945 21Zm4.683 6.332A12.032 12.032 0 0 0 13.957 23h1.953a6.01 6.01 0 0 1-3.172 4.332ZM28 14a10.011 10.011 0 0 1-10 10c-.087 0-.173-.01-.26-.012a7.553 7.553 0 0 0 .19-2.994c.024 0 .047.006.07.006a7 7 0 0 0 5.605-11.191l2.132-2.132A9.95 9.95 0 0 1 28 14Z"/>' }, "radar-weather": { "body": '<path fill="currentColor" d="M30 3.415L28.585 2L17.293 13.293a1 1 0 1 0 1.414 1.414l3.455-3.455a4.965 4.965 0 0 1-3.881 7.72a7.048 7.048 0 0 0-5.144-3.873A4.943 4.943 0 0 1 18 9V7a6.955 6.955 0 0 0-6.909 8.08a6.93 6.93 0 0 0-2.852 1.06A9.97 9.97 0 0 1 18 4V2A11.976 11.976 0 0 0 6.573 17.636a6.93 6.93 0 0 0-1.367 2.706A4.995 4.995 0 0 0 7 30h10a4.992 4.992 0 0 0 4.968-4.68A12.04 12.04 0 0 0 30 14a11.868 11.868 0 0 0-2.839-7.747ZM17 28H7a2.994 2.994 0 0 1-.696-5.908l.658-.157l.099-.67a4.992 4.992 0 0 1 9.878 0l.099.67l.658.156A2.994 2.994 0 0 1 17 28Zm11-14a10.035 10.035 0 0 1-6.312 9.291a4.958 4.958 0 0 0-2.02-2.5a6.992 6.992 0 0 0 3.938-10.982l2.131-2.132A9.887 9.887 0 0 1 28 14Z"/>' }, "radio": { "body": '<path fill="currentColor" d="M28 10h-4V2h-2v8h-9V8h-2v2H8V8H6v2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2ZM4 28V12h24v16Z"/><path fill="currentColor" d="M10 26a4 4 0 1 1 4-4a4 4 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2 2 0 0 0-2-2zm-3-6h6v2H7zm10 2h9v2h-9zm0 4h9v2h-9zm0 4h9v2h-9z"/>' }, "radio-button": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/>' }, "radio-button-checked": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Z"/>' }, "radio-combat": { "body": '<path fill="currentColor" d="M10 26a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zm7 0h9v2h-9zm0 4h9v2h-9z"/><path fill="currentColor" d="M20 12h8a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2h-8a2.002 2.002 0 0 0-2 2v1h-6a4.005 4.005 0 0 0-4 4v3H6V4H4v10a2.002 2.002 0 0 0-2 2v12a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V16a2.002 2.002 0 0 0-2-2H10v-3a2.002 2.002 0 0 1 2-2h6v1a2.002 2.002 0 0 0 2 2Zm4-6h4v4h-4Zm-4 0h2v4h-2Zm8 22H4V16h24Z"/>' }, "radio-push-to-talk": { "body": '<path fill="currentColor" d="M13 11h6v2h-6zm0 4h6v2h-6z"/><circle cx="16" cy="23" r="2" fill="currentColor"/><path fill="currentColor" d="M22 7h-1V2h-2v5h-9a2.002 2.002 0 0 0-2 2v2H6v2h2v2H6v2h2v11a2.002 2.002 0 0 0 2 2h12a2.002 2.002 0 0 0 2-2V9a2.002 2.002 0 0 0-2-2ZM10 28V9h12v19Z"/>' }, "rain": { "body": '<path fill="currentColor" d="M23.5 22h-15A6.5 6.5 0 0 1 7.2 9.14a9 9 0 0 1 17.6 0A6.5 6.5 0 0 1 23.5 22zM16 4a7 7 0 0 0-6.94 6.14L9 11h-.86a4.5 4.5 0 0 0 .36 9h15a4.5 4.5 0 0 0 .36-9H23l-.1-.82A7 7 0 0 0 16 4zm-2 26a.93.93 0 0 1-.45-.11a1 1 0 0 1-.44-1.34l2-4a1 1 0 1 1 1.78.9l-2 4A1 1 0 0 1 14 30zm6 0a.93.93 0 0 1-.45-.11a1 1 0 0 1-.44-1.34l2-4a1 1 0 1 1 1.78.9l-2 4A1 1 0 0 1 20 30zM8 30a.93.93 0 0 1-.45-.11a1 1 0 0 1-.44-1.34l2-4a1 1 0 1 1 1.78.9l-2 4A1 1 0 0 1 8 30z"/>' }, "rain-drizzle": { "body": '<path fill="currentColor" d="M11 30a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 11 30Z"/><path fill="currentColor" d="M24.8 9.136a8.994 8.994 0 0 0-17.6 0A6.497 6.497 0 0 0 8.5 22h10.881l-1.276 2.553a1 1 0 0 0 1.789.894L21.618 22H23.5a6.497 6.497 0 0 0 1.3-12.864ZM23.5 20h-15a4.497 4.497 0 0 1-.356-8.981l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.497 4.497 0 0 1 23.5 20Z"/>' }, "rain-drop": { "body": '<path fill="currentColor" d="M16 24v-2a3.296 3.296 0 0 0 3-3h2a5.267 5.267 0 0 1-5 5Z"/><path fill="currentColor" d="M16 28a9.011 9.011 0 0 1-9-9a9.984 9.984 0 0 1 1.494-4.955l6.659-10.608a1.04 1.04 0 0 1 1.694 0l6.63 10.556A10.063 10.063 0 0 1 25 19a9.011 9.011 0 0 1-9 9Zm0-22.152l-5.782 9.208A7.977 7.977 0 0 0 9 19a7 7 0 0 0 14 0a8.062 8.062 0 0 0-1.248-3.995Z"/>' }, "rain-heavy": { "body": '<path fill="currentColor" d="M17 30a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 17 30zm-9 0a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 8 30z"/><path fill="currentColor" d="M30 15.5a6.532 6.532 0 0 0-5.2-6.364a8.994 8.994 0 0 0-17.6 0a6.49 6.49 0 0 0-1.497 12.222l-1.597 3.195a1 1 0 1 0 1.788.894L7.617 22h6.765l-1.276 2.553a1 1 0 1 0 1.788.894L16.619 22h6.764l-1.276 2.553a1 1 0 1 0 1.788.894l1.945-3.89A6.506 6.506 0 0 0 30 15.5ZM23.5 20h-15a4.497 4.497 0 0 1-.356-8.981l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.497 4.497 0 0 1 23.5 20Z"/>' }, "rain-scattered": { "body": '<path fill="currentColor" d="M8.508 32a1.013 1.013 0 0 1-.448-.105a.999.999 0 0 1-.449-1.342l1.494-3a1.002 1.002 0 0 1 1.794.894l-1.493 3a1.001 1.001 0 0 1-.898.553Zm17.956-15.12l1.414-1.415L30 17.586l-1.414 1.415zM29 10h3v2h-3zm-2.536-4.878L28.586 3L30 4.414l-2.122 2.122zM20 0h2v3h-2zm-8 4.414L13.414 3l2.122 2.122l-1.414 1.414zM27 11a5.995 5.995 0 0 0-11.367-2.669A7.35 7.35 0 0 0 13.5 8a7.55 7.55 0 0 0-7.15 5.244A5.993 5.993 0 0 0 8 25h7.382l-1.276 2.553a1 1 0 1 0 1.788.894L17.619 25H19a5.985 5.985 0 0 0 5.216-8.946A5.994 5.994 0 0 0 27 11Zm-8 12H8a3.993 3.993 0 0 1-.673-7.93l.663-.112l.146-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 23Zm3.927-8.51a5.96 5.96 0 0 0-2.278-1.246a7.516 7.516 0 0 0-3.185-4.069a3.987 3.987 0 1 1 5.463 5.314Z"/>' }, "rain-scattered-night": { "body": '<path fill="currentColor" d="M8.508 32a1.012 1.012 0 0 1-.448-.105a.999.999 0 0 1-.449-1.342l1.494-3a1.002 1.002 0 0 1 1.794.894l-1.493 3a1.002 1.002 0 0 1-.898.553zm21.336-18.965a1.518 1.518 0 0 0-1.23-.866a5.359 5.359 0 0 1-3.41-1.716a6.465 6.465 0 0 1-1.285-6.393a1.603 1.603 0 0 0-.3-1.546a1.454 1.454 0 0 0-1.36-.492l-.019.002a7.855 7.855 0 0 0-6.105 6.48A7.372 7.372 0 0 0 13.5 8a7.551 7.551 0 0 0-7.15 5.244A5.993 5.993 0 0 0 8 25h7.382l-1.276 2.553a1 1 0 1 0 1.788.894L17.619 25H19a5.955 5.955 0 0 0 5.88-7.146a7.5 7.5 0 0 0 4.867-3.3a1.538 1.538 0 0 0 .097-1.52zM19 23H8a3.993 3.993 0 0 1-.673-7.93l.663-.112l.145-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 23zm5.15-7.048a5.964 5.964 0 0 0-3.5-2.708a7.508 7.508 0 0 0-2.621-3.694a6.01 6.01 0 0 1 3.77-5.334a8.458 8.458 0 0 0 1.94 7.597a7.4 7.4 0 0 0 3.901 2.228a5.44 5.44 0 0 1-3.49 1.911z"/>' }, "raw": { "body": '<path fill="currentColor" d="m29.2 9l-.34 8l-.26 4.54l-.41-3.54l-.68-5.46h-2.02L24.81 18l-.41 3.54l-.26-4.54l-.34-8H22l1 14h2.27l.76-4.93l.46-4.07l.01-.03l.01.03l.46 4.07l.76 4.93H30l1-14h-1.8zM18 9h-4a2 2 0 0 0-2 2v12h2v-5h4v5h2V11a2 2 0 0 0-2-2zm-4 7v-5h4v5zm-4-1v-4a2 2 0 0 0-2-2H2v14h2v-6h1.48l2.34 6H10l-2.37-6H8a2 2 0 0 0 2-2zm-6-4h4v4H4z"/>' }, "receipt": { "body": '<path fill="currentColor" d="M21 16h2v2h-2zM9 16h8v2H9zm12-4h2v2h-2zM9 12h8v2H9zm0-4h14v2H9z"/><path fill="currentColor" d="M25 2H7a2.002 2.002 0 0 0-2 2v25a1 1 0 0 0 1 1h1a.999.999 0 0 0 .8-.4l2.2-2.933l2.2 2.933a1.035 1.035 0 0 0 1.6 0l2.2-2.933l2.2 2.933a1.035 1.035 0 0 0 1.6 0l2.2-2.933l2.2 2.933a1 1 0 0 0 .8.4h1a1 1 0 0 0 1-1V4a2.002 2.002 0 0 0-2-2Zm0 25.333L22.8 24.4a1.035 1.035 0 0 0-1.6 0L19 27.333L16.8 24.4a1.035 1.035 0 0 0-1.6 0L13 27.333L10.8 24.4a1.035 1.035 0 0 0-1.6 0L7 27.333V4h18Z"/>' }, "recently-viewed": { "body": '<path fill="currentColor" d="M20.59 22L15 16.41V7h2v8.58l5 5.01L20.59 22z"/><path fill="currentColor" d="M16 2A13.94 13.94 0 0 0 6 6.23V2H4v8h8V8H7.08A12 12 0 1 1 4 16H2A14 14 0 1 0 16 2Z"/>' }, "recommend": { "body": '<path fill="currentColor" d="M16 2a9 9 0 0 0-6 15.69V30l6-4l6 4V17.69A9 9 0 0 0 16 2Zm4 24.26l-2.89-1.92L16 23.6l-1.11.74L12 26.26v-7.21a8.88 8.88 0 0 0 8 0ZM20.89 16A7 7 0 1 1 23 11a7 7 0 0 1-2.11 5Z"/>' }, "recording": { "body": '<path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12 12 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Z"/><path fill="currentColor" d="M16 12a4 4 0 1 1-4 4a4 4 0 0 1 4-4m0-2a6 6 0 1 0 6 6a6 6 0 0 0-6-6Z"/>' }, "recording-filled": { "body": '<circle cx="16" cy="16" r="4" fill="currentColor"/><path fill="currentColor" d="M16 2C8.3 2 2 8.3 2 16s6.3 14 14 14s14-6.3 14-14S23.7 2 16 2zm0 20c-3.3 0-6-2.7-6-6s2.7-6 6-6s6 2.7 6 6s-2.7 6-6 6z"/>' }, "recording-filled-alt": { "body": '<path fill="currentColor" d="M16 2C8.3 2 2 8.3 2 16s6.3 14 14 14s14-6.3 14-14S23.7 2 16 2zm0 20c-3.3 0-6-2.7-6-6s2.7-6 6-6s6 2.7 6 6s-2.7 6-6 6z"/>' }, "recycle": { "body": '<path fill="currentColor" d="m29.508 22.255l-2.078-3.74l-1.748.97l2.078 3.742a1.85 1.85 0 0 1-.023 1.853c-.34.576-.941.92-1.61.92H18.83l2.58-2.59L20 22l-5 5l5 5l1.41-1.41L18.83 28h7.298a3.83 3.83 0 0 0 3.332-1.906a3.832 3.832 0 0 0 .048-3.84zM5.873 26a1.85 1.85 0 0 1-1.61-.92a1.85 1.85 0 0 1-.022-1.853l4.11-7.4l1.049 3.52l1.912-.567L9.303 12l-6.78 2.008l.567 1.912l3.493-1.03l-4.09 7.365a3.832 3.832 0 0 0 .047 3.84A3.831 3.831 0 0 0 5.873 28H12v-2H5.873zM25.51 9.654l-1.048 3.519L19.35 3.97C18.664 2.737 17.412 2 16 2s-2.665.737-3.35 1.971L9.57 9.515l1.749.97l3.08-5.543C14.725 4.352 15.324 4 16 4s1.274.352 1.602.942l5.092 9.167l-3.494-1.03l-.566 1.913L25.414 17l2.008-6.78l-1.912-.566z"/>' }, "redo": { "body": '<path fill="currentColor" d="M12 10h12.185l-3.587-3.586L22 5l6 6l-6 6l-1.402-1.415L24.182 12H12a6 6 0 0 0 0 12h8v2h-8a8 8 0 0 1 0-16Z"/>' }, "ref-evapotranspiration": { "body": '<path fill="currentColor" d="M14 12a3.898 3.898 0 0 1-4-3.777a3.902 3.902 0 0 1 .653-2.064l2.517-3.745a1.038 1.038 0 0 1 1.66 0l2.485 3.696A3.97 3.97 0 0 1 18 8.223A3.898 3.898 0 0 1 14 12zm0-7.237l-1.656 2.463a1.89 1.89 0 0 0-.344.997A1.9 1.9 0 0 0 14 10a1.9 1.9 0 0 0 2-1.777a1.98 1.98 0 0 0-.375-1.047zM7.5 26A5.385 5.385 0 0 1 2 20.751a5.384 5.384 0 0 1 .874-2.831l3.616-5.382a1.217 1.217 0 0 1 2.02 0l3.55 5.277a5.492 5.492 0 0 1 .94 2.936A5.385 5.385 0 0 1 7.5 26zm0-11.38l-2.935 4.367A3.359 3.359 0 0 0 4 20.75A3.385 3.385 0 0 0 7.5 24a3.385 3.385 0 0 0 3.5-3.249a3.435 3.435 0 0 0-.63-1.867zM25 2l-5 5l1.414 1.414L24 5.828V16a4.005 4.005 0 0 1-4 4h-4v2h4a6.007 6.007 0 0 0 6-6V5.828l2.586 2.586L30 7zM2 28h28v2H2z"/>' }, "reference-architecture": { "body": '<circle cx="18" cy="26" r="1" fill="currentColor"/><path fill="currentColor" d="M28 20c1.103 0 2-.897 2-2v-4c0-1.103-.897-2-2-2h-1V7c0-1.103-.897-2-2-2h-5V4c0-1.103-.897-2-2-2h-4c-1.103 0-2 .897-2 2v1H7c-1.103 0-2 .897-2 2v5.142c-1.72.447-3 2-3 3.858s1.28 3.41 3 3.858V25c0 1.103.897 2 2 2h7v1c0 1.103.897 2 2 2h12c1.103 0 2-.897 2-2v-4c0-1.103-.897-2-2-2h-1v-2h1Zm0-2h-4v-4h4v4ZM14 4h4v4h-4V4Zm-2 3v1c0 1.103.897 2 2 2h4c1.103 0 2-.897 2-2V7h5v5h-1c-1.103 0-2 .897-2 2v1H9.858A3.994 3.994 0 0 0 7 12.142V7h5Zm-8 9c0-1.103.897-2 2-2s2 .897 2 2s-.897 2-2 2s-2-.897-2-2Zm24 12H16v-4h12v4Zm-3-6h-9c-1.103 0-2 .897-2 2v1H7v-5.142A3.994 3.994 0 0 0 9.858 17H22v1c0 1.103.897 2 2 2h1v2Z"/>' }, "reflect-horizontal": { "body": '<path fill="currentColor" d="m19.386 15.21l9-7A1 1 0 0 1 30 9v14a1 1 0 0 1-1.614.79l-9-7a1 1 0 0 1 0-1.58ZM17 30h-2V2h2zm-4-14a1.001 1.001 0 0 1-.386.79l-9 7A1 1 0 0 1 2 23V9a1 1 0 0 1 1.614-.79l9 7A1.001 1.001 0 0 1 13 16Zm-9 4.956L10.371 16L4 11.044Z"/>' }, "reflect-vertical": { "body": '<path fill="currentColor" d="m16.79 19.386l7 9A1 1 0 0 1 23 30H9a1 1 0 0 1-.79-1.614l7-9a1 1 0 0 1 1.58 0ZM2 17v-2h28v2zm14-4a1.001 1.001 0 0 1-.79-.386l-7-9A1 1 0 0 1 9 2h14a1 1 0 0 1 .79 1.614l-7 9A1.001 1.001 0 0 1 16 13Zm-4.956-9L16 10.371L20.956 4Z"/>' }, "region-analysis-area": { "body": '<defs/><path d="M30 23v-2h-2v-2h-2v2h-3v-2h-2v2h-2v2h2v3h-2v2h2v2h2v-2h3v2h2v-2h2v-2h-2v-3zm-4 3h-3v-3h3z" fill="currentColor"/><path d="M16 30a14 14 0 1 1 14-14h-2a12 12 0 1 0-12 12z" fill="currentColor"/>', "hidden": true }, "region-analysis-volume": { "body": '<path d="M30 23v-2h-2v-2h-2v2h-3v-2h-2v2h-2v2h2v3h-2v2h2v2h2v-2h3v2h2v-2h2v-2h-2v-3zm-4 3h-3v-3h3z" fill="currentColor"/><path d="M4.83 20.355A24.953 24.953 0 0 0 15 22.965v-2a22.901 22.901 0 0 1-10.867-3.273A11.979 11.979 0 0 1 4 16a11.985 11.985 0 0 1 .133-1.69a22.928 22.928 0 0 1 23.734 0A11.985 11.985 0 0 1 28 16h2a14 14 0 1 0-14 14v-2a12.01 12.01 0 0 1-11.17-7.645zM16 4a12.01 12.01 0 0 1 11.17 7.646a24.898 24.898 0 0 0-22.34 0A12.01 12.01 0 0 1 16 4z" fill="currentColor"/>', "hidden": true }, "registration": { "body": '<path d="M28 25h-8a2.003 2.003 0 0 1-2-2v-3h2v3h8V9h-8v3h-2V9a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v14a2.003 2.003 0 0 1-2 2z" fill="currentColor"/><path d="M8 15h4v2H8z" fill="currentColor"/><path d="M20 15h4v2h-4z" fill="currentColor"/><path d="M14 15h4v2h-4z" fill="currentColor"/><path d="M12 25H4a2.002 2.002 0 0 1-2-2V9a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v3h-2V9H4v14h8v-3h2v3a2.002 2.002 0 0 1-2 2z" fill="currentColor"/>', "hidden": true }, "reminder": { "body": '<path fill="currentColor" d="m30 23.382l-2-1V20a6.005 6.005 0 0 0-5-5.91V12h-2v2.09A6.005 6.005 0 0 0 16 20v2.382l-2 1V28h6v2h4v-2h6ZM28 26H16v-1.382l2-1V20a4 4 0 0 1 8 0v3.618l2 1Z"/><path fill="currentColor" d="M28 6a2 2 0 0 0-2-2h-4V2h-2v2h-8V2h-2v2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h4v-2H6V6h4v2h2V6h8v2h2V6h4v6h2Z"/>' }, "reminder-medical": { "body": '<path fill="currentColor" d="M27 12v2h1v4a3 3 0 0 1-6 0v-4h1v-2h-3v6a5.008 5.008 0 0 0 4 4.899V24a4 4 0 0 1-8 0v-2.184a3 3 0 1 0-2 0V24a6 6 0 0 0 12 0v-1.101A5.008 5.008 0 0 0 30 18v-6Zm-12 6a1 1 0 1 1-1 1a1 1 0 0 1 1-1Z"/><path fill="currentColor" d="M26 4h-4V2h-2v2h-8V2h-2v2H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h4v-2H6V6h4v2h2V6h8v2h2V6h4v4h2V6a2 2 0 0 0-2-2Z"/>' }, "renew": { "body": '<path fill="currentColor" d="M12 10H6.78A11 11 0 0 1 27 16h2A13 13 0 0 0 6 7.68V4H4v8h8zm8 12h5.22A11 11 0 0 1 5 16H3a13 13 0 0 0 23 8.32V28h2v-8h-8z"/>' }, "repeat": { "body": '<path fill="currentColor" d="M6 6h20.172l-3.586-3.586L24 1l6 6l-6 6l-1.414-1.414L26.172 8H6v7H4V8a2.002 2.002 0 0 1 2-2zm3.414 14.414L5.828 24H26v-7h2v7a2.002 2.002 0 0 1-2 2H5.828l3.586 3.586L8 31l-6-6l6-6z"/>' }, "repeat-one": { "body": '<path fill="currentColor" d="M6 6h20.172l-3.586-3.586L24 1l6 6l-6 6l-1.414-1.414L26.172 8H6v7H4V8a2.002 2.002 0 0 1 2-2zm3.414 14.414L5.828 24H26v-7h2v7a2.002 2.002 0 0 1-2 2H5.828l3.586 3.586L8 31l-6-6l6-6z"/><path fill="currentColor" d="M17 19v-8h-2v1h-2v2h2v5h-2v2h6v-2h-2z"/>' }, "replicate": { "body": '<path fill="currentColor" d="M28 8h2V4a2.002 2.002 0 0 0-2-2h-4v2h4zM17 2h4v2h-4zm11 9h2v4h-2zm0 7v4h-4V10a2.002 2.002 0 0 0-2-2H10V4h4V2h-4a2.002 2.002 0 0 0-2 2v4H4a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h18a2.002 2.002 0 0 0 2-2v-4h4a2.002 2.002 0 0 0 2-2v-4zm-6 10H4V10h18z"/>' }, "reply": { "body": '<path fill="currentColor" d="M28.88 30a1 1 0 0 1-.88-.5A15.19 15.19 0 0 0 15 22v6a1 1 0 0 1-.62.92a1 1 0 0 1-1.09-.21l-12-12a1 1 0 0 1 0-1.42l12-12a1 1 0 0 1 1.09-.21A1 1 0 0 1 15 4v6.11a17.19 17.19 0 0 1 15 17a16.34 16.34 0 0 1-.13 2a1 1 0 0 1-.79.86ZM14.5 20A17.62 17.62 0 0 1 28 26a15.31 15.31 0 0 0-14.09-14a1 1 0 0 1-.91-1V6.41L3.41 16L13 25.59V21a1 1 0 0 1 1-1h.54Z"/>' }, "reply-all": { "body": '<path fill="currentColor" d="M19 29a.999.999 0 0 1-.768-.36l-10-12a1 1 0 0 1 0-1.28l10-12A1 1 0 0 1 20 4v7.032c7.007.463 11 5.86 11 14.968a1 1 0 0 1-1.8.6c-2.822-3.762-5.391-5.346-9.2-5.571V28a1 1 0 0 1-1 1Zm-8.698-13L18 25.238V20a1 1 0 0 1 1-1a12.713 12.713 0 0 1 9.841 4.09C28.086 16.556 24.66 13 19 13a1 1 0 0 1-1-1V6.762Z"/><path fill="currentColor" d="M11.464 28.918L1.232 16.64a1 1 0 0 1 0-1.28L11.464 3.08L13 4.36L3.302 16L13 27.638Z"/>' }, "repo-artifact": { "body": '<path fill="currentColor" d="M30 24v-2h-2.1c-.1-.6-.4-1.2-.7-1.8l1.5-1.5l-1.4-1.4l-1.5 1.5c-.5-.3-1.1-.6-1.8-.7V16h-2v2.1c-.6.1-1.2.4-1.8.7l-1.5-1.5l-1.4 1.4l1.5 1.5c-.3.5-.6 1.1-.7 1.8H16v2h2.1c.1.6.4 1.2.7 1.8l-1.5 1.5l1.4 1.4l1.5-1.5c.5.3 1.1.6 1.8.7V30h2v-2.1c.6-.1 1.2-.4 1.8-.7l1.5 1.5l1.4-1.4l-1.5-1.5c.3-.5.6-1.1.7-1.8H30zm-7 2c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3z"/><path fill="currentColor" d="M28 8H16l-3.4-3.4c-.4-.4-.9-.6-1.4-.6H4c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h10v-2H4V6h7.2l3.4 3.4l.6.6H28v5h2v-5c0-1.1-.9-2-2-2z"/>' }, "repo-source-code": { "body": '<path fill="currentColor" d="m23.6 21.4l3.6 3.6l-3.6 3.6L25 30l5-5l-5-5zm-3.2 0L16.8 25l3.6 3.6L19 30l-5-5l5-5z"/><path fill="currentColor" d="M28 8H16l-3.4-3.4c-.4-.4-.9-.6-1.4-.6H4c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h7v-2H4V6h7.2l3.4 3.4l.6.6H28v8h2v-8c0-1.1-.9-2-2-2z"/>' }, "report": { "body": '<path fill="currentColor" d="M10 18h8v2h-8zm0-5h12v2H10zm0 10h5v2h-5z"/><path fill="currentColor" d="M25 5h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2ZM12 4h8v4h-8Zm13 24H7V7h3v3h12V7h3Z"/>' }, "report-data": { "body": '<path fill="currentColor" d="M15 20h2v4h-2zm5-2h2v6h-2zm-10-4h2v10h-2z"/><path fill="currentColor" d="M25 5h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2ZM12 4h8v4h-8Zm13 24H7V7h3v3h12V7h3Z"/>' }, "request-quote": { "body": '<path fill="currentColor" d="M22 22v6H6V4h10V2H6a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6Z"/><path fill="currentColor" d="m29.54 5.76l-3.3-3.3a1.6 1.6 0 0 0-2.24 0l-14 14V22h5.53l14-14a1.6 1.6 0 0 0 0-2.24ZM14.7 20H12v-2.7l9.44-9.45l2.71 2.71ZM25.56 9.15l-2.71-2.71l2.27-2.27l2.71 2.71Z"/>' }, "research-bloch-sphere": { "body": '<path fill="currentColor" d="m21.87 7.84l-1.74-1L16 14a2 2 0 1 0 2 2a2 2 0 0 0-.27-1Z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 2a12 12 0 0 1 11.17 7.65a25.69 25.69 0 0 0-3.69-1.5l-1 1.77a22.7 22.7 0 0 1 5.41 2.39a11.05 11.05 0 0 1 0 3.38A22.92 22.92 0 0 1 16 21a22.92 22.92 0 0 1-11.87-3.31a11.05 11.05 0 0 1 0-3.38A22.8 22.8 0 0 1 15 11V9a25 25 0 0 0-10.17 2.6A12 12 0 0 1 16 4Zm0 24a12 12 0 0 1-11.17-7.65A24.88 24.88 0 0 0 16 23a24.88 24.88 0 0 0 11.17-2.65A12 12 0 0 1 16 28Z"/>', "hidden": true }, "research-hinton-plot": { "body": '<path fill="currentColor" d="M2 2h4v4H2zm8 0h4v4h-4zm8 0h4v4h-4zm8 0h4v4h-4zM2 10h4v4H2zm8 0h4v4h-4zm8 0h4v4h-4zm8 0h4v4h-4zM2 18h4v4H2zm8 0h4v4h-4zm8 0h4v4h-4zm8 0h4v4h-4zM2 26h4v4H2zm8 0h4v4h-4zm8 0h4v4h-4zm8 0h4v4h-4z"/>', "hidden": true }, "research-matrix": { "body": '<path fill="currentColor" d="M18 13V4h-2v2h-3v2h3v5h-3v2h8v-2h-3zm-1.5 7a3.5 3.5 0 1 1-3.5 3.5a3.5 3.5 0 0 1 3.5-3.5m0-2a5.5 5.5 0 1 0 5.5 5.5a5.5 5.5 0 0 0-5.5-5.5zM8 30H2V2h6v2H4v24h4v2zm22 0h-6v-2h4V4h-4V2h6v28z"/>', "hidden": true }, "reset": { "body": '<path fill="currentColor" d="M18 28A12 12 0 1 0 6 16v6.2l-3.6-3.6L1 20l6 6l6-6l-1.4-1.4L8 22.2V16a10 10 0 1 1 10 10Z"/>' }, "reset-alt": { "body": '<path fill="currentColor" d="M27 8H6.83l3.58-3.59L9 3L3 9l6 6l1.41-1.41L6.83 10H27v16H7v-7H5v7a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2Z"/>' }, "restart": { "body": '<path fill="currentColor" d="M26 18A10 10 0 1 1 16 8h6.182l-3.584 3.585L20 13l6-6l-6-6l-1.402 1.414L22.185 6H16a12 12 0 1 0 12 12Z"/>' }, "restaurant": { "body": '<path fill="currentColor" d="M9 2h2v10H9z"/><path fill="currentColor" d="M14 11a4 4 0 0 1-8 0V2H4v9a6 6 0 0 0 5 5.91V30h2V16.91A6 6 0 0 0 16 11V2h-2zm8-9h-1v28h2V20h3a2 2 0 0 0 2-2V8a5.78 5.78 0 0 0-6-6zm4 16h-3V4.09c2.88.56 3 3.54 3 3.91z"/>' }, "restaurant-fine": { "body": '<path fill="currentColor" d="M30 11V3a1 1 0 0 0-1-1H19a1 1 0 0 0-1 1v8a6.004 6.004 0 0 0 5 5.91V28h-4v2h10v-2h-4V16.91A6.004 6.004 0 0 0 30 11zm-10 0V4h8v7a4 4 0 1 1-8 0zm-8-9v9.02a3.964 3.964 0 0 1-3.96 3.96A4.005 4.005 0 0 1 4 11.02V2H2v9.02a5.989 5.989 0 0 0 5 5.865V30h2V16.895a5.965 5.965 0 0 0 5-5.875V2z"/><path fill="currentColor" d="M7 2h2v9.98H7z"/>' }, "result": { "body": '<path fill="currentColor" d="M14 23h8v2h-8zm-4 0h2v2h-2zm4-5h8v2h-8zm-4 0h2v2h-2zm4-5h8v2h-8zm-4 0h2v2h-2z"/><path fill="currentColor" d="M25 5h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2ZM12 4h8v4h-8Zm13 24H7V7h3v3h12V7h3Z"/>' }, "result-draft": { "body": '<path fill="currentColor" d="m29.7 19.3l-3-3c-.4-.4-1-.4-1.4 0L16 25.6V30h4.4l9.3-9.3c.4-.4.4-1 0-1.4zM19.6 28H18v-1.6l5-5l1.6 1.6l-5 5zm6.4-6.4L24.4 20l1.6-1.6l1.6 1.6l-1.6 1.6zM10 23h2v2h-2zm4-5h4v2h-4zm-4 0h2v2h-2zm4-5h8v2h-8zm-4 0h2v2h-2z"/><path fill="currentColor" d="M7 28V7h3v3h12V7h3v6h2V7c0-1.1-.9-2-2-2h-3V4c0-1.1-.9-2-2-2h-8c-1.1 0-2 .9-2 2v1H7c-1.1 0-2 .9-2 2v21c0 1.1.9 2 2 2h5v-2H7zm5-24h8v4h-8V4z"/>' }, "result-new": { "body": '<circle cx="26" cy="26" r="4" fill="currentColor"/><path fill="currentColor" d="M10 13h2v2h-2zm0 5h2v2h-2zm0 5h2v2h-2zm4-10h8v2h-8zm0 5h8v2h-8zm0 5h4v2h-4z"/><path fill="currentColor" d="M7 28V7h3v3h12V7h3v11h2V7a2 2 0 0 0-2-2h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h11v-2Zm5-24h8v4h-8Z"/>' }, "result-old": { "body": '<path fill="currentColor" d="M10 13h2v2h-2zm4 0h8v2h-8zm-4 5h2v2h-2zm0 5h2v2h-2z"/><path fill="currentColor" d="M7 28V7h3v3h12V7h3v8h2V7a2 2 0 0 0-2-2h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h9v-2Zm5-24h8v4h-8Z"/><path fill="currentColor" d="M18 19v2.413A6.996 6.996 0 1 1 24 32v-2a5 5 0 1 0-4.576-7H22v2h-6v-6Z"/>' }, "retry-failed": { "body": '<path fill="currentColor" d="M26.41 25L30 21.41L28.59 20L25 23.59L21.41 20L20 21.41L23.59 25L20 28.59L21.41 30L25 26.41L28.59 30L30 28.59L26.41 25zM18 2A12.035 12.035 0 0 0 6 14v6.2l-3.6-3.6L1 18l6 6l6-6l-1.4-1.4L8 20.2V14a10 10 0 0 1 20 0v3h2v-3A12.035 12.035 0 0 0 18 2z"/>' }, "review": { "body": '<path fill="currentColor" d="m16 8l1.912 3.703l4.088.594L19 15l1 4l-4-2.25L12 19l1-4l-3-2.703l4.2-.594L16 8z"/><path fill="currentColor" d="M17.736 30L16 29l4-7h6a1.997 1.997 0 0 0 2-2V8a1.997 1.997 0 0 0-2-2H6a1.997 1.997 0 0 0-2 2v12a1.997 1.997 0 0 0 2 2h9v2H6a4 4 0 0 1-4-4V8a3.999 3.999 0 0 1 4-4h20a3.999 3.999 0 0 1 4 4v12a4 4 0 0 1-4 4h-4.835Z"/>' }, "rewind-10": { "body": '<path fill="currentColor" d="M4 18A12 12 0 1 0 16 6h-4V1L6 7l6 6V8h4A10 10 0 1 1 6 18Z"/><path fill="currentColor" d="M19.63 22.13a2.84 2.84 0 0 1-1.28-.27a2.44 2.44 0 0 1-.89-.77a3.57 3.57 0 0 1-.52-1.25a7.69 7.69 0 0 1-.17-1.68a7.83 7.83 0 0 1 .17-1.68a3.65 3.65 0 0 1 .52-1.25a2.44 2.44 0 0 1 .89-.77a2.84 2.84 0 0 1 1.28-.27a2.44 2.44 0 0 1 2.16 1a5.23 5.23 0 0 1 .7 2.93a5.23 5.23 0 0 1-.7 2.93a2.44 2.44 0 0 1-2.16 1.08zm0-1.22a1.07 1.07 0 0 0 1-.55a3.38 3.38 0 0 0 .37-1.51v-1.38a3.31 3.31 0 0 0-.29-1.5a1.23 1.23 0 0 0-2.06 0a3.31 3.31 0 0 0-.29 1.5v1.38a3.38 3.38 0 0 0 .29 1.51a1.06 1.06 0 0 0 .98.55zm-9 1.09v-1.18h2v-5.19l-1.86 1l-.55-1.06l2.32-1.3H14v6.5h1.78V22z"/>' }, "rewind-30": { "body": '<path fill="currentColor" d="M4 18A12 12 0 1 0 16 6h-4V1L6 7l6 6V8h4A10 10 0 1 1 6 18Z"/><path fill="currentColor" d="M19.64 22.13a2.81 2.81 0 0 1-1.28-.27a2.36 2.36 0 0 1-.89-.77a3.39 3.39 0 0 1-.47-1.25a7.12 7.12 0 0 1-.17-1.68a7.24 7.24 0 0 1 .17-1.68a3.46 3.46 0 0 1 .52-1.25a2.36 2.36 0 0 1 .89-.77a2.81 2.81 0 0 1 1.28-.27a2.44 2.44 0 0 1 2.16 1a5.31 5.31 0 0 1 .7 2.93a5.31 5.31 0 0 1-.7 2.93a2.44 2.44 0 0 1-2.21 1.08zm0-1.22a1 1 0 0 0 1-.55a3.24 3.24 0 0 0 .3-1.51v-1.38a3.17 3.17 0 0 0-.3-1.5a1.22 1.22 0 0 0-2.05 0a3.18 3.18 0 0 0-.29 1.5v1.38a3.25 3.25 0 0 0 .29 1.51a1 1 0 0 0 1.05.55zm-7.02-3.49a1.46 1.46 0 0 0 1-.27a.84.84 0 0 0 .31-.68v-.08a.94.94 0 0 0-.3-.74a1.2 1.2 0 0 0-.83-.27a1.65 1.65 0 0 0-.89.24a2.1 2.1 0 0 0-.68.68l-.93-.83a5.37 5.37 0 0 1 .44-.51a2.7 2.7 0 0 1 .54-.4a2.55 2.55 0 0 1 .7-.27a3.25 3.25 0 0 1 .87-.1a3.94 3.94 0 0 1 1.06.14a2.33 2.33 0 0 1 .82.4a1.91 1.91 0 0 1 .54.63a1.87 1.87 0 0 1 .18.83a2 2 0 0 1-.11.67a1.82 1.82 0 0 1-.32.52a1.79 1.79 0 0 1-.47.36a2.27 2.27 0 0 1-.57.2V18a2.34 2.34 0 0 1 .63.21a1.7 1.7 0 0 1 .51.38a1.89 1.89 0 0 1 .34.55a2.07 2.07 0 0 1 .12.73a2 2 0 0 1-.2.92a2 2 0 0 1-.58.72a2.66 2.66 0 0 1-.89.45a3.76 3.76 0 0 1-1.15.16a4.1 4.1 0 0 1-1-.11a3.1 3.1 0 0 1-.76-.31a2.76 2.76 0 0 1-.56-.45a4.22 4.22 0 0 1-.44-.55l1.07-.81a3.07 3.07 0 0 0 .28.42a1.94 1.94 0 0 0 .36.34a1.57 1.57 0 0 0 .45.22a2 2 0 0 0 .57.07a1.45 1.45 0 0 0 1-.3a1.12 1.12 0 0 0 .34-.85v-.08a1 1 0 0 0-.37-.8a1.78 1.78 0 0 0-1.06-.28h-.76v-1.21z"/>' }, "rewind-5": { "body": '<path fill="currentColor" d="M4 18A12 12 0 1 0 16 6h-4V1L6 7l6 6V8h4A10 10 0 1 1 6 18Z"/><path fill="currentColor" d="M18.58 15.58h-3.45L15 18.15a4.83 4.83 0 0 1 .26-.45a1.59 1.59 0 0 1 .33-.35a1.53 1.53 0 0 1 .44-.23a2 2 0 0 1 .6-.08a2.54 2.54 0 0 1 .92.16a2.06 2.06 0 0 1 .74.48a2.28 2.28 0 0 1 .5.77a2.73 2.73 0 0 1 .18 1a2.87 2.87 0 0 1-.19 1.07a2.36 2.36 0 0 1-.55.84a2.44 2.44 0 0 1-.89.55a3.23 3.23 0 0 1-1.21.2a3.79 3.79 0 0 1-.94-.11a3 3 0 0 1-.74-.32a2.45 2.45 0 0 1-.55-.45a4.13 4.13 0 0 1-.41-.55l1.06-.81l.27.41a1.82 1.82 0 0 0 .34.34a1.59 1.59 0 0 0 .43.22a1.52 1.52 0 0 0 .55.08a1.29 1.29 0 0 0 1-.36a1.41 1.41 0 0 0 .33-1v-.06a1.18 1.18 0 0 0-1.28-1.27a1.44 1.44 0 0 0-.77.18a1.94 1.94 0 0 0-.48.39l-1.19-.17l.29-4.31h4.52Z"/>' }, "road": { "body": '<path fill="currentColor" d="M13 13h6v2h-6z"/><path fill="currentColor" d="m25.44 8l-1.27-4.55A2.009 2.009 0 0 0 22.246 2H9.754a2.009 2.009 0 0 0-1.923 1.45L6.531 8H4v2h2v7a2.002 2.002 0 0 0 2 2v3h2v-3h12v3h2v-3a2.002 2.002 0 0 0 2-2v-7h2V8zM9.755 4h12.492l1.428 5H8.326zM24 13h-2v2h2v2H8v-2h2v-2H8v-2h16zM2 16h2v14H2zm26 0h2v14h-2z"/><path fill="currentColor" d="M15 21h2v3h-2zm0 5h2v4h-2z"/>' }, "road-weather": { "body": '<path fill="currentColor" d="M16 31h-2v-.228a3.014 3.014 0 0 0-1.947-2.81l-3.532-1.324A3.903 3.903 0 0 1 6 23h2a1.895 1.895 0 0 0 1.224 1.766l3.531 1.324A5.023 5.023 0 0 1 16 30.772zm14 0h-2v-.228a3.014 3.014 0 0 0-1.947-2.81l-3.532-1.324A3.903 3.903 0 0 1 20 23h2a1.895 1.895 0 0 0 1.224 1.766l3.531 1.324A5.023 5.023 0 0 1 30 30.772zM11 13h6v2h-6z"/><path fill="currentColor" d="m23.44 8l-1.27-4.55A2.009 2.009 0 0 0 20.246 2H7.754a2.009 2.009 0 0 0-1.923 1.45L4.531 8H2v2h2v7a2.002 2.002 0 0 0 2 2v2h2v-2h12v2h2v-2a2.002 2.002 0 0 0 2-2v-7h2V8ZM7.755 4h12.492l1.428 5H6.326ZM22 13h-2v2h2v2H6v-2h2v-2H6v-2h16Z"/>' }, "roadmap": { "body": '<path fill="currentColor" d="M12 30H4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-8-6v4h8v-4zm24-4H12a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-16-6v4h16v-4zm4-4H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 4v4h12V4z"/>' }, "rocket": { "body": '<path fill="currentColor" d="m7.288 23.292l7.997-7.997l1.414 1.414l-7.997 7.997z"/><path fill="currentColor" d="M17 30a1 1 0 0 1-.37-.07a1 1 0 0 1-.62-.79l-1-7l2-.28l.75 5.27L21 24.52V17a1 1 0 0 1 .29-.71l4.07-4.07A8.94 8.94 0 0 0 28 5.86V4h-1.86a8.94 8.94 0 0 0-6.36 2.64l-4.07 4.07A1 1 0 0 1 15 11H7.48l-2.61 3.26l5.27.75l-.28 2l-7-1a1 1 0 0 1-.79-.62a1 1 0 0 1 .15-1l4-5A1 1 0 0 1 7 9h7.59l3.77-3.78A10.92 10.92 0 0 1 26.14 2H28a2 2 0 0 1 2 2v1.86a10.92 10.92 0 0 1-3.22 7.78L23 17.41V25a1 1 0 0 1-.38.78l-5 4A1 1 0 0 1 17 30Z"/>' }, "rotate": { "body": '<path fill="currentColor" d="m17.91 26.82l.35 2a12.9 12.9 0 0 0 4.24-1.54l-1-1.73a10.88 10.88 0 0 1-3.59 1.27zm6.51-3.75L26 24.35a13 13 0 0 0 2.24-3.91l-1.87-.68a11 11 0 0 1-1.95 3.31zM9.5 27.25a12.9 12.9 0 0 0 4.24 1.54l.35-2a10.88 10.88 0 0 1-3.59-1.3zm-3.83-7.49l-1.87.68A13 13 0 0 0 6 24.35l.32-.26l1.22-1a11 11 0 0 1-1.91-3.31zM29 16a12.85 12.85 0 0 0-.8-4.44l-1.87.68A11.18 11.18 0 0 1 27 16zm-3-8.35a13 13 0 0 0-20 0V4H4v8h8v-2H6.81a11 11 0 0 1 17.61-1.07z"/>' }, "rotate-180": { "body": '<path d="M14.091 26.823l-.346 1.968a12.896 12.896 0 0 1-4.24-1.541l1-1.731a10.909 10.909 0 0 0 3.586 1.305z" fill="currentColor"/><path d="M7.577 23.068l-1.532 1.285a12.981 12.981 0 0 1-2.25-3.91l1.877-.684a10.98 10.98 0 0 0 1.905 3.31z" fill="currentColor"/><path d="M22.495 27.25a12.896 12.896 0 0 1-4.24 1.542l-.347-1.968a10.909 10.909 0 0 0 3.587-1.305z" fill="currentColor"/><path d="M26.327 19.759l1.878.683a12.981 12.981 0 0 1-2.25 3.911l-.311-.261l-1.22-1.024a10.982 10.982 0 0 0 1.903-3.31z" fill="currentColor"/><path d="M13.662 5.256c-.16.034-.315.08-.472.121a10.96 10.96 0 0 0-.633.183c-.164.054-.325.116-.486.178c-.193.074-.383.15-.57.235c-.161.072-.32.15-.476.23q-.268.136-.526.286c-.153.09-.305.18-.454.276c-.167.11-.33.224-.492.342c-.14.102-.281.203-.417.312c-.161.13-.315.268-.47.406c-.122.11-.248.217-.365.332c-.167.164-.322.338-.478.512A10.944 10.944 0 0 0 5 16H3a12.936 12.936 0 0 1 3.05-8.35l-.005-.004c.092-.11.197-.206.293-.312c.184-.205.367-.41.563-.603c.139-.136.286-.262.43-.391c.183-.165.366-.329.558-.482c.16-.128.325-.247.49-.367c.192-.14.385-.277.585-.406c.175-.113.353-.22.532-.324q.309-.179.626-.341c.184-.094.37-.185.56-.27c.222-.1.449-.191.678-.28c.19-.072.378-.145.571-.208c.246-.082.498-.15.75-.217c.186-.049.368-.102.556-.143c.29-.063.587-.107.884-.15c.159-.023.314-.056.475-.073A12.933 12.933 0 0 1 26 7.703V4h2v8h-8v-2h5.189A10.961 10.961 0 0 0 16 5a11.111 11.111 0 0 0-1.189.067c-.136.015-.268.042-.403.061c-.25.037-.501.075-.746.128z" fill="currentColor"/>', "hidden": true }, "rotate-360": { "body": '<path d="M25.95 7.65l.005-.004c-.092-.11-.197-.206-.293-.312c-.184-.205-.367-.41-.563-.603c-.139-.136-.286-.262-.43-.391c-.183-.165-.366-.329-.558-.482c-.16-.128-.325-.247-.49-.367c-.192-.14-.385-.277-.585-.406a13.513 13.513 0 0 0-.533-.324q-.308-.179-.625-.341c-.184-.094-.37-.185-.56-.27c-.222-.1-.449-.191-.678-.28c-.19-.072-.378-.145-.571-.208c-.246-.082-.498-.15-.75-.217c-.186-.049-.368-.102-.556-.143c-.29-.063-.587-.107-.883-.15c-.16-.023-.315-.056-.476-.073A12.933 12.933 0 0 0 6 7.703V4H4v8h8v-2H6.811A10.961 10.961 0 0 1 16 5a11.111 11.111 0 0 1 1.189.067c.136.015.268.042.403.061c.25.037.501.075.746.128c.16.035.315.08.472.121c.213.057.425.114.633.183c.164.054.325.116.486.178c.193.074.384.15.57.235c.162.072.32.15.477.23q.268.136.526.286c.153.09.305.18.453.276c.168.11.33.224.492.342c.14.102.282.203.417.312c.162.13.316.268.47.406c.123.11.248.217.365.332c.167.164.323.338.479.512A10.993 10.993 0 1 1 5 16H3a13 13 0 1 0 22.95-8.35z" fill="currentColor"/>', "hidden": true }, "rotate-clockwise": { "body": '<path fill="currentColor" d="M28 30H16a2.002 2.002 0 0 1-2-2V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zM16 16v12h12.001L28 16zM15 2l-1.41 1.41L16.17 6H11a7.008 7.008 0 0 0-7 7v5h2v-5a5.006 5.006 0 0 1 5-5h5.17l-2.58 2.59L15 12l5-5z"/>' }, "rotate-clockwise-alt": { "body": '<path fill="currentColor" d="M16 30H4a2.002 2.002 0 0 1-2-2V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zM4 16v12h12.001L16 16zm26-1l-1.41-1.41L26 16.17V11a7.008 7.008 0 0 0-7-7h-5v2h5a5.006 5.006 0 0 1 5 5v5.17l-2.59-2.58L20 15l5 5z"/>' }, "rotate-clockwise-alt-filled": { "body": '<path fill="currentColor" d="M16 30H4a2.002 2.002 0 0 1-2-2V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zm14-15l-1.41-1.41L26 16.17V11a7.008 7.008 0 0 0-7-7h-5v2h5a5.006 5.006 0 0 1 5 5v5.17l-2.59-2.58L20 15l5 5z"/>' }, "rotate-clockwise-filled": { "body": '<path fill="currentColor" d="M28 30H16a2.002 2.002 0 0 1-2-2V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2zM15 2l-1.41 1.41L16.17 6H11a7.008 7.008 0 0 0-7 7v5h2v-5a5.006 5.006 0 0 1 5-5h5.17l-2.58 2.59L15 12l5-5z"/>' }, "rotate-counterclockwise": { "body": '<path fill="currentColor" d="M2 28V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2H4a2.002 2.002 0 0 1-2-2zm2-12l-.001 12H16V16zM17 2l1.41 1.41L15.83 6H21a7.008 7.008 0 0 1 7 7v5h-2v-5a5.006 5.006 0 0 0-5-5h-5.17l2.58 2.59L17 12l-5-5z"/>' }, "rotate-counterclockwise-alt": { "body": '<path fill="currentColor" d="M14 28V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2H16a2.002 2.002 0 0 1-2-2zm2-12l-.001 12H28V16zM2 15l1.41-1.41L6 16.17V11a7.008 7.008 0 0 1 7-7h5v2h-5a5.006 5.006 0 0 0-5 5v5.17l2.59-2.58L12 15l-5 5z"/>' }, "rotate-counterclockwise-alt-filled": { "body": '<path fill="currentColor" d="M14 28V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2H16a2.002 2.002 0 0 1-2-2zM2 15l1.41-1.41L6 16.17V11a7.008 7.008 0 0 1 7-7h5v2h-5a5.006 5.006 0 0 0-5 5v5.17l2.59-2.58L12 15l-5 5z"/>' }, "rotate-counterclockwise-filled": { "body": '<path fill="currentColor" d="M2 28V16a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2H4a2.002 2.002 0 0 1-2-2zM17 2l1.41 1.41L15.83 6H21a7.008 7.008 0 0 1 7 7v5h-2v-5a5.006 5.006 0 0 0-5-5h-5.17l2.58 2.59L17 12l-5-5z"/>' }, "router": { "body": '<path fill="currentColor" d="m21 7l-5-5l-5 5l1.409 1.419L15 5.847V13h2V5.794l2.591 2.625L21 7zm0 18l-5 5l-5-5l1.409-1.419L15 26.153V19h2v7.206l2.591-2.625L21 25zm3-14l-5 5l5 5l1.419-1.409L22.847 17H30v-2h-7.206l2.625-2.591L24 11zM8 11l5 5l-5 5l-1.419-1.409L9.153 17H2v-2h7.206l-2.625-2.591L8 11z"/>' }, "router-voice": { "body": '<path fill="currentColor" d="m21 25l-5 5l-5-5l1.409-1.419L15 26.153V19h2v7.206l2.591-2.625L21 25zm3-14l-5 5l5 5l1.419-1.409L22.847 17H30v-2h-7.206l2.625-2.591L24 11zM8 11l5 5l-5 5l-1.419-1.409L9.153 17H2v-2h7.206l-2.625-2.591L8 11zm4.429-5.177v1.63a1.127 1.127 0 0 1-.677 1.026l-1.39.596a1.122 1.122 0 0 1-1.222-.233L7.32 7.023a1.117 1.117 0 0 1 .013-1.579l.035-.032c7.393-6.527 14.691-2.038 17.213-.048a1.117 1.117 0 0 1 .174 1.57a1.101 1.101 0 0 1-.087.097l-1.757 1.757a1.111 1.111 0 0 1-1.223.233l-1.39-.597a1.111 1.111 0 0 1-.68-1.022v-1.63s-3.645-2.707-7.19.05z"/>' }, "router-wifi": { "body": '<circle cx="16" cy="13.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M19.536 10.465a5 5 0 0 0-7.072 0L11.05 9.05a7 7 0 0 1 9.9 0Z"/><path fill="currentColor" d="M23.071 6.929a10 10 0 0 0-14.142 0L7.515 5.514a12.001 12.001 0 0 1 16.97 0zM21 25l-5 5l-5-5l1.409-1.419L15 26.153V19h2v7.206l2.591-2.625L21 25zm3-14l-5 5l5 5l1.419-1.409L22.847 17H30v-2h-7.206l2.625-2.591L24 11zM8 11l5 5l-5 5l-1.419-1.409L9.153 17H2v-2h7.206l-2.625-2.591L8 11z"/>' }, "row": { "body": '<path fill="currentColor" d="M4 24h24v2H4zm22-6H6v-4h20v4m2 0v-4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2zM4 6h24v2H4z"/>' }, "row-collapse": { "body": '<path fill="currentColor" d="M26 20H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2zm0 6H6v-4h20zM17 7.828l2.586 2.586L21 9l-5-5l-5 5l1.414 1.414L15 7.828V14H4v2h24v-2H17V7.828z"/>' }, "row-delete": { "body": '<path fill="currentColor" d="M24 30H4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zM4 22h-.002L4 28h20v-6zM30 3.41L28.59 2L25 5.59L21.41 2L20 3.41L23.59 7L20 10.59L21.41 12L25 8.41L28.59 12L30 10.59L26.41 7L30 3.41z"/><path fill="currentColor" d="M4 14V8h14V6H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h22v-2Z"/>' }, "row-expand": { "body": '<path fill="currentColor" d="M4 18h11v6.172l-2.586-2.586L11 23l5 5l5-5l-1.414-1.414L17 24.172V18h11v-2H4v2zM26 4H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 6H6V6h20z"/>' }, "row-insert": { "body": '<path fill="currentColor" d="M28 12H10a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h18a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zM10 4v6h18V4zm18 26H10a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h18a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-18-8v6h18v-6zm-1-6l-5.586-5.586L2 11.828L6.172 16L2 20.172l1.414 1.414L9 16z"/>' }, "rss": { "body": '<path fill="currentColor" d="M8 18c-3.3 0-6 2.7-6 6s2.7 6 6 6s6-2.7 6-6s-2.7-6-6-6zm0 10c-2.2 0-4-1.8-4-4s1.8-4 4-4s4 1.8 4 4s-1.8 4-4 4zm22-4h-2C28 13 19 4 8 4V2c12.1 0 22 9.9 22 22z"/><path fill="currentColor" d="M22 24h-2c0-6.6-5.4-12-12-12v-2c7.7 0 14 6.3 14 14z"/>' }, "rule": { "body": '<path fill="currentColor" d="M10 16h12v2H10zm0-6h12v2H10z"/><path fill="currentColor" d="m16 30l-6.176-3.293A10.982 10.982 0 0 1 4 17V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v13a10.982 10.982 0 0 1-5.824 9.707ZM6 4v13a8.985 8.985 0 0 0 4.766 7.942L16 27.733l5.234-2.79A8.985 8.985 0 0 0 26 17V4Z"/>' }, "rule-cancelled": { "body": '<path fill="currentColor" d="M30 24a6 6 0 1 0-6 6a6.007 6.007 0 0 0 6-6zm-2 0a3.952 3.952 0 0 1-.567 2.019l-5.452-5.452A3.953 3.953 0 0 1 24 20a4.005 4.005 0 0 1 4 4zm-8 0a3.952 3.952 0 0 1 .567-2.019l5.452 5.452A3.953 3.953 0 0 1 24 28a4.005 4.005 0 0 1-4-4zM8 16h10v2H8zm0-6h12v2H8z"/><path fill="currentColor" d="m14 27.733l-5.234-2.79A8.986 8.986 0 0 1 4 17V4h20v11h2V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v13a10.981 10.981 0 0 0 5.824 9.707L14 30Z"/>' }, "rule-data-quality": { "body": '<path fill="currentColor" d="m30 28.6l-2.8-2.8c.5-.8.8-1.8.8-2.8c0-2.8-2.2-5-5-5s-5 2.2-5 5s2.2 5 5 5c1 0 2-.3 2.8-.8l2.8 2.8l1.4-1.4zM20 23c0-1.7 1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3s-3-1.3-3-3zM8 16h10v2H8zm0-6h12v2H8z"/><path fill="currentColor" d="m14 27.7l-5.2-2.8C5.8 23.4 4 20.3 4 17V4h20v11h2V4c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v13c0 4.1 2.2 7.8 5.8 9.7L14 30v-2.3z"/>' }, "rule-draft": { "body": '<path fill="currentColor" d="m29.707 19.293l-3-3a1 1 0 0 0-1.414 0L16 25.586V30h4.414l9.293-9.293a1 1 0 0 0 0-1.414zM19.586 28H18v-1.586l5-5L24.586 23zM26 21.586L24.414 20L26 18.414L27.586 20zM8 16h10v2H8zm0-6h12v2H8z"/><path fill="currentColor" d="M26 4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v13a10.981 10.981 0 0 0 5.824 9.707L13 29.467V27.2l-4.234-2.258A8.986 8.986 0 0 1 4 17V4h20v9h2Z"/>' }, "rule-filled": { "body": '<path fill="none" d="M9 16h14v2H9zm0-6h14v2H9z"/><path fill="currentColor" d="M26 2H6a2.002 2.002 0 0 0-2 2v13a10.981 10.981 0 0 0 5.824 9.707L16 30l6.176-3.293A10.981 10.981 0 0 0 28 17V4a2.002 2.002 0 0 0-2-2Zm-3 16H9v-2h14Zm0-6H9v-2h14Z"/>' }, "rule-locked": { "body": '<path fill="currentColor" d="M28 22v-3c0-2.2-1.8-4-4-4s-4 1.8-4 4v3c-1.1 0-2 .9-2 2v5c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2v-5c0-1.1-.9-2-2-2zm-6-3c0-1.1.9-2 2-2s2 .9 2 2v3h-4v-3zm-2 10v-5h8v5h-8zM8 16h6v2H8zm0-6h12v2H8z"/><path fill="currentColor" d="M26 4c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v13c0 4.1 2.2 7.8 5.8 9.7l5.2 2.8v-2.3l-4.2-2.3C5.8 23.4 4 20.3 4 17V4h20v8h2V4z"/>' }, "rule-partial": { "body": '<path fill="currentColor" d="M23 16c-3.9 0-7 3.1-7 7s3.1 7 7 7s7-3.1 7-7s-3.1-7-7-7zm0 12V18c2.8 0 5 2.2 5 5s-2.2 5-5 5zM8 16h6v2H8zm0-6h12v2H8z"/><path fill="currentColor" d="M26 4c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v13c0 4.1 2.2 7.8 5.8 9.7l5.2 2.8v-2.3l-4.2-2.3C5.8 23.4 4 20.3 4 17V4h20v9h2V4z"/>' }, "rule-test": { "body": '<path fill="currentColor" d="M23 30a7 7 0 1 1 7-7a7.008 7.008 0 0 1-7 7Zm0-12a5 5 0 1 0 5 5a5.005 5.005 0 0 0-5-5Z"/><path fill="currentColor" d="m26 24.586l-2-2V20h-2v3.414L24.586 26L26 24.586zM8 16h6v2H8zm0-6h12v2H8z"/><path fill="currentColor" d="M26 4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v13a10.981 10.981 0 0 0 5.824 9.707L13 29.467V27.2l-4.234-2.258A8.986 8.986 0 0 1 4 17V4h20v9h2Z"/>' }, "ruler": { "body": '<path fill="currentColor" d="M29 10H3a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h26a1 1 0 0 0 1-1V11a1 1 0 0 0-1-1Zm-1 10H4v-8h4v4h2v-4h5v4h2v-4h5v4h2v-4h4Z"/>' }, "ruler-alt": { "body": '<path fill="currentColor" d="M29.41 21.67L10.34 2.58a2 2 0 0 0-2.83 0L2.59 7.51a2 2 0 0 0 0 2.82l19.07 19.09a2 2 0 0 0 1.42.58a2 2 0 0 0 1.41-.58l4.92-4.93a2 2 0 0 0 0-2.82ZM23.08 28L4 8.92L8.92 4l3.79 3.79L10.46 10l1.41 1.41l2.25-2.21l4.13 4.13L16 15.58L17.42 17l2.25-2.25l4.13 4.13l-2.25 2.25L23 22.54l2.25-2.25L28 23.08Z"/>' }, "run": { "body": '<path fill="currentColor" d="M21 16a6 6 0 1 1-6 6a6 6 0 0 1 6-6m0-2a8 8 0 1 0 8 8a8 8 0 0 0-8-8Z"/><path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h4v-2H6V12h22V6a2 2 0 0 0-2-2ZM6 10V6h20v4Z"/><path fill="currentColor" d="M19 19v6l5-3l-5-3z"/>' }, "run-mirror": { "body": '<path fill="currentColor" d="M9 19v6l5-3z"/><path fill="currentColor" d="M11 16c3.3 0 6 2.7 6 6s-2.7 6-6 6s-6-2.7-6-6s2.7-6 6-6m0-2c-4.4 0-8 3.6-8 8s3.6 8 8 8s8-3.6 8-8s-3.6-8-8-8z"/><path fill="currentColor" d="M4 6v6h22v14h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2zm2 4V6h20v4H6z"/>' }, "s": { "body": '<path d="M18 23h-6v-2h6v-4h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h6v2h-6v4h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2z" fill="currentColor"/>', "hidden": true }, "s-alt": { "body": '<path d="M24 9h-2V7h-2v2h-2v2h2v6h2v-6h2V9z" fill="currentColor"/><path d="M14 23H8v-2h6v-4h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h6v2h-6v4h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2z" fill="currentColor"/>', "hidden": true }, "sailboat-coastal": { "body": '<path fill="currentColor" d="m24.78 26l1.19-4.758A1 1 0 0 0 25 20h-5v-3h5a1 1 0 0 0 .908-1.419l-6-13a1 1 0 0 0-1.702-.19l-9.998 13A1 1 0 0 0 9 17h9v3H7a1 1 0 0 0-.97 1.242L7.22 26H2v2h28v-2ZM20 7.553L23.437 15H20ZM11.03 15L18 5.94V15Zm11.69 11H9.28l-1-4h15.44Z"/>' }, "sailboat-offshore": { "body": '<path fill="currentColor" d="M6.97 25h2.06l-.75-3h15.44l-.75 3h2.06l.94-3.758A1 1 0 0 0 25 20h-5v-3h5a1 1 0 0 0 .908-1.419l-6-13a1 1 0 0 0-1.702-.19l-9.998 13A1 1 0 0 0 9 17h9v3H7a1 1 0 0 0-.97 1.242ZM20 7.553L23.437 15H20ZM11.03 15L18 5.94V15Z"/><path fill="currentColor" d="M26.906 25.751A2.998 2.998 0 0 1 24 28a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 20 25a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 16 28a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 12 25a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 8 28a2.998 2.998 0 0 1-2.906-2.249l-1.936.498A4.997 4.997 0 0 0 8 30a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 24 30a4.997 4.997 0 0 0 4.842-3.751Z"/>' }, "sankey-diagram": { "body": '<path fill="currentColor" d="M28 2v6.044c-1.963.197-6.316 1.232-10.564 6.276c-.198-.277-.398-.546-.588-.85C11.974 5.67 6.32 4.276 4 4.042V2H2v28h2v-3.954a14.866 14.866 0 0 0 9.918-3.96c4.552 5.374 11.318 5.952 14.016 5.952H28V30h2V2Zm0 8.055v9.99a12.883 12.883 0 0 1-9.276-4.133c3.78-4.645 7.567-5.652 9.276-5.857ZM15.152 14.53c.324.518.663.99 1.008 1.44c-.339.475-.676.972-1.008 1.504a16.135 16.135 0 0 1-1.031 1.453c-.083-.137-.168-.27-.247-.413C9.328 10.332 5.787 8.444 4 8.068V6.051c1.993.24 6.823 1.553 11.152 8.479ZM4 24.049V10.14c1.325.464 4.203 2.284 8.126 9.344c.19.342.396.653.6.967A12.878 12.878 0 0 1 4 24.05Zm11.318-3.421a18.056 18.056 0 0 0 1.53-2.094c.221-.354.445-.67.669-.995A14.869 14.869 0 0 0 28 22.042v3.987c-2.33-.01-8.626-.52-12.682-5.401Z"/>' }, "sankey-diagram-alt": { "body": '<path fill="currentColor" d="M30 2H2v14h6.111a7.036 7.036 0 0 1 3.13.74L15.764 19l-4.522 2.26a7.036 7.036 0 0 1-3.13.74H2v8h7.223a9.045 9.045 0 0 0 4.025-.95l8.622-4.31A7.036 7.036 0 0 1 25 24h5V14h-5a7.036 7.036 0 0 1-3.13-.74L15.348 10H30ZM8 4h16v4H8ZM4 4h2v10H4Zm0 20h2v4H4Zm16.975-1.05l-8.622 4.31a7.036 7.036 0 0 1-3.13.74H8v-4h.111a9.045 9.045 0 0 0 4.025-.95L18 20.118l1.864.932a9.045 9.045 0 0 0 4.025.95H24v.058a9.052 9.052 0 0 0-3.025.892ZM28 22h-2v-6h2ZM12.354 10.74l8.621 4.31a9.052 9.052 0 0 0 3.025.89V20h-.111a7.036 7.036 0 0 1-3.13-.74l-8.622-4.31A9.045 9.045 0 0 0 8.11 14H8v-4h1.223a7.036 7.036 0 0 1 3.13.74ZM28 8h-2V4h2Z"/>' }, "satellite": { "body": '<path fill="currentColor" d="m22.914 16.5l2.793-2.793a1 1 0 0 0 0-1.414L23.414 10L25.5 7.914L28.586 11L30 9.586L22.414 2L21 3.414L24.086 6.5L22 8.586l-2.293-2.293a1 1 0 0 0-1.414 0L15.5 9.086L8.707 2.293a1 1 0 0 0-1.414 0l-5 5a1 1 0 0 0 0 1.414L9.086 15.5l-2.793 2.793a1 1 0 0 0 0 1.414L8.586 22L6.5 24.086L3.414 21L2 22.414L9.586 30L11 28.586L7.914 25.5L10 23.414l2.293 2.293a1 1 0 0 0 1.414 0l2.793-2.793l6.793 6.793a1 1 0 0 0 1.414 0l5-5a1 1 0 0 0 0-1.414ZM4.414 8L8 4.414L10.086 6.5L6.5 10.086Zm3.5 3.5L11.5 7.914l2.586 2.586l-3.586 3.586ZM13 23.586L8.414 19L19 8.414L23.586 13Zm4.914-2.086l3.586-3.586l2.586 2.586l-3.586 3.586ZM24 27.586L21.914 25.5l3.586-3.586L27.586 24Z"/>' }, "satellite-radar": { "body": '<path fill="currentColor" d="M30 14h-2A10.011 10.011 0 0 0 18 4V2a12.014 12.014 0 0 1 12 12Z"/><path fill="currentColor" d="M26 14h-2a6.007 6.007 0 0 0-6-6V6a8.01 8.01 0 0 1 8 8zM16 28v-3.04a9.912 9.912 0 0 0 7.318-2.208a1.848 1.848 0 0 0 .678-1.334a1.8 1.8 0 0 0-.524-1.36L18.414 15L21 12.414L19.586 11L17 13.586l-5.058-5.059a1.815 1.815 0 0 0-1.36-.523a1.845 1.845 0 0 0-1.334.679a9.957 9.957 0 0 0-.513 11.95L6.28 28H2v2h28v-2zm-5.32-17.906L21.906 21.32A8.001 8.001 0 0 1 10.68 10.094zM14 28H8.387l1.876-5.627A9.99 9.99 0 0 0 14 24.543z"/>' }, "satellite-weather": { "body": '<path fill="currentColor" d="M26.5 12H19a4 4 0 0 1 0-8h.084A4.786 4.786 0 0 1 23 2a4.982 4.982 0 0 1 4.654 3.203A3.467 3.467 0 0 1 30 8.5a3.504 3.504 0 0 1-3.5 3.5zM19 6a2 2 0 0 0 0 4h7.5A1.502 1.502 0 0 0 28 8.5a1.486 1.486 0 0 0-1.278-1.474l-.661-.099l-.162-.649a2.957 2.957 0 0 0-5.487-.712L20.114 6zm-6 22v-3.112a7.936 7.936 0 0 0 4.707-2.282a1 1 0 0 0 0-1.414l-4.243-4.242L16 14.414L14.586 13l-2.536 2.536l-4.242-4.243a1 1 0 0 0-1.414 0a8 8 0 0 0 0 11.313c.162.163.332.313.505.46L4.432 28H2v2h28v-2zm-2 0H6.668l1.922-3.843a7.893 7.893 0 0 0 2.41.716zm-3.192-6.808a6.004 6.004 0 0 1-.65-7.72l8.37 8.369a6.003 6.003 0 0 1-7.72-.649z"/>' }, "save": { "body": '<path fill="currentColor" d="m27.71 9.29l-5-5A1 1 0 0 0 22 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V10a1 1 0 0 0-.29-.71ZM12 6h8v4h-8Zm8 20h-8v-8h8Zm2 0v-8a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v8H6V6h4v4a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6.41l4 4V26Z"/>' }, "save-annotation": { "body": '<path d="M21.56 15.1l-3.48-4.35a2 2 0 0 0-1.56-.75H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V16.35a2 2 0 0 0-.44-1.25zM9 12h6v3H9zm6 16H9v-6h6zm2 0v-6a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v6H4V12h3v3a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-2.4l3 3.75V28z" fill="currentColor"/><path d="M28 20h-3v-2h3V4H8v3H6V4a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2z" fill="currentColor"/><path d="M20 6h6v2h-6z" fill="currentColor"/><path d="M22 10h4v2h-4z" fill="currentColor"/>', "hidden": true }, "save-image": { "body": '<path d="M21.56 15.1l-3.48-4.35a2 2 0 0 0-1.56-.75H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V16.35a2 2 0 0 0-.44-1.25zM9 12h6v3H9zm6 16H9v-6h6zm2 0v-6a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v6H4V12h3v3a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-2.4l3 3.75V28z" fill="currentColor"/><path d="M28 20h-3v-2h3V4H14v3h-2V4a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2z" fill="currentColor"/>', "hidden": true }, "save-model": { "body": '<path fill="currentColor" d="m26 20l1.427 1.903L23 26.963l-4.427-5.06L20 20h6m1-2h-8l-3 4l7 8l7-8l-3-4Z"/><path fill="currentColor" d="M16 26h-4v-8h2v-2h-2a2 2 0 0 0-2 2v8H6V6h4v4a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6.41l4 4V16h2v-6a1 1 0 0 0-.29-.71l-5-5A.999.999 0 0 0 22 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h10ZM12 6h8v4h-8Z"/>' }, "save-series": { "body": '<path d="M21.56 15.1l-3.48-4.35a2 2 0 0 0-1.56-.75H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V16.35a2 2 0 0 0-.44-1.25zM9 12h6v3H9zm6 16H9v-6h6zm2 0v-6a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v6H4V12h3v3a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-2.4l3 3.75V28z" fill="currentColor"/><path d="M27 21h-2V7H11V5h14a2 2 0 0 1 2 2z" fill="currentColor"/><path d="M32 14h-2V2H18V0h12a2 2 0 0 1 2 2z" fill="currentColor"/>', "hidden": true }, "scale": { "body": '<path fill="currentColor" d="M13 17H7a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2Zm-6 8v-6h6v6Z"/><path fill="currentColor" d="M19 21v2h6a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2H11a2 2 0 0 0-2 2v6h2V7h14v14"/>' }, "scales": { "body": '<path fill="currentColor" d="M20 16a5 5 0 0 0 10 0a1 1 0 0 0-.105-.447l-3.999-7.997a.891.891 0 0 0-.045-.081A1 1 0 0 0 25 7h-6.178A3.015 3.015 0 0 0 17 5.184V2h-2v3.184A3.015 3.015 0 0 0 13.178 7H7a1 1 0 0 0-.894.553l-4 8A1 1 0 0 0 2 16a5 5 0 0 0 10 0a1 1 0 0 0-.105-.447L8.617 9h4.56A3.015 3.015 0 0 0 15 10.815V28H6v2h20v-2h-9V10.816A3.015 3.015 0 0 0 18.822 9h4.56l-3.277 6.553A1 1 0 0 0 20 16ZM7 19a2.996 2.996 0 0 1-2.815-2h5.63A2.996 2.996 0 0 1 7 19Zm2.382-4H4.618L7 10.236ZM16 9a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm9 10a2.996 2.996 0 0 1-2.815-2h5.63A2.996 2.996 0 0 1 25 19Zm0-8.764L27.382 15h-4.764Z"/>' }, "scales-tipped": { "body": '<path fill="currentColor" d="M20 13a5 5 0 0 0 10 0a1 1 0 0 0-.105-.447l-4-8a1 1 0 0 0-1.211-.502l-6.331 2.11A3.032 3.032 0 0 0 17 5.184V2h-2v3.184a2.995 2.995 0 0 0-1.996 2.76l-6.32 2.107a1 1 0 0 0-.578.501l-4 8A1 1 0 0 0 2 19a5 5 0 0 0 10 0a1 1 0 0 0-.105-.447L8.41 11.584l5.237-1.746a3.029 3.029 0 0 0 1.353.977V28H6v2h20v-2h-9V10.816a2.995 2.995 0 0 0 1.996-2.76l4.03-1.344l-2.92 5.84A1 1 0 0 0 20 13ZM7 22a2.996 2.996 0 0 1-2.815-2h5.63A2.996 2.996 0 0 1 7 22Zm2.382-4H4.618L7 13.236ZM16 9a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm9 7a2.996 2.996 0 0 1-2.815-2h5.63A2.996 2.996 0 0 1 25 16Zm0-8.764L27.382 12h-4.764Z"/>' }, "scalpel": { "body": '<path fill="currentColor" d="M28.83 5.17a4.1 4.1 0 0 0-5.66 0L.34 28h9.25a5 5 0 0 0 3.53-1.46l15.71-15.71a4 4 0 0 0 0-5.66ZM12.29 18.88l2.09-2.09l2.83 2.83l-2.09 2.09Zm-.58 6.24a3 3 0 0 1-2.12.88H5.17l5.71-5.71l2.83 2.83Zm15.7-15.71l-8.79 8.8l-2.83-2.83l8.8-8.79a2 2 0 0 1 2.82 0a2 2 0 0 1 0 2.82Z"/>' }, "scalpel-cursor": { "body": '<path d="M28.828 7.134a4.094 4.094 0 0 0-5.656 0L.343 29.962H9.59a4.968 4.968 0 0 0 3.536-1.465L28.828 12.79a3.998 3.998 0 0 0 0-5.656zM12.293 20.84l2.086-2.086l2.83 2.83l-2.087 2.085zm-.583 6.242a2.982 2.982 0 0 1-2.122.879H5.171l5.708-5.707l2.83 2.83zm15.704-15.707l-8.792 8.794l-2.83-2.83l8.794-8.792a2.047 2.047 0 0 1 2.828 0a2 2 0 0 1 0 2.828z" fill="currentColor"/><path d="M13 4H4v9h2V6h7V4z" fill="currentColor"/>', "hidden": true }, "scalpel-lasso": { "body": '<path d="M28.828 7.134a4.094 4.094 0 0 0-5.656 0L.343 29.962H9.59a4.968 4.968 0 0 0 3.536-1.465L28.828 12.79a3.998 3.998 0 0 0 0-5.656zM12.293 20.84l2.086-2.086l2.83 2.83l-2.087 2.085zm-.583 6.242a2.982 2.982 0 0 1-2.122.879H5.171l5.708-5.707l2.83 2.83zm15.704-15.707l-8.792 8.794l-2.83-2.83l8.794-8.792a2.047 2.047 0 0 1 2.828 0a2 2 0 0 1 0 2.828z" fill="currentColor"/><path d="M11 2H7a4.984 4.984 0 0 0-3.863 8.153A2.959 2.959 0 0 0 3 11a2.994 2.994 0 0 0 2 2.815V14a2.002 2.002 0 0 1-2 2H2v2h1a4.005 4.005 0 0 0 4-4v-.184A2.996 2.996 0 0 0 8.816 12H11a5 5 0 0 0 0-10zM6 12a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm5-2H8.816a2.974 2.974 0 0 0-4.422-1.525A2.99 2.99 0 0 1 7 4h4a3 3 0 0 1 0 6z" fill="currentColor"/>', "hidden": true }, "scalpel-select": { "body": '<path d="M28.828 7.172a4.094 4.094 0 0 0-5.656 0L.343 30H9.59a4.968 4.968 0 0 0 3.536-1.465l15.703-15.707a3.998 3.998 0 0 0 0-5.656zM12.293 20.879l2.086-2.086l2.83 2.83l-2.087 2.085zm-.583 6.242A2.982 2.982 0 0 1 9.589 28H5.17l5.708-5.707l2.83 2.83zm15.704-15.707l-8.792 8.794l-2.83-2.83l8.793-8.792a2.047 2.047 0 0 1 2.829 0a2 2 0 0 1 0 2.828z" fill="currentColor"/><path d="M15 2a2.995 2.995 0 0 0-2.816 2H7.816A2.993 2.993 0 1 0 4 7.815v4.37a3 3 0 1 0 2 0v-4.37A2.996 2.996 0 0 0 7.816 6h4.368A2.995 2.995 0 1 0 15 2zM5 16a1 1 0 1 1 1-1a1 1 0 0 1-1 1zM5 6a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm10 0a1 1 0 1 1 1-1a1 1 0 0 1-1 1z" fill="currentColor"/>', "hidden": true }, "scan": { "body": '<path fill="currentColor" d="M21 29H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16v2H5v22h16Z"/><path fill="currentColor" d="M15 9h2v14h-2zm12 0h2v14h-2zm-6 0h2v14h-2z"/>' }, "scan-alt": { "body": '<path fill="currentColor" d="M22 24H10a2 2 0 0 1-2-2v-3h2v3h12v-3h2v3a2 2 0 0 1-2 2zM2 15h28v2H2zm22-2h-2v-3H10v3H8v-3a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2zm6-3h-2V4h-6V2h8v8zM4 10H2V2h8v2H4v6zm6 20H2v-8h2v6h6v2zm20 0h-8v-2h6v-6h2v8z"/>' }, "scan-disabled": { "body": '<path fill="currentColor" d="M29.383 2.076a1 1 0 0 0-1.09.217l-26 26A1 1 0 0 0 3 30h8v-2H5.414l4-4H22a2.002 2.002 0 0 0 2-2V9.415l4-4V11h2V3a1 1 0 0 0-.617-.924zM22 22H11.414L22 11.415zm-12-4.245V10h7.755l2-2H10a2.002 2.002 0 0 0-2 2v9.755zM11 2H2v9h2V4h7V2zm10 28h9v-9h-2v7h-7v2zM4 23.755V21H2v4.754l2-1.999zM25.755 2H21v2h2.755l2-2z"/>' }, "scatter-matrix": { "body": '<circle cx="9.5" cy="9.5" r="2.5" fill="currentColor"/><circle cx="9.5" cy="22.5" r="2.5" fill="currentColor"/><circle cx="22.5" cy="22.5" r="2.5" fill="currentColor"/><path fill="currentColor" d="M28 2H4a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2Zm0 13H17V4h11ZM15 4v11H4V4ZM4 17h11v11H4Zm13 11V17h11v11Z"/>' }, "schematics": { "body": '<path fill="currentColor" d="M27 19.001A4.006 4.006 0 0 0 23 15H9a2.003 2.003 0 0 1-2-2V9.857A3.995 3.995 0 0 0 9.858 7h12.284a4 4 0 1 0 0-2H9.858A3.992 3.992 0 1 0 5 9.858v3.141A4.006 4.006 0 0 0 9.001 17H23a2.003 2.003 0 0 1 2 2.001V22h-3v3H9.858a4 4 0 1 0 0 2H22v3h8v-8h-3ZM26 4a2 2 0 1 1-2 2a2.002 2.002 0 0 1 2-2ZM4 6a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Zm2 22a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2Zm22-4v4h-4v-4Z"/>' }, "scis-control-tower": { "body": '<path fill="currentColor" d="M27 19c-.3 0-.7.1-1 .2L20.4 12c1-1.1 1.6-2.5 1.6-4c0-3.3-2.7-6-6-6s-6 2.7-6 6c0 1.6.6 3 1.6 4L6 19.2c-.3-.1-.7-.2-1-.2c-1.7 0-3 1.3-3 3s1.3 3 3 3s3-1.3 3-3c0-.6-.2-1.1-.5-1.6l5.6-7.1c.6.3 1.2.5 1.9.6v10.3c-1.2.4-2 1.5-2 2.8c0 1.7 1.3 3 3 3s3-1.3 3-3c0-1.3-.8-2.4-2-2.8V13.9c.7-.1 1.3-.3 1.9-.6l5.6 7.1c-.3.5-.5 1-.5 1.6c0 1.7 1.3 3 3 3s3-1.3 3-3s-1.3-3-3-3zM16 4c2.2 0 4 1.8 4 4s-1.8 4-4 4s-4-1.8-4-4s1.8-4 4-4zM5 23c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm11 5c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1zm11-5c-.6 0-1-.4-1-1s.4-1 1-1s1 .4 1 1s-.4 1-1 1z"/>' }, "scis-transparent-supply": { "body": '<path fill="currentColor" d="M23 23v3H8.5a4.5 4.5 0 0 1 0-9H9v-2h-.5a6.5 6.5 0 0 0 0 13H23v3h8v-8Zm6 6h-4v-4h4Z"/><path fill="currentColor" d="M21 22h-2v-3h-6v3h-2v-3a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2zm-5-6a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1z"/><path fill="currentColor" d="M23.5 4H9V1H1v8h8V6h14.5a4.5 4.5 0 0 1 0 9H23v2h.5a6.5 6.5 0 0 0 0-13ZM7 7H3V3h4Z"/>' }, "scooter": { "body": '<path fill="currentColor" d="M26 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2zM24 8h-6v2h6a1 1 0 0 1 0 2h-3a1 1 0 0 0-.98 1.196l.924 4.621L18.434 22h-2.69l-2.572-8.575A1.988 1.988 0 0 0 11.256 12H6v2h5.256l.6 2H7a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h1a4 4 0 0 0 8 0h7a1 1 0 0 0 .857-.485l3-5a1 1 0 0 0 .123-.711L22.22 14H24a3 3 0 0 0 0-6zM8 26a2.002 2.002 0 0 1-2-2h4a2.002 2.002 0 0 1-2 2zm-4-4v-1a3.003 3.003 0 0 1 3-3h5.456l1.2 4z"/>' }, "scooter-front": { "body": '<path fill="currentColor" d="M15 19h2v9h-2z"/><path fill="currentColor" d="M23 10V8h-3a2.002 2.002 0 0 0-2-2h-4a2.002 2.002 0 0 0-2 2H9v2h3v4.184A2.996 2.996 0 0 0 10 17v7h2v-7a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v7h2v-7a2.996 2.996 0 0 0-2-2.816V10Zm-5-2v6h-4V8Z"/>' }, "screen": { "body": '<path fill="currentColor" d="M28 4H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h8v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM18 28h-4v-4h4Zm10-6H4V6h24Z"/>' }, "screen-map": { "body": '<path fill="currentColor" d="M22 25h8v2h-8zm0-4h8v2h-8zm-3.586-10H23V9h-8v8h2v-4.586L23.586 19L25 17.586L18.414 11z"/><path fill="currentColor" d="M28 3H4c-1.103 0-2 .897-2 2v16c0 1.103.897 2 2 2h8v4H8v2h12v-8H4V5h24v14h2V5c0-1.103-.897-2-2-2ZM18 27h-4v-4h4v4Z"/>' }, "screen-map-set": { "body": '<path fill="currentColor" d="M24 26h7v2h-7zm0-4h7v2h-7zm-3.586-10H25v-2h-8v8h2v-4.586L25.586 20L27 18.586L20.414 12z"/><path fill="currentColor" d="M7 7h22v12h2V7c0-1.103-.897-2-2-2H7c-1.103 0-2 .897-2 2v15c0 1.103.897 2 2 2h7v4h-4v2h12v-8H7V7Zm13 21h-4v-4h4v4Z"/><path fill="currentColor" d="M26 3V1H3c-1.103 0-2 .897-2 2v15h2V3h23Z"/>' }, "screen-off": { "body": '<path fill="currentColor" d="M28 22H11.41L30 3.41L28.59 2l-2 2H4a2 2 0 0 0-2 2v16h2V6h20.59L2 28.59L3.41 30l6-6H12v4H8v2h16v-2h-4v-4h8a2 2 0 0 0 2-2V9h-2Zm-10 6h-4v-4h4Z"/>' }, "script": { "body": '<path fill="currentColor" d="m18.83 26l2.58-2.58L20 22l-4 4l4 4l1.42-1.41L18.83 26zm8.34 0l-2.58 2.58L26 30l4-4l-4-4l-1.42 1.41L27.17 26z"/><path fill="currentColor" d="M14 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v6h2v-8a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h6Zm4-23.6l5.6 5.6H18Z"/>' }, "script-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zm23.17 6l-2.58 2.58L26 30l4-4l-4-4l-1.42 1.41L27.17 26zm-8.34 0l2.58-2.58L20 22l-4 4l4 4l1.42-1.41L18.83 26zM25.7 9.3l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v12h2V4h8v6a2.006 2.006 0 0 0 2 2h6v6h2v-8a.91.91 0 0 0-.3-.7zM18 10V4.4l5.6 5.6z"/>' }, "sdk": { "body": '<path fill="currentColor" d="M30 9h-2.1L24 15.6V9h-2v14h2v-4.3l.9-1.5l3 5.8H30l-3.9-7.6L30 9zM16 23h-4V9h4a4.012 4.012 0 0 1 4 4v6a4.012 4.012 0 0 1-4 4zm-2-2h2a2.006 2.006 0 0 0 2-2v-6a2.006 2.006 0 0 0-2-2h-2zm-6 2H2v-2h6v-4H4a2.006 2.006 0 0 1-2-2v-4a2.006 2.006 0 0 1 2-2h6v2H4v4h4a2.006 2.006 0 0 1 2 2v4a2.006 2.006 0 0 1-2 2z"/>' }, "search": { "body": '<path fill="currentColor" d="m29 27.586l-7.552-7.552a11.018 11.018 0 1 0-1.414 1.414L27.586 29ZM4 13a9 9 0 1 1 9 9a9.01 9.01 0 0 1-9-9Z"/>' }, "search-advanced": { "body": '<path fill="currentColor" d="M30 6h-4V2h-2v4h-4v2h4v4h2V8h4V6zm-6 22.586l-5.975-5.975a9.023 9.023 0 1 0-1.414 1.414L22.586 30zM4 17a7 7 0 1 1 7 7a7.008 7.008 0 0 1-7-7z"/>' }, "search-locate": { "body": '<path fill="currentColor" d="m30 28.586l-4.689-4.688a8.028 8.028 0 1 0-1.414 1.414L28.586 30zM19 25a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zM2 12h8v2H2zM2 2h16v2H2zm0 5h16v2H2z"/>' }, "search-locate-mirror": { "body": '<path fill="currentColor" d="m21 28.6l-4.7-4.7c1.1-1.4 1.7-3.1 1.7-4.9c0-4.4-3.6-8-8-8s-8 3.6-8 8s3.6 8 8 8c1.8 0 3.5-.6 4.9-1.7l4.7 4.7l1.4-1.4zM10 25c-3.3 0-6-2.7-6-6s2.7-6 6-6s6 2.7 6 6s-2.7 6-6 6zm12-13h8v2h-8zm-8-5h16v2H14zm0-5h16v2H14z"/>' }, "security": { "body": '<path fill="currentColor" d="M14 16.59L11.41 14L10 15.41l4 4l8-8L20.59 10L14 16.59z"/><path fill="currentColor" d="m16 30l-6.176-3.293A10.982 10.982 0 0 1 4 17V4a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v13a10.982 10.982 0 0 1-5.824 9.707ZM6 4v13a8.985 8.985 0 0 0 4.766 7.942L16 27.733l5.234-2.79A8.985 8.985 0 0 0 26 17V4Z"/>' }, "security-services": { "body": '<path fill="currentColor" d="M30 24v-2h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 24 18.101V16h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 18.101 22H16v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V30h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 27.899 24Zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/><path fill="currentColor" d="m14 26.667l-3.234-1.725A8.986 8.986 0 0 1 6 17V4h20v10h2V4a2.002 2.002 0 0 0-2-2H6a2.002 2.002 0 0 0-2 2v13a10.981 10.981 0 0 0 5.824 9.707L14 28.934Z"/>' }, "select-01": { "body": '<path fill="currentColor" d="M12 6H8V2H6v4H2v2h4v4h2V8h4V6zm4 0h4v2h-4zm8 0v2h4v4h2V8a2 2 0 0 0-2-2zM6 16h2v4H6zm2 12v-4H6v4a2 2 0 0 0 2 2h4v-2zm20-12h2v4h-2zM16 28h4v2h-4zm12-4v4h-4v2h4a2 2 0 0 0 2-2v-4z"/>' }, "select-02": { "body": '<path fill="currentColor" d="M12 6H8V2H6v4H2v2h4v4h2V8h4V6zm18 4V4h-6v2h-8v2h8v2h2v14h-2v2H10v-2H8v-8H6v8H4v6h6v-2h14v2h6v-6h-2V10zM8 28H6v-2h2zm20 0h-2v-2h2zM26 6h2v2h-2z"/>' }, "select-window": { "body": '<path fill="currentColor" d="M8 26H4a2.002 2.002 0 0 1-2-2v-4h2v4h4zM2 12h2v4H2zm24-4h-2V4h-4V2h4a2.002 2.002 0 0 1 2 2zM12 2h4v2h-4zM4 8H2V4a2.002 2.002 0 0 1 2-2h4v2H4zm23 24a.997.997 0 0 1-.707-.293l-6.138-6.138l-3.323 4.986a1 1 0 0 1-1.79-.268l-6-20a1 1 0 0 1 1.245-1.245l20 6a1 1 0 0 1 .268 1.79l-4.986 3.323l6.138 6.138a1 1 0 0 1 0 1.414l-4 4A.997.997 0 0 1 27 32zm0-2.414L29.586 27l-7.155-7.155l5.246-3.498l-16.185-4.855l4.855 16.185l3.498-5.246z"/>' }, "send": { "body": '<path fill="currentColor" d="m27.45 15.11l-22-11a1 1 0 0 0-1.08.12a1 1 0 0 0-.33 1L7 16L4 26.74A1 1 0 0 0 5 28a1 1 0 0 0 .45-.11l22-11a1 1 0 0 0 0-1.78Zm-20.9 10L8.76 17H18v-2H8.76L6.55 6.89L24.76 16Z"/>' }, "send-alt": { "body": '<path fill="currentColor" d="M27.71 4.29a1 1 0 0 0-1.05-.23l-22 8a1 1 0 0 0 0 1.87l9.6 3.84l3.84 9.6a1 1 0 0 0 .9.63a1 1 0 0 0 .92-.66l8-22a1 1 0 0 0-.21-1.05ZM19 24.2l-2.79-7L21 12.41L19.59 11l-4.83 4.83L7.8 13l17.53-6.33Z"/>' }, "send-alt-filled": { "body": '<path fill="currentColor" d="M27.71 4.29a1 1 0 0 0-1.05-.23l-22 8a1 1 0 0 0 0 1.87l8.59 3.43L19.59 11L21 12.41l-6.37 6.37l3.44 8.59A1 1 0 0 0 19 28a1 1 0 0 0 .92-.66l8-22a1 1 0 0 0-.21-1.05Z"/>' }, "send-backward": { "body": '<path fill="currentColor" d="M4 7H2V4a2.002 2.002 0 0 1 2-2h3v2H4zm3 15H4a2.002 2.002 0 0 1-2-2v-3h2v3h3zM2 10h2v4H2zm20-3h-2V4h-3V2h3a2.002 2.002 0 0 1 2 2zM10 2h4v2h-4zm18 28H12a2.002 2.002 0 0 1-2-2V12a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2zM12 12v16h16V12z"/>' }, "send-filled": { "body": '<path fill="currentColor" d="m27.45 15.11l-22-11a1 1 0 0 0-1.08.12a1 1 0 0 0-.33 1L6.69 15H18v2H6.69L4 26.74A1 1 0 0 0 5 28a1 1 0 0 0 .45-.11l22-11a1 1 0 0 0 0-1.78Z"/>' }, "send-to-back": { "body": '<path fill="currentColor" d="M28 10h-6V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h6v6a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2V12a2.002 2.002 0 0 0-2-2ZM12 28V12h16l.002 16Z"/>' }, "server-dns": { "body": '<path fill="currentColor" d="M16 2a8 8 0 1 0 8 8a8.01 8.01 0 0 0-8-8zm5.91 7h-2.438a15.246 15.246 0 0 0-.791-4.36A6.009 6.009 0 0 1 21.91 9zm-5.888 6.999h-.008c-.38-.12-1.309-1.821-1.479-4.999h2.93c-.17 3.176-1.094 4.877-1.443 4.999zM14.535 9c.17-3.176 1.094-4.877 1.443-4.999h.008c.38.12 1.309 1.821 1.479 4.999zM13.32 4.64A15.246 15.246 0 0 0 12.528 9H10.09a6.009 6.009 0 0 1 3.23-4.36zM10.09 11h2.437a15.246 15.246 0 0 0 .792 4.36A6.009 6.009 0 0 1 10.09 11zm8.59 4.36a15.246 15.246 0 0 0 .792-4.36h2.438a6.009 6.009 0 0 1-3.23 4.36zM28 30H4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zM4 22v6h24v-6z"/><circle cx="7" cy="25" r="1" fill="currentColor"/>' }, "server-proxy": { "body": '<path fill="currentColor" d="M6 30h20a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2Zm0-8h20v6H6Z"/><circle cx="9" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="m26 2l-1.41 1.41L27.17 6h-4.855A6.984 6.984 0 0 0 9.08 10H4.83l2.58-2.59L6 6l-5 5l5 5l1.41-1.41L4.83 12h4.855A6.984 6.984 0 0 0 22.92 8h4.25l-2.58 2.59L26 12l5-5Zm-5 7a4.983 4.983 0 0 1-8.975 3H16v-2h-4.899a4.985 4.985 0 0 1 8.873-4H16v2h4.899A5.002 5.002 0 0 1 21 9Z"/>' }, "server-time": { "body": '<path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2ZM4 22v6h24v-6Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="m19 11.586l-2-2V6h-2v4.414L17.586 13L19 11.586z"/><path fill="currentColor" d="M16 18a8 8 0 1 1 8-8a8.01 8.01 0 0 1-8 8Zm0-14a6 6 0 1 0 6 6a6.007 6.007 0 0 0-6-6Z"/>' }, "service-desk": { "body": '<path fill="currentColor" d="M28 24.005v-2a12.01 12.01 0 0 0-11-11.95v-2.05h3v-2h-8v2h3v2.05a12.01 12.01 0 0 0-11 11.95v2H2v2h28v-2Zm-12-12a10.017 10.017 0 0 1 9.798 8H6.202a10.017 10.017 0 0 1 9.798-8Zm-10 10h20v2H6Z"/>' }, "service-id": { "body": '<path fill="currentColor" d="M30 24v-2h-2.101a4.961 4.961 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.961 4.961 0 0 0 24 18.101V16h-2v2.101a4.961 4.961 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.961 4.961 0 0 0 18.101 22H16v2h2.101c.13.637.384 1.229.732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.961 4.961 0 0 0 1.753.732V30h2v-2.101a4.961 4.961 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.961 4.961 0 0 0 27.899 24H30zm-7 2c-1.654 0-3-1.346-3-3s1.346-3 3-3s3 1.346 3 3s-1.346 3-3 3zM12 6h4v2h-4z"/><path fill="currentColor" d="M6 28V4h16v9h2V4c0-1.103-.897-2-2-2H6c-1.103 0-2 .897-2 2v24c0 1.103.897 2 2 2h8v-2H6z"/>' }, "session-border-control": { "body": '<path fill="currentColor" d="m26 8l-1.41 1.41L27.17 12H16a5.967 5.967 0 0 0-4 1.54V6.83l2.59 2.58L16 8l-5-5l-5 5l1.41 1.41L10 6.83V18a5.969 5.969 0 0 0 1.54 4H4.83l2.58-2.59L6 18l-5 5l5 5l1.41-1.41L4.83 24H16a5.99 5.99 0 0 0 4.46-10h6.71l-2.58 2.59L26 18l5-5Zm-6 10a4 4 0 1 1-4-4a4.005 4.005 0 0 1 4 4Z"/>' }, "settings": { "body": '<path fill="currentColor" d="M27 16.76v-1.53l1.92-1.68A2 2 0 0 0 29.3 11l-2.36-4a2 2 0 0 0-1.73-1a2 2 0 0 0-.64.1l-2.43.82a11.35 11.35 0 0 0-1.31-.75l-.51-2.52a2 2 0 0 0-2-1.61h-4.68a2 2 0 0 0-2 1.61l-.51 2.52a11.48 11.48 0 0 0-1.32.75l-2.38-.86A2 2 0 0 0 6.79 6a2 2 0 0 0-1.73 1L2.7 11a2 2 0 0 0 .41 2.51L5 15.24v1.53l-1.89 1.68A2 2 0 0 0 2.7 21l2.36 4a2 2 0 0 0 1.73 1a2 2 0 0 0 .64-.1l2.43-.82a11.35 11.35 0 0 0 1.31.75l.51 2.52a2 2 0 0 0 2 1.61h4.72a2 2 0 0 0 2-1.61l.51-2.52a11.48 11.48 0 0 0 1.32-.75l2.42.82a2 2 0 0 0 .64.1a2 2 0 0 0 1.73-1l2.28-4a2 2 0 0 0-.41-2.51ZM25.21 24l-3.43-1.16a8.86 8.86 0 0 1-2.71 1.57L18.36 28h-4.72l-.71-3.55a9.36 9.36 0 0 1-2.7-1.57L6.79 24l-2.36-4l2.72-2.4a8.9 8.9 0 0 1 0-3.13L4.43 12l2.36-4l3.43 1.16a8.86 8.86 0 0 1 2.71-1.57L13.64 4h4.72l.71 3.55a9.36 9.36 0 0 1 2.7 1.57L25.21 8l2.36 4l-2.72 2.4a8.9 8.9 0 0 1 0 3.13L27.57 20Z"/><path fill="currentColor" d="M16 22a6 6 0 1 1 6-6a5.94 5.94 0 0 1-6 6Zm0-10a3.91 3.91 0 0 0-4 4a3.91 3.91 0 0 0 4 4a3.91 3.91 0 0 0 4-4a3.91 3.91 0 0 0-4-4Z"/>' }, "settings-adjust": { "body": '<path fill="currentColor" d="M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30V8zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3zM2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3s-3-1.3-3-3s1.3-3 3-3z"/>' }, "settings-check": { "body": '<path fill="currentColor" d="M16 22a6 6 0 1 1 6-6a5.936 5.936 0 0 1-6 6Zm0-10a3.912 3.912 0 0 0-4 4a3.912 3.912 0 0 0 4 4a3.912 3.912 0 0 0 4-4a3.912 3.912 0 0 0-4-4Z"/><path fill="currentColor" d="m29.305 11.044l-2.36-4.088a1.998 1.998 0 0 0-2.374-.894l-2.434.823a11.042 11.042 0 0 0-1.312-.758l-.503-2.519A2 2 0 0 0 18.36 2h-4.72a2 2 0 0 0-1.962 1.608l-.503 2.519a10.967 10.967 0 0 0-1.327.753l-2.42-.818a1.998 1.998 0 0 0-2.372.894l-2.36 4.088a2 2 0 0 0 .411 2.502l1.931 1.697C5.021 15.495 5 15.745 5 16c0 .258.01.513.028.766l-1.92 1.688a2 2 0 0 0-.413 2.502l2.36 4.088a1.998 1.998 0 0 0 2.374.895l2.434-.824a10.974 10.974 0 0 0 1.312.759l.503 2.518A2 2 0 0 0 13.64 30H18v-2h-4.36l-.71-3.55a9.095 9.095 0 0 1-2.695-1.572l-3.447 1.166l-2.36-4.088l2.725-2.395a8.926 8.926 0 0 1-.007-3.128l-2.718-2.389l2.36-4.088l3.427 1.16A9.03 9.03 0 0 1 12.93 7.55L13.64 4h4.72l.71 3.55a9.098 9.098 0 0 1 2.695 1.572l3.447-1.166l2.36 4.088l-2.798 2.452L26.092 16l2.8-2.454a2 2 0 0 0 .413-2.502Z"/><path fill="currentColor" d="m23 26.18l-2.59-2.59L19 25l4 4l7-7l-1.41-1.41L23 26.18z"/>' }, "settings-services": { "body": '<path fill="currentColor" d="M29 25h-2v-2h1v-4h-4v1h-2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M24 30h-6a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1zm-5-2h4v-4h-4zm-4-8.142A3.993 3.993 0 1 1 20 16h2a6 6 0 1 0-7 5.91z"/><path fill="currentColor" d="m28.89 13.55l-2.31 2.03l-1.42-1.42l2.41-2.12l-2.36-4.08l-3.44 1.16a9.368 9.368 0 0 0-2.7-1.57L18.36 4h-4.72l-.71 3.55a8.86 8.86 0 0 0-2.71 1.57L6.79 7.96l-2.36 4.08l2.72 2.39a8.895 8.895 0 0 0 0 3.13l-2.72 2.4l2.36 4.08l3.44-1.16a9.368 9.368 0 0 0 2.7 1.57l.71 3.55H15v2h-1.36a2 2 0 0 1-1.96-1.61l-.51-2.52a11.412 11.412 0 0 1-1.31-.75l-2.43.82a2.038 2.038 0 0 1-.64.1a1.973 1.973 0 0 1-1.73-1L2.7 20.96a2 2 0 0 1 .41-2.51l1.92-1.68C5.01 16.51 5 16.26 5 16s.02-.51.04-.76l-1.93-1.69a2 2 0 0 1-.41-2.51l2.36-4.08a1.973 1.973 0 0 1 1.73-1a2.038 2.038 0 0 1 .64.1l2.42.82a11.542 11.542 0 0 1 1.32-.75l.51-2.52A2 2 0 0 1 13.64 2h4.72a2 2 0 0 1 1.96 1.61l.51 2.52a11.412 11.412 0 0 1 1.31.75l2.43-.82a2.038 2.038 0 0 1 .64-.1a1.973 1.973 0 0 1 1.73 1l2.36 4.08a2 2 0 0 1-.41 2.51Z"/>' }, "settings-view": { "body": '<circle cx="23" cy="24" r="2" fill="currentColor"/><path fill="currentColor" d="M30.777 23.479A8.64 8.64 0 0 0 23 18a8.64 8.64 0 0 0-7.777 5.479L15 24l.223.521A8.64 8.64 0 0 0 23 30a8.64 8.64 0 0 0 7.777-5.479L31 24zM23 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm-10.601-7.2A6 6 0 1 1 22 16h-2a4 4 0 1 0-6.4 3.2z"/><path fill="currentColor" d="m29.305 11.044l-2.36-4.088a1.998 1.998 0 0 0-2.374-.895l-2.434.824a11.042 11.042 0 0 0-1.312-.758l-.504-2.52A2 2 0 0 0 18.36 2h-4.72a2 2 0 0 0-1.961 1.608l-.504 2.518a10.967 10.967 0 0 0-1.327.754l-2.42-.819a1.998 1.998 0 0 0-2.372.895l-2.36 4.088a2 2 0 0 0 .411 2.502l1.931 1.697C5.021 15.495 5 15.745 5 16c0 .258.01.513.028.766l-1.92 1.688a2 2 0 0 0-.413 2.502l2.36 4.088a1.998 1.998 0 0 0 2.374.895l2.434-.824a10.974 10.974 0 0 0 1.312.759l.503 2.518A2 2 0 0 0 13.64 30H15v-2h-1.36l-.71-3.55a9.095 9.095 0 0 1-2.695-1.572l-3.447 1.166l-2.36-4.088l2.725-2.395a8.926 8.926 0 0 1-.007-3.128l-2.718-2.39l2.36-4.087l3.427 1.16A9.03 9.03 0 0 1 12.93 7.55L13.64 4h4.72l.71 3.55a9.098 9.098 0 0 1 2.695 1.572l3.447-1.166l2.36 4.088l-2.798 2.452L26.092 16l2.8-2.454a2 2 0 0 0 .413-2.502Z"/>' }, "shape-except": { "body": '<path fill="currentColor" d="M28 10h-6V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h6v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2ZM12 20v-8h8v8ZM3.999 4H20v6h-8a2.002 2.002 0 0 0-2 2v8H4Z"/>' }, "shape-exclude": { "body": '<path fill="currentColor" d="M12 10h10V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h6V12a2 2 0 0 1 2-2Z"/><path fill="currentColor" d="M28 10h-6v10a2 2 0 0 1-2 2H10v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2Z"/>' }, "shape-intersect": { "body": '<path fill="currentColor" d="M28 10h-6V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h6v6a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2V12a2.002 2.002 0 0 0-2-2ZM4 20V4h16v6h-8a2.002 2.002 0 0 0-2 2v8Zm8 8v-6h8a2.002 2.002 0 0 0 2-2v-8h6v16Z"/>' }, "shape-join": { "body": '<path fill="currentColor" d="M28 10h-6V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v16a2.002 2.002 0 0 0 2 2h6v6a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2V12a2.002 2.002 0 0 0-2-2ZM4 20V4h6v16Zm18 8V12h6v16Z"/>' }, "shape-unite": { "body": '<path fill="currentColor" d="M28 10h-6V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h6v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V12a2 2 0 0 0-2-2Z"/>' }, "share": { "body": '<path fill="currentColor" d="M23 20a5 5 0 0 0-3.89 1.89l-7.31-4.57a4.46 4.46 0 0 0 0-2.64l7.31-4.57A5 5 0 1 0 18 7a4.79 4.79 0 0 0 .2 1.32l-7.31 4.57a5 5 0 1 0 0 6.22l7.31 4.57A4.79 4.79 0 0 0 18 25a5 5 0 1 0 5-5Zm0-16a3 3 0 1 1-3 3a3 3 0 0 1 3-3ZM7 19a3 3 0 1 1 3-3a3 3 0 0 1-3 3Zm16 9a3 3 0 1 1 3-3a3 3 0 0 1-3 3Z"/>' }, "share-knowledge": { "body": '<path fill="currentColor" d="M27 25h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-7-5a4 4 0 1 0 4-4a4 4 0 0 0-4 4zm6 0a2 2 0 1 1-2-2a2 2 0 0 1 2 2zM6 21v-1H4v1a7 7 0 0 0 7 7h3v-2h-3a5 5 0 0 1-5-5zm13-11h7v2h-7zm0-4h10v2H19zm0-4h10v2H19zm-8 9H5a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z"/>' }, "shopping-bag": { "body": '<path fill="currentColor" d="M28.76 11.35A1 1 0 0 0 28 11h-6V7a3 3 0 0 0-3-3h-6a3 3 0 0 0-3 3v4H4a1 1 0 0 0-1 1.15L4.88 24.3a2 2 0 0 0 2 1.7h18.26a2 2 0 0 0 2-1.7L29 12.15a1 1 0 0 0-.24-.8ZM12 7a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v4h-8Zm13.14 17H6.86L5.17 13h21.66Z"/>' }, "shopping-cart": { "body": '<circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="24" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M28 7H5.82L5 2.8A1 1 0 0 0 4 2H0v2h3.18L7 23.2a1 1 0 0 0 1 .8h18v-2H8.82L8 18h18a1 1 0 0 0 1-.78l2-9A1 1 0 0 0 28 7Zm-2.8 9H7.62l-1.4-7h20.53Z"/>' }, "shopping-cart-arrow-down": { "body": '<circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="24" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M4.98 2.804A1 1 0 0 0 4 2H0v2h3.18l3.84 19.196A1 1 0 0 0 8 24h18v-2H8.82l-.8-4H26a1 1 0 0 0 .976-.783L29.244 7h-2.047l-1.999 9H7.62Z"/><path fill="currentColor" d="M21.586 6.586L18 10.172V2h-2v8.172l-3.586-3.586L11 8l6 6l6-6l-1.414-1.414z"/>' }, "shopping-cart-arrow-up": { "body": '<circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="24" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M4.98 2.804A1 1 0 0 0 4 2H0v2h3.18l3.84 19.196A1 1 0 0 0 8 24h18v-2H8.82l-.8-4H26a1 1 0 0 0 .976-.783L29.244 7h-2.047l-1.999 9H7.62Z"/><path fill="currentColor" d="M21.586 9.414L18 5.828V14h-2V5.828l-3.586 3.586L11 8l6-6l6 6l-1.414 1.414z"/>' }, "shopping-cart-clear": { "body": '<circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="24" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M4.98 2.804A1 1 0 0 0 4 2H0v2h3.18l3.84 19.196A1 1 0 0 0 8 24h18v-2H8.82l-.8-4H26a1 1 0 0 0 .976-.783L29.244 7h-2.047l-1.999 9H7.62Z"/><path fill="currentColor" d="M18.41 8L22 4.41L20.59 3L17 6.59L13.41 3L12 4.41L15.59 8L12 11.59L13.41 13L17 9.41L20.59 13L22 11.59L18.41 8z"/>' }, "shopping-cart-error": { "body": '<circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="24" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M4.98 2.804A1 1 0 0 0 4 2H0v2h3.18l3.84 19.196A1 1 0 0 0 8 24h18v-2H8.82l-.8-4H26a1 1 0 0 0 .976-.783L29.244 7h-2.047l-1.999 9H7.62Z"/><path fill="currentColor" d="M17 2a6 6 0 1 0 6 6a6.007 6.007 0 0 0-6-6Zm0 2a3.952 3.952 0 0 1 2.019.567l-5.452 5.452A3.953 3.953 0 0 1 13 8a4.005 4.005 0 0 1 4-4Zm0 8a3.952 3.952 0 0 1-2.019-.567l5.452-5.452A3.953 3.953 0 0 1 21 8a4.005 4.005 0 0 1-4 4Z"/>' }, "shopping-cart-minus": { "body": '<circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="24" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M4.98 2.804A1 1 0 0 0 4 2H0v2h3.18l3.84 19.196A1 1 0 0 0 8 24h18v-2H8.82l-.8-4H26a1 1 0 0 0 .976-.783L29.244 7h-2.047l-1.999 9H7.62Z"/><path fill="currentColor" d="M12 6v2h10V6H12z"/>' }, "shopping-cart-plus": { "body": '<circle cx="10" cy="28" r="2" fill="currentColor"/><circle cx="24" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M4.98 2.804A1 1 0 0 0 4 2H0v2h3.18l3.84 19.196A1 1 0 0 0 8 24h18v-2H8.82l-.8-4H26a1 1 0 0 0 .976-.783L29.244 7h-2.047l-1.999 9H7.62Z"/><path fill="currentColor" d="M18 6V2h-2v4h-4v2h4v4h2V8h4V6h-4z"/>' }, "shopping-catalog": { "body": '<path fill="currentColor" d="M17 24h4v4h-4zm7 0h4v4h-4zm-7-7h4v4h-4zm7 0h4v4h-4z"/><path fill="currentColor" d="M28 11h-6V7c0-1.7-1.3-3-3-3h-6c-1.7 0-3 1.3-3 3v4H4c-.6 0-1 .4-1 1v.2l1.9 12.1c.1 1 1 1.7 2 1.7H15v-2H6.9L5.2 13H28v-2zM12 7c0-.6.4-1 1-1h6c.6 0 1 .4 1 1v4h-8V7z"/>' }, "show-data-cards": { "body": '<path fill="currentColor" d="M28 10H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 4v4h24V4zm24 26H4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 24v4h24v-4zm24-4H4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM4 14v4h24v-4z"/>' }, "shrink-screen": { "body": '<path fill="currentColor" d="M28 28H17a2.002 2.002 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h11a2.003 2.003 0 0 1 2 2v6a2.003 2.003 0 0 1-2 2zm-11-8v6h11.002L28 20zm-5-10v3.586L7.707 9.293l-1.414 1.414L10.586 15H7v2h7v-7h-2z"/><path fill="currentColor" d="M13 22H4a2.002 2.002 0 0 1-2-2V7a2.002 2.002 0 0 1 2-2h22a2.002 2.002 0 0 1 2 2v9h-2V7H4v13h9Z"/>' }, "shrink-screen-filled": { "body": '<rect width="15" height="10" x="15" y="18" fill="currentColor" rx="2"/><path fill="currentColor" d="M12 10v3.586L7.707 9.293l-1.414 1.414L10.586 15H7v2h7v-7h-2z"/><path fill="currentColor" d="M13 22H4a2.002 2.002 0 0 1-2-2V7a2.002 2.002 0 0 1 2-2h22a2.002 2.002 0 0 1 2 2v9h-2V7H4v13h9Z"/>' }, "shuffle": { "body": '<path fill="currentColor" d="M22.59 19.41L26.17 23h-6.62l-4.37-7l4.37-7h6.62l-3.58 3.59L24 14l6-6l-6-6l-1.41 1.41L26.17 7h-6.62a2 2 0 0 0-1.69.94L14 14.11l-3.86-6.17A2 2 0 0 0 8.45 7H2v2h6.45l4.37 7l-4.37 7H2v2h6.45a2 2 0 0 0 1.69-.94L14 17.89l3.86 6.17a2 2 0 0 0 1.69.94h6.62l-3.58 3.59L24 30l6-6l-6-6Z"/>' }, "shuttle": { "body": '<path fill="currentColor" d="m29.81 16l-7-9.56A1 1 0 0 0 22 6H3a1 1 0 0 0-1 1v17a1 1 0 0 0 1 1h2.14a4 4 0 0 0 7.72 0h6.28a4 4 0 0 0 7.72 0H29a1 1 0 0 0 1-1v-7.44a1 1 0 0 0-.19-.56ZM20 8h1.49l5.13 7H20ZM4 8h14v7H4Zm5 18a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm14 0a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm5-3h-1.14a4 4 0 0 0-7.72 0h-6.28a4 4 0 0 0-7.72 0H4v-6h24Z"/>' }, "side-panel-close": { "body": '<path fill="currentColor" d="M28 4H4c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h24c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM10 26H4V6h6v20zm18-11H17.8l3.6-3.6L20 10l-6 6l6 6l1.4-1.4l-3.6-3.6H28v9H12V6h16v9z"/>' }, "side-panel-close-filled": { "body": '<path fill="currentColor" d="M28 4H4c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h24c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 11H17.8l3.6-3.6L20 10l-6 6l6 6l1.4-1.4l-3.6-3.6H28v9H12V6h16v9z"/>' }, "side-panel-open": { "body": '<path fill="currentColor" d="M28 4H4c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h24c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM10 26H4V6h6v20zm18 0H12v-9h10.2l-3.6 3.6L20 22l6-6l-6-6l-1.4 1.4l3.6 3.6H12V6h16v20z"/>' }, "side-panel-open-filled": { "body": '<path fill="currentColor" d="M28 4H4c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h24c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 22H12v-9h10.2l-3.6 3.6L20 22l6-6l-6-6l-1.4 1.4l3.6 3.6H12V6h16v20z"/>' }, "sight": { "body": '<path fill="currentColor" d="M10 12h2v2h-2zm-4 0h2v2H6zm-4 0h2v2H2zm24 18h-2v-3h-4a5.005 5.005 0 0 1-5-5v-1.28l-2.316-.771a1 1 0 0 1-.541-1.463L15 13.723V11a9.01 9.01 0 0 1 9-9h5v2h-5a7.008 7.008 0 0 0-7 7v3a1 1 0 0 1-.143.514L14.5 18.446l1.817.605A1 1 0 0 1 17 20v2a3.003 3.003 0 0 0 3 3h5a1 1 0 0 1 1 1z"/><path fill="currentColor" d="M19 12h4v2h-4z"/>' }, "sigma": { "body": '<path fill="currentColor" d="M24 5H7v2.414L15.586 16L7 24.586V27h17v-2H9.414l9-9l-9-9H24V5z"/>' }, "signal-strength": { "body": '<path fill="currentColor" d="M26 6h2v20h-2zm-8 5h2v15h-2zm-7 5h2v10h-2zm-7 4h2v6H4z"/>' }, "sim-card": { "body": '<path fill="currentColor" d="M21 9H8a2.002 2.002 0 0 0-2 2v10a2.002 2.002 0 0 0 2 2h13a2.002 2.002 0 0 0 2-2V11a2.002 2.002 0 0 0-2-2Zm0 4h-3v-2h3Zm-3 2h3v2h-3Zm-2-4v10h-3v-7a1 1 0 0 0-1-1H8v-2Zm-5 6H8v-2h3Zm-3 2h3v2H8Zm10 2v-2h3v2Z"/><path fill="currentColor" d="M23.532 27H4a2.002 2.002 0 0 1-2-2V7a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v12.638a2.004 2.004 0 0 1-.464 1.28l-4.468 5.362a1.994 1.994 0 0 1-1.536.72ZM4 7v18h19.532L28 19.638V7Z"/>' }, "skill-level": { "body": '<path fill="currentColor" d="M30 30h-8V4h8zm-6-2h4V6h-4zm-4 2h-8V12h8zm-6-2h4V14h-4zm-4 2H2V18h8zm-6-2h4v-8H4z"/>' }, "skill-level-advanced": { "body": '<path fill="currentColor" d="M30 30h-8V4h8zm-10 0h-8V12h8zm-10 0H2V18h8z"/>' }, "skill-level-basic": { "body": '<path fill="currentColor" d="M30 30h-8V4h8zm-6-2h4V6h-4zm-4 2h-8V12h8zm-6-2h4V14h-4zm-4 2H2V18h8z"/>' }, "skill-level-intermediate": { "body": '<path fill="currentColor" d="M30 30h-8V4h8zm-6-2h4V6h-4zm-4 2h-8V12h8zm-10 0H2V18h8z"/>' }, "skip-back": { "body": '<path fill="currentColor" d="M27 28a1 1 0 0 1-.5-.13l-19-11a1 1 0 0 1 0-1.74l19-11a1 1 0 0 1 1 0A1 1 0 0 1 28 5v22a1 1 0 0 1-1 1zM10 16l16 9.27V6.73zM2 4h2v24H2z"/>' }, "skip-back-filled": { "body": '<path fill="currentColor" d="M27 28a.998.998 0 0 1-.501-.135l-19-11a1 1 0 0 1 0-1.73l19-11A1 1 0 0 1 28 5v22a1 1 0 0 1-1 1zM2 4h2v24H2z"/>' }, "skip-back-outline": { "body": '<path fill="currentColor" d="M23 22a1.004 1.004 0 0 1-.486-.126l-9-5a1 1 0 0 1 0-1.748l9-5A1 1 0 0 1 24 11v10a1 1 0 0 1-1 1Zm-6.94-6L22 19.3v-6.6ZM11 22H9V10h2z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "skip-back-outline-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-6 20H8V10h2Zm14-1a1 1 0 0 1-1.486.874l-9-5a1 1 0 0 1 0-1.748l9-5A1 1 0 0 1 24 11Z"/><path fill="currentColor" d="M22 19.301v-6.602L16.059 16L22 19.301z"/><path fill="none" d="M23 22a1.004 1.004 0 0 1-.486-.126l-9-5a1 1 0 0 1 0-1.748l9-5A1 1 0 0 1 24 11v10a1 1 0 0 1-1 1Zm-6.94-6L22 19.3v-6.6ZM10 22H8V10h2z"/>' }, "skip-back-outline-solid": { "body": '<path fill="currentColor" d="M23 22a1.004 1.004 0 0 1-.486-.126l-9-5a1 1 0 0 1 0-1.748l9-5A1 1 0 0 1 24 11v10a1 1 0 0 1-1 1Zm-12 0H9V10h2z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "skip-back-solid-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm-6 20H8V10h2Zm14-1a1 1 0 0 1-1.486.874l-9-5a1 1 0 0 1 0-1.748l9-5A1 1 0 0 1 24 11Z"/><path fill="none" d="M23 22a1.004 1.004 0 0 1-.486-.126l-9-5a1 1 0 0 1 0-1.748l9-5A1 1 0 0 1 24 11v10a1 1 0 0 1-1 1Zm-13 0H8V10h2z"/>' }, "skip-forward": { "body": '<path fill="currentColor" d="M5 28a1 1 0 0 1-1-1V5a1 1 0 0 1 .5-.87a1 1 0 0 1 1 0l19 11a1 1 0 0 1 0 1.74l-19 11A1 1 0 0 1 5 28zM6 6.73v18.54L22 16zM28 4h2v24h-2z"/>' }, "skip-forward-filled": { "body": '<path fill="currentColor" d="M28 4h2v24h-2zM5 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.501-.865l19 11a1 1 0 0 1 0 1.73l-19 11A.998.998 0 0 1 5 28z"/>' }, "skip-forward-outline": { "body": '<path fill="currentColor" d="M21 10h2v12h-2zM8.493 21.862A1 1 0 0 1 8 21V11a1 1 0 0 1 1.486-.874l9 5a1 1 0 0 1 0 1.748l-9 5a1 1 0 0 1-.993-.012zM10 12.7v6.601L15.94 16z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "skip-forward-outline-filled": { "body": '<path fill="currentColor" d="M10 19.301L15.941 16L10 12.699v6.602z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm2.486 14.874l-9 5A1 1 0 0 1 8 21V11a1 1 0 0 1 1.486-.874l9 5a1 1 0 0 1 0 1.748ZM24 22h-2V10h2Z"/><path fill="none" d="M22 10h2v12h-2zM8.493 21.862A1 1 0 0 1 8 21V11a1 1 0 0 1 1.486-.874l9 5a1 1 0 0 1 0 1.748l-9 5a1 1 0 0 1-.993-.012zM10 12.7v6.601L15.94 16z"/>' }, "skip-forward-outline-solid": { "body": '<path fill="currentColor" d="M21 10h2v12h-2zM8.493 21.862A1 1 0 0 1 8 21V11a1 1 0 0 1 1.486-.874l9 5a1 1 0 0 1 0 1.748l-9 5a1 1 0 0 1-.993-.012z"/><path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14.016 14.016 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12.014 12.014 0 0 0 16 4Z"/>' }, "skip-forward-solid-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm2.486 14.874l-9 5A1 1 0 0 1 8 21V11a1 1 0 0 1 1.486-.874l9 5a1 1 0 0 1 0 1.748ZM24 22h-2V10h2Z"/><path fill="none" d="M22 10h2v12h-2zM8.493 21.862A1 1 0 0 1 8 21V11a1 1 0 0 1 1.486-.874l9 5a1 1 0 0 1 0 1.748l-9 5a1 1 0 0 1-.993-.012z"/>' }, "sleet": { "body": '<path fill="currentColor" d="M6 24h2v2H6zm2 2h2v2H8zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2H6z"/><path fill="currentColor" d="M21 30a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 21 30zm3.8-20.864a8.994 8.994 0 0 0-17.6 0A6.497 6.497 0 0 0 8.5 22h8.882l-1.276 2.553a1 1 0 1 0 1.788.894L19.619 22H23.5a6.497 6.497 0 0 0 1.3-12.864zM23.5 20h-15a4.497 4.497 0 0 1-.356-8.981l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.497 4.497 0 0 1 23.5 20z"/>' }, "slisor": { "body": '<path fill="currentColor" d="M28 20h-2v2h2v6H4v-6h2v-2H4a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Z"/><circle cx="7" cy="25" r="1" fill="currentColor"/><path fill="currentColor" d="M16 22a1 1 0 0 1-.447-.105l-10-5l.894-1.79L16 19.883l9.553-4.777l.894 1.79l-10 5A1 1 0 0 1 16 22Z"/><path fill="currentColor" d="M16 16a1 1 0 0 1-.447-.105l-10-5a1 1 0 0 1 0-1.79l10-5a1 1 0 0 1 .894 0l10 5a1 1 0 0 1 0 1.79l-10 5A1 1 0 0 1 16 16Zm-7.764-6L16 13.882L23.764 10L16 6.118Z"/>' }, "slm": { "body": '<path fill="currentColor" d="m28 9l-1.5 5l-.5 2l-.5-2L24 9h-2v14h2v-8l-.2-2l.6 2l1.6 4.6l1.6-4.6l.6-2l-.2 2v8h2V9zM14 21V9h-2v14h8v-2zm-6 2H2v-2h6v-4H4c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h6v2H4v4h4c1.1 0 2 .9 2 2v4c0 1.1-.9 2-2 2z"/>' }, "smell": { "body": '<path fill="currentColor" d="M22 15v-5h-2v7h2a3 3 0 0 1 0 6h-1v-2h-2v2a3 3 0 0 1-6 0v-2h-2v2h-1a3 3 0 0 1 0-6h2V9a3 3 0 0 1 3-3h1V4h-1a5 5 0 0 0-5 5v6a5 5 0 0 0 0 10h1.42a5 5 0 0 0 9.16 0H22a5 5 0 0 0 0-10Z"/>' }, "smoke": { "body": '<path fill="currentColor" d="M27.001 28a.998.998 0 0 1-.8-.4l-.815-1.086a8.998 8.998 0 0 1-1.6-7.286l1.473-6.876a6.996 6.996 0 0 0-1.245-5.667L23.2 5.6a1 1 0 1 1 1.6-1.2l.815 1.086a8.998 8.998 0 0 1 1.6 7.285l-1.474 6.876a6.996 6.996 0 0 0 1.245 5.667L27.8 26.4a1 1 0 0 1-.799 1.6zm-5 0a.998.998 0 0 1-.8-.4l-.815-1.086a8.998 8.998 0 0 1-1.6-7.286l1.473-6.876a6.996 6.996 0 0 0-1.245-5.667L18.2 5.6a1 1 0 1 1 1.6-1.2l.815 1.086a8.998 8.998 0 0 1 1.6 7.285l-1.474 6.876a6.996 6.996 0 0 0 1.245 5.667L22.8 26.4a1 1 0 0 1-.799 1.6zm-5 0a.998.998 0 0 1-.8-.4l-.815-1.086a8.998 8.998 0 0 1-1.6-7.286l1.473-6.876a6.996 6.996 0 0 0-1.245-5.667L13.2 5.6a1 1 0 1 1 1.6-1.2l.814 1.086a8.998 8.998 0 0 1 1.601 7.285l-1.474 6.876a6.996 6.996 0 0 0 1.245 5.667L17.8 26.4a1 1 0 0 1-.799 1.6zm-5 0a.998.998 0 0 1-.8-.4l-.815-1.086a8.998 8.998 0 0 1-1.6-7.286l1.473-6.876a6.996 6.996 0 0 0-1.245-5.667L8.2 5.6a1 1 0 1 1 1.6-1.2l.815 1.086a8.998 8.998 0 0 1 1.6 7.285l-1.474 6.876a6.996 6.996 0 0 0 1.245 5.667L12.8 26.4a1 1 0 0 1-.799 1.6zm-5 0a.998.998 0 0 1-.801-.4l-.815-1.086a8.998 8.998 0 0 1-1.6-7.286l1.474-6.876a6.996 6.996 0 0 0-1.245-5.667L3.2 5.6a1 1 0 1 1 1.6-1.2l.815 1.086a8.998 8.998 0 0 1 1.6 7.285l-1.474 6.876a6.996 6.996 0 0 0 1.245 5.667L7.8 26.4a1 1 0 0 1-.799 1.6z"/>' }, "smoothing": { "body": '<defs/><circle cx="16" cy="16" r="5" fill="currentColor"/><path d="M7.7 4.7a14.703 14.703 0 0 0-3 3.1L6.3 9a13.263 13.263 0 0 1 2.6-2.7z" fill="currentColor"/><path d="M4.6 12.3l-1.9-.6A12.511 12.511 0 0 0 2 16h2a11.476 11.476 0 0 1 .6-3.7z" fill="currentColor"/><path d="M2.7 20.4a14.403 14.403 0 0 0 2 3.9l1.6-1.2a12.887 12.887 0 0 1-1.7-3.3z" fill="currentColor"/><path d="M7.8 27.3a14.403 14.403 0 0 0 3.9 2l.6-1.9A12.887 12.887 0 0 1 9 25.7z" fill="currentColor"/><path d="M11.7 2.7l.6 1.9A11.476 11.476 0 0 1 16 4V2a12.511 12.511 0 0 0-4.3.7z" fill="currentColor"/><path d="M24.2 27.3a15.18 15.18 0 0 0 3.1-3.1L25.7 23a11.526 11.526 0 0 1-2.7 2.7z" fill="currentColor"/><path d="M27.4 19.7l1.9.6A15.475 15.475 0 0 0 30 16h-2a11.476 11.476 0 0 1-.6 3.7z" fill="currentColor"/><path d="M29.2 11.6a14.403 14.403 0 0 0-2-3.9l-1.6 1.2a12.887 12.887 0 0 1 1.7 3.3z" fill="currentColor"/><path d="M24.1 4.6a14.403 14.403 0 0 0-3.9-2l-.6 1.9a12.887 12.887 0 0 1 3.3 1.7z" fill="currentColor"/><path d="M20.3 29.3l-.6-1.9a11.476 11.476 0 0 1-3.7.6v2a21.42 21.42 0 0 0 4.3-.7z" fill="currentColor"/>', "hidden": true }, "smoothing-cursor": { "body": '<circle cx="18" cy="18" r="4" fill="currentColor"/><path d="M18 30a11.893 11.893 0 0 1-4.104-.72l.684-1.88A9.973 9.973 0 0 0 18 28z" fill="currentColor"/><path d="M22.148 29.264l-.691-1.877a9.956 9.956 0 0 0 2.997-1.748l1.292 1.527a11.953 11.953 0 0 1-3.598 2.098z" fill="currentColor"/><path d="M10.29 27.195a12.014 12.014 0 0 1-2.68-3.187l1.73-1.003a10.024 10.024 0 0 0 2.235 2.658z" fill="currentColor"/><path d="M28.413 23.967l-1.734-.996a9.916 9.916 0 0 0 1.176-3.264l1.971.34a11.896 11.896 0 0 1-1.413 3.92z" fill="currentColor"/><path d="M6.182 20.093a12.128 12.128 0 0 1-.004-4.163l1.97.342a10.121 10.121 0 0 0 .004 3.474z" fill="currentColor"/><path d="M27.845 16.234a9.902 9.902 0 0 0-1.196-3.257l1.729-1.006a11.903 11.903 0 0 1 1.436 3.912z" fill="currentColor"/><path d="M9.331 13.01L7.6 12.013a12.01 12.01 0 0 1 2.674-3.193l1.288 1.53a10.01 10.01 0 0 0-2.23 2.662z" fill="currentColor"/><path d="M24.41 10.324a9.96 9.96 0 0 0-3.01-1.731l.68-1.881a11.95 11.95 0 0 1 3.612 2.077z" fill="currentColor"/><path d="M14.562 8.606l-.688-1.877A12.103 12.103 0 0 1 18 6v2a10.088 10.088 0 0 0-3.438.606z" fill="currentColor"/><path d="M11 2H2v9h2V4h7V2z" fill="currentColor"/>', "hidden": true }, "snooze": { "body": '<path fill="currentColor" d="M20 14v-2h-8v2h5.5L12 20v2h8v-2h-5.493L20 14zm3.001-8.588L24.416 4L28 7.59l-1.415 1.412z"/><path fill="currentColor" d="M16 28a11 11 0 1 1 11-11a11.012 11.012 0 0 1-11 11Zm0-20a9 9 0 1 0 9 9a9.01 9.01 0 0 0-9-9ZM4.002 7.589l3.583-3.59L9 5.41L5.417 9z"/>' }, "snow": { "body": '<path fill="currentColor" d="M23.5 22h-15A6.5 6.5 0 0 1 7.2 9.14a9 9 0 0 1 17.6 0A6.5 6.5 0 0 1 23.5 22zM16 4a7 7 0 0 0-6.94 6.14L9 11h-.86a4.5 4.5 0 0 0 .36 9h15a4.5 4.5 0 0 0 .36-9H23l-.1-.82A7 7 0 0 0 16 4zm-4 21.05L10.95 24L9.5 25.45L8.05 24L7 25.05l1.45 1.45L7 27.95L8.05 29l1.45-1.45L10.95 29L12 27.95l-1.45-1.45L12 25.05zm14 0L24.95 24l-1.45 1.45L22.05 24L21 25.05l1.45 1.45L21 27.95L22.05 29l1.45-1.45L24.95 29L26 27.95l-1.45-1.45L26 25.05zm-7 2L17.95 26l-1.45 1.45L15.05 26L14 27.05l1.45 1.45L14 29.95L15.05 31l1.45-1.45L17.95 31L19 29.95l-1.45-1.45L19 27.05z"/>' }, "snow-blizzard": { "body": '<path fill="currentColor" d="M13 10h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zM3 26h2v2H3zm2 2h2v2H5zm2 2h2v2H7zm0-4h2v2H7zm-4 4h2v2H3zm20-4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zM8 18h2v2H8zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2H8zm10-4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm-5 4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2z"/><path fill="currentColor" d="M24.8 9.136a8.994 8.994 0 0 0-17.6 0A6.496 6.496 0 0 0 6 21.5v-2.26a4.494 4.494 0 0 1 2.144-8.22l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.494 4.494 0 0 1 26 19.239v2.26a6.496 6.496 0 0 0-1.2-12.363Z"/>' }, "snow-density": { "body": '<path fill="currentColor" d="M16 28a9.011 9.011 0 0 1-9-9a9.984 9.984 0 0 1 1.494-4.955l6.659-10.608a1.04 1.04 0 0 1 1.694 0l6.63 10.556A10.063 10.063 0 0 1 25 19a9.011 9.011 0 0 1-9 9Zm0-22.152l-5.782 9.208A7.977 7.977 0 0 0 9 19a7 7 0 0 0 14 0a8.062 8.062 0 0 0-1.248-3.995Z"/><path fill="currentColor" d="m20.6 16.8l-1.2-1.6L17 17v-3h-2v3l-2.4-1.8l-1.2 1.6l2.933 2.2l-2.933 2.2l1.2 1.6L15 21v3h2v-3l2.4 1.8l1.2-1.6l-2.933-2.2l2.933-2.2z"/>' }, "snow-heavy": { "body": '<path fill="currentColor" d="M4 26h2v2H4zm2 2h2v2H6zm2 2h2v2H8zm0-4h2v2H8zm-4 4h2v2H4zm4-12h2v2H8zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2H8zm10-4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm-4 4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2z"/><path fill="currentColor" d="M24.8 9.136a8.994 8.994 0 0 0-17.6 0A6.496 6.496 0 0 0 6 21.5v-2.26a4.494 4.494 0 0 1 2.144-8.22l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.494 4.494 0 0 1 26 19.239v2.26a6.496 6.496 0 0 0-1.2-12.363Z"/>' }, "snow-scattered": { "body": '<path fill="currentColor" d="M2 26h2v2H2zm2 2h2v2H4zm2 2h2v2H6zm0-4h2v2H6zm-4 4h2v2H2zm18-4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm-9-4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm9-30h2v3h-2zm9 10.001h3v2h-3zm-2.536-4.879L28.586 3L30 4.414l-2.122 2.122zM28.586 19l-2.122-2.12l1.414-1.415L30 17.587zM14.122 6.536L12 4.414L13.414 3l2.122 2.122z"/><path fill="currentColor" d="M27 11a5.985 5.985 0 0 0-10.857-3.492A7.374 7.374 0 0 0 13.5 7a7.551 7.551 0 0 0-7.15 5.244A5.993 5.993 0 0 0 8 24h11a5.967 5.967 0 0 0 5.567-8.2A5.972 5.972 0 0 0 27 11Zm-8 11H8a3.993 3.993 0 0 1-.673-7.93l.663-.112l.145-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 22Zm4.522-7.913a5.96 5.96 0 0 0-2.873-1.843a7.521 7.521 0 0 0-2.722-3.78a3.987 3.987 0 1 1 5.595 5.623Z"/>' }, "snow-scattered-night": { "body": '<path fill="currentColor" d="M2 26h2v2H2zm2 2h2v2H4zm2 2h2v2H6zm0-4h2v2H6zm-4 4h2v2H2zm18-4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm-9-4h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm18.844-16.965a1.517 1.517 0 0 0-1.23-.866a5.355 5.355 0 0 1-3.41-1.716a6.465 6.465 0 0 1-1.286-6.392a1.603 1.603 0 0 0-.299-1.546a1.454 1.454 0 0 0-1.36-.493l-.019.003A7.769 7.769 0 0 0 16.356 7.6A7.37 7.37 0 0 0 13.5 7a7.551 7.551 0 0 0-7.15 5.244A5.993 5.993 0 0 0 8 24h11a6.007 6.007 0 0 0 6-6c0-.057-.012-.111-.014-.169a7.508 7.508 0 0 0 4.761-3.276a1.537 1.537 0 0 0 .097-1.52zM19 22H8a3.993 3.993 0 0 1-.673-7.93l.663-.112l.145-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 22zm5.597-6.129a5.966 5.966 0 0 0-3.948-3.627a7.49 7.49 0 0 0-2.489-3.58a5.902 5.902 0 0 1 3.638-4.447a8.458 8.458 0 0 0 1.94 7.596a7.4 7.4 0 0 0 3.902 2.228a5.449 5.449 0 0 1-3.043 1.83z"/>' }, "snowflake": { "body": '<path fill="currentColor" d="M21.415 12H28v-2h-4.585L28 5.415L26.585 4L22 8.587V4h-2v6.587L18.587 12H17V8h-2v4h-1.587L12 10.587V4h-2v4.587L5.414 4L4 5.415L8.585 10H4v2h6.585L12 13.415V15H8v2h4v1.587L10.587 20H4v2h4.587L4 26.586l1.414 1.415L10 23.415V28h2v-6.585L13.415 20H15v4h2v-4h1.585L20 21.415V28h2v-4.585L26.585 28L28 26.586L23.413 22H28v-2h-6.587L20 18.587V17h4v-2h-4v-1.585ZM18 18h-4v-4h4Z"/>' }, "soccer": { "body": '<circle cx="17" cy="28" r="2" fill="currentColor"/><path fill="currentColor" d="M8 20.586L13.586 15L15 16.414L9.414 22z"/><path fill="currentColor" d="M28 16.584L19.414 8H6v2h12.586l3 3L6 28.586L7.414 30L23 14.415L26.584 18L23 21.586L24.414 23L28 19.416a2.004 2.004 0 0 0 0-2.832zM24.5 9A3.5 3.5 0 1 1 28 5.5A3.504 3.504 0 0 1 24.5 9zm0-5A1.5 1.5 0 1 0 26 5.5A1.502 1.502 0 0 0 24.5 4z"/>' }, "software-resource": { "body": '<path fill="currentColor" d="M29.391 14.527L17.473 2.609A2.078 2.078 0 0 0 16 2c-.533 0-1.067.203-1.473.609L2.609 14.527C2.203 14.933 2 15.466 2 16s.203 1.067.609 1.473L14.526 29.39c.407.407.941.61 1.474.61s1.067-.203 1.473-.609L29.39 17.474c.407-.407.61-.94.61-1.474s-.203-1.067-.609-1.473zM16 28.036L3.965 16L16 3.964L28.036 16L16 28.036z"/>' }, "software-resource-cluster": { "body": '<path fill="currentColor" d="M24 21c-.5 0-1-.2-1.4-.6l-3-3c-.4-.4-.6-.9-.6-1.4s.2-1 .6-1.4l3-3c.4-.4.9-.6 1.4-.6c.5 0 1 .2 1.4.6l3 3c.4.4.6.9.6 1.4c0 .5-.2 1-.6 1.4l-3 3c-.4.4-.9.6-1.4.6zm0-8l-3 3l3 3l3-3l-3-3zm-8 0c-.5 0-1-.2-1.4-.6l-3-3C11.2 9 11 8.5 11 8s.2-1 .6-1.4l3-3c.4-.4.9-.6 1.4-.6c.5 0 1 .2 1.4.6l3 3c.4.4.6.9.6 1.4c0 .5-.2 1-.6 1.4l-3 3c-.4.4-.9.6-1.4.6zm0-8l-3 3l3 3l3-3l-3-3zm0 24c-.5 0-1-.2-1.4-.6l-3-3c-.4-.4-.6-.9-.6-1.4s.2-1 .6-1.4l3-3c.4-.4.9-.6 1.4-.6c.5 0 1 .2 1.4.6l3 3c.4.4.6.9.6 1.4c0 .5-.2 1-.6 1.4l-3 3c-.4.4-.9.6-1.4.6zm0-8l-3 3l3 3l3-3l-3-3zm-8 0c-.5 0-1-.2-1.4-.6l-3-3C3.2 17 3 16.5 3 16s.2-1 .6-1.4l3-3c.4-.4.9-.6 1.4-.6c.5 0 1 .2 1.4.6l3 3c.4.4.6.9.6 1.4c0 .5-.2 1-.6 1.4l-3 3c-.4.4-.9.6-1.4.6zm0-8l-3 3l3 3l3-3l-3-3z"/>' }, "software-resource-resource": { "body": '<path fill="currentColor" d="m6.899 10.283l3.394-3.394l1.414 1.414l-3.394 3.394zM4.9 19.7l-2.3-2.3C2.2 17 2 16.5 2 16s.2-1 .6-1.4l2.3-2.3l1.4 1.4L4 16l2.3 2.3l-1.4 1.4zm1.989 2.007l1.414-1.414l3.394 3.394l-1.414 1.414zM16 30c-.5 0-1-.2-1.4-.6l-2.3-2.3l1.4-1.4L16 28l2.3-2.3l1.4 1.4l-2.3 2.3c-.4.4-.9.6-1.4.6zm4.293-6.303l3.394-3.394l1.414 1.414l-3.394 3.394zM27.1 19.7l-1.4-1.4L28 16l-2.3-2.3l1.4-1.4l2.3 2.3c.4.4.6.9.6 1.4s-.2 1-.6 1.4l-2.3 2.3zM20.303 8.313l1.414-1.414l3.394 3.394l-1.414 1.414zM16 2c-.5 0-1 .2-1.4.6l-2.3 2.3l1.4 1.4L16 4l2.3 2.3l1.4-1.4l-2.3-2.3C17 2.2 16.5 2 16 2z"/>' }, "soil-moisture": { "body": '<path fill="currentColor" d="M24.5 28a5.385 5.385 0 0 1-5.5-5.249a5.384 5.384 0 0 1 .874-2.83l3.616-5.383a1.217 1.217 0 0 1 2.02 0l3.55 5.277a5.492 5.492 0 0 1 .94 2.936A5.385 5.385 0 0 1 24.5 28Zm0-11.38l-2.936 4.367A3.359 3.359 0 0 0 21 22.751a3.51 3.51 0 0 0 7 0a3.436 3.436 0 0 0-.63-1.867Z"/><circle cx="5" cy="13" r="1" fill="currentColor"/><circle cx="11" cy="19" r="1" fill="currentColor"/><circle cx="15" cy="25" r="1" fill="currentColor"/><circle cx="17" cy="15" r="1" fill="currentColor"/><circle cx="13" cy="11" r="1" fill="currentColor"/><circle cx="27" cy="11" r="1" fill="currentColor"/><circle cx="9" cy="27" r="1" fill="currentColor"/><circle cx="3" cy="21" r="1" fill="currentColor"/><path fill="currentColor" d="M2 6h28v2H2z"/>' }, "soil-moisture-field": { "body": '<path fill="currentColor" d="M24.5 30a5.202 5.202 0 0 1-4.626-8.08l3.616-5.382a1.217 1.217 0 0 1 2.02 0l3.55 5.277a5.492 5.492 0 0 1 .94 2.936A5.385 5.385 0 0 1 24.5 30zm0-11.38l-2.936 4.367A3.208 3.208 0 0 0 24.5 28a3.385 3.385 0 0 0 3.5-3.249a3.435 3.435 0 0 0-.63-1.867zM11 16v-5h1a4.005 4.005 0 0 0 4-4V4h-3a3.978 3.978 0 0 0-2.747 1.107A6.003 6.003 0 0 0 5 2H2v3a6.007 6.007 0 0 0 6 6h1v5H2v2h14v-2zm2-10h1v1a2.002 2.002 0 0 1-2 2h-1V8a2.002 2.002 0 0 1 2-2zM8 9a4.005 4.005 0 0 1-4-4V4h1a4.005 4.005 0 0 1 4 4v1zM2 21h14v2H2zm0 5h14v2H2z"/>' }, "soil-moisture-global": { "body": '<path fill="currentColor" d="M25 30a4.735 4.735 0 0 1-4.207-7.35l3.368-5.194a1 1 0 0 1 1.678 0l3.315 5.11A4.975 4.975 0 0 1 30 25.223A4.898 4.898 0 0 1 25 30zm0-10.163l-2.508 3.866A2.926 2.926 0 1 0 28 25.223a2.96 2.96 0 0 0-.544-1.603zM11 24H9A17.02 17.02 0 0 1 26 7h4v2h-4a15.017 15.017 0 0 0-15 15z"/><path fill="currentColor" d="M16 24h-2a12.014 12.014 0 0 1 12-12h4v2h-4a10.011 10.011 0 0 0-10 10Z"/><path fill="currentColor" d="M26 2a21.863 21.863 0 0 0-12 3.576A21.856 21.856 0 0 0 2 2v2a19.873 19.873 0 0 1 10.262 2.835a22.151 22.151 0 0 0-2.315 2.144A17.001 17.001 0 0 0 2 7v2a15.014 15.014 0 0 1 6.62 1.537a22.077 22.077 0 0 0-1.702 2.537A12.032 12.032 0 0 0 2 12v2a9.884 9.884 0 0 1 4 .85A21.861 21.861 0 0 0 4 24h2A20.023 20.023 0 0 1 26 4h4V2Z"/>' }, "soil-temperature": { "body": '<circle cx="5" cy="13" r="1" fill="currentColor"/><circle cx="11" cy="19" r="1" fill="currentColor"/><circle cx="15" cy="25" r="1" fill="currentColor"/><circle cx="17" cy="15" r="1" fill="currentColor"/><circle cx="13" cy="11" r="1" fill="currentColor"/><circle cx="9" cy="27" r="1" fill="currentColor"/><circle cx="3" cy="21" r="1" fill="currentColor"/><path fill="currentColor" d="M25 30a4.986 4.986 0 0 1-3-8.98V15a3 3 0 0 1 6 0v6.02A4.986 4.986 0 0 1 25 30zm0-16a1.001 1.001 0 0 0-1 1v7.13l-.497.29A2.968 2.968 0 0 0 22 25a3 3 0 0 0 6 0a2.968 2.968 0 0 0-1.503-2.581L26 22.13V15a1.001 1.001 0 0 0-1-1zM2 6h28v2H2z"/>' }, "soil-temperature-field": { "body": '<path fill="currentColor" d="M11 16v-5h1a4.005 4.005 0 0 0 4-4V4h-3a3.978 3.978 0 0 0-2.747 1.107A6.003 6.003 0 0 0 5 2H2v3a6.007 6.007 0 0 0 6 6h1v5H2v2h14v-2zm2-10h1v1a2.002 2.002 0 0 1-2 2h-1V8a2.002 2.002 0 0 1 2-2zM8 9a4.005 4.005 0 0 1-4-4V4h1a4.005 4.005 0 0 1 4 4v1zM2 21h14v2H2zm0 5h14v2H2zm23 4a4.986 4.986 0 0 1-3-8.98V15a3 3 0 0 1 6 0v6.02A4.986 4.986 0 0 1 25 30zm0-16a1.001 1.001 0 0 0-1 1v7.13l-.497.29A2.968 2.968 0 0 0 22 25a3 3 0 0 0 6 0a2.968 2.968 0 0 0-1.503-2.581L26 22.13V15a1.001 1.001 0 0 0-1-1z"/>' }, "soil-temperature-global": { "body": '<path fill="currentColor" d="M25 30a4.986 4.986 0 0 1-3-8.98V15a3 3 0 0 1 6 0v6.02A4.986 4.986 0 0 1 25 30zm0-16a1.001 1.001 0 0 0-1 1v7.13l-.497.29A2.968 2.968 0 0 0 22 25a3 3 0 0 0 6 0a2.968 2.968 0 0 0-1.503-2.581L26 22.13V15a1.001 1.001 0 0 0-1-1zm-9 10h-2a11.89 11.89 0 0 1 3.764-8.727l1.373 1.454A9.909 9.909 0 0 0 16 24z"/><path fill="currentColor" d="M11 24H9A17.02 17.02 0 0 1 26 7h4v2h-4a15.017 15.017 0 0 0-15 15Z"/><path fill="currentColor" d="M26 2a21.863 21.863 0 0 0-12 3.576A21.856 21.856 0 0 0 2 2v2a19.873 19.873 0 0 1 10.262 2.835a22.151 22.151 0 0 0-2.315 2.144A17.001 17.001 0 0 0 2 7v2a15.014 15.014 0 0 1 6.62 1.537a22.077 22.077 0 0 0-1.702 2.537A12.032 12.032 0 0 0 2 12v2a9.884 9.884 0 0 1 4 .85A21.861 21.861 0 0 0 4 24h2A20.023 20.023 0 0 1 26 4h4V2Z"/>' }, "solar-panel": { "body": '<path fill="currentColor" d="M30 26V14H13v12h5v2H2v2h28v-2h-5v-2zm-5-2v-3h3v3zm-2-3v3h-3v-3zm-3-2v-3h3v3zm8 0h-3v-3h3zm-10-3v3h-3v-3zm-3 8v-3h3v3zm8 4h-3v-2h3zM9.333 14.981A4 4 0 1 1 16 12h-2a2 2 0 1 0-3.333 1.49zM11 2h2v4h-2zm-9 9h4v2H2zm2.222-5.364l1.414-1.414L8.464 7.05L7.05 8.464zM16.95 8.464L15.536 7.05l2.828-2.828l1.414 1.414z"/>' }, "sort-ascending": { "body": '<path fill="currentColor" d="m18 22l1.414-1.414L23 24.172V4h2v20.172l3.586-3.586L30 22l-6 6l-6-6zM2 18h14v2H2zm4-6h10v2H6zm4-6h6v2h-6z"/>' }, "sort-descending": { "body": '<path fill="currentColor" d="m18 22l1.414-1.414L23 24.172V4h2v20.172l3.586-3.586L30 22l-6 6l-6-6zM2 6h14v2H2zm4 6h10v2H6zm4 6h6v2h-6z"/>' }, "sort-remove": { "body": '<path fill="currentColor" d="M30 19.415L28.586 18L25 21.587L21.414 18L20 19.415L23.586 23L20 26.586L21.414 28L25 24.414L28.586 28L30 26.586L26.414 23L30 19.415zM10 18h6v2h-6zM2 6h14v2H2zm4 6h10v2H6z"/>' }, "spell-check": { "body": '<path fill="currentColor" d="M20 22h2l-5-12h-2l-5 12h2l1.24-3h5.53Zm-5.93-5l1.82-4.42h.25L18 17Z"/><path fill="currentColor" d="M12 28H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v11h-2V6H6v20h6zm11-.82l-2.59-2.59L19 26l4 4l7-7l-1.41-1.41L23 27.18z"/>' }, "spine-label": { "body": '<path d="M3 11v2h5.59l-6.3 6.29l1.42 1.42l6.29-6.3V20h2v-9H3z" fill="currentColor"/><path d="M26 13h-3v-1h-2v1h-3a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h3v1h2v-1h3a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm-8 4v-2h8v2z" fill="currentColor"/><path d="M26 23h-3v-1h-2v1h-3a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h3v1h2v-1h3a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm-8 4v-2h8v2z" fill="currentColor"/><path d="M26 3h-3V2h-2v1h-3a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h3v1h2V9h3a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2zm-8 4V5h8v2z" fill="currentColor"/>', "hidden": true }, "split": { "body": '<path fill="currentColor" d="M15 20h2v4h-2zm0-6h2v4h-2zm0-6h2v4h-2z"/><path fill="currentColor" d="M28 16A12.01 12.01 0 0 0 17 4.05V2h-2v2.05a11.99 11.99 0 0 0 0 23.9V30h2v-2.05A12.01 12.01 0 0 0 28 16ZM16 26a10 10 0 1 1 10-10a10.011 10.011 0 0 1-10 10Z"/>' }, "split-discard": { "body": '<path d="M28 16A12.01 12.01 0 0 0 17 4.05V2h-2v2.05a11.99 11.99 0 0 0 0 23.9V30h2v-2.05A12.01 12.01 0 0 0 28 16zM16 26V6a10 10 0 0 1 0 20z" fill="currentColor"/>', "hidden": true }, "split-screen": { "body": '<path fill="currentColor" d="M15 4h2v24h-2zm-5 3v18H4V7h6m0-2H4a2 2 0 0 0-2 2v18a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2zm18 2v18h-6V7h6m0-2h-6a2 2 0 0 0-2 2v18a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2z"/>' }, "spray-paint": { "body": '<path fill="currentColor" d="M22.5 23a4.5 4.5 0 1 1 4.5-4.5a4.505 4.505 0 0 1-4.5 4.5Zm0-7a2.5 2.5 0 1 0 2.5 2.5a2.503 2.503 0 0 0-2.5-2.5Z"/><path fill="currentColor" d="M28 8h-2V3h-7v5h-2a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h11a2.003 2.003 0 0 0 2-2V10a2.002 2.002 0 0 0-2-2zm-7-3h3v3h-3zm-4 23V10h11l.002 18zM2 14h3v3H2zm5-5h3v3H7zM2 9h3v3H2zm10-5h3v3h-3zM7 4h3v3H7zM2 4h3v3H2z"/>' }, "sprout": { "body": '<path fill="currentColor" d="M25 2a11.01 11.01 0 0 0-10.245 7.024A6.994 6.994 0 0 0 9 6H6v3a7.008 7.008 0 0 0 7 7h1v9.05a9.923 9.923 0 0 0-6.071 2.879l1.414 1.414a8 8 0 0 1 12.309 1.213l1.661-1.113A9.98 9.98 0 0 0 16 25.062V16h1A11.012 11.012 0 0 0 28 5V2ZM13 14a5.006 5.006 0 0 1-5-5V8h1a5.005 5.005 0 0 1 5 5v1Zm13-9a9.01 9.01 0 0 1-9 9h-1v-1a9.01 9.01 0 0 1 9-9h1Z"/>' }, "sql": { "body": '<path fill="currentColor" d="M24 21V9h-2v14h8v-2h-6zM18 9h-4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h1v2a2 2 0 0 0 2 2h2v-2h-2v-2h1a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2zm-4 12V11h4v10zm-6 2H2v-2h6v-4H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h6v2H4v4h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2z"/>' }, "stack-limitation": { "body": '<path fill="currentColor" d="M8 22h8v8H8zm16-10h-4v2h4v2h-3v2h3v2h-4v2h4a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-8 8H8v-8h8zm-6-2h4v-4h-4zm6-14.59L14.59 2L12 4.59L9.41 2L8 3.41L10.59 6L8 8.59L9.41 10L12 7.41L14.59 10L16 8.59L13.41 6L16 3.41z"/>' }, "stacked-move": { "body": '<path d="M15 28H4a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h11a2 2 0 0 1 2 2v15a2 2 0 0 1-2 2zM4 11v15h11V11z" fill="currentColor"/><path d="M26 6l-1.41 1.41L27 10h-5V6a2 2 0 0 0-2-2H10v2h10v14h2v-8h5l-2.41 2.59L26 16l5-5z" fill="currentColor"/>', "hidden": true }, "stacked-scrolling-1": { "body": '<path d="M18 30H4a2 2 0 0 1-2-2V14a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2zM4 14v14h14V14z" fill="currentColor"/><path d="M25 23h-2V9H9V7h14a2 2 0 0 1 2 2z" fill="currentColor"/><path d="M30 16h-2V4H16V2h12a2 2 0 0 1 2 2z" fill="currentColor"/>', "hidden": true }, "stacked-scrolling-2": { "body": '<path d="M8 30H2a2 2 0 0 1-2-2V14a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2zM2 14v14h6V14z" fill="currentColor"/><path d="M20 30h-6a2 2 0 0 1-2-2V14a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2zm-6-16v14h6V14z" fill="currentColor"/><path d="M27 21h-2V9h-8V7h8a2 2 0 0 1 2 2z" fill="currentColor"/><path d="M32 16h-2V4h-8V2h8a2 2 0 0 1 2 2z" fill="currentColor"/>', "hidden": true }, "stamp": { "body": '<path fill="currentColor" d="M26 18h-6v-3.102a7.494 7.494 0 0 1 1.159-3.854a5.975 5.975 0 0 0-1.374-7.7a5.997 5.997 0 0 0-9.683 3.54a5.91 5.91 0 0 0 .748 4.174A7.257 7.257 0 0 1 12 14.794V18H6a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2v2a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2v-2a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2ZM12.07 7.244a4 4 0 1 1 7.373 2.773A9.76 9.76 0 0 0 18.066 14H13.94a9.543 9.543 0 0 0-1.376-3.974a3.937 3.937 0 0 1-.494-2.782ZM18 16v2h-4v-2Zm6 12H8v-2h16ZM6 24v-4h20v4Z"/>' }, "star": { "body": '<path fill="currentColor" d="m16 6.52l2.76 5.58l.46 1l1 .15l6.16.89l-4.38 4.3l-.75.73l.18 1l1.05 6.13l-5.51-2.89L16 23l-.93.49l-5.51 2.85l1-6.13l.18-1l-.74-.77l-4.42-4.35l6.16-.89l1-.15l.46-1L16 6.52M16 2l-4.55 9.22l-10.17 1.47l7.36 7.18L6.9 30l9.1-4.78L25.1 30l-1.74-10.13l7.36-7.17l-10.17-1.48Z"/>' }, "star-filled": { "body": '<path fill="currentColor" d="m16 2l-4.55 9.22l-10.17 1.47l7.36 7.18L6.9 30l9.1-4.78L25.1 30l-1.74-10.13l7.36-7.17l-10.17-1.48Z"/>' }, "star-half": { "body": '<path fill="currentColor" d="M11.45 11.22L1.28 12.7l7.36 7.17L6.9 30l9.1-4.78V2l-4.55 9.22z"/>' }, "star-review": { "body": '<path fill="currentColor" d="M18 26h8v2h-8zm0-4h12v2H18zm0-4h12v2H18z"/><path fill="currentColor" d="M20.549 11.217L16 2l-4.549 9.217L1.28 12.695l7.36 7.175L6.902 30L14 26.269v-2.26l-4.441 2.335l1.052-6.136l.178-1.037l-.753-.733l-4.458-4.347l6.161-.895l1.04-.151l.466-.943L16 6.519l2.755 5.583l.466.943l1.04.151l7.454 1.085L28 12.3l-7.451-1.083z"/>' }, "status-acknowledge": { "body": '<path d="M24 30a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4z" fill="currentColor"/><path d="M12 15.59L9.41 13L8 14.41l4 4l7-7L17.59 10L12 15.59z" fill="currentColor"/><path d="M14 24a10 10 0 1 1 10-10h2a12 12 0 1 0-12 12z" fill="currentColor"/>', "hidden": true }, "status-change": { "body": '<path d="M7 30a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3z" fill="currentColor"/><path d="M23 30a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3z" fill="currentColor"/><path d="M24 7v7l3.586-3.414L29 12l-6 6l-6-6l1.414-1.414L22 14V7a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v11H6V7a3.003 3.003 0 0 1 3-3h12a3.003 3.003 0 0 1 3 3z" fill="currentColor"/>', "hidden": true }, "status-partial-fail": { "body": '<path d="M25.14 23.764l1.532 1.285a13.976 13.976 0 0 0 2.441-4.182l-1.878-.683a11.973 11.973 0 0 1-2.094 3.58z" fill="currentColor"/><path d="M18 27.81l.413 1.968a13.889 13.889 0 0 0 4.541-1.638L22 26.409a12.52 12.52 0 0 1-4 1.401z" fill="currentColor"/><path d="M10 26.409L9 28.14a14.14 14.14 0 0 0 4.587 1.638l.347-1.967A12.152 12.152 0 0 1 10 26.409z" fill="currentColor"/><path d="M4.765 20.184l-1.878.683a13.976 13.976 0 0 0 2.44 4.182l1.532-1.285a11.973 11.973 0 0 1-2.094-3.58z" fill="currentColor"/><path d="M16 22a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 22z" fill="currentColor"/><path d="M15 8h2v11h-2z" fill="currentColor"/><path d="M30 16h-2a12 12 0 0 0-24 0H2a14 14 0 0 1 28 0z" fill="currentColor"/>', "hidden": true }, "status-resolved": { "body": '<path d="M21 28.414l-5-5.001L17.413 22L21 25.586L28.585 18L30 19.415l-9 8.999z" fill="currentColor"/><path d="M12 15.59L9.41 13L8 14.41l4 4l7-7L17.59 10L12 15.59z" fill="currentColor"/><path d="M11.82 25.802a11.992 11.992 0 1 1 13.982-9.621l-1.967-.362a10.001 10.001 0 1 0-11.654 8.016z" fill="currentColor"/>', "hidden": true }, "stay-inside": { "body": '<path fill="currentColor" d="M23 30h-2v-2a3.003 3.003 0 0 0-3-3h-4a3.003 3.003 0 0 0-3 3v2H9v-2a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zm-7-17a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/><path fill="currentColor" d="M30 30h-2V14.464L16 4.31L4 14.464V30H2V14a1 1 0 0 1 .354-.763l13-11a1 1 0 0 1 1.292 0l13 11A1 1 0 0 1 30 14Z"/>' }, "stem-leaf-plot": { "body": '<path fill="currentColor" d="M19 10a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm0 13a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm8 4a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm-8 13a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zM12 2h2v28h-2zM7 28a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm0-5a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1zm0-5a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm0-4a1 1 0 1 0 1 1a1.001 1.001 0 0 0-1-1z"/>' }, "stethoscope": { "body": '<path fill="currentColor" d="M24 2v2h2v6a4 4 0 0 1-8 0V4h2V2h-4v8a6.005 6.005 0 0 0 5 5.91V22a6 6 0 0 1-12 0v-6.142a4 4 0 1 0-2 0V22a8 8 0 0 0 16 0v-6.09A6.005 6.005 0 0 0 28 10V2ZM6 12a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2Z"/>' }, "stop": { "body": '<path fill="currentColor" d="M24 8v16H8V8h16m0-2H8a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Z"/>' }, "stop-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm6 18a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2Z"/>' }, "stop-filled-alt": { "body": '<path fill="currentColor" d="M24 6H8a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Z"/>' }, "stop-outline": { "body": '<path fill="currentColor" d="M16 4A12 12 0 1 1 4 16A12 12 0 0 1 16 4m0-2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Z"/><path fill="currentColor" d="M20 12v8h-8v-8h8m0-2h-8a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2Z"/>' }, "stop-outline-filled": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm6 18a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2Z"/><path fill="currentColor" d="M12 12h8v8h-8z"/>' }, "stop-sign": { "body": '<path fill="currentColor" d="M20.586 29h-9.172A1.986 1.986 0 0 1 10 28.414L3.586 22A1.986 1.986 0 0 1 3 20.586v-9.172A1.986 1.986 0 0 1 3.586 10L10 3.586A1.986 1.986 0 0 1 11.414 3h9.172A1.986 1.986 0 0 1 22 3.586L28.414 10A1.986 1.986 0 0 1 29 11.414v9.172A1.986 1.986 0 0 1 28.414 22L22 28.414a1.986 1.986 0 0 1-1.414.586ZM11.414 5L5 11.414v9.172L11.414 27h9.172L27 20.586v-9.172L20.586 5h-9.172Z"/>' }, "stop-sign-filled": { "body": '<path fill="currentColor" d="M20.586 29h-9.172A1.986 1.986 0 0 1 10 28.414L3.586 22A1.986 1.986 0 0 1 3 20.586v-9.172A1.986 1.986 0 0 1 3.586 10L10 3.586A1.986 1.986 0 0 1 11.414 3h9.172A1.986 1.986 0 0 1 22 3.586L28.414 10A1.986 1.986 0 0 1 29 11.414v9.172A1.986 1.986 0 0 1 28.414 22L22 28.414a1.986 1.986 0 0 1-1.414.586Z"/>' }, "storage-pool": { "body": '<path fill="currentColor" d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2ZM4 4v24h24V4Z"/><path fill="currentColor" d="M17.5 13A3.5 3.5 0 1 1 21 9.5a3.504 3.504 0 0 1-3.5 3.5zm0-5A1.5 1.5 0 1 0 19 9.5A1.502 1.502 0 0 0 17.5 8zm-3 18a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5zm0-5a1.5 1.5 0 1 0 1.5 1.5a1.502 1.502 0 0 0-1.5-1.5zm-5-3a3.5 3.5 0 1 1 3.5-3.5A3.504 3.504 0 0 1 9.5 18zm0-5a1.5 1.5 0 1 0 1.5 1.5A1.502 1.502 0 0 0 9.5 13zm13 8a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5zm0-5a1.5 1.5 0 1 0 1.5 1.5a1.502 1.502 0 0 0-1.5-1.5z"/>' }, "storage-request": { "body": '<path fill="currentColor" d="M4 21H2v3a2.006 2.006 0 0 0 2 2h3v-2H4zM4 8h3V6H4a2.006 2.006 0 0 0-2 2v3h2zm13-2h6v2h-6zM9 6h6v2H9zm8 18h6v2h-6zm11-9H4v-2H2v6h2v-2h24v2h2v-6h-2v2zm0 9h-3v2h3a2.006 2.006 0 0 0 2-2v-3h-2zm0-18h-3v2h3v3h2V8a2.006 2.006 0 0 0-2-2zM9 24h6v2H9z"/><circle cx="7" cy="12" r="1" fill="currentColor"/><circle cx="7" cy="20" r="1" fill="currentColor"/>' }, "store": { "body": '<path fill="currentColor" d="m30 10.68l-2-6A1 1 0 0 0 27 4H5a1 1 0 0 0-1 .68l-2 6A1.19 1.19 0 0 0 2 11v6a1 1 0 0 0 1 1h1v10h2V18h6v10h16V18h1a1 1 0 0 0 1-1v-6a1.19 1.19 0 0 0 0-.32ZM26 26H14v-8h12Zm2-10h-4v-4h-2v4h-5v-4h-2v4h-5v-4H8v4H4v-4.84L5.72 6h20.56L28 11.16Z"/>' }, "storm-tracker": { "body": '<path fill="currentColor" d="M16 2a1 1 0 0 0-.974.771l-1.722 7.322a10.065 10.065 0 1 0 8.603 8.603l7.322-1.722A1 1 0 0 0 30 16A14.016 14.016 0 0 0 16 2Zm-4.707 18.707A1 1 0 0 0 12 21a1.013 1.013 0 0 0 .229-.026l3.762-.886a3.996 3.996 0 1 1-4.08-4.08l-.885 3.763a1 1 0 0 0 .267.936Zm2.05-2.05l2.271-9.65a7.502 7.502 0 0 1 7.38 7.38ZM20 20a8 8 0 1 1-8-8a8.102 8.102 0 0 1 .844.047l-.464 1.972c-.127-.008-.253-.019-.38-.019a6 6 0 1 0 6 6c0-.127-.011-.253-.019-.38l1.972-.464A8.105 8.105 0 0 1 20 20Zm4.97-4.08a9.498 9.498 0 0 0-8.89-8.89l.706-3.005a12.02 12.02 0 0 1 11.189 11.189Z"/>' }, "strawberry": { "body": '<path fill="currentColor" d="M9 10h2v2H9zm0 4h2v2H9zm4-2h2v2h-2z"/><path fill="currentColor" d="M9 28a5.169 5.169 0 0 1-.744-.054A5.093 5.093 0 0 1 4 22.866V11.199a7.162 7.162 0 0 1 6.31-7.165a6.96 6.96 0 0 1 4.464 1.07l7.97 4.981a6.98 6.98 0 0 1-.69 12.19l-10.88 5.229A4.976 4.976 0 0 1 9 28zm2.002-22q-.248 0-.5.024A5.146 5.146 0 0 0 6 11.198v11.669a3.084 3.084 0 0 0 2.543 3.1a3.027 3.027 0 0 0 1.763-.265l10.883-5.23a4.98 4.98 0 0 0 .488-8.696l-7.972-4.982A4.969 4.969 0 0 0 11.002 6zM26 7h-4a4.005 4.005 0 0 1-4-4V2h2v1a2.002 2.002 0 0 0 2 2h4z"/>' }, "stress-breath-editor": { "body": '<path d="M20 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z" fill="currentColor"/><path d="M30 30h-2v-5a5 5 0 0 0-5-5h-6a5 5 0 0 0-5 5v5h-2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7z" fill="currentColor"/><path d="M11 8H5a3 3 0 0 1-3-3V3h2v2a1 1 0 0 0 1 1h6z" fill="currentColor"/><path d="M4 15H2v-2a3 3 0 0 1 3-3h6v2H5a1 1 0 0 0-1 1z" fill="currentColor"/>', "hidden": true }, "string-integer": { "body": '<path fill="currentColor" d="M26 12h-4v2h4v2h-3v2h3v2h-4v2h4a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-7 10h-6v-4a2.002 2.002 0 0 1 2-2h2v-2h-4v-2h4a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2h-2v2h4zM8 20v-8H6v1H4v2h2v5H4v2h6v-2H8z"/>' }, "string-text": { "body": '<path fill="currentColor" d="M29 22h-5a2.003 2.003 0 0 1-2-2v-6a2.002 2.002 0 0 1 2-2h5v2h-5v6h5zM18 12h-4V8h-2v14h6a2.003 2.003 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-4 8v-6h4v6zm-6-8H3v2h5v2H4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6v-8a2.002 2.002 0 0 0-2-2zm0 8H4v-2h4z"/>' }, "study-next": { "body": '<path d="M23.93 21L30 15l-6.07-6l-1.43 1.41L27.14 15l-4.64 4.59L23.93 21z" fill="currentColor"/><path d="M12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z" fill="currentColor"/><path d="M22 30h-2v-5a5 5 0 0 0-5-5H9a5 5 0 0 0-5 5v5H2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7z" fill="currentColor"/>', "hidden": true }, "study-previous": { "body": '<path d="M8.07 21L2 15l6.07-6l1.43 1.41L4.86 15l4.64 4.59L8.07 21z" fill="currentColor"/><path d="M20 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z" fill="currentColor"/><path d="M30 30h-2v-5a5 5 0 0 0-5-5h-6a5 5 0 0 0-5 5v5h-2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7z" fill="currentColor"/>', "hidden": true }, "study-read": { "body": '<path d="M21 29.414l-5-5.001L17.413 23L21 26.586L28.585 19L30 20.415l-9 8.999z" fill="currentColor"/><path d="M20 14v-2h-5v-2h3V8h-3V6h-2v2h-3v2h3v2H8v2h5v2H8v2h5v2h-3v2h5v-4h3v-2h-3v-2h5z" fill="currentColor"/><path d="M13 24H4V4h20v12h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h9z" fill="currentColor"/>', "hidden": true }, "study-skip": { "body": '<path d="M22 9h5.2A11 11 0 0 0 7 15H5a13 13 0 0 1 23-8.3V3h2v8h-8z" fill="currentColor"/><path d="M16 12a3 3 0 1 1-3 3a2.95 2.95 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z" fill="currentColor"/><path d="M23 30h-2v-3a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3v3H9v-3a5 5 0 0 1 5-5h4a5 5 0 0 1 5 5z" fill="currentColor"/>', "hidden": true }, "study-transfer": { "body": '<path d="M8.586 19.414L13.165 24l-4.579 4.586L10 30l6-6l-6-6l-1.414 1.414z" fill="currentColor"/><path d="M2.586 19.414L7.165 24l-4.579 4.586L4 30l6-6l-6-6l-1.414 1.414z" fill="currentColor"/><path d="M12 14v-2h5v-2h-3V8h3V6h2v2h3v2h-3v2h5v2h-5v2h5v2h-5v2h3v2h-5v-4h-3v-2h3v-2h-5z" fill="currentColor"/><path d="M19 24h9V4H8v12H6V4a2 2 0 0 1 2-2h20a2 2 0 0 1 2 2v20a2 2 0 0 1-2 2h-9z" fill="currentColor"/>', "hidden": true }, "study-unread": { "body": '<path d="M24 30a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4z" fill="currentColor"/><path d="M20 14v-2h-5v-2h3V8h-3V6h-2v2h-3v2h3v2H8v2h5v2H8v2h5v2h-3v2h7v-2h-2v-2h3v-2h-3v-2h5z" fill="currentColor"/><path d="M15 24H4V4h20v11h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h11z" fill="currentColor"/>', "hidden": true }, "study-view": { "body": '<path d="M28 20h-3v-2h3V4H14v3h-2V4a2.002 2.002 0 0 1 2-2h14a2.002 2.002 0 0 1 2 2v14a2.003 2.003 0 0 1-2 2z" fill="currentColor"/><path d="M17 22v-2h-4v-2h3v-2h-3v-2h-2v2H8v2h3v2H7v2h4v2H8v2h8v-2h-3v-2h4z" fill="currentColor"/><path d="M20 30H4a2.002 2.002 0 0 1-2-2V12a2.002 2.002 0 0 1 2-2h16a2.002 2.002 0 0 1 2 2v16a2.002 2.002 0 0 1-2 2zM4 12v16h16V12z" fill="currentColor"/>', "hidden": true }, "sub-volume": { "body": '<path d="M29.474 19.12L23.681 16l5.793-3.12a1 1 0 0 0 0-1.76l-13-7a.998.998 0 0 0-.948 0l-13 7a1 1 0 0 0 0 1.76L8.319 16l-5.793 3.12a1 1 0 0 0 0 1.76l13 7a1 1 0 0 0 .948 0l13-7a1 1 0 0 0 0-1.76zM16 6.136L26.89 12L16 17.864L5.11 12zm0 19.728L5.11 20l5.319-2.864l5.097 2.744a1 1 0 0 0 .948 0l5.097-2.745L26.891 20z" fill="currentColor"/>', "hidden": true }, "subflow": { "body": '<path fill="currentColor" d="M16 30A14.016 14.016 0 0 1 2 16h2a12.002 12.002 0 0 0 18.46 10.114l1.08 1.684A13.951 13.951 0 0 1 16 30Z"/><path fill="currentColor" d="m26 17l-1.414 1.414L26.172 20H15.816a2.987 2.987 0 0 0-.275-.576l4.481-5.601A2.968 2.968 0 0 0 21 14a3 3 0 1 0-2.816-4h-4.368a2.982 2.982 0 0 0-5.632 0H2v2h6.184a2.982 2.982 0 0 0 5.632 0h4.368a2.987 2.987 0 0 0 .274.576l-4.48 5.601A2.968 2.968 0 0 0 13 18a3 3 0 1 0 2.816 4h10.356l-1.586 1.586L26 25l4-4Zm-5-7a1 1 0 1 1-1 1a1 1 0 0 1 1-1Zm-10 2a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm2 10a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M30 16h-2A12.002 12.002 0 0 0 9.54 5.886L8.46 4.202A14.002 14.002 0 0 1 30 16Z"/>' }, "subflow-local": { "body": '<path fill="currentColor" d="M15.347 29.985a13.928 13.928 0 0 1-4.205-.852l.694-1.875a11.929 11.929 0 0 0 3.603.73zm4.265-.456l-.514-1.932a11.915 11.915 0 0 0 3.363-1.483l1.078 1.685a13.915 13.915 0 0 1-3.927 1.73zM7.395 27.044a14.063 14.063 0 0 1-2.94-3.122l1.648-1.133a12.052 12.052 0 0 0 2.522 2.678zm-4.798-6.99A14.051 14.051 0 0 1 2 16h2a12.041 12.041 0 0 0 .512 3.476zM26 17l-1.414 1.414L26.172 20H15.816a2.987 2.987 0 0 0-.275-.576l4.481-5.601A2.968 2.968 0 0 0 21 14a3 3 0 1 0-2.816-4h-4.368a2.982 2.982 0 0 0-5.632 0H2v2h6.184a2.982 2.982 0 0 0 5.632 0h4.368a2.987 2.987 0 0 0 .274.576l-4.48 5.601A2.968 2.968 0 0 0 13 18a3 3 0 1 0 2.816 4h10.356l-1.586 1.586L26 25l4-4zm-5-7a1 1 0 1 1-1 1a1 1 0 0 1 1-1zm-10 2a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm2 10a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm15-6a12.041 12.041 0 0 0-.512-3.476l1.915-.578A14.055 14.055 0 0 1 30 16zm-2.104-6.789a12.052 12.052 0 0 0-2.522-2.678l1.23-1.577a14.063 14.063 0 0 1 2.94 3.122zM9.54 5.886L8.461 4.201a13.915 13.915 0 0 1 3.927-1.73l.514 1.932A11.915 11.915 0 0 0 9.54 5.886zm10.625-1.144a11.929 11.929 0 0 0-3.603-.73l.092-1.997a13.928 13.928 0 0 1 4.205.851z"/>' }, "subnet-acl-rules": { "body": '<path fill="currentColor" d="M18 14h12v2H18zm0 5h8v2h-8zm0-10h12v2H18z"/><path fill="currentColor" d="M22 24v4H6V16h8v-2h-4V8a4 4 0 0 1 7.668-1.6l1.832-.8A6.001 6.001 0 0 0 8 8v6H6a2.002 2.002 0 0 0-2 2v12a2.002 2.002 0 0 0 2 2h16a2.002 2.002 0 0 0 2-2v-4Z"/>' }, "subtract": { "body": '<path fill="currentColor" d="M8 15h16v2H8z"/>' }, "subtract-alt": { "body": '<path fill="currentColor" d="M16 4c6.6 0 12 5.4 12 12s-5.4 12-12 12S4 22.6 4 16S9.4 4 16 4m0-2C8.3 2 2 8.3 2 16s6.3 14 14 14s14-6.3 14-14S23.7 2 16 2z"/><path fill="currentColor" d="M8 15h16v2H8z"/>' }, "summary-kpi": { "body": '<path fill="currentColor" d="M7.667 27.503L2 22.448l1.331-1.492l5.641 5.031l7.69-7.445a1.928 1.928 0 0 1 2.674-.008l3.624 3.464l5.58-5.973L30 17.39l-5.581 5.975a1.996 1.996 0 0 1-2.838.08l-3.577-3.419l-7.666 7.42a1.963 1.963 0 0 1-2.671.056zM30 11h-4l2-3l2 3zm-8-7h-4v2h4v2h-3v2h3v2h-4v2h4a2.003 2.003 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2zm-6 10h-6v-4a2.002 2.002 0 0 1 2-2h2V6h-4V4h4a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2h-2v2h4zM6 12V4H4v1H2v2h2v5H2v2h6v-2H6z"/>' }, "summary-kpi-mirror": { "body": '<path fill="currentColor" d="m24.3 27.5l5.7-5.1l-1.3-1.4l-5.7 5l-7.7-7.4c-.7-.7-1.9-.7-2.7 0L9 22l-5.6-6L2 17.4l5.6 6c.8.8 2 .8 2.8.1L14 20l7.7 7.4c.7.8 1.9.8 2.6.1zM28 12V4h-2v1h-2v2h2v5h-2v2h6v-2zm-6 2h-6v-4c0-1.1.9-2 2-2h2V6h-4V4h4c1.1 0 2 .9 2 2v2c0 1.1-.9 2-2 2h-2v2h4v2zM12 4H8v2h4v2H9v2h3v2H8v2h4c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-6 7H2l2-3z"/>' }, "sun": { "body": '<path fill="currentColor" d="M16 12.005a4 4 0 1 1-4 4a4.005 4.005 0 0 1 4-4m0-2a6 6 0 1 0 6 6a6 6 0 0 0-6-6ZM5.394 6.813L6.81 5.399l3.505 3.506L8.9 10.319zM2 15.005h5v2H2zm3.394 10.193L8.9 21.692l1.414 1.414l-3.505 3.506zM15 25.005h2v5h-2zm6.687-1.9l1.414-1.414l3.506 3.506l-1.414 1.414zm3.313-8.1h5v2h-5zm-3.313-6.101l3.506-3.506l1.414 1.414l-3.506 3.506zM15 2.005h2v5h-2z"/>' }, "sunrise": { "body": '<path fill="currentColor" d="M2 27h27.998v2H2zm14-7a4.005 4.005 0 0 1 4 4h2a6 6 0 0 0-12 0h2a4.005 4.005 0 0 1 4-4zm9 2h5v2h-5zm-3.313-5.1l3.506-3.507l1.414 1.414l-3.506 3.506zM16 4l-5 5l1.41 1.41L15 7.83V15h2V7.83l2.59 2.58L21 9l-5-5zM5.393 14.807l1.414-1.414l3.506 3.506L8.9 18.313zM2 22h5v2H2z"/>' }, "sunset": { "body": '<path fill="currentColor" d="M2 27.005h27.998v2H2zm14-7a4.005 4.005 0 0 1 4 4h2a6 6 0 0 0-12 0h2a4.005 4.005 0 0 1 4-4Zm9 2h5v2h-5zm-3.313-5.101l3.506-3.506l1.414 1.414l-3.506 3.506zM19.59 9.595L17 12.175v-8.17h-2v8.17l-2.59-2.58l-1.41 1.41l5 5l5-5l-1.41-1.41zM5.394 14.812l1.414-1.414l3.506 3.506l-1.415 1.414zM2 22.005h5v2H2z"/>' }, "support-vector-machine": { "body": '<circle cx="26" cy="18" r="4" fill="currentColor"/><circle cx="18" cy="26" r="4" fill="currentColor"/><path fill="currentColor" d="M2 28.586L28.586 2L30 3.414L3.414 30zM14 10c-2.206 0-4-1.794-4-4s1.794-4 4-4s4 1.794 4 4s-1.794 4-4 4zm0-6c-1.103 0-2 .897-2 2s.897 2 2 2s2-.897 2-2s-.897-2-2-2zM6 18c-2.206 0-4-1.794-4-4s1.794-4 4-4s4 1.794 4 4s-1.794 4-4 4zm0-6c-1.103 0-2 .897-2 2s.897 2 2 2s2-.897 2-2s-.897-2-2-2z"/>' }, "svg": { "body": '<path fill="currentColor" d="M30 23h-6a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h6v2h-6v10h4v-4h-2v-2h4zM18 9l-2 13l-2-13h-2l2.52 14h2.96L20 9h-2zM8 23H2v-2h6v-4H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h6v2H4v4h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2z"/>' }, "swim": { "body": '<path fill="currentColor" d="M30 26h-2a4.932 4.932 0 0 1-4-1.987a5.02 5.02 0 0 1-8 0a5.02 5.02 0 0 1-8 0A4.932 4.932 0 0 1 4 26H2v-2h2a3.44 3.44 0 0 0 3.053-2.321A.971.971 0 0 1 8 21a1.007 1.007 0 0 1 .949.684A3.438 3.438 0 0 0 12 24a3.44 3.44 0 0 0 3.053-2.321A.99.99 0 0 1 16 21a1.007 1.007 0 0 1 .949.684A3.438 3.438 0 0 0 20 24a3.44 3.44 0 0 0 3.053-2.321a1 1 0 0 1 1.896.005A3.438 3.438 0 0 0 28 24h2zm-7-8.414l-8.707-8.707A2.98 2.98 0 0 0 12.171 8H4v2h8.171a.993.993 0 0 1 .708.293L15.586 13L10 18.586L11.414 20L17 14.414L21.586 19zM20 10a4 4 0 1 1 4 4a4.004 4.004 0 0 1-4-4zm2 0a2 2 0 1 0 2-2a2.002 2.002 0 0 0-2 2z"/>' }, "switch-layer-2": { "body": '<path fill="currentColor" d="M16 26v-2H5.83l2.58-2.59L7 20l-5 5l5 5l1.41-1.41L5.83 26H16zm0-12v-2H5.83l2.58-2.59L7 8l-5 5l5 5l1.41-1.41L5.83 14H16zm0-8v2h10.17l-2.58 2.59L25 12l5-5l-5-5l-1.41 1.41L26.17 6H16zm0 12v2h10.17l-2.58 2.59L25 24l5-5l-5-5l-1.41 1.41L26.17 18H16z"/>' }, "switch-layer-3": { "body": '<path fill="currentColor" d="M22 4v2h2.586l-5 5L21 12.414l5-5V10h2V4h-6zM10 4v2H7.414l5 5L11 12.414l-5-5V10H4V4h6zm10 1l-4-4l-4 4l1.414 1.414L15 4.829V11h2V4.829l1.586 1.585L20 5zm2 23v-2h2.586l-5-5L21 19.586l5 5V22h2v6h-6zm-12 0v-2H7.414l5-5L11 19.586l-5 5V22H4v6h6zm10-1l-4 4l-4-4l1.414-1.414L15 27.171V21h2v6.171l1.586-1.585L20 27zM5 12l-4 4l4 4l1.414-1.414L4.829 17H11v-2H4.829l1.585-1.586L5 12zm22 0l4 4l-4 4l-1.414-1.414L27.171 17H21v-2h6.171l-1.585-1.586L27 12z"/>' }, "switcher": { "body": '<path fill="currentColor" d="M14 4h4v4h-4zM4 4h4v4H4zm20 0h4v4h-4zM14 14h4v4h-4zM4 14h4v4H4zm20 0h4v4h-4zM14 24h4v4h-4zM4 24h4v4H4zm20 0h4v4h-4z"/>' }, "sys-provision": { "body": '<path fill="currentColor" d="M21 20v10l9-5l-9-5z"/><circle cx="14" cy="14" r="2" fill="currentColor"/><path fill="currentColor" d="M14 20a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4Z"/><path fill="currentColor" d="M25.951 12.91h-.006A12.05 12.05 0 1 0 17 25.605v-2.066a9.981 9.981 0 1 1 6.623-6.81l1.925.544A12.034 12.034 0 0 0 26 14q0-.55-.049-1.09Z"/>' }, "t": { "body": '<path d="M12 11h3v12h2V11h3V9h-8v2z" fill="currentColor"/>', "hidden": true }, "t-alt": { "body": '<path d="M8 11h3v12h2V11h3V9H8v2z" fill="currentColor"/><path d="M24 9h-2V7h-2v2h-2v2h2v6l1 1l1-1v-6h2V9z" fill="currentColor"/>', "hidden": true }, "table": { "body": '<path fill="currentColor" d="M29 5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h22a2 2 0 0 0 2-2Zm-2 0v4H5V5Zm0 22H5v-4h22Zm0-6H5v-4h22Zm0-6H5v-4h22Z"/>' }, "table-alias": { "body": '<path fill="currentColor" d="M12 29H5a2.002 2.002 0 0 1-2-2v-7a2.002 2.002 0 0 1 2-2h7a2.002 2.002 0 0 1 2 2v7a2.002 2.002 0 0 1-2 2Zm-7-9v7h7v-7Z"/><path fill="currentColor" d="M27 3H5a2 2 0 0 0-2 2v10h2v-4h10v4h2v-4h10v7H17v2h10v7H17v2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2Zm0 6H5V5h22Z"/>' }, "table-built": { "body": '<path fill="currentColor" d="M28 8h-4V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v18a2.002 2.002 0 0 0 2 2h4v4a2.002 2.002 0 0 0 2 2h18a2.002 2.002 0 0 0 2-2V10a2.002 2.002 0 0 0-2-2Zm-6 14h-8v-5h8Zm0-7h-8v-5h8Zm-10 0H4v-5h8ZM22 4v4H4V4ZM4 22v-5h8v5Zm24 6H10v-4h12a2.002 2.002 0 0 0 2-2V10h4Z"/>' }, "table-of-contents": { "body": '<path fill="currentColor" d="M4 6h18v2H4zm0 6h18v2H4zm0 6h18v2H4zm0 6h18v2H4zM26 6h2v2h-2zm0 6h2v2h-2zm0 6h2v2h-2zm0 6h2v2h-2z"/>' }, "table-shortcut": { "body": '<path fill="currentColor" d="M5 18v2h5.586L3 27.586L4.414 29L12 21.414V27h2v-9H5z"/><path fill="currentColor" d="M27 3H5a2 2 0 0 0-2 2v10h2v-4h10v4h2v-4h10v7H17v2h10v7H17v2h10a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2Zm0 6H5V5h22Z"/>' }, "table-split": { "body": '<path fill="currentColor" d="M27 3H5a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h22a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2Zm0 2v4H5V5Zm-10 6h10v7H17Zm-2 7H5v-7h10ZM5 20h10v7H5Zm12 7v-7h10v7Z"/>' }, "tablet": { "body": '<path fill="currentColor" d="M19 24v2h-6v-2z"/><path fill="currentColor" d="M25 30H7a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h18a2.002 2.002 0 0 1 2 2v24a2.003 2.003 0 0 1-2 2ZM7 4v24h18V4Z"/>' }, "tablet-landscape": { "body": '<path fill="currentColor" d="M24 13h2v6h-2z"/><path fill="currentColor" d="M30 7v18a2.002 2.002 0 0 1-2 2H4a2.002 2.002 0 0 1-2-2V7a2.002 2.002 0 0 1 2-2h24a2.003 2.003 0 0 1 2 2ZM4 25h24V7H4Z"/>' }, "tag": { "body": '<path fill="currentColor" d="M10 14a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm0-6a2 2 0 1 0 1.998 2.004A2.002 2.002 0 0 0 10 8Z"/><path fill="currentColor" d="M16.644 29.415L2.586 15.354A2 2 0 0 1 2 13.941V4a2 2 0 0 1 2-2h9.941a2 2 0 0 1 1.414.586l14.06 14.058a2 2 0 0 1 0 2.828l-9.943 9.943a2 2 0 0 1-2.829 0ZM4 4v9.942L18.058 28L28 18.058L13.942 4Z"/>' }, "tag-edit": { "body": '<path fill="currentColor" d="m29.707 7.293l-3-3a1 1 0 0 0-1.414 0L16 13.586V18h4.414l9.293-9.293a1 1 0 0 0 0-1.414zM19.586 16H18v-1.586l5-5L24.586 11zM26 9.586L24.414 8L26 6.414L27.586 8zM10 14a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 1.998 2.004A2.002 2.002 0 0 0 10 8z"/><path fill="currentColor" d="m27.006 14.235l-1.414 1.414L28 18.058L18.058 28L4 13.941V4h9.942l4.406 4.407l1.415-1.415l-4.407-4.406A2 2 0 0 0 13.94 2H4a2 2 0 0 0-2 2v9.941a2 2 0 0 0 .586 1.414l14.058 14.06a2.001 2.001 0 0 0 2.828 0l9.943-9.943a2.001 2.001 0 0 0 0-2.828Z"/>' }, "tag-export": { "body": '<path fill="currentColor" d="m31 18l-6-6l-1.414 1.414L27.172 17H17v2h10.172l-3.586 3.586L25 24l6-6zm-21-4a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 1.998 2.004A2.002 2.002 0 0 0 10 8z"/><path fill="currentColor" d="m21.06 25l-3.002 3L4 13.941V4h9.942l7 7l1.414-1.414l-7.001-7A2 2 0 0 0 13.941 2H4a2 2 0 0 0-2 2v9.941a2 2 0 0 0 .586 1.414l14.058 14.06a2.001 2.001 0 0 0 2.828 0l3.002-3Z"/>' }, "tag-group": { "body": '<circle cx="10" cy="14" r="2" fill="currentColor"/><path fill="currentColor" d="M16 30a1 1 0 0 1-.71-.29L4.59 19A2 2 0 0 1 4 17.59V10a2 2 0 0 1 2-2h7.59a2 2 0 0 1 1.41.59l10.71 10.7a1 1 0 0 1 0 1.42l-9 9A1 1 0 0 1 16 30ZM6 10v7.59l10 10L23.59 20l-10-10Z"/><path fill="currentColor" d="M27.71 13.29L17 2.59A2 2 0 0 0 15.59 2H8a2 2 0 0 0-2 2v2h2V4h7.59l10 10l-1.3 1.29l1.42 1.42l2-2a1 1 0 0 0 0-1.42Z"/>' }, "tag-import": { "body": '<path fill="currentColor" d="m16 18l6-6l1.414 1.414L19.828 17H30v2H19.828l3.586 3.586L22 24l-6-6zm-6-4a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 1.998 2.004A2.002 2.002 0 0 0 10 8z"/><path fill="currentColor" d="m20.059 26l-2.001 2L4 13.941V4h9.942l6 6l1.414-1.414l-6.001-6A2 2 0 0 0 13.941 2H4a2 2 0 0 0-2 2v9.941a2 2 0 0 0 .586 1.414l14.058 14.06a2.001 2.001 0 0 0 2.828 0l2-2.001Z"/>' }, "tag-none": { "body": '<path fill="currentColor" d="M23.092 10.322L30 3.414L28.586 2L2 28.586L3.414 30l6.908-6.908l6.322 6.323a2.001 2.001 0 0 0 2.828 0l9.943-9.943a2.001 2.001 0 0 0 0-2.828zM18.058 28l-6.322-6.322l9.942-9.942L28 18.058zM10 14a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4zm0-6a2 2 0 1 0 1.998 2.004A2.002 2.002 0 0 0 10 8z"/><path fill="currentColor" d="m7.493 20.263l1.414-1.414L4 13.94V4h9.942l4.907 4.907l1.414-1.414l-4.908-4.907A2 2 0 0 0 13.941 2H4a2 2 0 0 0-2 2v9.941a2 2 0 0 0 .586 1.414Z"/>' }, "tank": { "body": '<path fill="currentColor" d="M30 13v-2H18.618l-.723-1.447A1 1 0 0 0 17 9H9a1 1 0 0 0-1 1v5H4v2h18.638l3.6 3H3a1 1 0 0 0-1 1v2a5.006 5.006 0 0 0 5 5h18a5.006 5.006 0 0 0 5-5v-2a1.001 1.001 0 0 0-.36-.769l-6-5A1.002 1.002 0 0 0 23 15h-2.382l-1-2Zm-2 10a3.003 3.003 0 0 1-3 3H7a3.003 3.003 0 0 1-3-3v-1h24Zm-18-8v-4h6.382l2 4Z"/>' }, "task": { "body": '<path fill="currentColor" d="m14 20.18l-3.59-3.59L9 18l5 5l9-9l-1.41-1.42l-7.59 7.6z"/><path fill="currentColor" d="M25 5h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2ZM12 4h8v4h-8Zm13 24H7V7h3v3h12V7h3Z"/>' }, "task-add": { "body": '<path fill="currentColor" d="M31 24h-4v-4h-2v4h-4v2h4v4h2v-4h4v-2z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h10v-2H7V7h3v3h12V7h3v9h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-approved": { "body": '<path fill="currentColor" d="M30 20a6 6 0 1 0-10 4.46V32l4-1.894L28 32v-7.54A5.98 5.98 0 0 0 30 20Zm-4 8.84l-2-.947l-2 .947v-3.19a5.888 5.888 0 0 0 4 0ZM24 24a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h9v-2H7V7h3v3h12V7h3v5h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-asset-view": { "body": '<path fill="currentColor" d="M22.5 26a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5Zm0-5a1.5 1.5 0 1 0 1.5 1.5a1.502 1.502 0 0 0-1.5-1.5Z"/><path fill="currentColor" d="M22.5 31a8.5 8.5 0 1 1 8.5-8.5a8.51 8.51 0 0 1-8.5 8.5Zm0-15a6.5 6.5 0 1 0 6.5 6.5a6.507 6.507 0 0 0-6.5-6.5Z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h5v-2H7V7h3v3h12V7h3v5h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-complete": { "body": '<path fill="currentColor" d="m22 27.18l-2.59-2.59L18 26l4 4l8-8l-1.41-1.41L22 27.18z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h9v-2H7V7h3v3h12V7h3v11h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-location": { "body": '<circle cx="24" cy="21" r="2" fill="currentColor"/><path fill="currentColor" d="m24 31l-4.779-6.402A5.935 5.935 0 0 1 18 21a6 6 0 0 1 12 0a5.94 5.94 0 0 1-1.225 3.603Zm0-14a4.005 4.005 0 0 0-4 4a3.957 3.957 0 0 0 .82 2.397l3.18 4.26l3.176-4.255A3.963 3.963 0 0 0 28 21a4.005 4.005 0 0 0-4-4Z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h9v-2H7V7h3v3h12V7h3v5h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-remove": { "body": '<path fill="currentColor" d="M26.41 25L30 21.41L28.59 20L25 23.59L21.41 20L20 21.41L23.59 25L20 28.59L21.41 30L25 26.41L28.59 30L30 28.59L26.41 25z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h9v-2H7V7h3v3h12V7h3v10h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-settings": { "body": '<path fill="currentColor" d="M30 24v-2h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 24 18.101V16h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 18.101 22H16v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V30h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 27.899 24Zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h7v-2H7V7h3v3h12V7h3v6h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-star": { "body": '<path fill="currentColor" d="m23 17l2.23 4.32L30 22l-3.5 3.167L28 30l-5-2.792L18 30l1.5-4.833L16 22l4.9-.68L23 17z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h7v-2H7V7h3v3h12V7h3v7h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-tools": { "body": '<path fill="currentColor" d="M28.5 32a3.476 3.476 0 0 1-2.475-1.025l-4.128-4.128a6.496 6.496 0 0 1-7.348-8.956l.588-1.34l4.156 4.156a1.023 1.023 0 0 0 1.413 0a.999.999 0 0 0 .001-1.414l-4.156-4.157l1.34-.588a6.497 6.497 0 0 1 8.956 7.349l4.128 4.128A3.5 3.5 0 0 1 28.5 32Zm-6.03-7.409l4.97 4.97a1.535 1.535 0 0 0 2.12 0a1.498 1.498 0 0 0 0-2.121l-4.969-4.97l.188-.583A4.496 4.496 0 0 0 20.5 16q-.126 0-.25.007l1.872 1.872a3 3 0 0 1 0 4.242a3.072 3.072 0 0 1-4.243 0l-1.872-1.872Q16 20.374 16 20.5a4.497 4.497 0 0 0 5.888 4.28Z"/><path fill="currentColor" d="M25 5h-3V4a2.006 2.006 0 0 0-2-2h-8a2.006 2.006 0 0 0-2 2v1H7a2.006 2.006 0 0 0-2 2v21a2.006 2.006 0 0 0 2 2h7v-2H7V7h3v3h12V7h3v5h2V7a2.006 2.006 0 0 0-2-2Zm-5 3h-8V4h8Z"/>' }, "task-view": { "body": '<circle cx="22" cy="24" r="2" fill="currentColor"/><path fill="none" d="M22 28a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.003 2.003 0 0 0-2-2Z"/><path fill="currentColor" d="M29.777 23.479A8.64 8.64 0 0 0 22 18a8.64 8.64 0 0 0-7.777 5.479L14 24l.223.521A8.64 8.64 0 0 0 22 30a8.64 8.64 0 0 0 7.777-5.479L30 24ZM22 28a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="M12 28H7V7h3v3h12V7h3v9h2V7a2 2 0 0 0-2-2h-3V4a2 2 0 0 0-2-2h-8a2 2 0 0 0-2 2v1H7a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h5Zm0-24h8v4h-8Z"/>' }, "taste": { "body": '<path fill="currentColor" d="M4 4v2h4v8a8 8 0 0 0 16 0V6h4V4zm18 10a6 6 0 0 1-12 0V6h5v8h2V6h5zM11 26h2v2h-2zm-4-2h2v2H7zm8 0h2v2h-2zm4 2h2v2h-2zm4-2h2v2h-2z"/>' }, "taxi": { "body": '<path fill="currentColor" d="m29.39 16.08l-6.69-2.87l-2.54-4.34l-.08-.12A2 2 0 0 0 18.52 8h-8a2 2 0 0 0-1.67.89L5.46 14H3a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1h2.14a4 4 0 0 0 7.72 0h6.28a4 4 0 0 0 7.72 0H29a1 1 0 0 0 1-1v-7a1 1 0 0 0-.61-.92ZM9 26a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm14 0a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm5-3h-1.14a4 4 0 0 0-7.72 0h-6.28a4 4 0 0 0-7.72 0H4v-7h2a1 1 0 0 0 .83-.45L10.54 10h8l2.63 4.5a1 1 0 0 0 .47.42L28 17.66Z"/>' }, "tcp-ip-service": { "body": '<path fill="currentColor" d="M16 28h14v2H16zm11-2h-8c-1.103 0-2-.897-2-2v-5c0-1.103.897-2 2-2h8c1.103 0 2 .897 2 2v5c0 1.103-.897 2-2 2zm-8-7v5h8v-5h-8zm-4 4h-5c-1.103 0-2-.897-2-2v-4h2v4h5v2zM2 13h14v2H2zm11-2H5c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h8c1.103 0 2 .897 2 2v5c0 1.103-.897 2-2 2zM5 4v5h8V4H5z"/>' }, "temperature": { "body": '<path fill="currentColor" d="M13 17.26V6a4 4 0 0 0-8 0v11.26a7 7 0 1 0 8 0zM9 4a2 2 0 0 1 2 2v7H7V6a2 2 0 0 1 2-2zm0 24a5 5 0 0 1-2.5-9.33l.5-.28V15h4v3.39l.5.28A5 5 0 0 1 9 28zM20 4h10v2H20zm0 6h7v2h-7zm0 6h10v2H20zm0 6h7v2h-7z"/>' }, "temperature-celsius": { "body": '<path fill="currentColor" d="M30 18h-6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h6v2h-6v10h6Z"/><circle cx="18" cy="4" r="2" fill="currentColor"/><path fill="currentColor" d="M10 20.184V12H8v8.184a3 3 0 1 0 2 0Z"/><path fill="currentColor" d="M9 30a6.993 6.993 0 0 1-5-11.89V7a5 5 0 0 1 10 0v11.11A6.993 6.993 0 0 1 9 30ZM9 4a3.003 3.003 0 0 0-3 3v11.983l-.332.299a5 5 0 1 0 6.664 0L12 18.983V7a3.003 3.003 0 0 0-3-3Z"/>' }, "temperature-celsius-alt": { "body": '<path fill="currentColor" d="M26 27h-9a2.002 2.002 0 0 1-2-2V11a2.002 2.002 0 0 1 2-2h9v2h-9v14h9zM8 13a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2z"/>' }, "temperature-fahrenheit": { "body": '<path fill="currentColor" d="M30 6V4h-8v14h2v-6h5v-2h-5V6h6z"/><circle cx="18" cy="4" r="2" fill="currentColor"/><path fill="currentColor" d="M10 20.184V12H8v8.184a3 3 0 1 0 2 0Z"/><path fill="currentColor" d="M9 30a6.993 6.993 0 0 1-5-11.89V7a5 5 0 0 1 10 0v11.11A6.993 6.993 0 0 1 9 30ZM9 4a3.003 3.003 0 0 0-3 3v11.983l-.332.299a5 5 0 1 0 6.664 0L12 18.983V7a3.003 3.003 0 0 0-3-3Z"/>' }, "temperature-fahrenheit-alt": { "body": '<path fill="currentColor" d="M26 11V9H15v18h2v-8h8v-2h-8v-6h9zM8 13a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2z"/>' }, "temperature-feels-like": { "body": '<path fill="currentColor" d="M26 30h-4a2.006 2.006 0 0 1-2-2v-7a2.006 2.006 0 0 1-2-2v-6a2.946 2.946 0 0 1 3-3h6a2.946 2.946 0 0 1 3 3v6a2.006 2.006 0 0 1-2 2v7a2.006 2.006 0 0 1-2 2zm-5-18a.945.945 0 0 0-1 1v6h2v9h4v-9h2v-6a.945.945 0 0 0-1-1zm3-3a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2zM10 20.184V12H8v8.184a3 3 0 1 0 2 0z"/><path fill="currentColor" d="M9 30a6.993 6.993 0 0 1-5-11.89V7a5 5 0 0 1 10 0v11.11A6.993 6.993 0 0 1 9 30ZM9 4a3.003 3.003 0 0 0-3 3v11.983l-.332.299a5 5 0 1 0 6.664 0L12 18.983V7a3.003 3.003 0 0 0-3-3Z"/>' }, "temperature-frigid": { "body": '<path fill="currentColor" d="M27.167 16.89L21.72 13l5.447-3.891l2.517.839l.632-1.897L28 7.279V5h-2v2.485l-5 3.572v-5.69l2.555-1.703L22.445 2L20 3.63L17.555 2l-1.11 1.664L19 5.367v5.69l-3-2.143v2.458L18.28 13L16 14.628v2.458l3-2.143v6.76L22.445 24l1.11-1.664L21 20.633v-5.69l5 3.572V21h2v-2.279l2.316-.773l-.632-1.897l-2.517.839zM12 23a3 3 0 0 1-6 0z"/><path fill="currentColor" d="M9 30a6.993 6.993 0 0 1-5-11.89V7a5 5 0 0 1 10 0v11.11A6.993 6.993 0 0 1 9 30ZM9 4a3.003 3.003 0 0 0-3 3v11.983l-.332.299a5 5 0 1 0 6.664 0L12 18.983V7a3.003 3.003 0 0 0-3-3Z"/>' }, "temperature-hot": { "body": '<path fill="currentColor" d="M26 13h4v2h-4zm-3-5.414l2.828-2.828l1.414 1.414L24.414 9zm0 12.828L24.414 19l2.828 2.828l-1.414 1.414zM17 2h2v4h-2zm1 6a6.037 6.037 0 0 0-1 .09v2.052A3.957 3.957 0 0 1 18 10a4 4 0 0 1 0 8v2a6 6 0 0 0 0-12zm-8 12.184V7H8v13.184a3 3 0 1 0 2 0z"/><path fill="currentColor" d="M9 30a6.993 6.993 0 0 1-5-11.89V7a5 5 0 0 1 10 0v11.11A6.993 6.993 0 0 1 9 30ZM9 4a3.003 3.003 0 0 0-3 3v11.983l-.332.299a5 5 0 1 0 6.664 0L12 18.983V7a3.003 3.003 0 0 0-3-3Z"/>' }, "temperature-inversion": { "body": '<path fill="currentColor" d="M30 8h-6v6h2v-2.459A5.939 5.939 0 0 1 28 16a6.004 6.004 0 0 1-5.095 5.924A7.027 7.027 0 0 0 20 17.262V6a4 4 0 0 0-8 0v11.262a6.996 6.996 0 1 0 10.93 6.68A7.98 7.98 0 0 0 27.264 10H30zM14 6a2 2 0 0 1 4 0v7h-4zm2 22a4.997 4.997 0 0 1-2.499-9.325l.499-.29V15h4v3.386l.499.289A4.997 4.997 0 0 1 16 28zM2 10a8.04 8.04 0 0 0 2.735 6H2v2h6v-6H6v2.46A5.94 5.94 0 0 1 4 10a6.007 6.007 0 0 1 6-6V2a8.01 8.01 0 0 0-8 8z"/>' }, "temperature-max": { "body": '<path fill="currentColor" d="M20 10h7v2h-7zm0 6h10v2H20zm0 6h7v2h-7zm-10-1.816V7H8v13.184a3 3 0 1 0 2 0z"/><path fill="currentColor" d="M30 4H12.974A4.983 4.983 0 0 0 4 7v11.11a7 7 0 1 0 10 0V7a5.002 5.002 0 0 0-.101-1H30ZM9 28a4.993 4.993 0 0 1-3.332-8.718L6 18.983V7a3 3 0 0 1 6 0v11.983l.332.299A4.993 4.993 0 0 1 9 28Z"/>' }, "temperature-min": { "body": '<path fill="currentColor" d="M20 4h7v2h-7zm0 6h10v2H20zm0 6h7v2h-7zm-8 7a3 3 0 0 1-6 0z"/><path fill="currentColor" d="M30 22H15.92A7.01 7.01 0 0 0 14 18.11V7A5 5 0 0 0 4 7v11.11A6.995 6.995 0 1 0 15.92 24H30ZM9 28a4.993 4.993 0 0 1-3.332-8.718L6 18.983V7a3 3 0 0 1 6 0v11.983l.332.299A4.993 4.993 0 0 1 9 28Z"/>' }, "temperature-water": { "body": '<path fill="currentColor" d="M14 9a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 30 9V7a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 26 4a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 22 7a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 18 4a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 14 7h-1V6a4 4 0 0 0-8 0v11.262a7.013 7.013 0 1 0 8.873.738H14a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 30 18v-2a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 26 13a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 22 16a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 18 13a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 14 16h-1V9ZM7 6a2 2 0 0 1 4 0v6H7Zm2 22a4.997 4.997 0 0 1-2.499-9.325l.499-.29V14h4v4.386l.499.289A4.997 4.997 0 0 1 9 28Z"/>' }, "template": { "body": '<path fill="currentColor" d="M26 6v4H6V6h20m0-2H6a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zM10 16v10H6V16h4m0-2H6a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2zm16 2v10H16V16h10m0-2H16a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2z"/>' }, "tennis": { "body": '<rect width="4" height="4" x="20" y="2" fill="currentColor" rx="2"/><path fill="currentColor" d="M11 16a1 1 0 0 1-.707-1.707l7-7a1 1 0 1 1 1.414 1.414l-7 7A.996.996 0 0 1 11 16Z"/><path fill="currentColor" d="M23.707 24.293a8.395 8.395 0 0 0-4.72-2.209c.2-.164.393-.336.578-.521a9.245 9.245 0 0 0 1.733-9.914l-1.877.697c1.11 2.98.635 5.898-1.272 7.802a6.696 6.696 0 0 1-5.56 1.805a9.775 9.775 0 0 1-5.772-2.786c-2.973-2.97-4.076-8.227-.98-11.32c1.906-1.905 4.826-2.38 7.809-1.27l.699-1.875c-3.683-1.369-7.486-.706-9.924 1.731c-3.943 3.939-2.676 10.496.98 14.149a11.814 11.814 0 0 0 6.976 3.36c.21.022.416.023.623.033V24h4.996a6.846 6.846 0 0 1 4.297 1.707L26.586 30L28 28.586Z"/>' }, "tennis-ball": { "body": '<path fill="currentColor" d="M19 4a8.981 8.981 0 0 0-8.169 12.755L2 25.585L3.414 27l8.487-8.487a9.04 9.04 0 0 0 1.586 1.586L10 23.586L11.414 25l3.831-3.831A8.996 8.996 0 1 0 19 4Zm6.906 7.906a7.005 7.005 0 0 1-5.812-5.812a7.005 7.005 0 0 1 5.812 5.812Zm-13.812 2.188a7.005 7.005 0 0 1 5.812 5.812a7.005 7.005 0 0 1-5.812-5.812Zm7.836 5.837a9.01 9.01 0 0 0-7.861-7.862a7.004 7.004 0 0 1 6-6a9.01 9.01 0 0 0 7.861 7.862a7.004 7.004 0 0 1-6 6Z"/>' }, "term": { "body": '<path fill="currentColor" d="M28 26h-3v-2h3V8h-3V6h3a2.002 2.002 0 0 1 2 2v16a2.003 2.003 0 0 1-2 2Z"/><circle cx="23" cy="16" r="2" fill="currentColor"/><circle cx="16" cy="16" r="2" fill="currentColor"/><circle cx="9" cy="16" r="2" fill="currentColor"/><path fill="currentColor" d="M7 26H4a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h3v2H4v16h3Z"/>' }, "terminal": { "body": '<path fill="currentColor" d="M26 4.01H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2v-20a2 2 0 0 0-2-2Zm0 2v4H6v-4Zm-20 20v-14h20v14Z"/><path fill="currentColor" d="m10.76 16.18l2.82 2.83l-2.82 2.83l1.41 1.41l4.24-4.24l-4.24-4.24l-1.41 1.41z"/>' }, "terminal-3270": { "body": '<path fill="currentColor" d="M10 21h6v2h-6z"/><path fill="currentColor" d="M26 4H6a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Zm0 2v4H6V6ZM6 26V12h20v14Z"/>' }, "test-tool": { "body": '<path fill="currentColor" d="m23 9.2l-2.6-2.6L19 8l4 4l7-7l-1.4-1.4zM12 5.4L10.6 4L8 6.6L5.4 4L4 5.4L6.6 8L4 10.6L5.4 12L8 9.4l2.6 2.6l1.4-1.4L9.4 8zm0 16L10.6 20L8 22.6L5.4 20L4 21.4L6.6 24L4 26.6L5.4 28L8 25.4l2.6 2.6l1.4-1.4L9.4 24z"/><path fill="currentColor" d="M17 15V2h-2v13H2v2h13v13h2V17h13v-2z"/>' }, "text-align-center": { "body": '<path fill="currentColor" d="M6 6h20v2H6zm4 6h12v2H10zm-4 6h20v2H6zm4 6h12v2H10z"/>' }, "text-align-justify": { "body": '<path fill="currentColor" d="M6 6h20v2H6zm0 6h20v2H6zm0 6h20v2H6zm0 6h20v2H6z"/>' }, "text-align-left": { "body": '<path fill="currentColor" d="M12 6h14v2H12zm0 6h10v2H12zm0 6h14v2H12zm0 6h10v2H12zM6 4h2v24H6z"/>' }, "text-align-mixed": { "body": '<path fill="currentColor" d="M14 4H9v2h5v2h-4a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h6V6a2.002 2.002 0 0 0-2-2zm0 8h-4v-2h4zm8 14v-8h-2v1h-2v2h2v5h-2v2h6v-2h-2zM2 2h2v14H2zm26 14h2v14h-2z"/>' }, "text-align-right": { "body": '<path fill="currentColor" d="M6 6h14v2H6zm4 6h10v2H10zm-4 6h14v2H6zm4 6h10v2H10zM24 4h2v24h-2z"/>' }, "text-all-caps": { "body": '<path fill="currentColor" d="M1 8v2h6v14h2V10h6V8H1zm16 0v2h6v14h2V10h6V8H17z"/>' }, "text-annotation-toggle": { "body": '<path d="M29.537 13.76l-3.297-3.297a1.586 1.586 0 0 0-2.24 0L10 24.467V30h5.533l14.004-14a1.586 1.586 0 0 0 0-2.24zM14.704 28H12v-2.704l9.44-9.441l2.705 2.704zM25.56 17.145l-2.704-2.704l2.267-2.267l2.704 2.704z" fill="currentColor"/><path d="M11 17h2v-7h3V8H8v2h3v7z" fill="currentColor"/><path d="M8 20H4V4h16v4h2V4a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4z" fill="currentColor"/>', "hidden": true }, "text-bold": { "body": '<path fill="currentColor" d="M18.25 25H9V7h8.5a5.25 5.25 0 0 1 4 8.65A5.25 5.25 0 0 1 18.25 25ZM12 22h6.23a2.25 2.25 0 1 0 0-4.5H12Zm0-7.5h5.5a2.25 2.25 0 1 0 0-4.5H12Z"/>' }, "text-clear-format": { "body": '<path fill="currentColor" d="m29.438 16.572l-7.985-7.986a2.001 2.001 0 0 0-2.829 0l-5.358 5.358L9 2H7L2 16h2l.999-3h6l.803 2.408l-7.216 7.216a2 2 0 0 0 0 2.829L9.132 30h9.59l10.716-10.717a1.917 1.917 0 0 0 0-2.712ZM5.665 11l2.331-7l2.336 7Zm12.23 17H9.96L6 24.038l6.312-6.311l7.928 7.927Zm3.76-3.76l-7.928-7.927L20.039 10l7.927 7.927Z"/>' }, "text-color": { "body": '<path fill="currentColor" d="M22 21h2L17 4h-2L8 21h2l1.61-4h8.74zm-9.57-6l3.44-8.37h.26L19.54 15zM6 24h20v4H6z"/>' }, "text-creation": { "body": '<path fill="currentColor" d="M27 22.14V9.86A4 4 0 1 0 22.14 5H9.86A4 4 0 1 0 5 9.86v12.28A4 4 0 1 0 9.86 27h12.28A4 4 0 1 0 27 22.14ZM26 4a2 2 0 1 1-2 2a2 2 0 0 1 2-2ZM4 6a2 2 0 1 1 2 2a2 2 0 0 1-2-2Zm2 22a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm16.14-3H9.86A4 4 0 0 0 7 22.14V9.86A4 4 0 0 0 9.86 7h12.28A4 4 0 0 0 25 9.86v12.28A4 4 0 0 0 22.14 25ZM26 28a2 2 0 1 1 2-2a2 2 0 0 1-2 2Z"/><path fill="currentColor" d="M21 11H11v2h4v9h2v-9h4v-2z"/>' }, "text-fill": { "body": '<path fill="currentColor" d="M4 26h24v4H4z"/><path fill="currentColor" d="M26 14.54a1 1 0 0 0-.25-.69l-8.58-9.52A1.09 1.09 0 0 0 17 4.2V2h-2v3L4.32 14.74a1 1 0 0 0-.06 1.41l8.57 9.52a1 1 0 0 0 .69.33h.05a1 1 0 0 0 .68-.26L24 16.8V21a1 1 0 0 0 2 0v-6.46Zm-12.35 9l-7.23-8L15 7.67V12h2V7.13l6.59 7.33Z"/>' }, "text-font": { "body": '<path fill="currentColor" d="M25 12h-5v2h5a1 1 0 0 1 1 1v2h-4a3.003 3.003 0 0 0-3 3v1a3.003 3.003 0 0 0 3 3h6v-9a3.003 3.003 0 0 0-3-3zm-3 10a1 1 0 0 1-1-1v-1a1 1 0 0 1 1-1h4v3zm-6 2h2L12 7h-2L4 24h2l1.694-5h6.613zm-7.629-7l2.497-7.371h.266L13.63 17z"/>' }, "text-footnote": { "body": '<path fill="currentColor" d="M2 7v2h7v16h2V9h7V7H2zm28 4.076l-.744-1.857L26 10.522V7h-2v3.523L20.744 9.22L20 11.077l3.417 1.367L20.9 15.8l1.6 1.2l2.5-3.333L27.5 17l1.6-1.2l-2.517-3.357L30 11.076z"/>' }, "text-highlight": { "body": '<path fill="currentColor" d="M12 15H5a3 3 0 0 1-3-3v-2a3 3 0 0 1 3-3h5V5a1 1 0 0 0-1-1H3V2h6a3 3 0 0 1 3 3zM5 9a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h5V9zm15 14v2a1 1 0 0 0 1 1h5v-4h-5a1 1 0 0 0-1 1z"/><path fill="currentColor" d="M2 30h28V2Zm26-2h-7a3 3 0 0 1-3-3v-2a3 3 0 0 1 3-3h5v-2a1 1 0 0 0-1-1h-6v-2h6a3 3 0 0 1 3 3Z"/>' }, "text-indent": { "body": '<path fill="currentColor" d="M14 6h14v2H14zm0 6h14v2H14zm-7 6h21v2H7zm0 6h21v2H7zM4 13.59L7.29 10L4 6.41L5.42 5l4.62 5l-4.62 5L4 13.59z"/>' }, "text-indent-less": { "body": '<path fill="currentColor" d="M2 6h10v2H2zm3 6h7v2H5zm-3 6h10v2H2zm3 6h7v2H5zM16 4h2v24h-2zm12.15 19.5l1.41-1.38L23.27 16l6.29-6.12l-1.41-1.38l-7.71 7.5l7.71 7.5z"/>' }, "text-indent-more": { "body": '<path fill="currentColor" d="M20 6h10v2H20zm0 6h7v2h-7zm0 6h10v2H20zm0 6h7v2h-7zM14 4h2v24h-2zM3.85 22.5l-1.41-1.38L8.73 15L2.44 8.88L3.85 7.5l7.71 7.5l-7.71 7.5z"/>' }, "text-italic": { "body": '<path fill="currentColor" d="M25 9V7H12v2h5.14l-4.37 14H7v2h13v-2h-5.14l4.37-14H25z"/>' }, "text-kerning": { "body": '<path fill="currentColor" d="M30 24H18.83l2.29-2.29l-1.41-1.42L15 25l4.71 4.71l1.41-1.42L18.83 26H30v-2zm-16-3l6-17h-2l-6 17h2zM13 4L9 16L5 4H3l5 14h2l5-14h-2zm15 14h2L25 4h-2l-5 14h2l1-3h6zm-6.33-5L24 6l2.33 7z"/>' }, "text-leading": { "body": '<path fill="currentColor" d="M14 13h16v2H14zm1 15h15v2H15zm10.85-1H28l-4.36-10h-2.28L17 27h2.15l.8-2h5.1zm-5.1-4l1.75-4.37L24.25 23zm5.1-11H28L23.64 2h-2.28L17 12h2.15l.8-2h5.1zm-5.1-4l1.75-4.37L24.25 8zM6 15.83l2.58 2.58L10 17l-4-4l-4 4l1.41 1.42L6 15.83zm0 11.34l-2.58-2.58L2 26l4 4l4-4l-1.41-1.42L6 27.17z"/>' }, "text-line-spacing": { "body": '<path fill="currentColor" d="M17 6h13v2H17zm0 6h10v2H17zm0 6h13v2H17zm0 6h10v2H17zm-5.41-10.59L8 9.83l-3.59 3.59L3 12l5-5l5 5l-1.41 1.41zm0 5.18L8 22.17l-3.59-3.59L3 20l5 5l5-5l-1.41-1.41z"/>' }, "text-link": { "body": '<path fill="currentColor" d="M18.706 27.585a5.261 5.261 0 0 1-3.723-8.983l1.415 1.414a3.264 3.264 0 1 0 4.616 4.616l6.03-6.03a3.264 3.264 0 0 0-4.616-4.616l-1.414-1.414a5.264 5.264 0 0 1 7.444 7.444l-6.03 6.03a5.246 5.246 0 0 1-3.722 1.539Z"/><path fill="currentColor" d="M10.264 29.997a5.262 5.262 0 0 1-3.722-8.983l6.03-6.03a5.264 5.264 0 1 1 7.444 7.443l-1.414-1.414a3.264 3.264 0 1 0-4.616-4.615l-6.03 6.03a3.264 3.264 0 0 0 4.616 4.616l1.414 1.414a5.245 5.245 0 0 1-3.722 1.54zM2 10h8v2H2zm0-4h12v2H2zm0-4h12v2H2z"/>' }, "text-link-analysis": { "body": '<path fill="currentColor" d="M8 10h8v2H8zm0-4h12v2H8zm0-4h12v2H8z"/><path fill="currentColor" d="m4.711 28l5.631-9.996l7.434 6.49a2 2 0 0 0 3.084-.534l6.97-10.403l-1.661-1.114l-7 10.448l-.07.103l-7.435-6.49a2.003 2.003 0 0 0-3.08.53L4 25.183V2H2v26a2.002 2.002 0 0 0 2 2h26v-2Z"/>' }, "text-mining": { "body": '<path fill="currentColor" d="M18 28h8v2h-8zm0-4h12v2H18zm0-4h12v2H18z"/><path fill="currentColor" d="M16.001 26.473H16L4.284 12.955L9.5 6h13l5.216 6.955l-3.24 3.737l1.513 1.31l4.295-4.957L23.5 4h-15l-6.784 9.045l12.772 14.737l1.513-1.309z"/>' }, "text-mining-applier": { "body": '<path fill="currentColor" d="M16.001 26.473H16L4.284 12.955L9.5 6h13l5.216 6.955l-3.24 3.737l1.513 1.31l4.295-4.957L23.5 4h-15l-6.784 9.045l12.772 14.737l1.513-1.309z"/><path fill="currentColor" d="m20 19l7 5l-7 5V19z"/>' }, "text-new-line": { "body": '<path fill="currentColor" d="M20.586 14.414L24.172 18H6V8H4v10a2.002 2.002 0 0 0 2 2h18.172l-3.586 3.586L22 25l6-6l-6-6Z"/>' }, "text-scale": { "body": '<path fill="currentColor" d="M30 5v3h-8v18h-3V8h-8V5h19z"/><path fill="currentColor" d="M7 26V14H2v-2h12v2H9v12H7z"/>' }, "text-selection": { "body": '<path fill="currentColor" d="M28 27h-7a3 3 0 0 1-3-3v-2a3 3 0 0 1 3-3h5v-2a1 1 0 0 0-1-1h-6v-2h6a3 3 0 0 1 3 3zm-7-6a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h5v-4zM13 7h3V5h-3a4 4 0 0 0-3 1.38A4 4 0 0 0 7 5H4v2h3a2 2 0 0 1 2 2v5H5v2h4v7a2 2 0 0 1-2 2H4v2h3a4 4 0 0 0 3-1.38A4 4 0 0 0 13 27h3v-2h-3a2 2 0 0 1-2-2v-7h4v-2h-4V9a2 2 0 0 1 2-2z"/>' }, "text-small-caps": { "body": '<path fill="currentColor" d="M23 27V15h-5v-2h12v2h-5v12h-2z"/><path fill="currentColor" d="M11 27V8H2V6h20v2h-9v19h-2z"/>' }, "text-strikethrough": { "body": '<path fill="currentColor" d="M28 15H17.956a39.769 39.769 0 0 0-1.338-.335c-2.808-.664-4.396-1.15-4.396-3.423a2.868 2.868 0 0 1 .787-2.145a4.789 4.789 0 0 1 3.013-1.09c2.83-.07 4.135.89 5.202 2.35l1.615-1.18a7.473 7.473 0 0 0-6.83-3.17a6.773 6.773 0 0 0-4.4 1.661a4.827 4.827 0 0 0-1.386 3.574A4.372 4.372 0 0 0 11.957 15H4v2h13.652c1.967.57 3.143 1.312 3.173 3.358a3.119 3.119 0 0 1-.862 2.393A5.824 5.824 0 0 1 16.243 24a6.634 6.634 0 0 1-5.145-2.691l-1.533 1.284A8.526 8.526 0 0 0 16.212 26h.1a7.67 7.67 0 0 0 5.048-1.819a5.078 5.078 0 0 0 1.465-3.853A4.952 4.952 0 0 0 21.675 17H28Z"/>' }, "text-subscript": { "body": '<path fill="currentColor" d="M26 25h-6v-6h4v-2h-4v-2h6v6h-4v2h4v2zM5 7v2h7v16h2V9h7V7H5z"/>' }, "text-superscript": { "body": '<path fill="currentColor" d="M29 17h-6v-6h4V9h-4V7h6v6h-4v2h4v2zM4 7v2h7v16h2V9h7V7H4z"/>' }, "text-tracking": { "body": '<path fill="currentColor" d="m25.29 19.29l-1.41 1.42L26.17 23H5.83l2.29-2.29l-1.41-1.42L2 24l4.71 4.71l1.41-1.42L5.83 25h20.34l-2.29 2.29l1.41 1.42L30 24l-4.71-4.71zM26 17h2L23 3h-2l-5 14h2l1-3h6zm-6.33-5L22 5l2.33 7zM14 3l-4 12L6 3H4l5 14h2l5-14h-2z"/>' }, "text-underline": { "body": '<path fill="currentColor" d="M4 26h24v2H4zm12-3a7 7 0 0 1-7-7V5h2v11a5 5 0 0 0 10 0V5h2v11a7 7 0 0 1-7 7z"/>' }, "text-vertical-alignment": { "body": '<path fill="currentColor" d="M16 28h14v2H16zm0-5h14v2H16zm-5.154 7H13L8.64 20H6.36L2 30h2.154l.8-2h5.092zm-5.092-4L7.5 21.635L9.246 26zM2 15h28v2H2zm14-8h14v2H16zm0-5h14v2H16zm-5.154 10H13L8.64 2H6.36L2 12h2.154l.8-2h5.092zM5.754 8L7.5 3.635L9.246 8z"/>' }, "text-wrap": { "body": '<path fill="currentColor" d="M4 23h8v2H4zm20.523-9H4v2h20.5a3.5 3.5 0 0 1 0 7h-5.672l2.586-2.586L20 19l-5 5l5 5l1.414-1.414L18.828 25h5.705a5.5 5.5 0 0 0-.01-11zM4 5h24v2H4z"/>' }, "theater": { "body": '<path fill="currentColor" d="M20 25a6.99 6.99 0 0 1-5.833-3.129l1.666-1.107a5 5 0 0 0 8.334 0l1.666 1.107A6.99 6.99 0 0 1 20 25zm4-11a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2zm-8 0a2 2 0 1 0 2 2a1.98 1.98 0 0 0-2-2z"/><path fill="currentColor" d="M28 8h-6V4a2.002 2.002 0 0 0-2-2H4a2.002 2.002 0 0 0-2 2v10a10.01 10.01 0 0 0 8.803 9.921A9.999 9.999 0 0 0 30 20V10a2.002 2.002 0 0 0-2-2ZM4 14V4h16v4h-8a2.002 2.002 0 0 0-2 2v10a9.963 9.963 0 0 0 .168 1.78A8.008 8.008 0 0 1 4 14Zm24 6a8 8 0 0 1-16 0V10h16Z"/>' }, "this-side-up": { "body": '<path fill="currentColor" d="M2 28h28v2H2zM7 5.828V24h2V5.828l3.586 3.586L14 8L8 2L2 8l1.414 1.414L7 5.828zm16 0V24h2V5.828l3.586 3.586L30 8l-6-6l-6 6l1.414 1.414L23 5.828z"/>' }, "threshold": { "body": '<path d="M26 4H6a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h20a2.002 2.002 0 0 0 2-2V6a2.002 2.002 0 0 0-2-2zM6 6h20v10h-2v2h2v2h-2v2h2v2h-2v2h-2v-2h-2v2h-2v-2h-2v2h-2v-2h-2v2h-2v-2H8v2H6z" fill="currentColor"/><path d="M8 20h2v2H8z" fill="currentColor"/><path d="M12 20h2v2h-2z" fill="currentColor"/><path d="M16 20h2v2h-2z" fill="currentColor"/><path d="M20 20h2v2h-2z" fill="currentColor"/><path d="M8 16h2v2H8z" fill="currentColor"/><path d="M16 16h2v2h-2z" fill="currentColor"/><path d="M20 16h2v2h-2z" fill="currentColor"/><path d="M20 12h2v2h-2z" fill="currentColor"/><path d="M20 8h2v2h-2z" fill="currentColor"/>', "hidden": true }, "thumbnail-1": { "body": '<path fill="currentColor" d="M8 30H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zm14 6h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zm14 6h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zm4-4H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2zM4 4v14h24V4z"/>' }, "thumbnail-2": { "body": '<path fill="currentColor" d="M8 30H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zm14 6h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zm14 6h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zM8 20H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zm14 6h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zm14 6h-4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4v-4zM8 10H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zM4 4v4h4V4zm14 6h-4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4V4zm14 6h-4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2zm-4-6v4h4V4z"/>' }, "thumbnail-preview": { "body": '<path d="M28 12H4a2.002 2.002 0 0 0-2 2v14a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2V14a2.003 2.003 0 0 0-2-2zm-8 16h-8v-1a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1zm8 0h-6v-1a3.003 3.003 0 0 0-3-3h-6a3.003 3.003 0 0 0-3 3v1H4V14h24.002z" fill="currentColor"/><path d="M16 23a4 4 0 1 1 4-4a4.004 4.004 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2z" fill="currentColor"/><path d="M30 4v4a2.003 2.003 0 0 1-2 2h-4a2.003 2.003 0 0 1-2-2V4a2.003 2.003 0 0 1 2-2h4a2.003 2.003 0 0 1 2 2zm-2 4l.002-4H24v4z" fill="currentColor"/><path d="M20 4v4a2.003 2.003 0 0 1-2 2h-4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h4a2.003 2.003 0 0 1 2 2zm-2 4l.002-4H14v4z" fill="currentColor"/><path d="M10 4v4a2.002 2.002 0 0 1-2 2H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2zM8 8l.002-4H4v4z" fill="currentColor"/>', "hidden": true }, "thumbs-down": { "body": '<path fill="currentColor" d="M30 16V9a7.008 7.008 0 0 0-7-7H2v14h6.465l3.577 5.366l.846 5.917A2.01 2.01 0 0 0 14.868 29H17a3.003 3.003 0 0 0 3-3v-6h6a4.005 4.005 0 0 0 4-4ZM8 14H4V4h4Zm20 2a2.002 2.002 0 0 1-2 2h-8v8a1 1 0 0 1-1 1h-2.133l-.91-6.366L10 14.697V4h13a5.006 5.006 0 0 1 5 5Z"/>' }, "thumbs-down-filled": { "body": '<path fill="currentColor" d="M2 2h5v14H2zm21 0H9v14.803l3.042 4.563l.845 5.917A2.01 2.01 0 0 0 14.867 29H15a3.003 3.003 0 0 0 3-3v-6h8a4.005 4.005 0 0 0 4-4V9a7.008 7.008 0 0 0-7-7z"/>' }, "thumbs-up": { "body": '<path fill="currentColor" d="M26 12h-6V6a3.003 3.003 0 0 0-3-3h-2.133a2.01 2.01 0 0 0-1.98 1.717l-.845 5.917L8.465 16H2v14h21a7.008 7.008 0 0 0 7-7v-7a4.005 4.005 0 0 0-4-4ZM8 28H4V18h4Zm20-5a5.006 5.006 0 0 1-5 5H10V17.303l3.958-5.937l.91-6.366H17a1 1 0 0 1 1 1v8h8a2.002 2.002 0 0 1 2 2Z"/>' }, "thumbs-up-filled": { "body": '<path fill="currentColor" d="M2 16h5v14H2zm21 14H9V15.197l3.042-4.563l.845-5.917A2.01 2.01 0 0 1 14.867 3H15a3.003 3.003 0 0 1 3 3v6h8a4.005 4.005 0 0 1 4 4v7a7.008 7.008 0 0 1-7 7z"/>' }, "thunderstorm": { "body": '<path fill="currentColor" d="M23.5 22H23v-2h.5a4.5 4.5 0 0 0 .36-9H23l-.1-.82a7 7 0 0 0-13.88 0L9 11h-.86a4.5 4.5 0 0 0 .36 9H9v2h-.5A6.5 6.5 0 0 1 7.2 9.14a9 9 0 0 1 17.6 0A6.5 6.5 0 0 1 23.5 22Z"/><path fill="currentColor" d="m15.87 30.5l-1.74-1l3.15-5.5h-6l4.85-8.5l1.74 1l-3.15 5.5h6l-4.85 8.5z"/>' }, "thunderstorm-scattered": { "body": '<path fill="currentColor" d="m13.338 30l-1.736-1l2.287-4H10l3.993-7l1.737 1l-2.284 4h3.891l-3.999 7z"/><path fill="currentColor" d="M27 11a5.995 5.995 0 0 0-11.367-2.669A7.35 7.35 0 0 0 13.5 8a7.55 7.55 0 0 0-7.15 5.244A5.993 5.993 0 0 0 8 25v-2a3.993 3.993 0 0 1-.673-7.93l.663-.112l.146-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 23v2a5.985 5.985 0 0 0 5.216-8.946A5.994 5.994 0 0 0 27 11Zm-4.073 3.49a5.96 5.96 0 0 0-2.278-1.246a7.516 7.516 0 0 0-3.185-4.069a3.987 3.987 0 1 1 5.463 5.314ZM28.586 19l-2.122-2.12l1.414-1.415L30 17.587zM29 10h3v2h-3zm-2.536-4.878L28.586 3L30 4.414l-2.122 2.122zM20 0h2v3h-2zm-5.878 6.536L12 4.414L13.414 3l2.122 2.122z"/>' }, "thunderstorm-scattered-night": { "body": '<path fill="currentColor" d="m13.338 30l-1.736-1l2.287-4H10l3.993-7l1.737 1l-2.284 4h3.891l-3.999 7z"/><path fill="currentColor" d="M29.844 13.035a1.52 1.52 0 0 0-1.231-.866a5.356 5.356 0 0 1-3.41-1.716A6.465 6.465 0 0 1 23.92 4.06a1.604 1.604 0 0 0-.3-1.546a1.455 1.455 0 0 0-1.36-.492l-.019.004a7.854 7.854 0 0 0-6.105 6.48A7.372 7.372 0 0 0 13.5 8a7.551 7.551 0 0 0-7.15 5.244A5.993 5.993 0 0 0 8 25v-2a3.993 3.993 0 0 1-.673-7.93l.663-.112l.145-.656a5.496 5.496 0 0 1 10.73 0l.145.656l.663.113A3.993 3.993 0 0 1 19 23v2a5.955 5.955 0 0 0 5.88-7.146a7.502 7.502 0 0 0 4.867-3.3a1.537 1.537 0 0 0 .097-1.52Zm-5.693 2.918a5.966 5.966 0 0 0-3.502-2.709a7.508 7.508 0 0 0-2.62-3.694a6.008 6.008 0 0 1 3.77-5.333a8.458 8.458 0 0 0 1.939 7.596a7.404 7.404 0 0 0 3.902 2.228a5.442 5.442 0 0 1-3.489 1.912Z"/>' }, "thunderstorm-severe": { "body": '<path fill="currentColor" d="M21 30a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 21 30zM9 32a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 9 32zm6.901-1.504l-1.736-.992L17.309 24H11.31l4.855-8.496l1.736.992L14.756 22h6.001l-4.856 8.496zM27.951 15a4.399 4.399 0 0 1 .049.5a4.505 4.505 0 0 1-4.5 4.5H23v2h.5a6.508 6.508 0 0 0 6.5-6.5c0-.17-.031-.333-.044-.5z"/><path fill="none" d="M25.75 8h-1.5V4h1.5ZM25 9a1 1 0 1 0 1 1a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M31.912 11.935L25.628.371a.718.718 0 0 0-1.257 0l-6.283 11.564A.72.72 0 0 0 18.72 13h12.56a.72.72 0 0 0 .631-1.065zM24.25 4h1.5v4h-1.5zm.75 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm-16.856.019l.815-.064l.1-.812a6.986 6.986 0 0 1 9.97-5.45L20 2.947a8.978 8.978 0 0 0-12.8 6.19a6.493 6.493 0 0 0 .23 12.767l-1.324 2.649a1 1 0 1 0 1.788.894l2-4a1 1 0 0 0-.447-1.341A.979.979 0 0 0 9 20.01V20h-.5a4.497 4.497 0 0 1-.356-8.981z"/>' }, "thunderstorm-strong": { "body": '<path fill="currentColor" d="M21 30a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 21 30zM9 32a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 9 32zm6.901-1.504l-1.736-.992L17.31 24h-6l4.855-8.496l1.736.992L14.756 22h6.001l-4.856 8.496z"/><path fill="currentColor" d="M24.8 9.136a8.994 8.994 0 0 0-17.6 0a6.493 6.493 0 0 0 .23 12.768l-1.324 2.649a1 1 0 1 0 1.788.894l2-4a1 1 0 0 0-.446-1.341A.979.979 0 0 0 9 20.01V20h-.5a4.497 4.497 0 0 1-.356-8.981l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.497 4.497 0 0 1 23.5 20H23v2h.5a6.497 6.497 0 0 0 1.3-12.864Z"/>' }, "ticket": { "body": '<path fill="currentColor" d="M29 14a1 1 0 0 0 1-1V8a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v5a1 1 0 0 0 1 1a2 2 0 0 1 0 4a1 1 0 0 0-1 1v5a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2v-5a1 1 0 0 0-1-1a2 2 0 0 1 0-4Zm-1 5.87V24h-7v-3h-2v3H4v-4.13a4 4 0 0 0 0-7.74V8h15v3h2V8h7v4.13a4 4 0 0 0 0 7.74Z"/><path fill="currentColor" d="M19 13h2v6h-2z"/>' }, "tides": { "body": '<path fill="currentColor" d="M14 7L9 2L4 7l1.413 1.416L8 5.833V14h2V5.833l2.586 2.581L14 7zm12.586.586L24 10.167V2h-2v8.167l-2.587-2.583L18 9l5 5l5-5l-1.414-1.414zM20 20a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 16 17a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 12 20a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 8 17a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 4 20H2v2h2a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 20 22h10v-2zm8 8a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 24 25a.99.99 0 0 0-.947.679A3.44 3.44 0 0 1 20 28a3.438 3.438 0 0 1-3.051-2.316A1.007 1.007 0 0 0 16 25a.971.971 0 0 0-.947.679A3.44 3.44 0 0 1 12 28H2v2h10a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0A4.932 4.932 0 0 0 28 30h2v-2z"/>' }, "tif": { "body": '<path fill="currentColor" d="M30 11V9h-8v14h2v-6h5v-2h-5v-4h6zm-18 0h3v10h-3v2h8v-2h-3V11h3V9h-8v2zM2 11h3v12h2V11h3V9H2v2z"/>' }, "time": { "body": '<path fill="currentColor" d="M16 30a14 14 0 1 1 14-14a14 14 0 0 1-14 14Zm0-26a12 12 0 1 0 12 12A12 12 0 0 0 16 4Z"/><path fill="currentColor" d="M20.59 22L15 16.41V7h2v8.58l5 5.01L20.59 22z"/>' }, "time-plot": { "body": '<path fill="currentColor" d="M23.586 13L21 10.414V6h2v3.586l2 2L23.586 13z"/><path fill="currentColor" d="M22 18a8 8 0 1 1 8-8a8.01 8.01 0 0 1-8 8Zm0-14a6 6 0 1 0 6 6a6.007 6.007 0 0 0-6-6Z"/><path fill="currentColor" d="m8.63 18l7 6H30v-2H16.37l-7-6H4V2H2v26a2.002 2.002 0 0 0 2 2h26v-2H4V18Z"/>' }, "timer": { "body": '<path fill="currentColor" d="M15 11h2v9h-2zm-2-9h6v2h-6z"/><path fill="currentColor" d="m28 9l-1.42-1.41l-2.25 2.25a10.94 10.94 0 1 0 1.18 1.65ZM16 26a9 9 0 1 1 9-9a9 9 0 0 1-9 9Z"/>' }, "tool-box": { "body": '<path fill="currentColor" d="M27 9h-3V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v3H5a3 3 0 0 0-3 3v14a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V12a3 3 0 0 0-3-3ZM10 6h12v3H10Zm18 20H4v-9h8v5h8v-5h8Zm-14-9h4v3h-4ZM4 15v-3a1 1 0 0 1 1-1h22a1 1 0 0 1 1 1v3Z"/>' }, "tool-kit": { "body": '<path fill="currentColor" d="m8.914 24.5l4.257-4.257l-1.414-1.414L7.5 23.086l-.793-.793a1 1 0 0 0-1.414 0l-4 4a1 1 0 0 0 0 1.414l3 3a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 0-1.414ZM5 28.586L3.414 27L6 24.414L7.586 26Z"/><path fill="currentColor" d="M24 30a6.007 6.007 0 0 1-6-6a5.84 5.84 0 0 1 .21-1.547L9.548 13.79A5.848 5.848 0 0 1 8 14a5.976 5.976 0 0 1-5.577-8.184l.558-1.421l3.312 3.312a1.023 1.023 0 0 0 1.413 0a.999.999 0 0 0 0-1.414L4.395 2.979l1.423-.557A5.977 5.977 0 0 1 14 8a5.84 5.84 0 0 1-.21 1.547l8.663 8.663A5.855 5.855 0 0 1 24 18a5.976 5.976 0 0 1 5.577 8.184l-.557 1.421l-3.313-3.312a1.023 1.023 0 0 0-1.413 0a.999.999 0 0 0-.001 1.414l3.313 3.313l-1.422.558A5.96 5.96 0 0 1 24 30ZM10.062 11.476l10.461 10.461l-.239.61a3.975 3.975 0 0 0 3.466 5.445l-.871-.87a3 3 0 0 1 0-4.243a3.072 3.072 0 0 1 4.243 0l.87.871a3.976 3.976 0 0 0-5.446-3.466l-.609.239l-10.46-10.46l.24-.61A3.975 3.975 0 0 0 8.25 4.008l.87.87a3 3 0 0 1 0 4.243a3.072 3.072 0 0 1-4.243 0l-.87-.871a3.975 3.975 0 0 0 5.445 3.466Z"/><path fill="currentColor" d="M29.123 2.85a3.072 3.072 0 0 0-4.243 0l-7.48 7.48l1.414 1.414l7.48-7.48a1.024 1.024 0 0 1 1.414 0a1.002 1.002 0 0 1 0 1.414l-7.48 7.48l1.414 1.415l7.48-7.48a3.003 3.003 0 0 0 0-4.243Z"/>' }, "tools": { "body": '<path fill="currentColor" d="M12.1 2a9.8 9.8 0 0 0-5.4 1.6l6.4 6.4a2.1 2.1 0 0 1 .2 3a2.1 2.1 0 0 1-3-.2L3.7 6.4A9.84 9.84 0 0 0 2 12.1a10.14 10.14 0 0 0 10.1 10.1a10.9 10.9 0 0 0 2.6-.3l6.7 6.7a5 5 0 0 0 7.1-7.1l-6.7-6.7a10.9 10.9 0 0 0 .3-2.6A10 10 0 0 0 12.1 2Zm8 10.1a7.61 7.61 0 0 1-.3 2.1l-.3 1.1l.8.8l6.7 6.7a2.88 2.88 0 0 1 .9 2.1A2.72 2.72 0 0 1 27 27a2.9 2.9 0 0 1-4.2 0l-6.7-6.7l-.8-.8l-1.1.3a7.61 7.61 0 0 1-2.1.3a8.27 8.27 0 0 1-5.7-2.3A7.63 7.63 0 0 1 4 12.1a8.33 8.33 0 0 1 .3-2.2l4.4 4.4a4.14 4.14 0 0 0 5.9.2a4.14 4.14 0 0 0-.2-5.9L10 4.2a6.45 6.45 0 0 1 2-.3a8.27 8.27 0 0 1 5.7 2.3a8.49 8.49 0 0 1 2.4 5.9Z"/>' }, "tools-alt": { "body": '<path fill="currentColor" d="m23.1 16l6.3-6.3c.8-.8.8-2 0-2.8l-4.2-4.2c-.8-.8-2-.8-2.8 0L16 8.9L9.7 2.6c-.8-.8-2-.8-2.8 0L2.6 6.8c-.8.8-.8 2 0 2.8L8.9 16L2 22.9V30h7.1l6.9-6.9l6.3 6.3c.8.8 2 .8 2.8 0l4.2-4.2c.8-.8.8-2 0-2.8L23.1 16zm.7-12L28 8.2l-6.3 6.3l-4.2-4.2L23.8 4zM8.2 28H4v-4.2l6.3-6.3l4.2 4.2L8.2 28zm15.6 0L4 8.2L8.2 4l3.5 3.5l-2.1 2.1L11 11l2.1-2.1l4.2 4.2l-2.1 2.1l1.4 1.4l2.1-2.1l4.2 4.2l-1.9 2.2l1.4 1.4l2.1-2.1l3.5 3.5l-4.2 4.3z"/>' }, "tornado": { "body": '<path fill="currentColor" d="M16 26h4v2h-4zm-4-4h6v2h-6zm-4-4h10v2H8zm0-4h12v2H8zm2-4h14v2H10zM8 6h18v2H8z"/>' }, "tornado-warning": { "body": '<path fill="currentColor" d="M2 4h16v2H2zm2 4h12v2H4zm-2 4h12v2H2zm0 4h10v2H2zm2 4h8v2H4zm4 4h6v2H8zm4 4h4v2h-4z"/><path fill="none" d="M23.75 10h-1.5V6h1.5ZM23 11a1 1 0 1 0 1 1a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M29.912 13.935L23.628 2.371a.718.718 0 0 0-1.256 0l-6.284 11.564A.72.72 0 0 0 16.72 15h12.56a.72.72 0 0 0 .631-1.065ZM22.25 6h1.5v4h-1.5Zm.75 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "touch-1": { "body": '<path fill="currentColor" d="M20 8h-2A5 5 0 0 0 8 8H6a7 7 0 0 1 14 0Z"/><path fill="currentColor" d="M25 15a2.94 2.94 0 0 0-1.47.4A3 3 0 0 0 21 14a2.94 2.94 0 0 0-1.47.4A3 3 0 0 0 16 13.18V8a3 3 0 0 0-6 0v11.1l-2.23-1.52A2.93 2.93 0 0 0 6 17a3 3 0 0 0-2.12 5.13l8 7.3A6.16 6.16 0 0 0 16 31h5a7 7 0 0 0 7-7v-6a3 3 0 0 0-3-3Zm1 9a5 5 0 0 1-5 5h-5a4.17 4.17 0 0 1-2.76-1l-7.95-7.3A1 1 0 0 1 5 20a1 1 0 0 1 1.6-.8l5.4 3.7V8a1 1 0 0 1 2 0v11h2v-3a1 1 0 0 1 2 0v3h2v-2a1 1 0 0 1 2 0v2h2v-1a1 1 0 0 1 2 0Z"/>' }, "touch-1-down": { "body": '<path fill="currentColor" d="M20 24h-2a5 5 0 0 1-10 0H6a7 7 0 0 0 14 0Z"/><path fill="currentColor" d="M28 14V8a7.008 7.008 0 0 0-7-7h-5a6.146 6.146 0 0 0-4.106 1.566l-8.01 7.308a2.999 2.999 0 0 0 3.88 4.55l.001.001L10 12.895V24a3 3 0 0 0 6 0v-5.184a2.939 2.939 0 0 0 3.53-1.217A2.963 2.963 0 0 0 21 18a2.994 2.994 0 0 0 2.53-1.401A2.963 2.963 0 0 0 25 17a3.003 3.003 0 0 0 3-3Zm-2 0a1 1 0 0 1-2 0v-1h-2v2a1 1 0 0 1-2 0v-2h-2v3a1 1 0 0 1-2 0v-3h-2v11a1 1 0 0 1-2 0V9.104l-5.4 3.697a1 1 0 0 1-1.308-1.505l7.95-7.251A4.148 4.148 0 0 1 16 3h5a5.006 5.006 0 0 1 5 5Z"/>' }, "touch-1-down-filled": { "body": '<path fill="currentColor" d="M13 30a6.007 6.007 0 0 1-6-6h2a4 4 0 0 0 8 0h2a6.007 6.007 0 0 1-6 6Z"/><path fill="currentColor" d="M21 2h-4.44a4 4 0 0 0-2.708 1.057l-9.2 8.466a2.002 2.002 0 0 0 .118 3.055a2.074 2.074 0 0 0 2.658-.173L11 11.143V24a2 2 0 0 0 4 0v-7a2 2 0 0 0 4 0v-1a2 2 0 0 0 4 0v-1a2 2 0 0 0 4 0V8a6 6 0 0 0-6-6Z"/>' }, "touch-1-filled": { "body": '<path fill="currentColor" d="M13 2a6.007 6.007 0 0 0-6 6h2a4 4 0 0 1 8 0h2a6.007 6.007 0 0 0-6-6Z"/><path fill="currentColor" d="M21 30h-4.44a4 4 0 0 1-2.708-1.057l-9.2-8.466a2.002 2.002 0 0 1 .118-3.055a2.074 2.074 0 0 1 2.658.173L11 20.857V8a2 2 0 0 1 4 0v7a2 2 0 0 1 4 0v1a2 2 0 0 1 4 0v1a2 2 0 0 1 4 0v7a6 6 0 0 1-6 6Z"/>' }, "touch-2": { "body": '<path fill="currentColor" d="M29 15h-2a11 11 0 0 0-22 0H3a13 13 0 0 1 26 0Z"/><path fill="currentColor" d="M25 28h-2V15a7 7 0 1 0-14 0v13H7V15a9 9 0 0 1 18 0Z"/><path fill="currentColor" d="M21 20H11v-5a5 5 0 0 1 10 0Zm-8-2h6v-3a3 3 0 0 0-6 0Z"/>' }, "touch-2-filled": { "body": '<path fill="currentColor" d="M16 12a3.003 3.003 0 0 0-3 3v3h6v-3a3.003 3.003 0 0 0-3-3Z"/><path fill="currentColor" d="M16 6a9.01 9.01 0 0 0-9 9v13h18V15a9.01 9.01 0 0 0-9-9Zm5 14H11v-5a5 5 0 0 1 10 0Z"/><path fill="currentColor" d="M29 15h-2a11 11 0 0 0-22 0H3a13 13 0 0 1 26 0Z"/>' }, "touch-interaction": { "body": '<path fill="currentColor" d="M26 21v-1a1 1 0 0 1 2 0v10h2V20a3.003 3.003 0 0 0-3-3a2.964 2.964 0 0 0-1.47.401a2.954 2.954 0 0 0-4-1A2.993 2.993 0 0 0 19 15a2.96 2.96 0 0 0-1 .185V10a3 3 0 0 0-6 0v11.105l-2.235-1.53v.001a2.999 2.999 0 0 0-3.882 4.55L12.323 30l1.347-1.478l-6.378-5.818A.99.99 0 0 1 7 22a1 1 0 0 1 1.6-.8l5.4 3.695V10a1 1 0 0 1 2 0v11h2v-3a1 1 0 0 1 2 0v3h2v-2a1 1 0 0 1 2 0v2Z"/><path fill="currentColor" d="M28 12h-6v-2h6V4H4v6h4v2H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2Z"/>' }, "traffic-cone": { "body": '<path fill="currentColor" d="M24.796 28L18.975 2.775A1 1 0 0 0 18 2h-4a1 1 0 0 0-.975.775L7.205 28H4v2h24v-2Zm-4.822-12h-7.948l.923-4h6.102Zm.461 2l.923 4H10.642l.923-4Zm-5.64-14h2.41l1.384 6H13.41ZM10.18 24h11.64l.923 4H9.257Z"/>' }, "traffic-event": { "body": '<path fill="currentColor" d="M11 21h6v2h-6z"/><path fill="currentColor" d="m24.246 8l1.714 6H30v-2h-2.531l-1.3-4.549A2.008 2.008 0 0 0 24.246 6h-1.349l-.728-2.549A2.008 2.008 0 0 0 20.245 2H7.754a2.008 2.008 0 0 0-1.922 1.45L4.532 8H2v2h4.04l1.714-6h12.492l.571 2h-9.063a2.008 2.008 0 0 0-1.922 1.45L8.816 11H7.714a1.998 1.998 0 0 0-1.891 1.352L4.57 16H2v2h2v7a2.002 2.002 0 0 0 2 2v3h2v-3h12v3h2v-3a2.002 2.002 0 0 0 2-2v-7h2v-2h-2.571l-1.251-3.647A1.999 1.999 0 0 0 20.286 11h-9.389l.857-3ZM22 19v2h-2v2h2v2H6v-2h2v-2H6v-2Zm-.343-2H6.343l1.371-4h12.572Z"/>' }, "traffic-flow": { "body": '<path fill="currentColor" d="m26 8l-4-4l-4 4l1.41 1.42L21 7.83V18h2V7.83l1.58 1.58L26 8zM12.59 22.58L11 24.17V14H9v10.17l-1.58-1.58L6 24l4 4l4-4l-1.41-1.42zM2 2h2v28H2zm26 0h2v28h-2zM15 2h2v4h-2zm0 8h2v4h-2zm0 8h2v4h-2zm0 8h2v4h-2z"/>' }, "traffic-flow-incident": { "body": '<path fill="currentColor" d="M26 9.42L24.59 8l-2.585 2.585L22 10.58l-.005.005L19.42 8.01L18 9.42L20.58 12L18 14.58L19.41 16l2.585-2.585l.005.005l.005-.005l2.575 2.575L26 14.58L23.42 12L26 9.42zm-12 8L12.59 16l-2.585 2.585L10 18.58l-.005.005L7.42 16.01L6 17.42L8.58 20L6 22.58L7.41 24l2.585-2.585l.005.005l.005-.005l2.575 2.575L14 22.58L11.42 20L14 17.42zM2 2h2v28H2zm26 0h2v28h-2zM15 2h2v4h-2zm0 8h2v4h-2zm0 8h2v4h-2zm0 8h2v4h-2z"/>' }, "traffic-incident": { "body": '<path fill="currentColor" d="M2 28h28v2H2zm9.486-14.072l4.242-4.242l1.414 1.414l-4.242 4.242z"/><path fill="currentColor" d="m12.082 23.433l4.116 2.318a2.009 2.009 0 0 0 2.386-.335l8.832-8.832a2.009 2.009 0 0 0 .334-2.386l-2.298-4.136l1.79-1.79l-1.414-1.414l-1.414 1.414l-4.95-4.95a2.003 2.003 0 0 0-2.828 0L14.515 1.2L13.1 2.615l2.121 2.121l-8.485 8.486l-2.12-2.122L3.2 12.515l2.121 2.12a2.002 2.002 0 0 0 0 2.83l4.95 4.95l-1.414 1.413l1.414 1.414Zm13.92-8.264l-8.833 8.833l-4.546-2.525l10.854-10.854ZM9.564 18.88l1.414-1.415l-1.414-1.414l-1.414 1.414l-1.415-1.414L18.05 4.736l1.414 1.415l-1.414 1.414l1.414 1.414l1.415-1.414l1.414 1.414l-11.314 11.314Z"/>' }, "traffic-weather-incident": { "body": '<path fill="currentColor" d="M2 24h2v6H2zM28 2h2v28h-2zM15 2h2v4h-2zm0 8h2v4h-2zm0 8h2v4h-2zm0 8h2v4h-2zM6 12a3.898 3.898 0 0 1-4-3.777a3.902 3.902 0 0 1 .653-2.064L5.17 2.414a1.038 1.038 0 0 1 1.66 0L9.314 6.11A3.97 3.97 0 0 1 10 8.223A3.898 3.898 0 0 1 6 12zm0-7.237L4.344 7.226A1.89 1.89 0 0 0 4 8.223a1.9 1.9 0 0 0 2 1.778a1.9 1.9 0 0 0 2-1.778a1.98 1.98 0 0 0-.375-1.047zm5 7l-1.656 2.462a1.89 1.89 0 0 0-.344.998A1.9 1.9 0 0 0 11 17a1.9 1.9 0 0 0 2-1.777a1.98 1.98 0 0 0-.375-1.047zm-5 4l-1.656 2.462a1.89 1.89 0 0 0-.344.998A1.9 1.9 0 0 0 6 21a1.9 1.9 0 0 0 2-1.777a1.98 1.98 0 0 0-.375-1.047z"/>' }, "train": { "body": '<path fill="currentColor" d="M21 3H11a5.006 5.006 0 0 0-5 5v12a4.99 4.99 0 0 0 3.582 4.77L7.769 29h2.176l1.714-4h8.682l1.714 4h2.176l-1.813-4.23A4.99 4.99 0 0 0 26 20V8a5.006 5.006 0 0 0-5-5ZM11 5h10a2.995 2.995 0 0 1 2.816 2H8.184A2.995 2.995 0 0 1 11 5Zm13 14h-3v2h2.816A2.995 2.995 0 0 1 21 23H11a2.995 2.995 0 0 1-2.816-2H11v-2H8v-2h16Zm0-4H8V9h16Z"/>' }, "train-heart": { "body": '<path fill="currentColor" d="M27.303 2a2.661 2.661 0 0 0-1.908.806l-.393.405l-.397-.405a2.661 2.661 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L25.002 11l4.209-4.298a2.8 2.8 0 0 0 0-3.896A2.661 2.661 0 0 0 27.303 2zM22 13v3H6v-6h9V8H6.184A2.995 2.995 0 0 1 9 6h6V4H9a5.006 5.006 0 0 0-5 5v12a4.99 4.99 0 0 0 3.582 4.77L5.769 30h2.176l1.714-4h8.682l1.714 4h2.176l-1.813-4.23A4.99 4.99 0 0 0 24 21v-8zm0 7h-3v2h2.816A2.995 2.995 0 0 1 19 24H9a2.995 2.995 0 0 1-2.816-2H9v-2H6v-2h16z"/>' }, "train-profile": { "body": '<path fill="currentColor" d="M30 25H2v2h2v2h2v-2h5v2h2v-2h5v2h2v-2h5v2h2v-2h3v-2zM8 16H2v-2h6v-2H2v-2h6a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2z"/><path fill="currentColor" d="m28.55 14.23l-8.58-7.864A8.977 8.977 0 0 0 13.888 4H2v2h10v4a2.002 2.002 0 0 0 2 2h9.156l4.042 3.705A2.472 2.472 0 0 1 25.528 20H2v2h23.527a4.473 4.473 0 0 0 3.023-7.77ZM14 10V6.005a6.977 6.977 0 0 1 4.618 1.835L20.975 10Z"/>' }, "train-speed": { "body": '<path fill="currentColor" d="M30 25H2v2h2v2h2v-2h5v2h2v-2h5v2h2v-2h5v2h2v-2h3v-2zm-.286-8.41L18.15 8.64A14.933 14.933 0 0 0 9.652 6H2v2h7.652a12.946 12.946 0 0 1 7.365 2.287l1.036.713H9v2h11.962l7.62 5.238A.966.966 0 0 1 28.033 20H2v2h26.034a2.966 2.966 0 0 0 1.68-5.41z"/>' }, "train-ticket": { "body": '<path fill="currentColor" d="M29.126 7.125a1.125 1.125 0 1 1 0-2.25H30V2H18v2.875h.875a1.125 1.125 0 0 1 0 2.25H18V10h12V7.125Z"/><path fill="currentColor" d="M22 13v3H6v-6h9V8H6.186a2.995 2.995 0 0 1 2.816-2h6V4H9a5.006 5.006 0 0 0-5 5v12a4.99 4.99 0 0 0 3.582 4.77L5.77 30h2.176l1.714-4h8.681l1.714 4h2.176l-1.812-4.23A4.99 4.99 0 0 0 24 21v-8Zm0 7h-3v2h2.816a2.995 2.995 0 0 1-2.815 2H9a2.995 2.995 0 0 1-2.816-2H9v-2H6v-2h16Z"/>' }, "train-time": { "body": '<path fill="none" d="m25.496 10.088l-2.622-2.622V3h2.25v3.534l1.964 1.964l-1.592 1.59z"/><path fill="currentColor" d="M24 1a6 6 0 1 0 6 6a6.007 6.007 0 0 0-6-6Zm1.497 9.088l-2.622-2.622V3h2.25v3.534l1.964 1.964Z"/><path fill="currentColor" d="M6 16v-6h9V8H6.184A2.995 2.995 0 0 1 9 6h6V4H9a5.006 5.006 0 0 0-5 5v12a4.99 4.99 0 0 0 3.582 4.77L5.769 30h2.176l1.714-4h8.682l1.714 4h2.176l-1.813-4.23A4.99 4.99 0 0 0 24 21v-5Zm16 4h-3v2h2.816A2.995 2.995 0 0 1 19 24H9a2.995 2.995 0 0 1-2.816-2H9v-2H6v-2h16Z"/>' }, "tram": { "body": '<path fill="currentColor" d="M21 6h-4V4h6V2H9v2h6v2h-4a5.006 5.006 0 0 0-5 5v11a4.99 4.99 0 0 0 3.582 4.77L8.198 30h2.176l1.285-3h8.682l1.286 3h2.175l-1.384-3.23A4.99 4.99 0 0 0 26 22V11a5.006 5.006 0 0 0-5-5ZM11 8h10a2.995 2.995 0 0 1 2.816 2H8.184A2.995 2.995 0 0 1 11 8Zm13 13h-3v2h2.816A2.995 2.995 0 0 1 21 25H11a2.995 2.995 0 0 1-2.816-2H11v-2H8v-2h16Zm0-4H8v-5h16Z"/>' }, "transform-binary": { "body": '<path fill="currentColor" d="M23 20h-2c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h2c1.1 0 2 .9 2 2v4c0 1.1-.9 2-2 2zm-2-6v4h2v-4h-2zm-6-2h2v8h-2z"/><path fill="currentColor" d="M11 20H9c-1.1 0-2-.9-2-2v-4c0-1.1.9-2 2-2h2c1.1 0 2 .9 2 2v4c0 1.1-.9 2-2 2zm-2-6v4h2v-4H9zm7-12v2c6.6 0 12 5.4 12 12s-5.4 12-12 12v2c7.7 0 14-6.3 14-14S23.7 2 16 2zM8.2 25.1L7 26.7c1.2 1 2.6 1.9 4.2 2.4l.7-1.9c-1.4-.5-2.6-1.2-3.7-2.1zm-4-7.1l-2 .4c.3 1.6.9 3.2 1.7 4.6l1.7-1c-.7-1.2-1.2-2.6-1.4-4zm1.4-8L3.9 9c-.8 1.4-1.4 3-1.6 4.6l2 .3c.1-1.4.6-2.7 1.3-3.9zm6.2-5.2l-.7-1.9C9.6 3.5 8.2 4.3 7 5.3l1.3 1.5c1-.8 2.2-1.5 3.5-2z"/>' }, "transform-instructions": { "body": '<path fill="currentColor" d="M23 17v-2h-2.1c-.1-.6-.4-1.2-.7-1.8l1.5-1.5l-1.4-1.4l-1.5 1.5c-.5-.3-1.1-.6-1.8-.7V9h-2v2.1c-.6.1-1.2.4-1.8.7l-1.5-1.5l-1.4 1.4l1.5 1.5c-.3.5-.6 1.1-.7 1.8H9v2h2.1c.1.6.4 1.2.7 1.8l-1.5 1.5l1.4 1.4l1.5-1.5c.5.3 1.1.6 1.8.7V23h2v-2.1c.6-.1 1.2-.4 1.8-.7l1.5 1.5l1.4-1.4l-1.5-1.5c.3-.5.6-1.1.7-1.8H23zm-7 2c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3z"/><path fill="currentColor" d="M16 2v2c6.6 0 12 5.4 12 12s-5.4 12-12 12v2c7.7 0 14-6.3 14-14S23.7 2 16 2zM8.2 25.1L7 26.7c1.2 1 2.6 1.9 4.2 2.4l.7-1.9c-1.4-.5-2.6-1.2-3.7-2.1zm-4-7.1l-2 .4c.3 1.6.9 3.2 1.7 4.6l1.7-1c-.7-1.2-1.2-2.6-1.4-4zm1.4-8L3.9 9c-.8 1.4-1.4 3-1.6 4.6l2 .3c.1-1.4.6-2.7 1.3-3.9zm6.2-5.2l-.7-1.9C9.6 3.5 8.2 4.3 7 5.3l1.3 1.5c1-.8 2.2-1.5 3.5-2z"/>' }, "transform-language": { "body": '<path fill="currentColor" d="M10 19h8v2h-8zm0-4h12v2H10zm0-4h12v2H10z"/><path fill="currentColor" d="M16 2v2c6.6 0 12 5.4 12 12s-5.4 12-12 12v2c7.7 0 14-6.3 14-14S23.7 2 16 2zM8.2 25.1L7 26.7c1.2 1 2.6 1.9 4.2 2.4l.7-1.9c-1.4-.5-2.6-1.2-3.7-2.1zm-4-7.1l-2 .4c.3 1.6.9 3.2 1.7 4.6l1.7-1c-.7-1.2-1.2-2.6-1.4-4zm1.4-8L3.9 9c-.8 1.4-1.4 3-1.6 4.6l2 .3c.1-1.4.6-2.7 1.3-3.9zm6.2-5.2l-.7-1.9C9.6 3.5 8.2 4.3 7 5.3l1.3 1.5c1-.8 2.2-1.5 3.5-2z"/>' }, "transgender": { "body": '<path fill="currentColor" d="M22 2v2h4.586l-6.402 6.401a6.947 6.947 0 0 0-8.368 0L10.414 9L13 6.414L11.586 5L9 7.586L5.414 4H10V2H2v8h2V5.414L7.586 9L5 11.585L6.414 13L9 10.414l1.401 1.401A6.979 6.979 0 0 0 15 22.92V25h-4v2h4v3h2v-3h4v-2h-4v-2.08a6.979 6.979 0 0 0 4.598-11.104L28 5.414V10h2V2Zm-6 19a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5Z"/>' }, "translate": { "body": '<path fill="currentColor" d="M27.85 29H30l-6-15h-2.35l-6 15h2.15l1.6-4h6.85zm-7.65-6l2.62-6.56L25.45 23zM18 7V5h-7V2H9v3H2v2h10.74a14.71 14.71 0 0 1-3.19 6.18A13.5 13.5 0 0 1 7.26 9h-2.1a16.47 16.47 0 0 0 3 5.58A16.84 16.84 0 0 1 3 18l.75 1.86A18.47 18.47 0 0 0 9.53 16a16.92 16.92 0 0 0 5.76 3.84L16 18a14.48 14.48 0 0 1-5.12-3.37A17.64 17.64 0 0 0 14.8 7z"/>' }, "transmission-lte": { "body": '<path fill="currentColor" d="m10.57 30l.933-2h8.993l.933 2h2.208L17 15.778V11h-2v4.778L8.363 30zM16 18.365L17.697 22h-3.393zM13.37 24h5.26l.933 2h-7.126zM10.783 9.332a7 7 0 0 1 10.434 0l-1.49 1.334a5 5 0 0 0-7.453 0z"/><path fill="currentColor" d="M7.2 6.4a11.002 11.002 0 0 1 17.6 0l-1.6 1.2a9 9 0 0 0-14.401 0Z"/>' }, "transpose": { "body": '<path fill="currentColor" d="M19 26h-5v-2h5a5.005 5.005 0 0 0 5-5v-5h2v5a7.008 7.008 0 0 1-7 7zM8 30H4a2.002 2.002 0 0 1-2-2V14a2.002 2.002 0 0 1 2-2h4a2.002 2.002 0 0 1 2 2v14a2.002 2.002 0 0 1-2 2zM4 14v14h4V14zm24-4H14a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h14a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM14 4v4h14V4z"/>' }, "trash-can": { "body": '<path fill="currentColor" d="M12 12h2v12h-2zm6 0h2v12h-2z"/><path fill="currentColor" d="M4 6v2h2v20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8h2V6zm4 22V8h16v20zm4-26h8v2h-8z"/>' }, "tree": { "body": '<path fill="currentColor" d="M12 30H9v-2h3V15.566l-3.515-2.109l1.03-1.714l3.514 2.108A2.011 2.011 0 0 1 14 15.566V28a2.002 2.002 0 0 1-2 2Z"/><path fill="currentColor" d="M22 30h-3a2.002 2.002 0 0 1-2-2V17h6a4 4 0 0 0 3.981-4.396A4.149 4.149 0 0 0 22.785 9h-1.583l-.177-.779C20.452 5.696 18.031 4 15 4a6.02 6.02 0 0 0-5.441 3.486l-.309.667l-.863-.114A2.771 2.771 0 0 0 8 8a4 4 0 1 0 0 8v2A6 6 0 1 1 8 6l.079.001A8.027 8.027 0 0 1 15 2c3.679 0 6.692 1.978 7.752 5h.033a6.164 6.164 0 0 1 6.187 5.414A6.001 6.001 0 0 1 23 19h-4v9h3Z"/>' }, "tree-fall-risk": { "body": '<path fill="none" d="M23.75 10h-1.5V6h1.5ZM23 11a1 1 0 1 0 1 1a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M29.912 13.935L23.628 2.371a.718.718 0 0 0-1.256 0l-6.284 11.564A.72.72 0 0 0 16.72 15h12.56a.72.72 0 0 0 .631-1.065zM22.25 6h1.5v4h-1.5zm.75 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1zm3 6v-2h-9v11a2.003 2.003 0 0 0 2 2h3v-2h-3v-9zM12 30H9v-2h3V15.566l-3.515-2.109l1.03-1.714l3.514 2.108A2.011 2.011 0 0 1 14 15.566V28a2.002 2.002 0 0 1-2 2z"/><path fill="currentColor" d="m18.664 5.006l.96-1.767A8.932 8.932 0 0 0 15 2a8.027 8.027 0 0 0-6.921 4.001L8 6a6 6 0 0 0 0 12v-2a4 4 0 0 1 0-8a2.7 2.7 0 0 1 .387.04l.863.113l.309-.667A6.02 6.02 0 0 1 15 4a6.892 6.892 0 0 1 3.664 1.006Z"/>' }, "tree-view": { "body": '<path fill="currentColor" d="M30 20v-8h-8v3h-5V7a2 2 0 0 0-2-2h-5V2H2v8h8V7h5v18a2 2 0 0 0 2 2h5v3h8v-8h-8v3h-5v-8h5v3ZM8 8H4V4h4Zm16 16h4v4h-4Zm0-10h4v4h-4Z"/>' }, "tree-view-alt": { "body": '<path fill="currentColor" d="M23 9.005h6a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-6a2 2 0 0 0-2 2v1H11v-1a2 2 0 0 0-2-2H3a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h4v20a2.002 2.002 0 0 0 2 2h4v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-6a2 2 0 0 0-2 2v1h-4v-9h4v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-6a2 2 0 0 0-2 2v1h-4v-9h4v1a2 2 0 0 0 2 2Zm0-6h6v4h-6Zm-14 4H3v-4h6Zm14 18h6v4h-6Zm0-11h6v4h-6Z"/>' }, "trophy": { "body": '<path fill="currentColor" d="M26 7h-2V6a2.002 2.002 0 0 0-2-2H10a2.002 2.002 0 0 0-2 2v1H6a2.002 2.002 0 0 0-2 2v3a4.005 4.005 0 0 0 4 4h.322A8.169 8.169 0 0 0 15 21.934V26h-5v2h12v-2h-5v-4.069A7.966 7.966 0 0 0 23.74 16H24a4.005 4.005 0 0 0 4-4V9a2.002 2.002 0 0 0-2-2ZM8 14a2.002 2.002 0 0 1-2-2V9h2Zm14 0a6 6 0 0 1-6.186 5.997A6.2 6.2 0 0 1 10 13.707V6h12Zm4-2a2.002 2.002 0 0 1-2 2V9h2Z"/>' }, "trophy-filled": { "body": '<path fill="currentColor" d="M26 7h-2V6a2.002 2.002 0 0 0-2-2H10a2.002 2.002 0 0 0-2 2v1H6a2.002 2.002 0 0 0-2 2v3a4.005 4.005 0 0 0 4 4h.322A8.169 8.169 0 0 0 15 21.934V26h-5v2h12v-2h-5v-4.069A7.966 7.966 0 0 0 23.74 16H24a4.005 4.005 0 0 0 4-4V9a2.002 2.002 0 0 0-2-2ZM8 14a2.002 2.002 0 0 1-2-2V9h2Zm18-2a2.002 2.002 0 0 1-2 2V9h2Z"/>' }, "tropical-storm": { "body": '<path fill="currentColor" d="M16 21a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5Zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3Z"/><path fill="currentColor" d="m22.652 4.182l-2.177 2.514l-1.404 1.621l1.715 1.288A7.936 7.936 0 0 1 23.996 16l.001.058l.002.041c.018.432.241 10.111-14.654 11.722l2.18-2.517l1.404-1.621l-1.715-1.288A7.936 7.936 0 0 1 8.004 16l-.001-.058L8 15.901c-.018-.431-.24-10.094 14.651-11.719M24.998 2l-.05.001C5.254 2.915 6.005 16 6.005 16a9.975 9.975 0 0 0 4.01 7.995l-3.777 4.36A1.004 1.004 0 0 0 7.002 30l.05-.001C26.747 29.085 25.995 16 25.995 16a9.976 9.976 0 0 0-4.009-7.995l3.776-4.36A1.004 1.004 0 0 0 24.998 2Z"/>' }, "tropical-storm-model-tracks": { "body": '<path fill="currentColor" d="M10 17a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Zm0-6a2 2 0 1 0 2 2a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M14.819 6.65c.116-.121 1.864-1.919 2.888-2.943A1 1 0 0 0 17 2C11.812 2 2 4.299 2 13a7.894 7.894 0 0 0 3.181 6.35a370.02 370.02 0 0 1-2.888 2.943A1 1 0 0 0 3 24c5.188 0 15-2.299 15-11a7.893 7.893 0 0 0-3.181-6.35zM9.706 20.793a20.94 20.94 0 0 1-4.093.985c.162-.166 2.769-2.905 2.769-2.905l-1.174-.607A5.906 5.906 0 0 1 4 13c0-3.667 2.118-6.289 6.293-7.793a20.94 20.94 0 0 1 4.094-.985c-.227.232-2.77 2.905-2.77 2.905l1.176.607A5.907 5.907 0 0 1 16 13c0 3.667-2.118 6.289-6.293 7.793zM30 17l-5-5l-5 5l1.413 1.415L24 15.834V19a9.01 9.01 0 0 1-9 9h-3v2h3a11.012 11.012 0 0 0 11-11v-3.168l2.586 2.582z"/>' }, "tropical-storm-tracks": { "body": '<path fill="currentColor" d="M16 21a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5Zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3Z"/><path fill="currentColor" d="M26.86 12.48a12.928 12.928 0 0 0-4.857-4.999l.442-.459c.82-.848 1.93-1.982 3.262-3.315A1 1 0 0 0 25 2c-.354 0-8.736.049-14.269 4.302a12.15 12.15 0 0 0-3.25 3.696l-.459-.442c-.848-.821-1.982-1.93-3.315-3.263A1 1 0 0 0 2 7c0 .36.05 8.874 4.406 14.402a12.102 12.102 0 0 0 3.592 3.117l-.657.68c-.795.82-1.828 1.874-3.048 3.094A1 1 0 0 0 7 30c.286 0 7.061-.035 12.459-3.106a12.962 12.962 0 0 0 5.06-4.892q.306.294.68.657c.82.795 1.874 1.828 3.094 3.048A1 1 0 0 0 30 25c0-.288-.036-7.112-3.14-12.52Zm-3.03 6.108l-.547 1.367a10.541 10.541 0 0 1-4.813 5.201a24.351 24.351 0 0 1-8.886 2.658c.44-.45 3.828-3.983 3.828-3.983l-1.368-.547a9.802 9.802 0 0 1-4.067-3.12c-2.54-3.224-3.458-7.762-3.79-10.58c.544.534 3.982 3.827 3.982 3.827l.546-1.367a9.857 9.857 0 0 1 3.235-4.156c3.216-2.473 7.68-3.373 10.466-3.701c-.534.543-3.828 3.982-3.828 3.982l1.368.547a10.52 10.52 0 0 1 5.17 4.76a24.29 24.29 0 0 1 2.688 8.94c-.45-.44-3.984-3.828-3.984-3.828Z"/>' }, "tropical-warning": { "body": '<path fill="currentColor" d="M27.949 25.684a1 1 0 0 0-1.896-.005A3.44 3.44 0 0 1 23 28a3.44 3.44 0 0 1-3.053-2.321a1 1 0 0 0-1.896.005A3.438 3.438 0 0 1 15 28h-.434C13.924 26.794 12 22.312 12 12v-.131l1.117.744a6.46 6.46 0 0 1 1.318 1.177l1-1.842a8.447 8.447 0 0 0-1.209-.998L12.802 10h1.531a6.986 6.986 0 0 1 1.994.307l.975-1.795A9.006 9.006 0 0 0 14.333 8h-1.216A7.033 7.033 0 0 1 18 6h.667l1.087-2H18a9.036 9.036 0 0 0-7 3.364A9.036 9.036 0 0 0 4 4H2v2h2a7.03 7.03 0 0 1 4.883 2H7.667a9.06 9.06 0 0 0-5.4 1.8L.4 11.2l1.2 1.6l1.867-1.4a7.04 7.04 0 0 1 4.2-1.4h1.53l-1.424.95A8.457 8.457 0 0 0 4 18h2a6.46 6.46 0 0 1 2.883-5.387L10 11.87V12c0 8.937 1.4 13.754 2.355 16H2v2h13a4.932 4.932 0 0 0 4-1.987a5.02 5.02 0 0 0 8 0a4.995 4.995 0 0 0 3 1.883v-2.084a3.762 3.762 0 0 1-2.051-2.128Z"/><path fill="none" d="M23.75 10h-1.5V6h1.5ZM23 11a1 1 0 1 0 1 1a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M29.912 13.935L23.628 2.371a.718.718 0 0 0-1.256 0l-6.284 11.564A.72.72 0 0 0 16.72 15h12.56a.72.72 0 0 0 .631-1.065ZM22.25 6h1.5v4h-1.5Zm.75 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "tsq": { "body": '<path fill="currentColor" d="M19 26h11v2H19zm0-4h11v2H19zm11-2H19v-8h11v8zm-9-2h7v-4h-7v4zM19 8h11v2H19zm0-4h11v2H19zm-8.707 14.707L8 16.414V12h2v3.586l1.707 1.707l-1.414 1.414z"/><path fill="currentColor" d="M9 24c-4.411 0-8-3.589-8-8s3.589-8 8-8s8 3.589 8 8s-3.589 8-8 8Zm0-14c-3.308 0-6 2.692-6 6s2.692 6 6 6s6-2.692 6-6s-2.692-6-6-6Z"/>' }, "tsunami": { "body": '<path fill="currentColor" d="M30 26h-6a10.035 10.035 0 0 1-6.927-17.262A11.963 11.963 0 0 0 12.993 8a6.903 6.903 0 0 0-6.03 3.42C4.997 14.435 4 19.34 4 26H2c0-7.054 1.106-12.327 3.287-15.673A8.906 8.906 0 0 1 12.994 6H13a14.762 14.762 0 0 1 6.461 1.592a1 1 0 0 1 .087 1.722A8.025 8.025 0 0 0 24 24h6Z"/>' }, "tsv": { "body": '<path fill="currentColor" d="m28 9l-2 13l-2-13h-2l2.516 14h2.968L30 9h-2zM18 23h-6v-2h6v-4h-4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h6v2h-6v4h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zM2 11h3v12h2V11h3V9H2v2z"/>' }, "two-factor-authentication": { "body": '<path fill="currentColor" d="m11 23.18l-2-2.001l-1.411 1.41L11 26l6-6l-1.41-1.41L11 23.18zM28 30h-4v-2h4V16h-4V8a4.005 4.005 0 0 0-4-4V2a6.007 6.007 0 0 1 6 6v6h2a2.002 2.002 0 0 1 2 2v12a2.002 2.002 0 0 1-2 2z"/><path fill="currentColor" d="M20 14h-2V8A6 6 0 0 0 6 8v6H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2ZM8 8a4 4 0 0 1 8 0v6H8Zm12 20H4V16h16Z"/>' }, "two-person-lift": { "body": '<path fill="currentColor" d="m26.96 30l-1.921-6.725a1 1 0 0 1 .336-1.056l4.499-3.599l-1.354-5.419l-2.738 3.424A1.003 1.003 0 0 1 25 17h-5v-2h4.52l3.7-4.625a1 1 0 0 1 1.75.383l2 8a.999.999 0 0 1-.344 1.023l-4.48 3.584l1.738 6.086zM23 5.5A3.5 3.5 0 1 1 26.5 9A3.504 3.504 0 0 1 23 5.5zm2 0A1.5 1.5 0 1 0 26.5 4A1.502 1.502 0 0 0 25 5.5z"/><path fill="currentColor" d="M20.004 19A2.004 2.004 0 0 1 18 16.996v-1.992A2.004 2.004 0 0 1 20.004 13H22v-3H10v3h1.996A2.004 2.004 0 0 1 14 15.004v1.992A2.004 2.004 0 0 1 11.996 19H10v3h12v-3Z"/><path fill="currentColor" d="m5.04 30l1.921-6.725a1.001 1.001 0 0 0-.336-1.056L2.126 18.62l1.355-5.418l2.738 3.423A1.003 1.003 0 0 0 7 17h5v-2H7.48l-3.699-4.625a1 1 0 0 0-1.75.383l-2 8a.999.999 0 0 0 .344 1.023l4.48 3.584l-1.739 6.086zM5.5 9A3.5 3.5 0 1 1 9 5.5A3.504 3.504 0 0 1 5.5 9zm0-5A1.5 1.5 0 1 0 7 5.5A1.502 1.502 0 0 0 5.5 4z"/>' }, "txt": { "body": '<path fill="currentColor" d="M21 11h3v12h2V11h3V9h-8v2zm-1-2h-2l-2 6l-2-6h-2l2.75 7L12 23h2l2-6l2 6h2l-2.75-7L20 9zM3 11h3v12h2V11h3V9H3v2z"/>' }, "txt-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zM21 4h3v12h2V4h3V2h-8v2zm-1-2h-2l-2 6l-2-6h-2l2.752 7L12 16h2l2-6l2 6h2l-2.755-7L20 2zM3 4h3v12h2V4h3V2H3v2z"/>' }, "type-pattern": { "body": '<path fill="currentColor" d="M30 15H17V2h-2v13H2v2h13v13h2V17h13v-2z"/><path fill="currentColor" d="M25.586 20L27 21.414L23.414 25L27 28.586L25.586 30l-5-5l5-5zM11 30H3a1 1 0 0 1-.894-1.447l4-8a1.041 1.041 0 0 1 1.789 0l4 8A1 1 0 0 1 11 30zm-6.382-2h4.764L7 23.236zM28 12h-6a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h6a2.002 2.002 0 0 1 2 2v6a2.002 2.002 0 0 1-2 2zm-6-8v6h6.001L28 4zM7 12a5 5 0 1 1 5-5a5.006 5.006 0 0 1-5 5zm0-8a3 3 0 1 0 3 3a3.003 3.003 0 0 0-3-3z"/>' }, "types": { "body": '<path fill="currentColor" d="m30 16l-8 8l-1.414-1.414L27.172 16l-6.586-6.586L22 8l8 8z"/><path fill="currentColor" d="M16 22a.997.997 0 0 1-.707-.293l-5-5a1 1 0 0 1 0-1.414l5-5a1 1 0 0 1 1.414 0l5 5a1 1 0 0 1 0 1.414l-5 5A.997.997 0 0 1 16 22Zm-3.586-6L16 19.586L19.586 16L16 12.414Z"/><path fill="currentColor" d="m2 16l8-8l1.414 1.414L4.828 16l6.586 6.586L10 24l-8-8z"/>' }, "u1": { "body": '<path d="M13 23H9a2 2 0 0 1-2-2V9h2v12h4V9h2v12a2 2 0 0 1-2 2z" fill="currentColor"/><path d="M22 21V9h-5v2h3v10h-3v2h8v-2h-3z" fill="currentColor"/>', "hidden": true }, "u2": { "body": '<path d="M13 23H9a2 2 0 0 1-2-2V9h2v12h4V9h2v12a2 2 0 0 1-2 2z" fill="currentColor"/><path d="M25 23h-8v-6a2 2 0 0 1 2-2h4v-4h-6V9h6a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-4v4h6z" fill="currentColor"/>', "hidden": true }, "u3": { "body": '<path d="M13 23H9a2 2 0 0 1-2-2V9h2v12h4V9h2v12a2 2 0 0 1-2 2z" fill="currentColor"/><path d="M23 9h-6v2h6v4h-5v2h5v4h-6v2h6a2 2 0 0 0 2-2V11a2 2 0 0 0-2-2z" fill="currentColor"/>', "hidden": true }, "umbrella": { "body": '<path fill="currentColor" d="M29.985 15.83A14.38 14.38 0 0 0 17 4.046V2h-2v2.046A14.38 14.38 0 0 0 2.015 15.83a1 1 0 0 0 1.495 1.03A4.855 4.855 0 0 1 6 16a4.865 4.865 0 0 1 4.14 2.51a1.04 1.04 0 0 0 1.72 0A5.02 5.02 0 0 1 15 16.126V25.5a2.5 2.5 0 0 1-5 0V25H8v.5a4.5 4.5 0 0 0 9 0v-9.375a5.02 5.02 0 0 1 3.14 2.386a1 1 0 0 0 1.72 0A4.865 4.865 0 0 1 26 16a4.855 4.855 0 0 1 2.49.86a1 1 0 0 0 1.496-1.03ZM6 14a5.408 5.408 0 0 0-1.503.213A12.441 12.441 0 0 1 12.985 6.4a14.516 14.516 0 0 0-3.046 8.934A6.544 6.544 0 0 0 6 14Zm10 0a6.553 6.553 0 0 0-4.056 1.43c.037-2.22.608-6.49 4.056-9.176c3.43 2.677 4.009 6.95 4.052 9.173A6.553 6.553 0 0 0 16 14Zm10 0a6.544 6.544 0 0 0-3.939 1.333a14.516 14.516 0 0 0-3.046-8.934a12.441 12.441 0 0 1 8.488 7.814A5.408 5.408 0 0 0 26 14Z"/>' }, "undefined": { "body": '<path fill="currentColor" d="M11 14h10v4H11z"/><path fill="currentColor" d="M29.391 14.527L17.473 2.609A2.078 2.078 0 0 0 16 2c-.533 0-1.067.203-1.473.609L2.609 14.527C2.203 14.933 2 15.466 2 16s.203 1.067.609 1.473L14.526 29.39c.407.407.941.61 1.474.61s1.067-.203 1.473-.609L29.39 17.474c.407-.407.61-.94.61-1.474s-.203-1.067-.609-1.473zM16 28.036L3.965 16L16 3.964L28.036 16L16 28.036z"/>' }, "undefined-filled": { "body": '<path fill="currentColor" d="M29.391 14.527L17.473 2.609C17.067 2.203 16.533 2 16 2s-1.067.203-1.473.609L2.609 14.527C2.203 14.933 2 15.466 2 16s.203 1.067.609 1.473L14.526 29.39c.407.407.941.61 1.474.61s1.067-.203 1.473-.609L29.39 17.474c.407-.407.61-.94.61-1.474s-.203-1.067-.609-1.473zM21 18H11v-4h10v4z"/><path fill="none" d="M11 14h10v4H11z"/>' }, "undo": { "body": '<path fill="currentColor" d="M20 10H7.815l3.587-3.586L10 5l-6 6l6 6l1.402-1.415L7.818 12H20a6 6 0 0 1 0 12h-8v2h8a8 8 0 0 0 0-16Z"/>' }, "ungroup-objects": { "body": '<path fill="currentColor" d="M30 14v-4h-4v2h-6V6h2V2h-4v2H6V2H2v4h2v12H2v4h4v-2h6v6h-2v4h4v-2h12v2h4v-4h-2V14ZM6 6h12v12H6Zm20 20H14v-6h4v2h4v-4h-2v-4h6Z"/>' }, "unknown": { "body": '<circle cx="16" cy="22.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M17 19h-2v-4h2c1.103 0 2-.897 2-2s-.897-2-2-2h-2c-1.103 0-2 .897-2 2v.5h-2V13c0-2.206 1.794-4 4-4h2c2.206 0 4 1.794 4 4s-1.794 4-4 4v2z"/><path fill="currentColor" d="M29.391 14.527L17.473 2.609A2.078 2.078 0 0 0 16 2c-.533 0-1.067.203-1.473.609L2.609 14.527C2.203 14.933 2 15.466 2 16s.203 1.067.609 1.473L14.526 29.39c.407.407.941.61 1.474.61s1.067-.203 1.473-.609L29.39 17.474c.407-.407.61-.94.61-1.474s-.203-1.067-.609-1.473zM16 28.036L3.965 16L16 3.964L28.036 16L16 28.036z"/>' }, "unknown-filled": { "body": '<path fill="currentColor" d="M29.391 14.527L17.473 2.609C17.067 2.203 16.533 2 16 2s-1.067.203-1.473.609L2.609 14.527C2.203 14.933 2 15.466 2 16s.203 1.067.609 1.473L14.526 29.39c.407.407.941.61 1.474.61s1.067-.203 1.473-.609L29.39 17.474c.407-.407.61-.94.61-1.474s-.203-1.067-.609-1.473zM16 24a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3zm1.125-6.752v1.877h-2.25V15H17c1.034 0 1.875-.841 1.875-1.875S18.034 11.25 17 11.25h-2a1.877 1.877 0 0 0-1.875 1.875v.5h-2.25v-.5A4.13 4.13 0 0 1 15 9h2a4.13 4.13 0 0 1 4.125 4.125a4.13 4.13 0 0 1-4 4.123z"/><path fill="none" d="M16 21a1.5 1.5 0 1 1-.001 3.001A1.5 1.5 0 0 1 16 21zm1.125-3.752a4.13 4.13 0 0 0 4-4.123A4.13 4.13 0 0 0 17 9h-2a4.13 4.13 0 0 0-4.125 4.125v.5h2.25v-.5c0-1.034.841-1.875 1.875-1.875h2c1.034 0 1.875.841 1.875 1.875S18.034 15 17 15h-2.125v4.125h2.25v-1.877z"/>' }, "unlink": { "body": '<path fill="currentColor" d="m3.584 5.002l1.414-1.414l3.416 3.414L7 8.417zm19.997 19.99l1.415-1.414l3.414 3.416l-1.414 1.414zM11 2h2v4h-2zm-9 9h4v2H2zm24 8h4v2h-4zm-7 7h2v4h-2zm-2.42-4.93l-3.71 3.72a4 4 0 1 1-5.66-5.66l3.72-3.72L9.51 14L5.8 17.72a6 6 0 0 0-.06 8.54A6 6 0 0 0 10 28a6.07 6.07 0 0 0 4.32-1.8L18 22.49zm-1.17-10.14l3.72-3.72a4 4 0 1 1 5.66 5.66l-3.72 3.72L22.49 18l3.71-3.72a6 6 0 0 0 .06-8.54A6 6 0 0 0 22 4a6.07 6.07 0 0 0-4.32 1.8L14 9.51z"/>' }, "unlocked": { "body": '<path fill="currentColor" d="M24 14H12V8a4 4 0 0 1 8 0h2a6 6 0 0 0-12 0v6H8a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2Zm0 14H8V16h16Z"/>' }, "unsaved": { "body": '<path fill="currentColor" d="M30 19.4L28.6 18L25 21.6L21.4 18L20 19.4l3.6 3.6l-3.6 3.6l1.4 1.4l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6z"/><path fill="currentColor" d="M16 26h-4v-8h4v-2h-4c-1.1 0-2 .9-2 2v8H6V6h4v4c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V6.4l4 4V16h2v-6c0-.3-.1-.5-.3-.7l-5-5c-.2-.2-.4-.3-.7-.3H6c-1.1 0-2 .9-2 2v20c0 1.1.9 2 2 2h10v-2zM12 6h8v4h-8V6z"/>' }, "up-to-top": { "body": '<path fill="currentColor" d="M16 14L6 24l1.4 1.4l8.6-8.6l8.6 8.6L26 24zM4 8h24v2H4z"/>' }, "update-now": { "body": '<path fill="currentColor" d="m27 25.586l-2-2V21h-2v3.414L25.586 27L27 25.586z"/><path fill="currentColor" d="M24 31a7 7 0 1 1 7-7a7.008 7.008 0 0 1-7 7zm0-12a5 5 0 1 0 5 5a5.005 5.005 0 0 0-5-5zm-8 9A12.013 12.013 0 0 1 4 16H2a14.016 14.016 0 0 0 14 14zM12 8H7.078A11.984 11.984 0 0 1 28 16h2A13.978 13.978 0 0 0 6 6.234V2H4v8h8z"/>' }, "upgrade": { "body": '<path fill="currentColor" d="M21 24H11a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm0 4H11v-2h10zm7.707-13.707l-12-12a1 1 0 0 0-1.414 0l-12 12A1 1 0 0 0 4 16h5v4a2.002 2.002 0 0 0 2 2h10a2.003 2.003 0 0 0 2-2v-4h5a1 1 0 0 0 .707-1.707zM21 14v6H11v-6H6.414L16 4.414L25.586 14z"/>' }, "upload": { "body": '<path fill="currentColor" d="m6 18l1.41 1.41L15 11.83V30h2V11.83l7.59 7.58L26 18L16 8L6 18zM6 8V4h20v4h2V4a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v4z"/>' }, "usb": { "body": '<path fill="currentColor" d="M24 15V6a2 2 0 0 0-2-2H10a2 2 0 0 0-2 2v9a2 2 0 0 0-2 2v11h2V17h16v11h2V17a2 2 0 0 0-2-2ZM10 6h12v9H10Z"/><path fill="currentColor" d="M12 10h3v2h-3zm5 0h3v2h-3z"/>' }, "user": { "body": '<path fill="currentColor" d="M16 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7zm10 28h-2v-5a5 5 0 0 0-5-5h-6a5 5 0 0 0-5 5v5H6v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7z"/>' }, "user-access": { "body": '<path fill="currentColor" d="M16 30h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5zm21 4a1.992 1.992 0 0 0-.512.074l-1.055-1.055a3.879 3.879 0 0 0 0-4.038l1.055-1.055a2.034 2.034 0 1 0-1.414-1.414L27.02 5.567a3.879 3.879 0 0 0-4.038 0l-1.055-1.055a2.034 2.034 0 1 0-1.414 1.414l1.055 1.055a3.879 3.879 0 0 0 0 4.038l-1.055 1.055a2.034 2.034 0 1 0 1.414 1.414l1.055-1.055a3.879 3.879 0 0 0 4.038 0l1.055 1.055A1.996 1.996 0 1 0 30 12zm-7-3a2 2 0 1 1 2 2a2.002 2.002 0 0 1-2-2z"/>' }, "user-activity": { "body": '<path fill="currentColor" d="M25 23h-.021a1.002 1.002 0 0 1-.94-.726L20.87 11.19l-1.935 5.16A1 1 0 0 1 18 17h-4v-2h3.307l2.757-7.351a1 1 0 0 1 1.898.076l3.111 10.892l1.979-5.933A.999.999 0 0 1 28 12h4v2h-3.28l-2.772 8.316A.998.998 0 0 1 25 23zm-10 7h-2v-7a3.003 3.003 0 0 0-3-3H6a3.003 3.003 0 0 0-3 3v7H1v-7a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM8 8a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "user-admin": { "body": '<path fill="currentColor" d="M12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7zm10 28h-2v-5a5 5 0 0 0-5-5H9a5 5 0 0 0-5 5v5H2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7zm3-13.82l-2.59-2.59L21 15l4 4l7-7l-1.41-1.41L25 16.18z"/>' }, "user-avatar": { "body": '<path fill="currentColor" d="M16 8a5 5 0 1 0 5 5a5 5 0 0 0-5-5Zm0 8a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3Z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2Zm-6 24.377V25a3.003 3.003 0 0 1 3-3h6a3.003 3.003 0 0 1 3 3v1.377a11.899 11.899 0 0 1-12 0Zm13.992-1.451A5.002 5.002 0 0 0 19 20h-6a5.002 5.002 0 0 0-4.992 4.926a12 12 0 1 1 15.985 0Z"/>' }, "user-avatar-filled": { "body": '<path fill="none" d="M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0ZM20.5 12.5A4.5 4.5 0 1 1 16 8a4.5 4.5 0 0 1 4.5 4.5Z"/><path fill="currentColor" d="M26.749 24.93A13.99 13.99 0 1 0 2 16a13.899 13.899 0 0 0 3.251 8.93l-.02.017c.07.084.15.156.222.239c.09.103.187.2.28.3c.28.304.568.596.87.87c.092.084.187.162.28.242c.32.276.649.538.99.782c.044.03.084.069.128.1v-.012a13.901 13.901 0 0 0 16 0v.012c.044-.031.083-.07.128-.1c.34-.245.67-.506.99-.782c.093-.08.188-.159.28-.242c.302-.275.59-.566.87-.87c.093-.1.189-.197.28-.3c.071-.083.152-.155.222-.24ZM16 8a4.5 4.5 0 1 1-4.5 4.5A4.5 4.5 0 0 1 16 8ZM8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0Z"/>' }, "user-avatar-filled-alt": { "body": '<path fill="currentColor" d="M16 8a5 5 0 1 0 5 5a5 5 0 0 0-5-5Z"/><path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14.016 14.016 0 0 0 16 2Zm7.992 22.926A5.002 5.002 0 0 0 19 20h-6a5.002 5.002 0 0 0-4.992 4.926a12 12 0 1 1 15.985 0Z"/>' }, "user-certification": { "body": '<path fill="currentColor" d="m25 10l1.593 3l3.407.414l-2.5 2.253L28 19l-3-1.875L22 19l.5-3.333l-2.5-2.253L23.5 13l1.5-3zm-3 20h-2v-5a5.006 5.006 0 0 0-5-5H9a5.006 5.006 0 0 0-5 5v5H2v-5a7.008 7.008 0 0 1 7-7h6a7.008 7.008 0 0 1 7 7zM12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z"/>' }, "user-data": { "body": '<path fill="currentColor" d="M28 8h2v8h-2zm-5-3h2v11h-2zm-5 5h2v6h-2zm-2 20h-2v-6a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v6H2v-6a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 9a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "user-favorite": { "body": '<path fill="currentColor" d="M27.303 12a2.662 2.662 0 0 0-1.908.806l-.393.405l-.397-.405a2.662 2.662 0 0 0-3.816 0a2.8 2.8 0 0 0 0 3.896L25.002 21l4.209-4.298a2.8 2.8 0 0 0 0-3.896A2.662 2.662 0 0 0 27.303 12zM2 30h2v-5a5.006 5.006 0 0 1 5-5h6a5.006 5.006 0 0 1 5 5v5h2v-5a7.008 7.008 0 0 0-7-7H9a7.008 7.008 0 0 0-7 7zM12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z"/>' }, "user-favorite-alt": { "body": '<path fill="currentColor" d="M28.766 4.256A4.212 4.212 0 0 0 23 4.032a4.212 4.212 0 0 0-5.766.224a4.319 4.319 0 0 0 0 6.044l5.764 5.84l.002-.002l.002.001l5.764-5.839a4.319 4.319 0 0 0 0-6.044zm-1.424 4.639l-4.34 4.397L23 13.29l-.002.002l-4.34-4.397a2.308 2.308 0 0 1 0-3.234a2.264 2.264 0 0 1 3.156 0l1.181 1.207l.005-.005l.005.005l1.18-1.207a2.264 2.264 0 0 1 3.157 0a2.308 2.308 0 0 1 0 3.234zM16 30h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "user-favorite-alt-filled": { "body": '<path fill="currentColor" d="M26.494 3a3.474 3.474 0 0 0-2.48 1.04l-.511.522l-.516-.523a3.48 3.48 0 0 0-4.96 0a3.59 3.59 0 0 0 0 5.025l5.476 5.543l5.472-5.543a3.59 3.59 0 0 0 0-5.025A3.474 3.474 0 0 0 26.494 3zM16 30h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "user-filled": { "body": '<path fill="currentColor" d="M6 30h20v-5a7.008 7.008 0 0 0-7-7h-6a7.008 7.008 0 0 0-7 7zM9 9a7 7 0 1 0 7-7a7 7 0 0 0-7 7z"/>' }, "user-follow": { "body": '<path fill="currentColor" d="M32 14h-4v-4h-2v4h-4v2h4v4h2v-4h4v-2zM12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7zm10 28h-2v-5a5 5 0 0 0-5-5H9a5 5 0 0 0-5 5v5H2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7z"/>' }, "user-identification": { "body": '<path fill="currentColor" d="M22 11h4a1 1 0 0 1 1 1v2h-6v-2a1 1 0 0 1 1-1Z"/><circle cx="24" cy="8" r="2" fill="currentColor"/><path fill="currentColor" d="M30 18H18a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h12a2.002 2.002 0 0 1 2 2v12a2.003 2.003 0 0 1-2 2zM18 4v12h12.001L30 4zm-3 26h-2v-4a2.946 2.946 0 0 0-3-3H6a2.946 2.946 0 0 0-3 3v4H1v-4a4.951 4.951 0 0 1 5-5h4a4.951 4.951 0 0 1 5 5zM8 11a3 3 0 0 1 0 6a3 3 0 0 1 0-6m0-2a5 5 0 0 0 0 10A5 5 0 0 0 8 9z"/>' }, "user-military": { "body": '<path fill="currentColor" d="m25 13l-1.593 3l-3.407.414l2.5 2.253L22 22l3-1.875L28 22l-.5-3.333l2.5-2.253L26.5 16L25 13z"/><path fill="currentColor" d="M21.414 13.414L25 9.834l3.587 3.582L30 12l-5-5l-5 5l1.414 1.414z"/><path fill="currentColor" d="M21.414 8.414L25 4.834l3.587 3.582L30 7l-5-5l-5 5l1.414 1.414zM16 30h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "user-multiple": { "body": '<path fill="currentColor" d="M30 30h-2v-5a5.006 5.006 0 0 0-5-5v-2a7.008 7.008 0 0 1 7 7zm-8 0h-2v-5a5.006 5.006 0 0 0-5-5H9a5.006 5.006 0 0 0-5 5v5H2v-5a7.008 7.008 0 0 1 7-7h6a7.008 7.008 0 0 1 7 7zM20 2v2a5 5 0 0 1 0 10v2a7 7 0 0 0 0-14zm-8 2a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z"/>' }, "user-online": { "body": '<circle cx="26" cy="16" r="4" fill="currentColor"/><path fill="currentColor" d="M22 30h-2v-5a5 5 0 0 0-5-5H9a5 5 0 0 0-5 5v5H2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7zM12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z"/>' }, "user-profile": { "body": '<path fill="currentColor" d="M12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7zm10 28h-2v-5a5 5 0 0 0-5-5H9a5 5 0 0 0-5 5v5H2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7zm0-26h10v2H22zm0 5h10v2H22zm0 5h7v2h-7z"/>' }, "user-profile-alt": { "body": '<path fill="currentColor" d="M19 13h7v2h-7zm0-5h11v2H19zm0-5h11v2H19zm-8 27H7a2.006 2.006 0 0 1-2-2v-7a2.006 2.006 0 0 1-2-2v-6a2.946 2.946 0 0 1 3-3h6a2.946 2.946 0 0 1 3 3v6a2.006 2.006 0 0 1-2 2v7a2.006 2.006 0 0 1-2 2zM6 12a.945.945 0 0 0-1 1v6h2v9h4v-9h2v-6a.945.945 0 0 0-1-1zm3-3a4 4 0 1 1 4-4a4.012 4.012 0 0 1-4 4zm0-6a2 2 0 1 0 2 2a2.006 2.006 0 0 0-2-2z"/>' }, "user-role": { "body": '<path fill="currentColor" d="M28.07 21L22 15l6.07-6l1.43 1.41L24.86 15l4.64 4.59L28.07 21zM22 30h-2v-5a5 5 0 0 0-5-5H9a5 5 0 0 0-5 5v5H2v-5a7 7 0 0 1 7-7h6a7 7 0 0 1 7 7zM12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7z"/>' }, "user-service-desk": { "body": '<path fill="currentColor" d="m25.334 11.95l1.206-1.206a1.178 1.178 0 0 1 1.259-.258l1.47.586A1.174 1.174 0 0 1 30 12.15v2.692A1.168 1.168 0 0 1 28.823 16l-.05-.002c-10.296-.64-12.373-9.362-12.766-12.7a1.168 1.168 0 0 1 1.032-1.29A1.15 1.15 0 0 1 17.175 2h2.6a1.163 1.163 0 0 1 1.076.732l.587 1.47a1.163 1.163 0 0 1-.253 1.26l-1.206 1.206s.694 4.7 5.355 5.282zM16 30h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "user-settings": { "body": '<path fill="currentColor" d="M30 10V8h-2.101a4.968 4.968 0 0 0-.732-1.753l1.49-1.49l-1.414-1.414l-1.49 1.49A4.968 4.968 0 0 0 24 4.101V2h-2v2.101a4.968 4.968 0 0 0-1.753.732l-1.49-1.49l-1.414 1.414l1.49 1.49A4.968 4.968 0 0 0 18.101 8H16v2h2.101a4.968 4.968 0 0 0 .732 1.753l-1.49 1.49l1.414 1.414l1.49-1.49a4.968 4.968 0 0 0 1.753.732V16h2v-2.101a4.968 4.968 0 0 0 1.753-.732l1.49 1.49l1.414-1.414l-1.49-1.49A4.968 4.968 0 0 0 27.899 10zm-7 2a3 3 0 1 1 3-3a3.003 3.003 0 0 1-3 3zm-7 18h-2v-5a3.003 3.003 0 0 0-3-3H7a3.003 3.003 0 0 0-3 3v5H2v-5a5.006 5.006 0 0 1 5-5h4a5.006 5.006 0 0 1 5 5zM9 10a3 3 0 1 1-3 3a3 3 0 0 1 3-3m0-2a5 5 0 1 0 5 5a5 5 0 0 0-5-5z"/>' }, "user-simulation": { "body": '<path fill="currentColor" d="m26 12l3.464 2l-1 1.732l-3.464-2zm0-4h4v2h-4zM7 13.732l-3.464 2l-1-1.732L6 12zM26 30h-2v-5a5.006 5.006 0 0 0-5-5h-6a5.006 5.006 0 0 0-5 5v5H6v-5a7.008 7.008 0 0 1 7-7h6a7.008 7.008 0 0 1 7 7zM16 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7zm9 2.268l3.464-2l1 1.732L26 6zM2 8h4v2H2zm4-2L2.536 4l1-1.732l3.464 2z"/>' }, "user-speaker": { "body": '<path fill="currentColor" d="M29.415 19L27.7 17.285A2.97 2.97 0 0 0 28 16a3 3 0 1 0-3 3a2.97 2.97 0 0 0 1.286-.3L28 20.414V28h-6v-3a7.008 7.008 0 0 0-7-7H9a7.008 7.008 0 0 0-7 7v5h28v-9.586A1.988 1.988 0 0 0 29.415 19ZM4 25a5.006 5.006 0 0 1 5-5h6a5.006 5.006 0 0 1 5 5v3H4Z"/><path fill="currentColor" d="M12 4a5 5 0 1 1-5 5a5 5 0 0 1 5-5m0-2a7 7 0 1 0 7 7a7 7 0 0 0-7-7Z"/>' }, "user-sponsor": { "body": '<path fill="currentColor" d="m31.83 13.366l-1-1.732L28 13.268V10h-2v3.268l-2.83-1.634l-1 1.732L25 15l-2.83 1.634l1 1.732L26 16.732V20h2v-3.268l2.83 1.634l1-1.732L29 15l2.83-1.634zM22 30h-2v-5a5.006 5.006 0 0 0-5-5H9a5.006 5.006 0 0 0-5 5v5H2v-5a7.008 7.008 0 0 1 7-7h6a7.008 7.008 0 0 1 7 7v5zM12 4a5 5 0 1 1 0 10a5 5 0 0 1 0-10m0-2a7 7 0 1 0 0 14a7 7 0 0 0 0-14z"/>' }, "user-x-ray": { "body": '<path fill="none" d="M28 9V7h-3V5h-2v2h-3v2h3v3h-3v2h3v2h2v-2h3v-2h-3V9h3z"/><path fill="currentColor" d="M31 3H17a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1zm-3 6h-3v3h3v2h-3v2h-2v-2h-3v-2h3V9h-3V7h3V5h2v2h3zM15 30h-2v-4a2.946 2.946 0 0 0-3-3H6a2.946 2.946 0 0 0-3 3v4H1v-4a4.951 4.951 0 0 1 5-5h4a4.951 4.951 0 0 1 5 5zM8 11a3 3 0 0 1 0 6a3 3 0 0 1 0-6m0-2a5 5 0 0 0 0 10A5 5 0 0 0 8 9z"/>' }, "uv-index": { "body": '<path fill="currentColor" d="m16 5.912l1.744 2.933l.783 1.315L20 9.749l3.121-.87l-.87 3.121l-.411 1.473l1.315.782L26.088 16l-2.933 1.744l-1.315.782l.411 1.474l.87 3.121l-3.12-.87l-1.474-.411l-.783 1.315L16 26.088l-1.744-2.933l-.783-1.315l-1.473.411l-3.12.87L9.748 20l.41-1.474l-1.314-.782L5.912 16l2.933-1.745l1.315-.782L9.749 12l-.87-3.12L12 9.748l1.474.41l.782-1.314L16 5.912M16 2l-3.463 5.822L6 6l1.822 6.537L2 16l5.822 3.463L6 26l6.537-1.822L16 30l3.463-5.822L26 26l-1.822-6.537L30 16l-5.822-3.463L26 6l-6.537 1.822L16 2Z"/>' }, "uv-index-alt": { "body": '<path fill="currentColor" d="M13 30H9a2.003 2.003 0 0 1-2-2v-8h2v8h4v-8h2v8a2.003 2.003 0 0 1-2 2zm12-10h-1.75L21 29.031L18.792 20H17l2.5 10h3L25 20zM15 2h2v5h-2zm6.688 6.9l3.506-3.506l1.414 1.414l-3.506 3.506zM25 15h5v2h-5zM2 15h5v2H2zm3.395-8.192l1.414-1.414L10.315 8.9L8.9 10.314zM22 17h-2v-1a4 4 0 0 0-8 0v1h-2v-1a6 6 0 0 1 12 0Z"/>' }, "uv-index-filled": { "body": '<path fill="currentColor" d="m16 30l-3.463-5.822L6 26l1.822-6.537L2 16l5.822-3.463L6 6l6.537 1.822L16 2l3.463 5.822L26 6l-1.822 6.537L30 16l-5.822 3.463L26 26l-6.537-1.822Z"/>' }, "value-variable": { "body": '<path fill="currentColor" d="M26 28h-4v-2h4V6h-4V4h4a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2zm-6-17h-2l-2 3.897L14 11h-2l2.905 5L12 21h2l2-3.799L18 21h2l-2.902-5L20 11zM10 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h4v2H6v20h4z"/>' }, "van": { "body": '<path fill="currentColor" d="m29.81 16l-7-9.56A1 1 0 0 0 22 6H3a1 1 0 0 0-1 1v17a1 1 0 0 0 1 1h2.14a4 4 0 0 0 7.72 0h6.28a4 4 0 0 0 7.72 0H29a1 1 0 0 0 1-1v-7.44a1 1 0 0 0-.19-.56ZM20 8h1.49l5.13 7H20ZM9 26a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm14 0a2 2 0 1 1 2-2a2 2 0 0 1-2 2Zm5-3h-1.14a4 4 0 0 0-7.72 0h-6.28a4 4 0 0 0-7.72 0H4V8h14v9h10Z"/>' }, "vegetation-asset": { "body": '<circle cx="21.5" cy="10.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M28.5 1a2.452 2.452 0 0 0-1.206.31l-8.31 4.298l.002.006a5.497 5.497 0 1 0 7.326 7.544l.003.002l4.4-8.5A2.5 2.5 0 0 0 28.5 1zm-7 13a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5zm7.441-10.265l-2.384 4.606a5.528 5.528 0 0 0-2.899-2.899l4.595-2.377A.516.516 0 0 1 29 3.5a.498.498 0 0 1-.059.235zM19 20h7v-2h-9v10a2.003 2.003 0 0 0 2 2h3v-2h-3zm-7 10H9v-2h3V15.566l-3.515-2.109l1.03-1.714l3.514 2.108A2.011 2.011 0 0 1 14 15.566V28a2.002 2.002 0 0 1-2 2z"/><path fill="currentColor" d="M17.308 2.285A9.488 9.488 0 0 0 15 2a8.027 8.027 0 0 0-6.921 4.001L8 6a6 6 0 0 0 0 12v-2a4 4 0 0 1 0-8a2.7 2.7 0 0 1 .387.04l.863.113l.309-.667A6.02 6.02 0 0 1 15 4a7.499 7.499 0 0 1 1.731.215Z"/>' }, "vehicle-api": { "body": '<path fill="currentColor" d="M28 11a1.99 1.99 0 0 0-.825.182L24.834 9.51A3.45 3.45 0 0 0 25 8.5a3.45 3.45 0 0 0-.166-1.01l2.341-1.672A1.998 1.998 0 1 0 26 4c0 .064.013.124.019.186l-2.292 1.637A3.465 3.465 0 0 0 21.5 5a3.5 3.5 0 0 0 0 7a3.465 3.465 0 0 0 2.227-.823l2.292 1.637c-.006.062-.019.122-.019.186a2 2 0 1 0 2-2zm-6.5-1A1.5 1.5 0 1 1 23 8.5a1.502 1.502 0 0 1-1.5 1.5zm7.838 9.934l-7.732-2.779l-3.232-4.058A2.99 2.99 0 0 0 16.054 12H8.058a2.998 2.998 0 0 0-2.48 1.312l-2.712 3.983A4.988 4.988 0 0 0 2 20.107V26a1 1 0 0 0 1 1h2.142a3.98 3.98 0 0 0 7.716 0h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-5.125a1 1 0 0 0-.662-.941zM9 28a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2zm14 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm5-3h-1.142a3.98 3.98 0 0 0-7.716 0h-6.284a3.98 3.98 0 0 0-7.716 0H4v-4.893a2.998 2.998 0 0 1 .52-1.688l2.711-3.981A1 1 0 0 1 8.058 14h7.996a.993.993 0 0 1 .764.354l3.4 4.269a1 1 0 0 0 .444.318L28 21.578z"/>' }, "vehicle-connected": { "body": '<path fill="currentColor" d="m29.338 17.934l-7.732-2.779l-3.232-4.058A2.99 2.99 0 0 0 16.054 10H8.058a2.998 2.998 0 0 0-2.48 1.312l-2.712 3.983A4.988 4.988 0 0 0 2 18.107V26a1 1 0 0 0 1 1h2.142a3.98 3.98 0 0 0 7.716 0h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-7.125a1 1 0 0 0-.662-.941zM9 28a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2zm14 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm5-3h-1.142a3.98 3.98 0 0 0-7.716 0h-6.284a3.98 3.98 0 0 0-7.716 0H4v-6.893a2.998 2.998 0 0 1 .52-1.688l2.711-3.981A1 1 0 0 1 8.058 12h7.996a.993.993 0 0 1 .764.354l3.4 4.269a1 1 0 0 0 .444.318L28 19.578zm-3-14h-2a2.002 2.002 0 0 0-2-2V7a4.005 4.005 0 0 1 4 4z"/><path fill="currentColor" d="M29 11h-2a6.007 6.007 0 0 0-6-6V3a8.01 8.01 0 0 1 8 8Z"/>' }, "vehicle-insights": { "body": '<path fill="currentColor" d="m29.338 17.934l-7.732-2.779l-3.232-4.058A2.99 2.99 0 0 0 16.054 10H8.058a2.998 2.998 0 0 0-2.48 1.312l-2.712 3.983A4.988 4.988 0 0 0 2 18.107V26a1 1 0 0 0 1 1h2.142a3.98 3.98 0 0 0 7.716 0h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-7.125a1 1 0 0 0-.662-.941zM9 28a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2zm14 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm5-3h-1.142a3.98 3.98 0 0 0-7.716 0h-6.284a3.98 3.98 0 0 0-7.716 0H4v-6.893a2.998 2.998 0 0 1 .52-1.688l2.711-3.981A1 1 0 0 1 8.058 12h7.996a.993.993 0 0 1 .764.354l3.4 4.269a1 1 0 0 0 .444.318L28 19.578zm0-23h2v7h-2zm-4 4h2v3h-2zm-4-2h2v5h-2z"/>' }, "vehicle-services": { "body": '<path fill="currentColor" d="m29.338 17.934l-7.732-2.779l-3.232-4.058A2.99 2.99 0 0 0 16.054 10H8.058a2.998 2.998 0 0 0-2.48 1.312l-2.712 3.983A4.988 4.988 0 0 0 2 18.107V26a1 1 0 0 0 1 1h2.142a3.98 3.98 0 0 0 7.716 0h6.284a3.98 3.98 0 0 0 7.716 0H29a1 1 0 0 0 1-1v-7.125a1 1 0 0 0-.662-.941zM9 28a2 2 0 1 1 2-2a2.003 2.003 0 0 1-2 2zm14 0a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm5-3h-1.142a3.98 3.98 0 0 0-7.716 0h-6.284a3.98 3.98 0 0 0-7.716 0H4v-6.893a2.998 2.998 0 0 1 .52-1.688l2.711-3.981A1 1 0 0 1 8.058 12h7.996a.993.993 0 0 1 .764.354l3.4 4.269a1 1 0 0 0 .444.318L28 19.578zM24.555 6a2 2 0 0 1 2-2H30a3.976 3.976 0 0 0-7.304 1H16v2h6.696A3.976 3.976 0 0 0 30 8h-3.445a2 2 0 0 1-2-2z"/>' }, "version": { "body": '<path fill="currentColor" d="M16 2v2h10v15h2V4a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M11 7v2h10v15h2V9a2.002 2.002 0 0 0-2-2Z"/><path fill="currentColor" d="M6 12h10a2.002 2.002 0 0 1 2 2v14a2.002 2.002 0 0 1-2 2H6a2.002 2.002 0 0 1-2-2V14a2.002 2.002 0 0 1 2-2Zm10 2l-10-.001V28h10Z"/>' }, "version-major": { "body": '<path fill="currentColor" d="M18.586 17.414L16 14.834l-2.588 2.582L12 16l4-4l4 4l-1.414 1.414zm0-6L16 8.834l-2.588 2.582L12 10l4-4l4 4l-1.414 1.414zm0 12L16 20.834l-2.588 2.582L12 22l4-4l4 4l-1.414 1.414z"/><path fill="currentColor" d="M1.586 17.414C1.196 17.024 1 16.512 1 16s.195-1.024.586-1.414l13-13C14.976 1.196 15.488 1 16 1s1.024.195 1.414.586l13 13c.39.39.586.902.586 1.414s-.195 1.024-.586 1.414l-13 13c-.39.39-.902.586-1.414.586s-1.024-.195-1.414-.586l-13-13ZM16 3L3 16l13 13l13-13L16 3Z"/>' }, "version-minor": { "body": '<path fill="currentColor" d="M18.586 15.414L16 12.834l-2.588 2.582L12 14l4-4l4 4l-1.414 1.414zm0 6L16 18.834l-2.588 2.582L12 20l4-4l4 4l-1.414 1.414z"/><path fill="currentColor" d="M1.586 17.414C1.196 17.024 1 16.512 1 16s.195-1.024.586-1.414l13-13C14.976 1.196 15.488 1 16 1s1.024.195 1.414.586l13 13c.39.39.586.902.586 1.414s-.195 1.024-.586 1.414l-13 13c-.39.39-.902.586-1.414.586s-1.024-.195-1.414-.586l-13-13ZM16 3L3 16l13 13l13-13L16 3Z"/>' }, "version-patch": { "body": '<path fill="currentColor" d="M18.586 18.414L16 15.834l-2.588 2.582L12 17l4-4l4 4l-1.414 1.414z"/><path fill="currentColor" d="M1.586 17.414C1.196 17.024 1 16.512 1 16s.195-1.024.586-1.414l13-13C14.976 1.196 15.488 1 16 1s1.024.195 1.414.586l13 13c.39.39.586.902.586 1.414s-.195 1.024-.586 1.414l-13 13c-.39.39-.902.586-1.414.586s-1.024-.195-1.414-.586l-13-13ZM16 3L3 16l13 13l13-13L16 3Z"/>' }, "vertical-view": { "body": '<path fill="currentColor" d="M12 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2zM4 4v24h8V4zm24 26h-8a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h8a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2zM20 4v24h8V4z"/>' }, "video": { "body": '<path fill="currentColor" d="M21 26H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h17a2 2 0 0 1 2 2v4.06l5.42-3.87A1 1 0 0 1 30 9v14a1 1 0 0 1-1.58.81L23 19.94V24a2 2 0 0 1-2 2ZM4 8v16h17v-6a1 1 0 0 1 1.58-.81L28 21.06V10.94l-5.42 3.87A1 1 0 0 1 21 14V8Z"/>' }, "video-add": { "body": '<path fill="currentColor" d="M18 15h-4v-4h-2v4H8v2h4v4h2v-4h4v-2z"/><path fill="currentColor" d="M21 26H4a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h17a2.002 2.002 0 0 1 2 2v4.057l5.419-3.87A1 1 0 0 1 30 9v14a1 1 0 0 1-1.581.814L23 19.944V24a2.002 2.002 0 0 1-2 2ZM4 8v16.001L21 24v-6a1 1 0 0 1 1.581-.814L28 21.056V10.944l-5.419 3.87A1 1 0 0 1 21 14V8Z"/>' }, "video-chat": { "body": '<path fill="currentColor" d="M8 12h9v2H8zm0 5h5v2H8z"/><path fill="currentColor" d="M21 26H4a2.002 2.002 0 0 1-2-2V8a2.002 2.002 0 0 1 2-2h17a2.002 2.002 0 0 1 2 2v4.057l5.419-3.87A1 1 0 0 1 30 9v14a1 1 0 0 1-1.581.814L23 19.944V24a2.002 2.002 0 0 1-2 2ZM4 8v16.001L21 24v-6a1 1 0 0 1 1.581-.814L28 21.056V10.944l-5.419 3.87A1 1 0 0 1 21 14V8Z"/>' }, "video-filled": { "body": '<path fill="currentColor" d="M21 26H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h17a2 2 0 0 1 2 2v4.06l5.42-3.87A1 1 0 0 1 30 9v14a1 1 0 0 1-1.58.81L23 19.94V24a2 2 0 0 1-2 2Z"/>' }, "video-off": { "body": '<path fill="currentColor" d="M29.46 8.11a1 1 0 0 0-1 .08L23 12.06v-1.62l7-7L28.56 2L2 28.56L3.44 30l4-4H21a2 2 0 0 0 2-2v-4.06l5.42 3.87A1 1 0 0 0 30 23V9a1 1 0 0 0-.54-.89zM28 21.06l-5.42-3.87A1 1 0 0 0 21 18v6H9.44L21 12.44V14a1 1 0 0 0 1.58.81L28 10.94zM4 24V8h16V6H4a2 2 0 0 0-2 2v16z"/>' }, "video-off-filled": { "body": '<path fill="currentColor" d="M20.31 6H4a2 2 0 0 0-2 2v16a2.85 2.85 0 0 0 0 .29zm9.15 2.11a1 1 0 0 0-1 .08L23 12.06v-1.62l7-7L28.56 2L2 28.56L3.44 30l4-4H21a2 2 0 0 0 2-2v-4.06l5.42 3.87A1 1 0 0 0 30 23V9a1 1 0 0 0-.54-.89z"/>' }, "view": { "body": '<path fill="currentColor" d="M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 25c-5.3 0-10.9-3.93-12.93-9C5.1 10.93 10.7 7 16 7s10.9 3.93 12.93 9C26.9 21.07 21.3 25 16 25Z"/><path fill="currentColor" d="M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Zm0 10a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z"/>' }, "view-filled": { "body": '<circle cx="16" cy="16" r="4" fill="currentColor"/><path fill="currentColor" d="M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 22.5a6.5 6.5 0 1 1 6.5-6.5a6.51 6.51 0 0 1-6.5 6.5Z"/>' }, "view-mode-1": { "body": '<path fill="currentColor" d="M4 26h24v2H4zm0-7h24v2H4zM26 6v6H6V6h20m0-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"/>' }, "view-mode-2": { "body": '<path fill="currentColor" d="M4 26h24v2H4zm0-7h24v2H4zm8-13v6H6V6h6m0-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm14 2v6h-6V6h6m0-2h-6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"/>' }, "view-next": { "body": '<path fill="currentColor" d="M20.587 22L15 16.41V7h1.998v8.582L22 20.587L20.587 22z"/><path fill="currentColor" d="M16 2a13.916 13.916 0 0 1 10 4.234V2h2v8h-8V8h4.922A11.982 11.982 0 1 0 28 16h2A14 14 0 1 1 16 2Z"/>' }, "view-off": { "body": '<path fill="currentColor" d="m5.24 22.51l1.43-1.42A14.06 14.06 0 0 1 3.07 16C5.1 10.93 10.7 7 16 7a12.38 12.38 0 0 1 4 .72l1.55-1.56A14.72 14.72 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68a16 16 0 0 0 4.18 6.17Z"/><path fill="currentColor" d="M12 15.73a4 4 0 0 1 3.7-3.7l1.81-1.82a6 6 0 0 0-7.33 7.33zm18.94-.07a16.4 16.4 0 0 0-5.74-7.44L30 3.41L28.59 2L2 28.59L3.41 30l5.1-5.1A15.29 15.29 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68zM20 16a4 4 0 0 1-6 3.44L19.44 14a4 4 0 0 1 .56 2zm-4 9a13.05 13.05 0 0 1-6-1.58l2.54-2.54a6 6 0 0 0 8.35-8.35l2.87-2.87A14.54 14.54 0 0 1 28.93 16C26.9 21.07 21.3 25 16 25z"/>' }, "view-off-filled": { "body": '<path fill="currentColor" d="M30.94 15.66a16.4 16.4 0 0 0-5.73-7.45L30 3.41L28.59 2L2 28.59L3.41 30l5.1-5.09A15.38 15.38 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68zM16 22.5a6.46 6.46 0 0 1-3.83-1.26L14 19.43A4 4 0 0 0 19.43 14l1.81-1.81A6.49 6.49 0 0 1 16 22.5zm-11.47-.69l5-5A6.84 6.84 0 0 1 9.5 16A6.51 6.51 0 0 1 16 9.5a6.84 6.84 0 0 1 .79.05l3.78-3.77A14.39 14.39 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68a15.86 15.86 0 0 0 3.47 5.47z"/>' }, "virtual-column": { "body": '<path fill="currentColor" d="m25 11l1.414 1.414L23.828 15H30v2h-6.172l2.586 2.586L25 21l-5-5l5-5z"/><path fill="currentColor" d="M30 28H20a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h10v2H20v20h10zm-18 0H2v-2h10V6H2V4h10a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2z"/><path fill="currentColor" d="m7 11l-1.414 1.414L8.172 15H2v2h6.172l-2.586 2.586L7 21l5-5l-5-5z"/>' }, "virtual-column-key": { "body": '<circle cx="24.5" cy="9.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M17.414 22H12v-5.414l6.03-6.03A5.352 5.352 0 0 1 18 10a6 6 0 1 1 6 6a5.358 5.358 0 0 1-.556-.03ZM14 20h2.586l6.17-6.17l.518.095A3.935 3.935 0 0 0 24 14a4.05 4.05 0 1 0-3.925-3.273l.095.517l-6.17 6.17Z"/><path fill="currentColor" d="M28 18v8H10V6h4V4H4a2.002 2.002 0 0 0-2 2v20a2.002 2.002 0 0 0 2 2h24a2.002 2.002 0 0 0 2-2v-8ZM4 6h4v20H4Z"/>' }, "virtual-desktop": { "body": '<path fill="currentColor" d="M21 16H11a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h4v2h-3v2h8v-2h-3v-2h4a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Zm-10 8v-6h10l.002 6Z"/><path fill="currentColor" d="M25.822 10.124a10 10 0 0 0-19.644 0A7.491 7.491 0 0 0 7 24.974v-2a5.495 5.495 0 0 1 .123-10.954l.837-.056l.09-.834a7.998 7.998 0 0 1 15.9 0l.09.834l.837.056A5.495 5.495 0 0 1 25 22.975v2a7.491 7.491 0 0 0 .822-14.851Z"/>' }, "virtual-machine": { "body": '<path fill="currentColor" d="M20 13h-8a2.002 2.002 0 0 0-2 2v13a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2V15a2.002 2.002 0 0 0-2-2Zm0 2v3h-8v-3Zm0 5v3h-8v-3Zm-8 8v-3h8v3Z"/><path fill="currentColor" d="M25.91 10.13a.121.121 0 0 1-.097-.095a10.006 10.006 0 0 0-7.923-7.853a10.002 10.002 0 0 0-11.704 7.853a.121.121 0 0 1-.097.095A7.502 7.502 0 0 0 7.491 25H8v-2h-.505a5.51 5.51 0 0 1-5.438-6.3a5.7 5.7 0 0 1 4.713-4.66l1.017-.184a.13.13 0 0 0 .105-.104l.18-.935a8.28 8.28 0 0 1 6.847-6.743a7.957 7.957 0 0 1 2.847.125a8.22 8.22 0 0 1 6.147 6.545l.194 1.008a.13.13 0 0 0 .105.104l1.057.191a5.782 5.782 0 0 1 3.101 1.54A5.505 5.505 0 0 1 24.508 23H24v2h.508a7.502 7.502 0 0 0 1.402-14.87Z"/>' }, "virtual-private-cloud": { "body": '<path fill="currentColor" d="M20 20v-3a4 4 0 0 0-8 0v3a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2Zm-6-3a2 2 0 0 1 4 0v3h-4Zm-2 11v-6h8l.001 6Z"/><path fill="currentColor" d="M25.829 10.115a10.007 10.007 0 0 0-7.939-7.933a10.002 10.002 0 0 0-11.72 7.933A7.502 7.502 0 0 0 7.491 25H8v-2h-.505a5.502 5.502 0 0 1-.97-10.916l1.35-.245l.259-1.345a8.01 8.01 0 0 1 15.731 0l.259 1.345l1.349.245A5.502 5.502 0 0 1 24.508 23H24v2h.508a7.502 7.502 0 0 0 1.32-14.885Z"/>' }, "virtual-private-cloud-alt": { "body": '<path fill="currentColor" d="M23.414 22L10 8.586V2H2v8h6.586L22 23.414V30h8v-8ZM8 8H4V4h4Zm20 20h-4v-4h4Z"/><path fill="currentColor" d="M30 6a3.991 3.991 0 0 0-7.858-1H13v2h9.142A3.994 3.994 0 0 0 25 9.858V19h2V9.858A3.996 3.996 0 0 0 30 6zm-4 2a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zm-7 17H9.858A3.994 3.994 0 0 0 7 22.142V13H5v9.142A3.991 3.991 0 1 0 9.858 27H19zM6 28a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2z"/>' }, "visual-recognition": { "body": '<circle cx="23" cy="12" r="2" fill="currentColor"/><path fill="currentColor" d="M28 5H16.24A8 8 0 1 0 6 16.92V27a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2ZM4 10a6 6 0 0 1 11.19-3H8v2h7.91a6.64 6.64 0 0 1 .09 1a6.64 6.64 0 0 1-.09 1H10v2h5.19A6 6 0 0 1 4 10Zm24 17H8l5-5l1.59 1.59a2 2 0 0 0 2.82 0L23 18l5 5Zm0-6.83l-3.59-3.59a2 2 0 0 0-2.82 0L16 22.17l-1.59-1.59a2 2 0 0 0-2.82 0L8 24.17v-6.43a8.24 8.24 0 0 0 2 .26a8 8 0 0 0 8-8a7.9 7.9 0 0 0-.59-3H28Z"/>' }, "vlan": { "body": '<path fill="currentColor" d="M30 17v-2H17v-4h2a2.002 2.002 0 0 0 2-2V4a2.002 2.002 0 0 0-2-2h-6a2.002 2.002 0 0 0-2 2v5a2.002 2.002 0 0 0 2 2h2v4H2v2h6v4H6a2.002 2.002 0 0 0-2 2v5a2.002 2.002 0 0 0 2 2h6a2.002 2.002 0 0 0 2-2v-5a2.002 2.002 0 0 0-2-2h-2v-4h12v4h-2a2.002 2.002 0 0 0-2 2v5a2.002 2.002 0 0 0 2 2h6a2.002 2.002 0 0 0 2-2v-5a2.002 2.002 0 0 0-2-2h-2v-4ZM13 4h6v5h-6Zm-1 24H6v-5h6Zm14 0h-6v-5h6Z"/>' }, "vlan-ibm": { "body": '<path fill="currentColor" d="M16 22a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4zm0 6a2 2 0 1 1 2-2a2.002 2.002 0 0 1-2 2zM30 5a3 3 0 1 0-4 2.815V15h-9V9h-2v6H6V7.816a3 3 0 1 0-2 0V15a2.002 2.002 0 0 0 2 2h9v3h2v-3h9a2.002 2.002 0 0 0 2-2V7.816A2.996 2.996 0 0 0 30 5zM5 4a1 1 0 1 1-1 1a1.001 1.001 0 0 1 1-1zm22 2a1 1 0 1 1 1-1a1.001 1.001 0 0 1-1 1z"/><circle cx="16" cy="5" r="2" fill="currentColor"/>' }, "vmdk-disk": { "body": '<circle cx="10.5" cy="24.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M18 16.414L19.414 15L23 18.585L21.585 20z"/><circle cx="16" cy="13" r="2" fill="currentColor"/><path fill="currentColor" d="M16 6a7 7 0 0 0 0 14v-2a5 5 0 1 1 5-5h2a7 7 0 0 0-7-7Z"/><path fill="currentColor" d="M26 2H6a2 2 0 0 0-2 2v24a2 2 0 0 0 2 2h20a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2Zm0 26H6V4h20Z"/>' }, "voice-activate": { "body": '<path fill="currentColor" d="M26 30h-2v-3h-4a5.005 5.005 0 0 1-5-5v-1.28l-2.316-.771a1 1 0 0 1-.541-1.463L15 13.723V11a9.01 9.01 0 0 1 9-9h5v2h-5a7.008 7.008 0 0 0-7 7v3a1 1 0 0 1-.143.514L14.5 18.446l1.817.605A1 1 0 0 1 17 20v2a3.003 3.003 0 0 0 3 3h5a1 1 0 0 1 1 1Z"/><path fill="currentColor" d="M19 12h4v2h-4zM9.332 25.217a7 7 0 0 1 0-10.434l1.334 1.49a5 5 0 0 0 0 7.453z"/><path fill="currentColor" d="M6.4 28.8a11.002 11.002 0 0 1 0-17.6l1.2 1.6a9 9 0 0 0 0 14.401Z"/>' }, "voicemail": { "body": '<path fill="currentColor" d="M24 10a6 6 0 0 0-4.46 10h-7.08A6 6 0 1 0 8 22h16a6 6 0 0 0 0-12ZM4 16a4 4 0 1 1 4 4a4 4 0 0 1-4-4Zm20 4a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z"/>' }, "volume-block-storage": { "body": '<path fill="currentColor" d="M17 21h-7v-7h7zm-5-2h3v-3h-3zm5 11h-7v-7h7zm-5-2h3v-3h-3zm14-7h-7v-7h7zm-5-2h3v-3h-3zm5 11h-7v-7h7zm-5-2h3v-3h-3z"/><path fill="currentColor" d="M8 28H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h7.586A1.986 1.986 0 0 1 13 4.586L16.414 8H28a2.002 2.002 0 0 1 2 2v8h-2v-8H15.586l-4-4H4v20h4Z"/>' }, "volume-down": { "body": '<path fill="currentColor" d="M25.1 10.66L23.58 12a6 6 0 0 1-.18 7.94l1.47 1.36a8 8 0 0 0 .23-10.59zM20 30a1 1 0 0 1-.71-.3L11.67 22H5a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1zM6 20h6a1.17 1.17 0 0 1 .79.3L19 26.57V5.43l-6.21 6.27a1.17 1.17 0 0 1-.79.3H6z"/>' }, "volume-down-alt": { "body": '<path fill="currentColor" d="M22 15h10v2H22zm-4 15a.997.997 0 0 1-.71-.297L9.665 22H3a1 1 0 0 1-1-.999V11a1 1 0 0 1 .999-1h6.667l7.623-7.703A1 1 0 0 1 19 3v26a1 1 0 0 1-1 1zM4 20h6a1.2 1.2 0 0 1 .794.297L17 26.568V5.432l-6.206 6.271A1.201 1.201 0 0 1 10 12H4z"/>' }, "volume-down-filled": { "body": '<path fill="currentColor" d="M25.1 10.66L23.58 12a6 6 0 0 1-.18 7.94l1.47 1.36a8 8 0 0 0 .23-10.59zM20 30a1 1 0 0 1-.71-.3L11.67 22H5a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1z"/>' }, "volume-down-filled-alt": { "body": '<path fill="currentColor" d="M22 15h10v2H22zm-4 15a.997.997 0 0 1-.71-.297L9.665 22H3a1 1 0 0 1-1-.999V11a1 1 0 0 1 .999-1h6.667l7.623-7.703A1 1 0 0 1 19 3v26a1 1 0 0 1-1 1z"/>' }, "volume-file-storage": { "body": '<path fill="currentColor" d="m25.707 17.293l-5-5A1 1 0 0 0 20 12h-6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V18a1 1 0 0 0-.293-.707ZM23.586 18H20v-3.586ZM14 28V14h4v4a2 2 0 0 0 2 2h4v8Z"/><path fill="currentColor" d="M8 27H4a2.002 2.002 0 0 1-2-2V5a2.002 2.002 0 0 1 2-2h7.586A1.986 1.986 0 0 1 13 3.586L16.414 7H28a2.002 2.002 0 0 1 2 2v8h-2V9H15.586l-4-4H4v20h4Z"/>' }, "volume-mute": { "body": '<path fill="currentColor" d="M31 12.41L29.59 11L26 14.59L22.41 11L21 12.41L24.59 16L21 19.59L22.41 21L26 17.41L29.59 21L31 19.59L27.41 16L31 12.41zM18 30a1 1 0 0 1-.71-.3L9.67 22H3a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1zM4 20h6a1.17 1.17 0 0 1 .79.3L17 26.57V5.43l-6.21 6.27a1.17 1.17 0 0 1-.79.3H4z"/>' }, "volume-mute-filled": { "body": '<path fill="currentColor" d="M31 12.41L29.59 11L26 14.59L22.41 11L21 12.41L24.59 16L21 19.59L22.41 21L26 17.41L29.59 21L31 19.59L27.41 16L31 12.41zM18 30a1 1 0 0 1-.71-.3L9.67 22H3a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1z"/>' }, "volume-object-storage": { "body": '<path fill="currentColor" d="M23 24a2.98 2.98 0 0 0-2.038.811L16.96 22.41a2.048 2.048 0 0 0 0-.818l4.003-2.403a3.246 3.246 0 1 0-.92-1.779l-4.004 2.402a3 3 0 1 0 0 4.377l4.003 2.403A2.973 2.973 0 0 0 20 27a3 3 0 1 0 3-3Zm0-8a1 1 0 1 1-1 1a1 1 0 0 1 1-1Zm-9 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Zm9 5a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/><path fill="currentColor" d="M8 28H4a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h7.586A1.986 1.986 0 0 1 13 4.586L16.414 8H28a2.002 2.002 0 0 1 2 2v8h-2v-8H15.586l-4-4H4v20h4Z"/>' }, "volume-up": { "body": '<path fill="currentColor" d="m27.16 8.08l-1.53 1.29a10 10 0 0 1-.29 13.23l1.47 1.4a12 12 0 0 0 .35-15.88Z"/><path fill="currentColor" d="M21.58 12a6 6 0 0 1-.18 7.94l1.47 1.36a8 8 0 0 0 .23-10.59zM18 30a1 1 0 0 1-.71-.3L9.67 22H3a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1zM4 20h6.08a1 1 0 0 1 .71.3L17 26.57V5.43l-6.21 6.27a1 1 0 0 1-.71.3H4z"/>' }, "volume-up-alt": { "body": '<path fill="currentColor" d="M32 15h-4v-4h-2v4h-4v2h4v4h2v-4h4v-2zM18 30a.997.997 0 0 1-.71-.297L9.665 22H3a1 1 0 0 1-1-.999V11a1 1 0 0 1 .999-1h6.667l7.623-7.703A1 1 0 0 1 19 3v26a1 1 0 0 1-1 1zM4 20h6a1.2 1.2 0 0 1 .794.297L17 26.568V5.432l-6.206 6.271A1.201 1.201 0 0 1 10 12H4z"/>' }, "volume-up-filled": { "body": '<path fill="currentColor" d="m27.16 8.08l-1.53 1.29a10 10 0 0 1-.29 13.23l1.47 1.4a12 12 0 0 0 .35-15.88Z"/><path fill="currentColor" d="M21.58 12a6 6 0 0 1-.18 7.94l1.47 1.36a8 8 0 0 0 .23-10.59zM18 30a1 1 0 0 1-.71-.3L9.67 22H3a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1z"/>' }, "volume-up-filled-alt": { "body": '<path fill="currentColor" d="M32 15h-4v-4h-2v4h-4v2h4v4h2v-4h4v-2zM18 30a.997.997 0 0 1-.71-.297L9.665 22H3a1 1 0 0 1-1-.999V11a1 1 0 0 1 .999-1h6.667l7.623-7.703A1 1 0 0 1 19 3v26a1 1 0 0 1-1 1z"/>' }, "vpn": { "body": '<path fill="currentColor" d="M14 23h-2V9h6a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-4zm0-7h4v-5h-4zm14 3L24.32 9H22v14h2V13l3.68 10H30V9h-2v10zM8 9L6 22L4 9H2l2.52 14h2.96L10 9H8z"/>' }, "vpn-connection": { "body": '<path fill="currentColor" d="M28 7a1.992 1.992 0 0 0-1.723 1H22a6 6 0 0 0-12 0H5.723a2 2 0 1 0 0 2H10v4H8a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V16a2 2 0 0 0-2-2h-2v-4h4.277A1.997 1.997 0 1 0 28 7ZM12 8a4 4 0 0 1 8 0v6h-8v-4h5V8Zm12 8v12H8V16Z"/>' }, "vpn-policy": { "body": '<path fill="currentColor" d="M30 15a6 6 0 1 0-10 4.46V29l4-1.884L28 29v-9.54A5.98 5.98 0 0 0 30 15Zm-4 10.848l-2-.942l-2 .942V20.65a5.888 5.888 0 0 0 4 0ZM24 19a4 4 0 1 1 4-4a4.005 4.005 0 0 1-4 4Z"/><path fill="currentColor" d="M14 2a6.007 6.007 0 0 0-6 6v6H6a2.002 2.002 0 0 0-2 2v12a2.002 2.002 0 0 0 2 2h11v-2H6V16h9v-2h-5V8a4 4 0 0 1 7.92-.8l1.96-.4A6.017 6.017 0 0 0 14 2Z"/>' }, "wallet": { "body": '<path fill="currentColor" d="M22 17h2v2h-2z"/><path fill="currentColor" d="M28 8H4V5h22V3H4a2 2 0 0 0-2 2v21a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2ZM4 26V10h24v3h-8a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h8v3Zm24-11v6h-8v-6Z"/>' }, "warning": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M15 8h2v11h-2zm1 14a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 22z"/>' }, "warning-alt": { "body": '<path fill="currentColor" d="M16 23a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 23zm-1-11h2v9h-2z"/><path fill="currentColor" d="M29 30H3a1 1 0 0 1-.887-1.461l13-25a1 1 0 0 1 1.774 0l13 25A1 1 0 0 1 29 30ZM4.65 28h22.7l.001-.003L16.002 6.17h-.004L4.648 27.997Z"/>' }, "warning-alt-filled": { "body": '<path fill="none" d="M16 26a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 26Zm-1.125-5h2.25v-9h-2.25Z"/><path fill="currentColor" d="M16.002 6.171h-.004L4.648 27.997l.003.003h22.698l.002-.003ZM14.875 12h2.25v9h-2.25ZM16 26a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 26Z"/><path fill="currentColor" d="M29 30H3a1 1 0 0 1-.887-1.461l13-25a1 1 0 0 1 1.774 0l13 25A1 1 0 0 1 29 30ZM4.65 28h22.7l.001-.003L16.002 6.17h-.004L4.648 27.997Z"/>' }, "warning-alt-inverted": { "body": '<path fill="currentColor" d="M16 17a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 17zM15 6h2v9h-2z"/><path fill="currentColor" d="M29.855 2.481a1.001 1.001 0 0 1 .032.98l-13 25a1 1 0 0 1-1.774 0l-13-25A1 1 0 0 1 3 2h26a1 1 0 0 1 .855.481ZM4.649 4.003L15.998 25.83h.004l11.35-21.826L27.348 4H4.651Z"/>' }, "warning-alt-inverted-filled": { "body": '<path fill="none" d="M16 20a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 20Zm-1.125-5h2.25V6h-2.25Z"/><path fill="currentColor" d="M27.35 4H4.65l-.001.003L15.998 25.83h.004l11.35-21.826ZM14.874 6h2.25v9h-2.25ZM16 20a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 20Z"/><path fill="currentColor" d="M29.855 2.481a1.001 1.001 0 0 1 .032.98l-13 25a1 1 0 0 1-1.774 0l-13-25A1 1 0 0 1 3 2h26a1 1 0 0 1 .855.481ZM4.649 4.003L15.998 25.83h.004l11.35-21.826L27.348 4H4.651Z"/>' }, "warning-filled": { "body": '<path fill="currentColor" d="M16 2C8.3 2 2 8.3 2 16s6.3 14 14 14s14-6.3 14-14S23.7 2 16 2zm-1.1 6h2.2v11h-2.2V8zM16 25c-.8 0-1.5-.7-1.5-1.5S15.2 22 16 22s1.5.7 1.5 1.5S16.8 25 16 25z"/>' }, "warning-hex": { "body": '<path fill="currentColor" d="M16 21a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 21zM15 8h2v10h-2z"/><path fill="currentColor" d="M23 29H9a1 1 0 0 1-.864-.496l-7-12a1 1 0 0 1 0-1.008l7-12A1 1 0 0 1 9 3h14a1 1 0 0 1 .864.496l7 12a1 1 0 0 1 0 1.008l-7 12A1 1 0 0 1 23 29ZM9.574 27h12.852l6.416-11l-6.416-11H9.574L3.158 16Z"/>' }, "warning-hex-filled": { "body": '<path fill="none" d="M14.875 8h2.25v11h-2.25ZM16 25a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 25Z"/><path fill="currentColor" d="M30.85 15.449L23.888 3.532A1.069 1.069 0 0 0 22.964 3H9.036a1.069 1.069 0 0 0-.923.532L1.15 15.45a1.093 1.093 0 0 0 0 1.102l6.964 11.917a1.069 1.069 0 0 0 .923.532h13.928a1.069 1.069 0 0 0 .923-.532L30.85 16.55a1.093 1.093 0 0 0 0-1.102ZM14.876 8h2.25v11h-2.25ZM16 25a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 25Z"/>' }, "warning-other": { "body": '<path fill="currentColor" d="M18 20h12v2H18zm0 4h12v2H18zm0 4h12v2H18zm-4-10a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 14 18zM13 7h2v9h-2z"/><path fill="currentColor" d="M14 4a10.011 10.011 0 0 1 10 10h2a12 12 0 1 0-12 12v-2a10 10 0 0 1 0-20Z"/>' }, "warning-square": { "body": '<path fill="currentColor" d="M16 20a1.5 1.5 0 1 0 1.5 1.5A1.5 1.5 0 0 0 16 20zM15 9h2v9h-2z"/><path fill="currentColor" d="M26 28H6a2.002 2.002 0 0 1-2-2V6a2.002 2.002 0 0 1 2-2h20a2.002 2.002 0 0 1 2 2v20a2.002 2.002 0 0 1-2 2ZM6 6v20h20.001L26 6Z"/>' }, "warning-square-filled": { "body": '<path fill="currentColor" d="M26.002 4H5.998A1.998 1.998 0 0 0 4 5.998v20.004A1.998 1.998 0 0 0 5.998 28h20.004A1.998 1.998 0 0 0 28 26.002V5.998A1.998 1.998 0 0 0 26.002 4ZM14.875 8h2.25v10h-2.25ZM16 24a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 24Z"/><path fill="none" d="M14.875 8h2.25v10h-2.25ZM16 24a1.5 1.5 0 1 1 1.5-1.5A1.5 1.5 0 0 1 16 24Z"/>' }, "watch": { "body": '<path fill="currentColor" d="M22 8h-1V2h-2v6h-6V2h-2v6h-1a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h1v6h2v-6h6v6h2v-6h1a2 2 0 0 0 2-2V10a2 2 0 0 0-2-2zM10 22V10h12v12zm15-8h2v4h-2z"/>' }, "watson": { "body": '<path fill="currentColor" d="M21.74 9.49A11.41 11.41 0 0 0 16 8a.76.76 0 1 0 0 1.51a10.15 10.15 0 0 1 1.91.21c-2.26 1.08-4.76 3.58-6.73 7a22.48 22.48 0 0 0-2 4.44A9.58 9.58 0 0 1 7 17.22a3.43 3.43 0 0 1 .28-2.66c.79-1.37 2.44-2.15 4.63-2.2a.76.76 0 0 0 .74-.78a.75.75 0 0 0-.78-.74c-2.68.04-4.77 1.08-5.87 2.9a4.84 4.84 0 0 0-.44 3.79a12 12 0 0 0 3.2 5.22A11.36 11.36 0 0 0 8.52 26a10 10 0 0 1-2-3.48a.75.75 0 0 0-.95-.52a.76.76 0 0 0-.49 1a11.45 11.45 0 0 0 5.18 6.38A11.42 11.42 0 0 0 16 30.92a11.74 11.74 0 0 0 3-.39a11.48 11.48 0 0 0 2.77-21zm-3.16 19.57a9.9 9.9 0 0 1-7.56-1c-.86-.49-1.21-2-.94-4a18.85 18.85 0 0 0 2.48 1.72a13.92 13.92 0 0 0 6.93 2a11 11 0 0 0 2.42-.28a9.78 9.78 0 0 1-3.33 1.56zm6.06-4.66c-2 2-6.66 2.74-11.32.05a17.36 17.36 0 0 1-2.89-2.12a21.08 21.08 0 0 1 2.08-4.91c2.94-5.08 6.83-7.57 8.47-6.62a10 10 0 0 1 3.66 13.6zM4.16 11.72L1.14 10a.76.76 0 1 0-.76 1.31L3.4 13a.86.86 0 0 0 .38.1a.77.77 0 0 0 .66-.38a.76.76 0 0 0-.28-1zm4.13-4.13a.74.74 0 0 0 .65.41a.75.75 0 0 0 .38-.1a.76.76 0 0 0 .28-1l-1.74-3a.76.76 0 0 0-1-.27a.75.75 0 0 0-.28 1zM16 6.08a.76.76 0 0 0 .76-.76V1.83a.76.76 0 0 0-1.52 0v3.49a.76.76 0 0 0 .76.76zm6.68 1.79a.75.75 0 0 0 1-.28l1.75-3a.75.75 0 0 0-.28-1a.76.76 0 0 0-1 .27l-1.74 3a.76.76 0 0 0 .27 1.01zm9.22 2.38a.76.76 0 0 0-1-.27l-3 1.74a.76.76 0 0 0-.28 1a.77.77 0 0 0 .66.38a.86.86 0 0 0 .38-.1l3-1.75a.76.76 0 0 0 .24-1z"/>' }, "watson-machine-learning": { "body": '<path fill="currentColor" d="M22 26h-2v-8.24l-3.23 3.88a1 1 0 0 1-1.54 0L12 17.76V26h-2V15a1 1 0 0 1 .66-.94a1 1 0 0 1 1.11.3L16 19.44l4.23-5.08a1 1 0 0 1 1.11-.3A1 1 0 0 1 22 15zM4.16 14.65l-3-1.75a.76.76 0 1 0-.76 1.32l3 1.78a.76.76 0 1 0 .76-1.31zm4.13-4.13a.73.73 0 0 0 1 .27a.75.75 0 0 0 .28-1l-1.74-3a.76.76 0 1 0-1.32.76zM16 9a.76.76 0 0 0 .76-.76V4.76a.76.76 0 1 0-1.52 0v3.49A.76.76 0 0 0 16 9zm6.68 1.79a.75.75 0 0 0 .37.11a.76.76 0 0 0 .66-.38l1.75-3a.76.76 0 0 0-1.32-.76l-1.74 3a.75.75 0 0 0 .28 1.03zm9.22 2.39a.76.76 0 0 0-1-.28l-3 1.75a.76.76 0 0 0 .7 1.35l3-1.74a.77.77 0 0 0 .3-1.08z"/>' }, "wave-direction": { "body": '<path fill="currentColor" d="M22 30h-5a7.008 7.008 0 0 1-7-7a6.683 6.683 0 0 1 2.024-4.697A6.713 6.713 0 0 0 10.01 18C5.043 18.047 4 24.551 4 30H2c0-11.51 4.345-13.966 7.99-14a10.096 10.096 0 0 1 4.48 1.117a1 1 0 0 1 .06 1.73A4.877 4.877 0 0 0 17 28h5Z"/><path fill="currentColor" d="M18 24v-2a8 8 0 1 0-8-8H8a10 10 0 1 1 10 10Z"/><circle cx="18" cy="8" r="1" fill="currentColor"/><path fill="currentColor" d="m23 17.586l-2.3-2.3A2.966 2.966 0 0 0 21 14a3.003 3.003 0 0 0-3-3a2.96 2.96 0 0 0-1.285.3l-2.3-2.3L13 10.414l2.3 2.3A2.966 2.966 0 0 0 15 14a3.003 3.003 0 0 0 3 3a2.96 2.96 0 0 0 1.285-.3l2.3 2.3ZM17 14a1 1 0 1 1 1 1a1 1 0 0 1-1-1Z"/>' }, "wave-height": { "body": '<path fill="currentColor" d="M24 2h6v2h-6zm0 6h4v2h-4zm0 6h6v2h-6zm0 6h4v2h-4z"/><path fill="currentColor" d="M30 28h-6a10.035 10.035 0 0 1-6.927-17.262a11.963 11.963 0 0 0-4.08-.738a6.903 6.903 0 0 0-6.03 3.42C4.997 16.435 4 21.34 4 28H2c0-7.054 1.106-12.327 3.287-15.673A8.906 8.906 0 0 1 12.994 8H13a14.762 14.762 0 0 1 6.461 1.592a1 1 0 0 1 .087 1.722A8.025 8.025 0 0 0 24 26h6Z"/>' }, "wave-period": { "body": '<path fill="currentColor" d="M22 30h-5a7.008 7.008 0 0 1-7-7a6.683 6.683 0 0 1 2.024-4.697A6.793 6.793 0 0 0 10.01 18C5.043 18.047 4 24.551 4 30H2c0-11.51 4.345-13.966 7.99-14a10.072 10.072 0 0 1 4.48 1.117a1 1 0 0 1 .06 1.73A4.877 4.877 0 0 0 17 28h5zM17 8h2v8h-2z"/><path fill="currentColor" d="M28 5.414L26.586 4l-2.262 2.262A9.95 9.95 0 0 0 19 4.05V2h-2v2.05A10.013 10.013 0 0 0 8 14h2a8 8 0 1 1 8 8v2a9.993 9.993 0 0 0 7.738-16.324Z"/>' }, "weather-front-cold": { "body": '<path fill="currentColor" d="M28.166 2a13.029 13.029 0 0 0-12.542 9.58l-1.177 4.315A11.024 11.024 0 0 1 3.835 24H2v2h1.834c.298 0 .592-.017.886-.037l7.929 2.974A1 1 0 0 0 14 28v-6.908a12.931 12.931 0 0 0 .912-1.313l6.363-1.818a1 1 0 0 0 .506-1.586l-3.997-4.995a10.927 10.927 0 0 1 1.152-2.347l5.748 1.916A1 1 0 0 0 26 10V4.225A10.896 10.896 0 0 1 28.166 4H30V2zM8.336 25.183A13.047 13.047 0 0 0 12 23.094v3.463zm7.74-7.816c.11-.31.213-.625.3-.946l.733-2.685l2.171 2.715zM24 8.612l-3.741-1.247A11.071 11.071 0 0 1 24 4.831zM10 4v4.586L3.414 2L2 3.414L8.586 10H4v2h8V4h-2z"/>' }, "weather-front-stationary": { "body": '<path fill="currentColor" d="M28.166 2a12.985 12.985 0 0 0-8.408 3.107a3.995 3.995 0 1 0-4.175 6.621l-1.136 4.167a10.76 10.76 0 0 1-.25.781a3.986 3.986 0 0 0-5.154 6.006A10.954 10.954 0 0 1 3.835 24H2v2h1.834c.298 0 .592-.017.886-.037l7.929 2.974A1 1 0 0 0 14 28v-6.908a12.931 12.931 0 0 0 .912-1.313l6.363-1.818a1 1 0 0 0 .506-1.586l-3.997-4.995a10.927 10.927 0 0 1 1.152-2.347l5.748 1.916A1 1 0 0 0 26 10V4.225A10.896 10.896 0 0 1 28.166 4H30V2zM17 6a1.98 1.98 0 0 1 1.324.53a12.941 12.941 0 0 0-2.084 3.318A1.999 1.999 0 0 1 17 6zm-7 14a1.988 1.988 0 0 1 3.337-1.472a11.016 11.016 0 0 1-2.595 3.015A1.998 1.998 0 0 1 10 20zm-1.665 5.183A13.047 13.047 0 0 0 12 23.094v3.463zm7.74-7.816c.111-.31.214-.625.302-.946l.732-2.685l2.171 2.715zM24 8.612l-3.741-1.247A11.071 11.071 0 0 1 24 4.831zM22 22v2h4.586L22 28.586L23.414 30L28 25.414V30h2v-8h-8zM2 2v2h4.586L2 8.586L3.414 10L8 5.414V10h2V2H2z"/>' }, "weather-front-warm": { "body": '<path fill="currentColor" d="M28.166 2a13.029 13.029 0 0 0-12.542 9.58l-1.177 4.315A11.024 11.024 0 0 1 3.835 24H2v2h1.834a12.914 12.914 0 0 0 3.47-.482a3.998 3.998 0 1 0 6.581-4.287a12.967 12.967 0 0 0 1.62-2.526a3.994 3.994 0 1 0 2.378-7.6a10.95 10.95 0 0 1 1.725-3.01a3.982 3.982 0 0 0 6.906-3.964A10.944 10.944 0 0 1 28.166 4H30V2zM11 26a1.998 1.998 0 0 1-1.812-1.165a13.081 13.081 0 0 0 3.297-2.143A1.977 1.977 0 0 1 11 26zm8-11a1.993 1.993 0 0 1-2.759 1.847c.044-.143.096-.282.136-.426l.924-3.391A1.998 1.998 0 0 1 19 15zm6-9a1.994 1.994 0 0 1-3.901.59a11.051 11.051 0 0 1 3.362-1.94A1.995 1.995 0 0 1 25 6zM10 4v4.586L3.414 2L2 3.414L8.586 10H4v2h8V4h-2z"/>' }, "weather-station": { "body": '<path fill="currentColor" d="M17 28V17h1a2.002 2.002 0 0 0 2-2v-4a2.002 2.002 0 0 0-2-2h-4a2.002 2.002 0 0 0-2 2v4a2.002 2.002 0 0 0 2 2h1v11H2v2h28v-2Zm-3-17h4l.002 4H14Z"/><path fill="currentColor" d="M9.332 18.217a7 7 0 0 1 0-10.434l1.334 1.49a5 5 0 0 0 0 7.453zm13.335 0l-1.334-1.49a5 5 0 0 0 0-7.454l1.334-1.49a7 7 0 0 1 0 10.434z"/><path fill="currentColor" d="M6.4 21.8a11.002 11.002 0 0 1 0-17.6l1.2 1.6a9 9 0 0 0 0 14.401zm19.2 0l-1.2-1.6a9.001 9.001 0 0 0 0-14.401l1.2-1.6a11.002 11.002 0 0 1 0 17.601z"/>' }, "webhook": { "body": '<path fill="currentColor" d="M24 26a3 3 0 1 0-2.816-4H13v1a5 5 0 1 1-5-5v-2a7 7 0 1 0 6.929 8h6.255A2.991 2.991 0 0 0 24 26Z"/><path fill="currentColor" d="M24 16a7.024 7.024 0 0 0-2.57.487l-3.166-5.54a3.047 3.047 0 1 0-1.732 1l4.119 7.208l.868-.498a5 5 0 1 1-1.85 6.842l-1.732 1.002A7 7 0 1 0 24 16Z"/><path fill="currentColor" d="M8.532 20.054a3.03 3.03 0 1 0 1.733.998l3.625-6.344l.498-.868l-.868-.497a5 5 0 1 1 6.812-1.844l1.731 1.002a7 7 0 1 0-10.346 2.036c-.457.742-1.102 1.871-2.073 3.572Z"/>' }, "websheet": { "body": '<circle cx="24" cy="24" r="2" fill="currentColor"/><path fill="currentColor" d="M24 30a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6Zm0-10a4 4 0 1 0 4 4a4.005 4.005 0 0 0-4-4Z"/><path fill="currentColor" d="M16 28H8V4h8v6a2.006 2.006 0 0 0 2 2h6v3h2v-5a.91.91 0 0 0-.3-.7l-7-7A.909.909 0 0 0 18 2H8a2.006 2.006 0 0 0-2 2v24a2.006 2.006 0 0 0 2 2h8Zm2-23.6l5.6 5.6H18Z"/>' }, "wheat": { "body": '<path fill="currentColor" d="M21 3v2.586l-4 4V1h-2v8.586l-4-4V3H9v16a7.004 7.004 0 0 0 6 6.92V30h2v-4.08A7.004 7.004 0 0 0 23 19V3Zm-6 20.899A5.008 5.008 0 0 1 11 19v-2.586l4 4Zm0-6.313l-4-4V8.414l4 4Zm2-5.172l4-4v5.172l-4 4Zm0 11.485v-3.485l4-4V19a5.008 5.008 0 0 1-4 4.899Z"/>' }, "white-paper": { "body": '<path fill="currentColor" d="m22 27.18l-2.59-2.59L18 26l4 4l8-8l-1.41-1.41L22 27.18zM9 17h7v2H9zm0-5h12v2H9zm0-5h12v2H9z"/><path fill="currentColor" d="M16 30H6c-1.103 0-2-.897-2-2V4c0-1.103.897-2 2-2h18c1.103 0 2 .897 2 2v15h-2V4H6v24h10v2Z"/>' }, "wifi": { "body": '<circle cx="16" cy="25" r="2" fill="currentColor"/><path fill="currentColor" d="m10.47 19.233l1.414 1.413a5.969 5.969 0 0 1 8.223-.009l1.413-1.413a7.963 7.963 0 0 0-11.05.01Z"/><path fill="currentColor" d="m6.229 14.993l1.414 1.413a11.955 11.955 0 0 1 16.704-.01l1.413-1.413a13.951 13.951 0 0 0-19.531.01Z"/><path fill="currentColor" d="M30 10.741a19.94 19.94 0 0 0-28 0v.023l1.404 1.404a17.934 17.934 0 0 1 25.181-.01L30 10.743Z"/>' }, "wifi-bridge": { "body": '<path fill="currentColor" d="m6.95 20.95l-1.415-1.414a5 5 0 0 0 0-7.072L6.95 11.05a7 7 0 0 1 0 9.9Z"/><path fill="currentColor" d="m10.485 24.485l-1.414-1.414a10.001 10.001 0 0 0 0-14.142l1.414-1.414a12 12 0 0 1 0 16.97zm14.566-3.535a7 7 0 0 1 0-9.9l1.414 1.415a5 5 0 0 0 0 7.071z"/><path fill="currentColor" d="M21.515 24.485a12 12 0 0 1 0-16.97l1.414 1.414a10.001 10.001 0 0 0 0 14.142zM3 15H2V4H0v24h2V17h1a1 1 0 0 0 0-2zM30 4v11h-1a1 1 0 0 0 0 2h1v11h2V4z"/>' }, "wifi-bridge-alt": { "body": '<path fill="currentColor" d="M13 26h-2a5.006 5.006 0 0 0-5-5v-2a7.008 7.008 0 0 1 7 7Z"/><path fill="currentColor" d="M18 26h-2A10.011 10.011 0 0 0 6 16v-2a12.014 12.014 0 0 1 12 12zm8-13a7.008 7.008 0 0 1-7-7h2a5.006 5.006 0 0 0 5 5z"/><path fill="currentColor" d="M26 18A12.014 12.014 0 0 1 14 6h2a10.011 10.011 0 0 0 10 10zM7.707 24.293a1 1 0 0 0-1.414 0L2 28.586L3.414 30l4.293-4.293a1 1 0 0 0 0-1.414zM28.586 2l-4.293 4.293a1 1 0 0 0 1.414 1.414L30 3.414z"/>' }, "wifi-controller": { "body": '<path fill="currentColor" d="M6 30h20a2 2 0 0 0 2-2v-6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2Zm0-8h20v6H6Z"/><circle cx="9" cy="25" r="1" fill="currentColor"/><circle cx="16" cy="14.5" r="1.5" fill="currentColor"/><path fill="currentColor" d="M10.783 10.332a7 7 0 0 1 10.434 0l-1.49 1.334a5 5 0 0 0-7.453 0Z"/><path fill="currentColor" d="M7.2 7.4a11.002 11.002 0 0 1 17.6 0l-1.6 1.2a9 9 0 0 0-14.401 0Z"/>' }, "wifi-not-secure": { "body": '<path fill="currentColor" d="M20 20h-6v-3a2 2 0 0 1 4 0h2a4 4 0 0 0-8 0v3a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm0 8h-8v-6h8zM16 8a8.97 8.97 0 0 0-6.36 2.64l1.412 1.413a6.989 6.989 0 0 1 9.895 0l1.414-1.414A8.972 8.972 0 0 0 16 8z"/><path fill="currentColor" d="m6.105 7.105l1.414 1.414a11.98 11.98 0 0 1 16.962 0l1.414-1.414a13.978 13.978 0 0 0-19.79 0Z"/>' }, "wifi-off": { "body": '<circle cx="16" cy="25" r="2" fill="currentColor"/><path fill="currentColor" d="M30 3.414L28.586 2L2 28.586L3.414 30l10.682-10.682a5.936 5.936 0 0 1 6.01 1.32l1.414-1.414a7.967 7.967 0 0 0-5.125-2.204l3.388-3.388a11.99 11.99 0 0 1 4.564 2.765l1.413-1.414a13.975 13.975 0 0 0-4.426-2.903l2.997-2.997a17.936 17.936 0 0 1 4.254 3.075L30 10.743v-.002a20.02 20.02 0 0 0-4.19-3.138zm-15.32 9.664l2.042-2.042C16.48 11.023 16.243 11 16 11a13.945 13.945 0 0 0-9.771 3.993l1.414 1.413a11.97 11.97 0 0 1 7.037-3.328zM16 7a17.87 17.87 0 0 1 4.232.525l1.643-1.642A19.954 19.954 0 0 0 2 10.74v.023l1.404 1.404A17.92 17.92 0 0 1 16 7z"/>' }, "wifi-secure": { "body": '<path fill="currentColor" d="M20 20v-3a4 4 0 0 0-8 0v3a2.002 2.002 0 0 0-2 2v6a2.002 2.002 0 0 0 2 2h8a2.002 2.002 0 0 0 2-2v-6a2.002 2.002 0 0 0-2-2zm-6-3a2 2 0 0 1 4 0v3h-4zm-2 11v-6h8v6zM6.105 7.105l1.414 1.414a11.98 11.98 0 0 1 16.962 0l1.414-1.414a13.978 13.978 0 0 0-19.79 0z"/><path fill="currentColor" d="M16 8a8.97 8.97 0 0 0-6.36 2.64l1.412 1.413a6.989 6.989 0 0 1 9.895 0l1.414-1.414A8.972 8.972 0 0 0 16 8Z"/>' }, "wikis": { "body": '<path fill="currentColor" d="M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2Zm12 13h-6a24.26 24.26 0 0 0-2.79-10.55A12 12 0 0 1 28 15ZM16 28a5 5 0 0 1-.67 0A21.85 21.85 0 0 1 12 17h8a21.85 21.85 0 0 1-3.3 11a5 5 0 0 1-.7 0Zm-4-13a21.85 21.85 0 0 1 3.3-11a6 6 0 0 1 1.34 0A21.85 21.85 0 0 1 20 15Zm.76-10.55A24.26 24.26 0 0 0 10 15H4a12 12 0 0 1 8.79-10.55ZM4.05 17h6a24.26 24.26 0 0 0 2.75 10.55A12 12 0 0 1 4.05 17Zm15.16 10.55A24.26 24.26 0 0 0 22 17h6a12 12 0 0 1-8.79 10.55Z"/>' }, "wind-gusts": { "body": '<path fill="currentColor" d="m29.316 8.051l-18-6a1 1 0 0 0-.916.149L4 7V2H2v28h2V11l6.4 4.8a1 1 0 0 0 .916.149l18-6a1 1 0 0 0 0-1.897ZM10 13L4.667 9L10 5Zm4-.054l-2 .667V4.387l2 .667Zm4-1.333l-2 .666V5.721l2 .666Zm2-.667V7.054L25.838 9Z"/><path fill="currentColor" d="M20 22a4 4 0 0 0-8 0h2a2 2 0 1 1 2 2H8v2h8a4.005 4.005 0 0 0 4-4Z"/><path fill="currentColor" d="M26 22a4.005 4.005 0 0 0-4 4h2a2 2 0 1 1 2 2H12v2h14a4 4 0 0 0 0-8Z"/>' }, "wind-power": { "body": '<path fill="currentColor" d="M17 28V15.816a3.006 3.006 0 0 0 1.47-1.119L27.063 17l.518-1.932l-8.605-2.305a2.985 2.985 0 0 0-2.63-2.728L14.194 2l-1.932.519l2.132 7.956a2.959 2.959 0 0 0-1.093 3.811L7 20.586L8.415 22l6.3-6.3a2.894 2.894 0 0 0 .285.115V28H2v2h28v-2Zm0-15a1 1 0 1 1-1-1a1 1 0 0 1 1 1Z"/>' }, "wind-stream": { "body": '<path fill="currentColor" d="m25 2l-1.414 1.414L26.172 6h-5.09a16.93 16.93 0 0 0-6.314 1.216l-4.279 1.711A14.93 14.93 0 0 1 4.92 10H2v2h2.918a16.93 16.93 0 0 0 6.314-1.216l4.279-1.711A14.93 14.93 0 0 1 21.08 8h5.09l-2.586 2.586L25 12l5-5Z"/><path fill="currentColor" d="m21 11l-1.414 1.414L22.172 15h-3.27a16.942 16.942 0 0 0-5.97 1.083l-2.566.962A14.946 14.946 0 0 1 5.099 18H2v2h3.099a16.942 16.942 0 0 0 5.969-1.083l2.566-.962A14.946 14.946 0 0 1 18.901 17h3.27l-2.585 2.586L21 21l5-5Z"/><path fill="currentColor" d="m17 20l-1.414 1.414L18.172 24h-1.575a16.988 16.988 0 0 0-5.377.872l-1.073.358a14.985 14.985 0 0 1-4.744.77H2v2h3.403a16.988 16.988 0 0 0 5.377-.872l1.073-.358a14.985 14.985 0 0 1 4.744-.77h1.575l-2.586 2.586L17 30l5-5Z"/>' }, "window-auto": { "body": '<path d="M15 4h2v3h-2z" fill="currentColor"/><path d="M25 15h3v2h-3z" fill="currentColor"/><path d="M15 25h2v3h-2z" fill="currentColor"/><path d="M4 15h3v2H4z" fill="currentColor"/><path d="M6.777 8.19L8.19 6.774l2.121 2.121l-1.414 1.415z" fill="currentColor"/><path d="M21.687 8.9l2.121-2.12l1.414 1.413l-2.121 2.122z" fill="currentColor"/><path d="M21.686 23.096l1.414-1.414l2.121 2.122l-1.414 1.414z" fill="currentColor"/><path d="M6.78 23.8L8.9 21.677l1.414 1.414l-2.121 2.122z" fill="currentColor"/><path d="M4 30h24v2H4z" fill="currentColor"/><path d="M4 0h24v2H4z" fill="currentColor"/><path d="M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6zm-4 6a4 4 0 0 1 4-4v8a4 4 0 0 1-4-4z" fill="currentColor"/>', "hidden": true }, "window-base": { "body": '<path d="M15 2h2v3h-2z" fill="currentColor"/><path d="M25 13h3v2h-3z" fill="currentColor"/><path d="M15 23h2v3h-2z" fill="currentColor"/><path d="M4 13h3v2H4z" fill="currentColor"/><path d="M6.775 6.188L8.19 4.774l2.12 2.121L8.898 8.31z" fill="currentColor"/><path d="M21.695 6.9l2.122-2.122l1.414 1.414l-2.121 2.122z" fill="currentColor"/><path d="M21.691 21.088l1.415-1.414l2.12 2.121l-1.413 1.414z" fill="currentColor"/><path d="M6.778 21.812L8.9 19.691l1.414 1.414l-2.121 2.122z" fill="currentColor"/><path d="M4 28h24v2H4z" fill="currentColor"/><path d="M16 20a6 6 0 1 0-6-6a6 6 0 0 0 6 6zm0-10v8a4 4 0 0 1 0-8z" fill="currentColor"/>', "hidden": true }, "window-black-saturation": { "body": '<path d="M15 2h2v3h-2z" fill="currentColor"/><path d="M27 15h3v2h-3z" fill="currentColor"/><path d="M15 27h2v3h-2z" fill="currentColor"/><path d="M2 15h3v2H2z" fill="currentColor"/><path d="M5.457 6.877l1.416-1.416l2.123 2.123L7.58 9.001z" fill="currentColor"/><path d="M23 7.58l2.12-2.12l1.415 1.414l-2.122 2.121z" fill="currentColor"/><path d="M23.001 24.416L24.417 23l2.122 2.123l-1.415 1.416z" fill="currentColor"/><path d="M5.47 25.126L7.591 23L9 24.419L6.884 26.54L5.47 25.126z" fill="currentColor"/><path d="M15 13h2v2h-2z" fill="currentColor"/><path d="M19 13h2v2h-2z" fill="currentColor"/><path d="M17 11h2v2h-2z" fill="currentColor"/><path d="M17 15h2v2h-2z" fill="currentColor"/><path d="M17 19h2v2h-2z" fill="currentColor"/><path d="M15 17h2v2h-2z" fill="currentColor"/><path d="M19 17h2v2h-2z" fill="currentColor"/><path d="M16 7a9 9 0 1 0 9 9a9.01 9.01 0 0 0-9-9zm-7 9a7.004 7.004 0 0 1 6-6.92V11h2V9.08a6.923 6.923 0 0 1 2 .605V11h1.89l.11.11V13h1.315a6.931 6.931 0 0 1 .605 2H21v2h1.92a6.931 6.931 0 0 1-.605 2H21v1.89a7.13 7.13 0 0 1-.11.11H19v1.315a6.923 6.923 0 0 1-2 .605V21h-2v1.92A7.004 7.004 0 0 1 9 16z" fill="currentColor"/>', "hidden": true }, "window-overlay": { "body": '<path d="M15 6h2v3h-2z" fill="currentColor"/><path d="M25 17h3v2h-3z" fill="currentColor"/><path d="M15 27h2v3h-2z" fill="currentColor"/><path d="M4 17h3v2H4z" fill="currentColor"/><path d="M6.774 10.187l1.414-1.415l2.121 2.122l-1.414 1.414z" fill="currentColor"/><path d="M21.694 10.898l2.121-2.122l1.414 1.415l-2.12 2.12z" fill="currentColor"/><path d="M21.69 25.087l1.414-1.415l2.121 2.122l-1.414 1.414z" fill="currentColor"/><path d="M6.777 25.81l2.121-2.12l1.414 1.414l-2.121 2.12z" fill="currentColor"/><path d="M4 2h24v2H4z" fill="currentColor"/><path d="M16 24a6 6 0 1 0-6-6a6 6 0 0 0 6 6zm0-10v8a4 4 0 0 1 0-8z" fill="currentColor"/>', "hidden": true }, "window-preset": { "body": '<path d="M15 6h2v2h-2z" fill="currentColor"/><path d="M24 15h2v2h-2z" fill="currentColor"/><path d="M15 24h2v2h-2z" fill="currentColor"/><path d="M6 15h2v2H6z" fill="currentColor"/><path d="M8.172 9.586l1.414-1.414L11 9.586L9.586 11z" fill="currentColor"/><path d="M21 9.586l1.414-1.414l1.414 1.414L22.414 11z" fill="currentColor"/><path d="M21 22.414L22.414 21l1.414 1.414l-1.414 1.414z" fill="currentColor"/><path d="M8.172 22.414L9.586 21L11 22.414l-1.414 1.414z" fill="currentColor"/><path d="M16 22a6 6 0 1 0-6-6a6 6 0 0 0 6 6zm0-10v8a4 4 0 0 1 0-8z" fill="currentColor"/><path d="M28 30H4a2.002 2.002 0 0 1-2-2V4a2.002 2.002 0 0 1 2-2h24a2.002 2.002 0 0 1 2 2v24a2.002 2.002 0 0 1-2 2zM4 4v24h24V4z" fill="currentColor"/>', "hidden": true }, "windy": { "body": '<path fill="currentColor" d="M21 15H8v-2h13a3 3 0 1 0-3-3h-2a5 5 0 1 1 5 5zm2 13a5.006 5.006 0 0 1-5-5h2a3 3 0 1 0 3-3H4v-2h19a5 5 0 0 1 0 10z"/>' }, "windy-dust": { "body": '<path fill="currentColor" d="M23 28a5.006 5.006 0 0 1-5-5h2a3 3 0 1 0 3-3h-1v-2h1a5 5 0 0 1 0 10zm-7-10h4v2h-4zm-6 0h4v2h-4zm-6 0h4v2H4zm17-3h-1v-2h1a3 3 0 1 0-3-3h-2a5 5 0 1 1 5 5zm-7-2h4v2h-4zm-6 0h4v2H8z"/>' }, "windy-snow": { "body": '<path fill="currentColor" d="M25 28a5.006 5.006 0 0 1-5-5h2a3 3 0 1 0 3-3H6v-2h19a5 5 0 0 1 0 10zm-2-13H10v-2h13a3 3 0 1 0-3-3h-2a5 5 0 1 1 5 5z"/><path fill="currentColor" d="M11 23h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zM6 4h2v2H6zm2 2h2v2H8zm2 2h2v2h-2zm0-4h2v2h-2zM6 8h2v2H6zM2 26h2v2H2zm2 2h2v2H4zm2 2h2v2H6zm0-4h2v2H6zm-4 4h2v2H2z"/>' }, "windy-strong": { "body": '<path fill="currentColor" d="M13 30a5.006 5.006 0 0 1-5-5h2a3 3 0 1 0 3-3H4v-2h9a5 5 0 0 1 0 10Z"/><path fill="currentColor" d="M25 25a5.006 5.006 0 0 1-5-5h2a3 3 0 1 0 3-3H2v-2h23a5 5 0 0 1 0 10zm-4-13H6v-2h15a3 3 0 1 0-3-3h-2a5 5 0 1 1 5 5z"/>' }, "winter-warning": { "body": '<path fill="currentColor" d="m21.684 19.051l-2.517.84L13 15.486V7.369l2.555-1.704l-1.11-1.664L12 5.631l-2.445-1.63l-1.11 1.664L11 7.369v6.688l-5-3.571V8H4v2.279l-2.316.772l.632 1.898l2.517-.839l5.447 3.891l-5.447 3.89l-2.517-.84l-.632 1.898L4 21.721V24h2v-2.485l5-3.571v6.687l-2.555 1.704l1.11 1.664L12 26.368l2.445 1.631l1.11-1.664L13 24.631v-6.688l5 3.572V24h2v-2.279l2.316-.772l-.632-1.898z"/><path fill="none" d="M23.75 10h-1.5V6h1.5ZM23 11a1 1 0 1 0 1 1a1 1 0 0 0-1-1Z"/><path fill="currentColor" d="M29.912 13.935L23.628 2.371a.718.718 0 0 0-1.256 0l-6.284 11.564A.72.72 0 0 0 16.72 15h12.56a.72.72 0 0 0 .631-1.065ZM22.25 6h1.5v4h-1.5Zm.75 7a1 1 0 1 1 1-1a1 1 0 0 1-1 1Z"/>' }, "wintry-mix": { "body": '<path fill="currentColor" d="M15 26h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm-2-14h2v2h-2zm2 2h2v2h-2zm2 2h2v2h-2zm0-4h2v2h-2zm-4 4h2v2h-2zm-3 10a1 1 0 0 1-.894-1.447l2-4a1 1 0 1 1 1.788.894l-2 4A.998.998 0 0 1 10 30z"/><path fill="currentColor" d="M24.8 9.136a8.994 8.994 0 0 0-17.6 0A6.532 6.532 0 0 0 2 15.5V22l1 2l1-2v-1.82a6.49 6.49 0 0 0 3.43 1.725l-1.324 2.648a1 1 0 1 0 1.788.894l2-4a1 1 0 0 0-.446-1.341a.977.977 0 0 0-.49-.09V20H8.5a4.497 4.497 0 0 1-.356-8.981l.816-.064l.099-.812a6.994 6.994 0 0 1 13.883 0l.099.812l.815.064A4.497 4.497 0 0 1 23.5 20h-.542v.008A.996.996 0 0 0 22 21v3l1 2l1-2v-2.025a6.447 6.447 0 0 0 2-.477V26l1 2l1-2v-5.82a6.488 6.488 0 0 0-3.2-11.044Z"/>' }, "wireless-checkout": { "body": '<path fill="currentColor" d="M18 28v-2a10 10 0 0 0 10-10h2a12 12 0 0 1-12 12Z"/><path fill="currentColor" d="M18 23v-2a5 5 0 0 0 5-5h2a7 7 0 0 1-7 7Z"/><path fill="currentColor" d="M27 11h-6V7a3 3 0 0 0-3-3h-6a3 3 0 0 0-3 3v4H3a1 1 0 0 0-1 1.15L3.88 24.3a2 2 0 0 0 2 1.7H15v-2H5.86L4.17 13H27ZM11 7a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v4h-8Z"/>' }, "wmv": { "body": '<path fill="currentColor" d="m29 9l-2 13l-2-13h-2l2.52 14h2.96L31 9h-2zM19 9l-1.52 5l-.48 1.98l-.46-1.98L15 9h-2v14h2v-8l-.16-2l.58 2L17 19.63L18.58 15l.58-2l-.16 2v8h2V9h-2zM9.2 9l-.34 8l-.26 4.54L8.19 18l-.68-5.46H5.49L4.81 18l-.41 3.54L4.14 17L3.8 9H2l1 14h2.27l.76-4.93l.46-4.07l.01-.03l.01.03l.46 4.07l.76 4.93H10l1-14H9.2z"/>' }, "word-cloud": { "body": '<path fill="currentColor" d="M10 16h12v2H10zm0 4h8v2h-8z"/><path fill="currentColor" d="M16 7a8.023 8.023 0 0 1 7.865 6.494l.259 1.346l1.349.244A5.502 5.502 0 0 1 24.508 26H7.495a5.502 5.502 0 0 1-.97-10.916l1.35-.244l.259-1.346A8.026 8.026 0 0 1 16 7m0-2a10.024 10.024 0 0 0-9.83 8.116A7.502 7.502 0 0 0 7.491 28h17.017a7.502 7.502 0 0 0 1.32-14.884A10.023 10.023 0 0 0 15.989 5Z"/>' }, "workflow-automation": { "body": '<path fill="currentColor" d="M16 27c-3.6 0-7.1-1.8-9.2-5H12v-2H4v8h2v-3.7c2.5 3 6.1 4.7 10 4.7v-2zm15-4v-2h-2.1c-.1-.6-.4-1.2-.7-1.8l1.5-1.5l-1.4-1.4l-1.5 1.5c-.5-.3-1.1-.6-1.8-.7V15h-2v2.1c-.6.1-1.2.4-1.8.7l-1.5-1.5l-1.4 1.4l1.5 1.5c-.3.5-.6 1.1-.7 1.8H17v2h2.1c.1.6.4 1.2.7 1.8l-1.5 1.5l1.4 1.4l1.5-1.5c.5.3 1.1.6 1.8.7V29h2v-2.1c.6-.1 1.2-.4 1.8-.7l1.5 1.5l1.4-1.4l-1.5-1.5c.3-.5.6-1.1.7-1.8H31zm-7 2c-1.7 0-3-1.3-3-3s1.3-3 3-3s3 1.3 3 3s-1.3 3-3 3zm-4-15h5.2C21.9 4.9 15.1 3.5 10 6.8c-3.1 2-5 5.5-5 9.2H3C3 8.8 8.8 3 16 3c3.9 0 7.5 1.7 10 4.7V4h2v8h-8v-2z"/>' }, "workspace": { "body": '<path fill="currentColor" d="M16 17v8H6v-8h10m0-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2zm11-9v5H17V6h10m0-2H17a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zm0 13v5h-5v-5h5m0-2h-5a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2v-5a2 2 0 0 0-2-2zM11 6v5H6V6h5m0-2H6a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"/>' }, "workspace-import": { "body": '<path fill="currentColor" d="M27 6v5H17V6h10m0-2H17a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2zM12 25H6v-8h6v-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h6zm18-5H16.828l2.586-2.586L18 16l-5 5l5 5l1.414-1.414L16.828 22H30v-2zM11 6v5H6V6h5m0-2H6a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h5a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"/>' }, "worship": { "body": '<path fill="currentColor" d="M26.586 17L22 21.586l-5-5a2.002 2.002 0 0 0-2.829 0L9.585 21.17a2.003 2.003 0 0 0 0 2.829l4 4H6v2h10a1 1 0 0 0 .707-1.707L11 22.585L15.585 18l5.708 5.707a1 1 0 0 0 1.414 0L28 18.414Z"/><path fill="currentColor" d="M21.5 17a3.5 3.5 0 1 1 3.5-3.5a3.504 3.504 0 0 1-3.5 3.5Zm0-5a1.5 1.5 0 1 0 1.5 1.5a1.502 1.502 0 0 0-1.5-1.5Z"/><path fill="currentColor" d="m4 10.598l12-6.462l12.526 6.745l.948-1.762l-13-7a1.004 1.004 0 0 0-.948 0l-13 7A1 1 0 0 0 2 10v20h2Z"/>' }, "worship-christian": { "body": '<path fill="currentColor" d="M17 30h-2a2.002 2.002 0 0 1-2-2V14H8a2.002 2.002 0 0 1-2-2v-2a2.002 2.002 0 0 1 2-2h5V4a2.002 2.002 0 0 1 2-2h2a2.002 2.002 0 0 1 2 2v4h5a2.002 2.002 0 0 1 2 2v2a2.002 2.002 0 0 1-2 2h-5v14a2.002 2.002 0 0 1-2 2ZM8 10v2h7v16h2V12h7v-2h-7V4h-2v6Z"/>' }, "worship-jewish": { "body": '<path fill="currentColor" d="m24.291 16l3.585-6.518A1 1 0 0 0 27 8h-7.109l-3.015-5.482a1 1 0 0 0-1.752 0L12.109 8H5a1 1 0 0 0-.876 1.482L7.709 16l-3.585 6.518A1 1 0 0 0 5 24h7.109l3.015 5.482a1 1 0 0 0 1.752 0L19.891 24H27a1 1 0 0 0 .876-1.482Zm-5.582 6L16 26.925L13.291 22h-6.6l3.3-6l-3.3-6h6.6L16 5.075L18.709 10h6.6l-3.3 6l3.3 6Z"/>' }, "worship-muslim": { "body": '<path fill="currentColor" d="M27 18a.999.999 0 0 1-.541-.16L22 14.97l-4.458 2.872a1 1 0 0 1-1.51-1.095l1.35-5.132L14.31 8.69a1 1 0 0 1 .551-1.715l4.375-.612l1.866-3.804A1 1 0 0 1 21.988 2a1.017 1.017 0 0 1 .899.538l1.993 3.825l4.262.613a1 1 0 0 1 .548 1.714l-3.072 2.924l1.35 5.132A1 1 0 0 1 27 18Zm-5-5.22a.999.999 0 0 1 .541.159l2.837 1.827l-.845-3.215a1 1 0 0 1 .277-.979l2.008-1.91l-2.73-.393a1 1 0 0 1-.744-.527l-1.317-2.527l-1.23 2.505a1 1 0 0 1-.758.55l-2.849.399l2 1.903a1 1 0 0 1 .278.979l-.846 3.215l2.837-1.827a.999.999 0 0 1 .541-.16Z"/><path fill="currentColor" d="M15.817 30A13.814 13.814 0 0 1 9.075 4.128a1 1 0 0 1 1.362 1.36A11.81 11.81 0 0 0 26.51 21.565a1 1 0 0 1 1.362 1.36A13.841 13.841 0 0 1 15.817 30ZM7.327 7.973a11.81 11.81 0 0 0 16.7 16.7a13.809 13.809 0 0 1-16.7-16.7Z"/>' }, "x": { "body": '<path d="M20 9h-2l-2 6l-2-6h-2l2.75 7L12 23h2l2-6l2 6h2l-2.75-7L20 9z" fill="currentColor"/>', "hidden": true }, "x-axis": { "body": '<path fill="currentColor" d="m23 20l-1.414 1.414L24.172 24H6V4H4v20a2.002 2.002 0 0 0 2 2h18.172l-2.586 2.586L23 30l5-5Z"/>' }, "xls": { "body": '<path fill="currentColor" d="M28 23h-6v-2h6v-4h-4a2.002 2.002 0 0 1-2-2v-4a2.002 2.002 0 0 1 2-2h6v2h-6v4h4a2.002 2.002 0 0 1 2 2v4a2.002 2.002 0 0 1-2 2zm-14-2V9h-2v14h8v-2h-6zM10 9H8l-2 6l-2-6H2l2.752 7L2 23h2l2-6l2 6h2l-2.755-7L10 9z"/>' }, "xml": { "body": '<path fill="currentColor" d="M24 21V9h-2v14h8v-2h-6zM18 9l-1.52 5l-.48 1.98l-.46-1.98L14 9h-2v14h2v-8l-.16-2l.58 2L16 19.63L17.58 15l.58-2l-.16 2v8h2V9h-2zm-8 0H8l-2 6l-2-6H2l2.75 7L2 23h2l2-6l2 6h2l-2.75-7L10 9z"/>' }, "y": { "body": '<path d="M20 9h-2l-2 7l-2-7h-2l3 9v5h2v-5l3-9z" fill="currentColor"/>', "hidden": true }, "y-axis": { "body": '<path fill="currentColor" d="M8 26V7.828l2.586 2.586L12 9L7 4L2 9l1.414 1.414L6 7.828V26a2.002 2.002 0 0 0 2 2h20v-2Z"/>' }, "z": { "body": '<path d="M20 9h-8v2h6l-6 10v2h8v-2h-6l6-10V9z" fill="currentColor"/>', "hidden": true }, "z-axis": { "body": '<path fill="currentColor" d="M26 22v3.586l-9-9V5.828l2.586 2.586L21 7l-5-5l-5 5l1.414 1.414L15 5.828v10.758l-9 9V22H4v7h7v-2H7.414L16 18.414L24.586 27H21v2h7v-7h-2z"/>' }, "z-lpar": { "body": '<path fill="currentColor" d="M24 10h4a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v1h-3a2 2 0 0 0-2 2v8h-3V5a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v22a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V17h3v8a2 2 0 0 0 2 2h3v1a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v1h-3v-8h3v1a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2v-4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v1h-3V7h3v1a2 2 0 0 0 2 2Zm0-6h4v4h-4V4Zm-12.6 8L4 17.92V6.08L11.4 12Zm.6 2.08l.001 11.84l-7.4-5.92l7.4-5.92Zm0-4.16L5.85 5H12v4.92ZM4 22.08L10.15 27H4v-4.92ZM24 24h4v4h-4v-4Zm0-10h4v4h-4v-4Z"/>' }, "z-systems": { "body": '<path fill="currentColor" d="M27 3h-8c-1.103 0-2 .897-2 2v22c0 1.103.897 2 2 2h8c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zm0 6.92L20.85 5H27v4.92zM26.4 12L19 17.92V6.08L26.4 12zm.6 2.08l.001 11.84l-7.4-5.92l7.4-5.92zm-8 8L25.15 27H19v-4.92zM13 3H5c-1.103 0-2 .897-2 2v22c0 1.103.897 2 2 2h8c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zm0 6.92L6.85 5H13v4.92zM12.4 12L5 17.92V6.08L12.4 12zm.6 2.08l.001 11.84l-7.4-5.92l7.4-5.92zm-8 8L11.15 27H5v-4.92z"/>' }, "zip": { "body": '<path fill="currentColor" d="M28 9h-6v14h2v-5h4a2 2 0 0 0 2-2v-5a2 2 0 0 0-2-2zm0 7h-4v-5h4zM12 9v2h3v10h-3v2h8v-2h-3V11h3V9h-8zm-2 0H2v2h6L2 21v2h8v-2H4l6-10V9z"/>' }, "zip-reference": { "body": '<path fill="currentColor" d="M4 20v2h4.586L2 28.586L3.414 30L10 23.414V28h2v-8H4zM28 2h-6v14h2v-5h4a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zm0 7h-4V4h4zM12 4h3v10h-3v2h8v-2h-3V4h3V2h-8v2zM2 4h6L2 14v2h8v-2H4l6-10V2H2v2z"/>' }, "zoom-area": { "body": '<path fill="currentColor" d="m31 29.586l-4.689-4.688a8.028 8.028 0 1 0-1.414 1.414L29.586 31zM20 26a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zM8 26H4a2.002 2.002 0 0 1-2-2v-4h2v4h4zM2 12h2v4H2zm24-4h-2V4h-4V2h4a2.002 2.002 0 0 1 2 2zM12 2h4v2h-4zM4 8H2V4a2.002 2.002 0 0 1 2-2h4v2H4z"/>' }, "zoom-fit": { "body": '<path fill="currentColor" d="M21.448 20A10.856 10.856 0 0 0 24 13a11 11 0 1 0-11 11a10.856 10.856 0 0 0 7-2.552L27.586 29L29 27.586ZM13 22a9 9 0 1 1 9-9a9.01 9.01 0 0 1-9 9Z"/><path fill="currentColor" d="M10 12H8v-2a2.002 2.002 0 0 1 2-2h2v2h-2zm8 0h-2v-2h-2V8h2a2.002 2.002 0 0 1 2 2zm-6 6h-2a2.002 2.002 0 0 1-2-2v-2h2v2h2zm4 0h-2v-2h2v-2h2v2a2.002 2.002 0 0 1-2 2z"/>' }, "zoom-in": { "body": '<path fill="currentColor" d="M18 12h-4V8h-2v4H8v2h4v4h2v-4h4v-2z"/><path fill="currentColor" d="M21.448 20A10.856 10.856 0 0 0 24 13a11 11 0 1 0-11 11a10.856 10.856 0 0 0 7-2.552L27.586 29L29 27.586ZM13 22a9 9 0 1 1 9-9a9.01 9.01 0 0 1-9 9Z"/>' }, "zoom-in-area": { "body": '<path fill="currentColor" d="M24 19h-3v-3h-2v3h-3v2h3v3h2v-3h3v-2z"/><path fill="currentColor" d="m31 29.586l-4.689-4.688a8.028 8.028 0 1 0-1.414 1.414L29.586 31zM20 26a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zM4 8H2V4a2.002 2.002 0 0 1 2-2h4v2H4zm22 0h-2V4h-4V2h4a2.002 2.002 0 0 1 2 2zM12 2h4v2h-4zM8 26H4a2.002 2.002 0 0 1-2-2v-4h2v4h4zM2 12h2v4H2z"/>' }, "zoom-out": { "body": '<path fill="currentColor" d="M8 12h10v2H8z"/><path fill="currentColor" d="M21.448 20A10.856 10.856 0 0 0 24 13a11 11 0 1 0-11 11a10.856 10.856 0 0 0 7-2.552L27.586 29L29 27.586ZM13 22a9 9 0 1 1 9-9a9.01 9.01 0 0 1-9 9Z"/>' }, "zoom-out-area": { "body": '<path fill="currentColor" d="M16 19h8v2h-8z"/><path fill="currentColor" d="m31 29.586l-4.689-4.688a8.028 8.028 0 1 0-1.414 1.414L29.586 31zM20 26a6 6 0 1 1 6-6a6.007 6.007 0 0 1-6 6zM4 8H2V4a2.002 2.002 0 0 1 2-2h4v2H4zm22 0h-2V4h-4V2h4a2.002 2.002 0 0 1 2 2zM12 2h4v2h-4zM8 26H4a2.002 2.002 0 0 1-2-2v-4h2v4h4zM2 12h2v4H2z"/>' }, "zoom-pan": { "body": '<path d="M27.01 12l-1.41 1.41L28.18 16l-2.59 2.59L27.01 20l4-4l-4-4z" fill="currentColor"/><path d="M6.41 13.42L5 12l-4 4l4 4l1.42-1.41L3.83 16l2.58-2.58z" fill="currentColor"/><path d="M16 28.17l-2.59-2.59L12 27l4 4l4-4l-1.41-1.41L16 28.17z" fill="currentColor"/><path d="M16 3.83l2.58 2.58L20 5l-4-4l-4 4l1.41 1.42L16 3.83z" fill="currentColor"/><path d="M22 16a6 6 0 1 0-2.53 4.89l3.82 3.82l1.42-1.42l-3.82-3.82A6 6 0 0 0 22 16zm-6 4a4 4 0 1 1 4-4a4 4 0 0 1-4 4z" fill="currentColor"/>', "hidden": true }, "zoom-reset": { "body": '<path fill="currentColor" d="M22.448 21A10.855 10.855 0 0 0 25 14A10.99 10.99 0 0 0 6 6.466V2H4v8h8V8H7.332a8.977 8.977 0 1 1-2.1 8h-2.04A11.012 11.012 0 0 0 14 25a10.855 10.855 0 0 0 7-2.552L28.586 30L30 28.586Z"/>' }, "zos": { "body": '<path fill="currentColor" d="M30 22h-5v-2h5v-3h-3c-1.103 0-2-.897-2-2v-3c0-1.103.897-2 2-2h5v2h-5v3h3c1.103 0 2 .897 2 2v3c0 1.103-.897 2-2 2zm-9 0h-3c-1.103 0-2-.897-2-2v-8c0-1.103.897-2 2-2h3c1.103 0 2 .897 2 2v8c0 1.103-.897 2-2 2zm-3-10v8h3v-8h-3zm-6.054-2l-4 12h2.108l4-12h-2.108zM6 22H0v-2.303L3.798 14H0v-2h6v2.303L2.202 20H6v2z"/>' }, "zos-sysplex": { "body": '<path fill="currentColor" d="M20 14h8c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2h-8c-1.103 0-2 .897-2 2v1H9c-1.103 0-2 .897-2 2v3H4c-1.103 0-2 .897-2 2v8c0 1.103.897 2 2 2h3v3c0 1.103.897 2 2 2h9v1c0 1.103.897 2 2 2h8c1.103 0 2-.897 2-2v-8c0-1.103-.897-2-2-2h-8c-1.103 0-2 .897-2 2v5H9v-3h3c1.103 0 2-.897 2-2v-8c0-1.103-.897-2-2-2H9V7h9v5c0 1.103.897 2 2 2Zm1.414 14L28 21.414V28h-6.586Zm5.172-8L20 26.586V20h6.586Zm-16.034-8L4 18.552V12h6.552ZM5.38 20L12 13.38l.001 6.62h-6.62Zm16.034-8L28 5.414V12h-6.586Zm5.172-8L20 10.586V4h6.586Z"/>' } }, "aliases": { "app-switcher": { "parent": "switcher" }, "arrows": { "parent": "arrows-vertical" }, "back-to-top": { "parent": "up-to-top" }, "checkbox-undeterminate": { "parent": "checkbox-indeterminate" }, "cloud-lightning": { "parent": "flash" }, "cloud-rain": { "parent": "rain" }, "cloud-snow": { "parent": "snow" }, "delete": { "parent": "trash-can" }, "letter-aa-large": { "parent": "text-font" }, "sunny": { "parent": "sun" } }, "lastModified": 1685341318, "width": 32, "height": 32 } };
    defaultIconDimensions = Object.freeze(
      {
        left: 0,
        top: 0,
        width: 16,
        height: 16
      }
    );
    defaultIconTransformations = Object.freeze({
      rotate: 0,
      vFlip: false,
      hFlip: false
    });
    defaultIconProps = Object.freeze({
      ...defaultIconDimensions,
      ...defaultIconTransformations
    });
    defaultExtendedIconProps = Object.freeze({
      ...defaultIconProps,
      body: "",
      hidden: false
    });
    defaultIconSizeCustomisations = Object.freeze({
      width: null,
      height: null
    });
    defaultIconCustomisations = Object.freeze({
      // Dimensions
      ...defaultIconSizeCustomisations,
      // Transformations
      ...defaultIconTransformations
    });
    unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;
    unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
    isUnsetKeyword = (value) => value === "unset" || value === "undefined" || value === "none";
    cache = /* @__PURE__ */ new WeakMap();
    $$Astro$2 = createAstro("https://nbhr.io/");
    $$Icon = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
      Astro2.self = $$Icon;
      const req = Astro2.request;
      const { name = "", title, ...props } = Astro2.props;
      const map = cache.get(req) ?? /* @__PURE__ */ new Map();
      const i = map.get(name) ?? 0;
      map.set(name, i + 1);
      cache.set(req, map);
      const includeSymbol = i === 0;
      let [setName, iconName] = name.split(":");
      if (!setName && iconName) {
        const err = new Error(`Invalid "name" provided!`);
        throw err;
      }
      if (!iconName) {
        iconName = setName;
        setName = "local";
        if (!icons[setName]) {
          const err = new Error('Unable to load the "local" icon set!');
          throw err;
        }
        if (!(iconName in icons[setName].icons)) {
          const err = new Error(`Unable to locate "${name}" icon!`);
          throw err;
        }
      }
      const collection = icons[setName];
      if (!collection) {
        const err = new Error(`Unable to locate the "${setName}" icon set!`);
        throw err;
      }
      const iconData = getIconData(collection, iconName ?? setName);
      if (!iconData) {
        const err = new Error(`Unable to locate "${name}" icon!`);
        throw err;
      }
      const id = `ai:${collection.prefix}:${iconName ?? setName}`;
      if (props.size) {
        props.width = props.size;
        props.height = props.size;
        delete props.size;
      }
      const renderData = iconToSVG(iconData);
      const normalizedProps = { ...renderData.attributes, ...props };
      const normalizedBody = renderData.body;
      return renderTemplate`${maybeRenderHead($$result)}<svg${spreadAttributes(normalizedProps)}${addAttribute(name, "data-icon")}>
  ${title && renderTemplate`<title>${title}</title>`}
  ${includeSymbol && renderTemplate`<symbol${addAttribute(id, "id")}>${unescapeHTML(normalizedBody)}</symbol>`}
  <use ${addAttribute(`#${id}`, "xlink:href")}></use>
</svg>`;
    }, "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/node_modules/.pnpm/astro-icon@1.0.0-next.2/node_modules/astro-icon/components/Icon.astro");
    $$Astro$1 = createAstro("https://nbhr.io/");
    $$Wrapper = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
      Astro2.self = $$Wrapper;
      return renderTemplate`<html lang="en" class="astro-YIKFTCY4">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<!-- <BaseHead title={title} /> -->
		<link rel="sitemap" href="/sitemap-index.xml">
	${renderHead($$result)}</head>
	<body class="astro-YIKFTCY4">
		
		<header class="astro-YIKFTCY4">
			<nav class="astro-YIKFTCY4">
				<a href="#" class="astro-YIKFTCY4">Home</a>
				<a href="#" class="astro-YIKFTCY4">Posts</a>
				<a href="#" class="astro-YIKFTCY4">Contact</a>
			</nav>
		</header>
		<main class="astro-YIKFTCY4">
			<article class="astro-YIKFTCY4">
				${renderSlot($$result, $$slots["default"])}
			</article>
		</main>
		<aside class="astro-YIKFTCY4"></aside>
		<!-- <Footer /> -->
	
</body></html>`;
    }, "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/layouts/Wrapper.astro");
    $$Astro = createAstro("https://nbhr.io/");
    prerender = false;
    $$Index = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
      Astro2.self = $$Index;
      console.log(Object.assign({ "PUBLIC_API_URL": "http://localhost:8788/trpc", "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true, "SSR": true, "SITE": "https://nbhr.io/", "ASSETS_PREFIX": void 0 }, {}));
      console.log(process.env);
      return renderTemplate`${renderComponent($$result, "Wrapper", $$Wrapper, { "class": "astro-J7PV25F6" }, { "default": ($$result2) => renderTemplate`
	${maybeRenderHead($$result2)}<div class="astro-J7PV25F6">
		<p class="astro-J7PV25F6">Hello World, this is Alex! This is a short paragraph.</p>
		${renderComponent($$result2, "Icon", $$Icon, { "name": "carbon:3d-cursor", "class": "astro-J7PV25F6" })}
		<!-- {JSON.stringify(users)} -->
		${renderComponent($$result2, "MyClientComponent", null, { "client:only": true, "client:component-hydration": "only", "class": "astro-J7PV25F6", "client:component-path": "@components/MyClientComponent", "client:component-export": "default" })}
	</div>
` })}`;
    }, "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/pages/index.astro");
    $$file = "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/pages/index.astro";
    $$url = "";
  }
});

// dist/$server_build/renderers.mjs
init_astro_d1132a9b();
var import_react = __toESM(require_react(), 1);
var import_server = __toESM(require_server_browser(), 1);
var StaticHtml = ({ value, name, hydrate = true }) => {
  if (!value)
    return null;
  const tagName = hydrate ? "astro-slot" : "astro-static-slot";
  return (0, import_react.createElement)(tagName, {
    name,
    suppressHydrationWarning: true,
    dangerouslySetInnerHTML: { __html: value }
  });
};
StaticHtml.shouldComponentUpdate = () => false;
var contexts = /* @__PURE__ */ new WeakMap();
var ID_PREFIX = "r";
function getContext(rendererContextResult) {
  if (contexts.has(rendererContextResult)) {
    return contexts.get(rendererContextResult);
  }
  const ctx = {
    currentIndex: 0,
    get id() {
      return ID_PREFIX + this.currentIndex.toString();
    }
  };
  contexts.set(rendererContextResult, ctx);
  return ctx;
}
function incrementId(rendererContextResult) {
  const ctx = getContext(rendererContextResult);
  const id = ctx.id;
  ctx.currentIndex++;
  return id;
}
var slotName2 = (str) => str.trim().replace(/[-_]([a-z])/g, (_, w) => w.toUpperCase());
var reactTypeof = Symbol.for("react.element");
function errorIsComingFromPreactComponent(err) {
  return err.message && (err.message.startsWith("Cannot read property '__H'") || err.message.includes("(reading '__H')"));
}
async function check2(Component, props, children) {
  if (typeof Component === "object") {
    const $$typeof = Component["$$typeof"];
    return $$typeof && $$typeof.toString().slice("Symbol(".length).startsWith("react");
  }
  if (typeof Component !== "function")
    return false;
  if (Component.prototype != null && typeof Component.prototype.render === "function") {
    return import_react.default.Component.isPrototypeOf(Component) || import_react.default.PureComponent.isPrototypeOf(Component);
  }
  let error2 = null;
  let isReactComponent = false;
  function Tester(...args) {
    try {
      const vnode = Component(...args);
      if (vnode && vnode["$$typeof"] === reactTypeof) {
        isReactComponent = true;
      }
    } catch (err) {
      if (!errorIsComingFromPreactComponent(err)) {
        error2 = err;
      }
    }
    return import_react.default.createElement("div");
  }
  await renderToStaticMarkup2(Tester, props, children, {});
  if (error2) {
    throw error2;
  }
  return isReactComponent;
}
async function getNodeWritable() {
  let nodeStreamBuiltinModuleName = "stream";
  let { Writable } = await import(
    /* @vite-ignore */
    nodeStreamBuiltinModuleName
  );
  return Writable;
}
function needsHydration(metadata) {
  return metadata.astroStaticSlot ? !!metadata.hydrate : true;
}
async function renderToStaticMarkup2(Component, props, { default: children, ...slotted }, metadata) {
  let prefix;
  if (this && this.result) {
    prefix = incrementId(this.result);
  }
  const attrs = { prefix };
  delete props["class"];
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName2(key);
    slots[name] = import_react.default.createElement(StaticHtml, {
      hydrate: needsHydration(metadata),
      value,
      name
    });
  }
  const newProps = {
    ...props,
    ...slots
  };
  const newChildren = children ?? props.children;
  if (newChildren != null) {
    newProps.children = import_react.default.createElement(StaticHtml, {
      hydrate: needsHydration(metadata),
      value: newChildren
    });
  }
  const vnode = import_react.default.createElement(Component, newProps);
  const renderOptions = {
    identifierPrefix: prefix
  };
  let html;
  if (metadata && metadata.hydrate) {
    if ("renderToReadableStream" in import_server.default) {
      html = await renderToReadableStreamAsync(vnode, renderOptions);
    } else {
      html = await renderToPipeableStreamAsync(vnode, renderOptions);
    }
  } else {
    if ("renderToReadableStream" in import_server.default) {
      html = await renderToReadableStreamAsync(vnode, renderOptions);
    } else {
      html = await renderToStaticNodeStreamAsync(vnode, renderOptions);
    }
  }
  return { html, attrs };
}
async function renderToPipeableStreamAsync(vnode, options) {
  const Writable = await getNodeWritable();
  let html = "";
  return new Promise((resolve, reject) => {
    let error2 = void 0;
    let stream = import_server.default.renderToPipeableStream(vnode, {
      ...options,
      onError(err) {
        error2 = err;
        reject(error2);
      },
      onAllReady() {
        stream.pipe(
          new Writable({
            write(chunk, _encoding, callback) {
              html += chunk.toString("utf-8");
              callback();
            },
            destroy() {
              resolve(html);
            }
          })
        );
      }
    });
  });
}
async function renderToStaticNodeStreamAsync(vnode, options) {
  const Writable = await getNodeWritable();
  let html = "";
  return new Promise((resolve, reject) => {
    let stream = import_server.default.renderToStaticNodeStream(vnode, options);
    stream.on("error", (err) => {
      reject(err);
    });
    stream.pipe(
      new Writable({
        write(chunk, _encoding, callback) {
          html += chunk.toString("utf-8");
          callback();
        },
        destroy() {
          resolve(html);
        }
      })
    );
  });
}
async function readResult(stream) {
  const reader = stream.getReader();
  let result = "";
  const decoder2 = new TextDecoder("utf-8");
  while (true) {
    const { done, value } = await reader.read();
    if (done) {
      if (value) {
        result += decoder2.decode(value);
      } else {
        decoder2.decode(new Uint8Array());
      }
      return result;
    }
    result += decoder2.decode(value, { stream: true });
  }
}
async function renderToReadableStreamAsync(vnode, options) {
  return await readResult(await import_server.default.renderToReadableStream(vnode, options));
}
var _renderer1 = {
  check: check2,
  renderToStaticMarkup: renderToStaticMarkup2,
  supportsAstroStaticSlot: true
};
var renderers = [Object.assign({ "name": "astro:jsx", "serverEntrypoint": "astro/jsx/server.js", "jsxImportSource": "astro" }, { ssr: server_default }), Object.assign({ "name": "@astrojs/react", "clientEntrypoint": "@astrojs/react/client.js", "serverEntrypoint": "@astrojs/react/server.js", "jsxImportSource": "react" }, { ssr: _renderer1 })];

// dist/$server_build/_empty-middleware.mjs
var onRequest = void 0;

// dist/$server_build/chunks/server.directory.337d4e59.mjs
init_astro_d1132a9b();
var isNode = typeof process === "object" && Object.prototype.toString.call(process) === "[object process]";
function getProcessEnvProxy() {
  return new Proxy(
    {},
    {
      get: (target, prop) => {
        console.warn(
          // NOTE: \0 prevents Vite replacement
          `Unable to access \`import.meta\0.env.${prop.toString()}\` on initialization as the Cloudflare platform only provides the environment variables per request. Please move the environment variable access inside a function that's only called after a request has been received.`
        );
      }
    }
  );
}
if (!isNode) {
  process.env = getProcessEnvProxy();
}
function createExports(manifest2) {
  const app = new App(manifest2);
  const onRequest3 = async ({
    request,
    next,
    ...runtimeEnv
  }) => {
    process.env = runtimeEnv.env;
    const { pathname } = new URL(request.url);
    if (manifest2.assets.has(pathname)) {
      return next(request);
    }
    let routeData = app.match(request, { matchNotFound: true });
    if (routeData) {
      Reflect.set(
        request,
        Symbol.for("astro.clientAddress"),
        request.headers.get("cf-connecting-ip")
      );
      Reflect.set(request, Symbol.for("runtime"), {
        ...runtimeEnv,
        waitUntil: (promise) => {
          runtimeEnv.waitUntil(promise);
        },
        name: "cloudflare",
        next,
        caches,
        cf: request.cf
      });
      let response = await app.render(request, routeData);
      if (app.setCookieHeaders) {
        for (const setCookieHeader of app.setCookieHeaders(response)) {
          response.headers.append("Set-Cookie", setCookieHeader);
        }
      }
      return response;
    }
    return new Response(null, {
      status: 404,
      statusText: "Not found"
    });
  };
  return { onRequest: onRequest3, manifest: manifest2 };
}
var adapter = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createExports
}, Symbol.toStringTag, { value: "Module" }));

// dist/$server_build/src/pages/entry.index.astro.mjs
init_astro_d1132a9b();
var import_react2 = __toESM(require_react(), 1);
var import_server2 = __toESM(require_server_browser(), 1);
var page = () => Promise.resolve().then(() => (init_index_astro_dd765c5d(), index_astro_dd765c5d_exports));
var pageModule = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  onRequest,
  page,
  renderers
}, Symbol.toStringTag, { value: "Module" }));
var _manifest2 = Object.assign(deserializeManifest({ "adapterName": "@astrojs/cloudflare", "routes": [{ "file": "rss.xml", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/rss.xml", "type": "endpoint", "pattern": "^\\/rss\\.xml$", "segments": [[{ "content": "rss.xml", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/rss.xml.ts", "pathname": "/rss.xml", "prerender": true, "_meta": { "trailingSlash": "ignore" } } }, { "file": "test/index.html", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/test", "type": "page", "pattern": "^\\/test\\/?$", "segments": [[{ "content": "test", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/test.astro", "pathname": "/test", "prerender": true, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [{ "type": "inline", "value": "\n" }], "styles": [{ "type": "inline", "content": '*,:before,:after{box-sizing:border-box}*{margin:0}html,body{height:100%}body{-webkit-font-smoothing:antialiased;line-height:1.5}img,picture,video,canvas,svg{max-width:100%;display:block}input,button,textarea,select{font:inherit}p,h1,h2,h3,h4,h5,h6{overflow-wrap:break-word}.test.astro-YIKFTCY4{background-color:#902b2b}.foo.astro-J7PV25F6{color:#706a43}.bar.astro-J7PV25F6{color:lch(54.5711% 65.7776 296.794)}.lab.astro-J7PV25F6{color:lab(40% 56.6 39)}.logo.astro-J7PV25F6{background:image-set("aXOM7W" 2x,"aXOM7W" 1x)}.button.astro-J7PV25F6{transition:background .2s}.test.astro-J7PV25F6{color:#00f}.test.astro-J7PV25F6 .nest.astro-J7PV25F6{color:red}' }], "routeData": { "route": "/", "type": "page", "pattern": "^\\/$", "segments": [], "params": [], "component": "src/pages/index.astro", "pathname": "/", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/trpc/[trpc]", "type": "endpoint", "pattern": "^\\/trpc\\/([^/]+?)$", "segments": [[{ "content": "trpc", "dynamic": false, "spread": false }], [{ "content": "trpc", "dynamic": true, "spread": false }]], "params": ["trpc"], "component": "src/pages/trpc/[trpc].ts", "prerender": false, "_meta": { "trailingSlash": "ignore" } } }], "site": "https://nbhr.io/", "base": "/", "compressHTML": false, "markdown": { "drafts": false, "syntaxHighlight": "shiki", "shikiConfig": { "langs": [], "theme": "github-dark", "wrap": false }, "remarkPlugins": [], "rehypePlugins": [], "remarkRehype": {}, "gfm": true, "smartypants": true }, "componentMetadata": [["/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/pages/index.astro", { "propagation": "none", "containsHead": true }], ["\0astro:content", { "propagation": "in-tree", "containsHead": false }], ["/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/pages/test.astro", { "propagation": "in-tree", "containsHead": false }], ["\0@astro-page:src/pages/test@_@astro", { "propagation": "in-tree", "containsHead": false }], ["\0@astro-page-split:src/pages/test@_@astro", { "propagation": "in-tree", "containsHead": false }], ["/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/node_modules/.pnpm/@astrojs+markdoc@0.4.0_@types+react@18.2.14_astro@2.7.3_react@18.2.0/node_modules/@astrojs/markdoc/components/Renderer.astro", { "propagation": "in-tree", "containsHead": false }], ["/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/node_modules/.pnpm/@astrojs+markdoc@0.4.0_@types+react@18.2.14_astro@2.7.3_react@18.2.0/node_modules/@astrojs/markdoc/components/index.ts", { "propagation": "in-tree", "containsHead": false }], ["/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/content/bits/test.mdoc", { "propagation": "in-tree", "containsHead": false }], ["/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/content/bits/test.mdoc?astroPropagatedAssets", { "propagation": "in-tree", "containsHead": false }]], "renderers": [], "clientDirectives": [["idle", '(()=>{var i=t=>{let e=async()=>{await(await t())()};"requestIdleCallback"in window?window.requestIdleCallback(e):setTimeout(e,200)};(self.Astro||(self.Astro={})).idle=i;window.dispatchEvent(new Event("astro:idle"));})();'], ["load", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).load=e;window.dispatchEvent(new Event("astro:load"));})();'], ["media", '(()=>{var s=(i,t)=>{let a=async()=>{await(await i())()};if(t.value){let e=matchMedia(t.value);e.matches?a():e.addEventListener("change",a,{once:!0})}};(self.Astro||(self.Astro={})).media=s;window.dispatchEvent(new Event("astro:media"));})();'], ["only", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).only=e;window.dispatchEvent(new Event("astro:only"));})();'], ["visible", '(()=>{var r=(s,c,i)=>{let o=async()=>{await(await s())()},n=new IntersectionObserver(e=>{for(let t of e)if(t.isIntersecting){n.disconnect(),o();break}});for(let e=0;e<i.children.length;e++){let t=i.children[e];n.observe(t)}};(self.Astro||(self.Astro={})).visible=r;window.dispatchEvent(new Event("astro:visible"));})();']], "entryModules": { "\0@astro-page-split:src/pages/index@_@astro": "src/pages/entry.index.astro.mjs", "\0@astro-page-split:src/pages/rss.xml@_@ts": "src/pages/entry.rss.xml.ts.mjs", "\0@astro-page-split:src/pages/test@_@astro": "src/pages/entry.test.astro.mjs", "\0@astro-page-split:src/pages/trpc/[trpc]@_@ts": "src/pages/trpc/entry._trpc_.ts.mjs", "\0@astro-renderers": "renderers.mjs", "\0empty-middleware": "_empty-middleware.mjs", "/src/pages/trpc/[trpc].ts": "chunks/pages/_trpc_.ts.09fe4040.mjs", "/src/pages/index.astro": "chunks/pages/index.astro.dd765c5d.mjs", "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/content/bits/test.mdoc?astroContentCollectionEntry=true": "chunks/test.2f7b2aa1.mjs", "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/content/authors/alexander-niebuhr.json?astroDataCollectionEntry=true": "chunks/alexander-niebuhr.14b24ae5.mjs", "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/content/bits/test.mdoc?astroPropagatedAssets": "chunks/test.30788a45.mjs", "/Users/alexanderniebuhr/Developer/Projects/alexanderniebuhr_blog/apps/blog/src/content/bits/test.mdoc": "chunks/test.349d5750.mjs", "/astro/hoisted.js?q=0": "_astro/hoisted.4ed993c7.js", "@components/MyClientComponent": "_astro/MyClientComponent.0688b1c5.js", "@astrojs/react/client.js": "_astro/client.4f6aefd3.js", "astro:scripts/before-hydration.js": "" }, "assets": ["/favicon.svg", "/robots.txt", "/$server_build/_empty-middleware.mjs", "/$server_build/renderers.mjs", "/_astro/MyClientComponent.0688b1c5.js", "/_astro/client.4f6aefd3.js", "/_astro/index.d92747a1.js", "/$server_build/chunks/alexander-niebuhr.14b24ae5.mjs", "/$server_build/chunks/astro.d1132a9b.mjs", "/$server_build/chunks/prerender.7f97bbed.mjs", "/$server_build/chunks/server.directory.337d4e59.mjs", "/$server_build/chunks/test.2f7b2aa1.mjs", "/$server_build/chunks/test.30788a45.mjs", "/$server_build/chunks/test.349d5750.mjs", "/$server_build/chunks/pages/_trpc_.ts.09fe4040.mjs", "/$server_build/chunks/pages/index.astro.dd765c5d.mjs", "/rss.xml", "/test/index.html"] }), {
  pageModule,
  renderers
});
var _args = void 0;
var _exports = createExports(_manifest2);
var onRequest2 = _exports["onRequest"];
var manifest = _exports["manifest"];
var _start = "start";
if (_start in adapter) {
  adapter[_start](_manifest2, _args);
}
export {
  manifest,
  onRequest2 as onRequest
};
/**
 * shortdash - https://github.com/bibig/node-shorthash
 *
 * @license
 *
 * (The MIT License)
 *
 * Copyright (c) 2013 Bibig <bibig@me.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
/*! Bundled license information:

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.browser.development.js:
  (**
   * @license React
   * react-dom-server-legacy.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.browser.development.js:
  (**
   * @license React
   * react-dom-server.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
